(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1095794,      18975]
NotebookOptionsPosition[   1090775,      18809]
NotebookOutlinePosition[   1091150,      18825]
CellTagsIndexPosition[   1091107,      18822]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Neural Networks", "Title",
 CellChangeTimes->{{3.681666058131296*^9, 3.681666061659219*^9}}],

Cell[CellGroupData[{

Cell["Classification of randomly distributed data", "Subsubsection",
 CellChangeTimes->{{3.6816660685715404`*^9, 3.6816660783950305`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sample", "[", 
   RowBox[{"mean_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"mean", ",", "1"}], "]"}], ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.681666100392331*^9, 3.681666170475073*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sample", "[", 
  RowBox[{"0", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.68166617170826*^9, 3.6816661764832478`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.3755963862884126`", ",", "1.165631485949818`", ",", 
   "0.7280532128440151`", ",", "0.8472541529616409`", ",", 
   "0.40552031377362496`", ",", 
   RowBox[{"-", "0.9822988137089036`"}], ",", "0.35842905417976695`", ",", 
   RowBox[{"-", "0.22551457453846696`"}], ",", 
   RowBox[{"-", "0.8156602467397901`"}], ",", "1.096682263264235`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6816661769250526`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberLinePlot", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6816662942247586`*^9, 3.681666306010293*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{1, 1}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{2, 1}]}},
  AspectRatio->NCache[Rational[1, 10]/GoldenRatio, 0.06180339887498948],
  Axes->{True, False},
  AxesLabel->{None},
  AxesOrigin->{Automatic, Automatic},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  ImagePadding->All,
  PlotRange->{{1., 2.}, {0, 1}},
  PlotRangePadding->{{
     Scaled[0.1], 
     Scaled[0.1]}, {0, 1}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.681666300863056*^9, 3.681666306436756*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"clusters", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"sample", "[", 
         RowBox[{"#", ",", "200"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"NumberLinePlot", "[", 
      RowBox[{"clusters", ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}]}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"z", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "\[IndentingNewLine]", "]"}],
   "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.681666253289736*^9, 3.6816663450896735`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 
    1.5199999999999996`, $CellContext`y$$ = -0.6999999999999993, \
$CellContext`z$$ = 6.5, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], -10, 10}, {
      Hold[$CellContext`y$$], -10, 10}, {
      Hold[$CellContext`z$$], -10, 10}}, Typeset`size$$ = {540., {23., 32.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`x$1084201$$ = 0, $CellContext`y$1084202$$ = 
    0, $CellContext`z$1084203$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`x$$ = -10, $CellContext`y$$ = -10, \
$CellContext`z$$ = -10}, "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$1084201$$, 0], 
        Hold[$CellContext`y$$, $CellContext`y$1084202$$, 0], 
        Hold[$CellContext`z$$, $CellContext`z$1084203$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`clusters = 
        Map[$CellContext`sample[#, 
           200]& , {$CellContext`x$$, $CellContext`y$$, $CellContext`z$$}]; 
       NumberLinePlot[$CellContext`clusters, PlotRange -> {-10, 10}]), 
      "Specifications" :> {{$CellContext`x$$, -10, 
         10}, {$CellContext`y$$, -10, 10}, {$CellContext`z$$, -10, 10}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{612., {119., 128.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6816663464173827`*^9, 3.681666357174642*^9}}],

Cell[BoxData[
 TemplateBox[{
  "MultinormalDistribution","vrprm",
   "\"The value \\!\\(\\*RowBox[{\\\"1.5199999999999996`\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"MultinormalDistribution\\\", \\\"[\\\", \
RowBox[{\\\"1.5199999999999996`\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"1\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) is expected to be a \
list of real numbers.\"",2,87,5,19932737870334696856,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.681668691828511*^9}],

Cell[BoxData[
 TemplateBox[{
  "MultinormalDistribution","vrprm",
   "\"The value \\!\\(\\*RowBox[{\\\"-\\\", \\\"0.6999999999999993`\\\"}]\\) \
at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"MultinormalDistribution\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"-\\\", \\\"0.6999999999999993`\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"1\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) is expected to be a \
list of real numbers.\"",2,87,6,19932737870334696856,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.681668691854537*^9}],

Cell[BoxData[
 TemplateBox[{
  "MultinormalDistribution","vrprm",
   "\"The value \\!\\(\\*RowBox[{\\\"6.5`\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"MultinormalDistribution\\\", \\\"[\\\", RowBox[{\\\"6.5`\
\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}]\\) is expected to be a list of real numbers.\"",2,
   87,7,19932737870334696856,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6816686918795614`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"MultinormalDistribution\
\\\", \\\"::\\\", \\\"vrprm\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,87,8,19932737870334696856,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6816686919005823`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RandomVariate","array",
   "\"The array dimensions \\!\\(\\*RowBox[{\\\"200.`16.\\\"}]\\) given in \
position 2 of \\!\\(\\*RowBox[{\\\"RandomVariate\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"MultinormalDistribution\\\", \\\"[\\\", \
RowBox[{\\\"1.5199999999999996`\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1.`16.\\\", \\\",\\\", \\\"0\\\"}], \\\
\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"1.`16.\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", \
\\\"200.`16.\\\"}], \\\"]\\\"}]\\) should be a list of non-negative \
machine-sized integers giving the dimensions for the result.\"",2,87,9,
   19932737870334696856,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.68166869196014*^9}],

Cell[BoxData[
 TemplateBox[{
  "RandomVariate","array",
   "\"The array dimensions \\!\\(\\*RowBox[{\\\"200.`16.\\\"}]\\) given in \
position 2 of \\!\\(\\*RowBox[{\\\"RandomVariate\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"MultinormalDistribution\\\", \\\"[\\\", \
RowBox[{\\\"1.5199999999999996`\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1.`16.\\\", \\\",\\\", \\\"0\\\"}], \\\
\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"1.`16.\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", \
\\\"200.`16.\\\"}], \\\"]\\\"}]\\) should be a list of non-negative \
machine-sized integers giving the dimensions for the result.\"",2,87,10,
   19932737870334696856,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6816686919791594`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RandomVariate","array",
   "\"The array dimensions \\!\\(\\*RowBox[{\\\"200.`16.\\\"}]\\) given in \
position 2 of \\!\\(\\*RowBox[{\\\"RandomVariate\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"MultinormalDistribution\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.6999999999999993`\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1.`16.\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\
\",\\\", \\\"1.`16.\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\
\", \\\"200.`16.\\\"}], \\\"]\\\"}]\\) should be a list of non-negative \
machine-sized integers giving the dimensions for the result.\"",2,87,11,
   19932737870334696856,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.681668692000681*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"RandomVariate\\\", \
\\\"::\\\", \\\"array\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,87,12,19932737870334696856,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.681668692021201*^9}],

Cell[BoxData[
 TemplateBox[{
  "MultinormalDistribution","vrprm",
   "\"The value \\!\\(\\*RowBox[{\\\"1.5199999999999996`\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"MultinormalDistribution\\\", \\\"[\\\", \
RowBox[{\\\"1.5199999999999996`\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"1\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) is expected to be a \
list of real numbers.\"",2,17,1,19932765021910341102,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6816692127892313`*^9}],

Cell[BoxData[
 TemplateBox[{
  "MultinormalDistribution","vrprm",
   "\"The value \\!\\(\\*RowBox[{\\\"-\\\", \\\"0.6999999999999993`\\\"}]\\) \
at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"MultinormalDistribution\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"-\\\", \\\"0.6999999999999993`\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"1\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) is expected to be a \
list of real numbers.\"",2,17,2,19932765021910341102,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6816692128112526`*^9}],

Cell[BoxData[
 TemplateBox[{
  "MultinormalDistribution","vrprm",
   "\"The value \\!\\(\\*RowBox[{\\\"6.5`\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"MultinormalDistribution\\\", \\\"[\\\", RowBox[{\\\"6.5`\
\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}]\\) is expected to be a list of real numbers.\"",2,
   17,3,19932765021910341102,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.681669212834275*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"MultinormalDistribution\
\\\", \\\"::\\\", \\\"vrprm\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,17,4,19932765021910341102,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6816692128608007`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RandomVariate","array",
   "\"The array dimensions \\!\\(\\*RowBox[{\\\"200.`16.\\\"}]\\) given in \
position 2 of \\!\\(\\*RowBox[{\\\"RandomVariate\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"MultinormalDistribution\\\", \\\"[\\\", \
RowBox[{\\\"1.5199999999999996`\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1.`16.\\\", \\\",\\\", \\\"0\\\"}], \\\
\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"1.`16.\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", \
\\\"200.`16.\\\"}], \\\"]\\\"}]\\) should be a list of non-negative \
machine-sized integers giving the dimensions for the result.\"",2,17,5,
   19932765021910341102,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.681669212902342*^9}],

Cell[BoxData[
 TemplateBox[{
  "RandomVariate","array",
   "\"The array dimensions \\!\\(\\*RowBox[{\\\"200.`16.\\\"}]\\) given in \
position 2 of \\!\\(\\*RowBox[{\\\"RandomVariate\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"MultinormalDistribution\\\", \\\"[\\\", \
RowBox[{\\\"1.5199999999999996`\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1.`16.\\\", \\\",\\\", \\\"0\\\"}], \\\
\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"1.`16.\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", \
\\\"200.`16.\\\"}], \\\"]\\\"}]\\) should be a list of non-negative \
machine-sized integers giving the dimensions for the result.\"",2,17,6,
   19932765021910341102,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.681669212922861*^9}],

Cell[BoxData[
 TemplateBox[{
  "RandomVariate","array",
   "\"The array dimensions \\!\\(\\*RowBox[{\\\"200.`16.\\\"}]\\) given in \
position 2 of \\!\\(\\*RowBox[{\\\"RandomVariate\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"MultinormalDistribution\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.6999999999999993`\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1.`16.\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\
\",\\\", \\\"1.`16.\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\
\", \\\"200.`16.\\\"}], \\\"]\\\"}]\\) should be a list of non-negative \
machine-sized integers giving the dimensions for the result.\"",2,17,7,
   19932765021910341102,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.681669212939378*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"RandomVariate\\\", \
\\\"::\\\", \\\"array\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,17,8,19932765021910341102,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6816692129573956`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberLinePlot", "[", 
  RowBox[{"clusters", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", "10"}], "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{2.5435803966368473`, 1}], 
    PointBox[{1.2580651113217458`, 1}], PointBox[{1.7255158956046992`, 1}], 
    PointBox[{0.8178373605347178, 1}], PointBox[{2.2568957643120924`, 1}], 
    PointBox[{1.7491181874251165`, 1}], PointBox[{1.2815010599084056`, 1}], 
    PointBox[{1.4206108440681797`, 1}], PointBox[{0.8094583553415846, 1}], 
    PointBox[{0.7784232227380845, 1}], PointBox[{1.5547881560231114`, 1}], 
    PointBox[{1.4594172834886567`, 1}], PointBox[{1.7335635893885262`, 1}], 
    PointBox[{2.0177320769768956`, 1}], PointBox[{2.420012798503714, 1}], 
    PointBox[{3.988290809649561, 1}], PointBox[{2.2123925060367293`, 1}], 
    PointBox[{1.4724930132472596`, 1}], PointBox[{1.9508863225381972`, 1}], 
    PointBox[{0.706107205354756, 1}], PointBox[{2.1414793572767508`, 1}], 
    PointBox[{2.059834452268876, 1}], PointBox[{2.2519816628368297`, 1}], 
    PointBox[{1.4082444254853324`, 1}], PointBox[{1.162882109114632, 1}], 
    PointBox[{0.7637201578391372, 1}], PointBox[{2.8038355099065897`, 1}], 
    PointBox[{1.7091626474829553`, 1}], PointBox[{2.5377666299102786`, 1}], 
    PointBox[{1.814649737609908, 1}], PointBox[{0.28142366976311295`, 1}], 
    PointBox[{2.790942150006483, 1}], PointBox[{0.949968762785471, 1}], 
    PointBox[{2.842859841967379, 1}], PointBox[{0.3167689292173732, 1}], 
    PointBox[{0.6161282972142212, 1}], PointBox[{0.33008543666806944`, 1}], 
    PointBox[{1.6496522471553037`, 1}], PointBox[{-0.08742033251033021, 1}], 
    PointBox[{0.9898625178195709, 1}], PointBox[{1.4913189322547733`, 1}], 
    PointBox[{1.3490540493807905`, 1}], PointBox[{0.5994224024594668, 1}], 
    PointBox[{1.4594189180674335`, 1}], PointBox[{1.6737604461988698`, 1}], 
    PointBox[{1.3446511149154552`, 1}], PointBox[{1.3767230370233197`, 1}], 
    PointBox[{0.9105423940353957, 1}], PointBox[{2.2792888410465872`, 1}], 
    PointBox[{-0.34505314536473586`, 1}], PointBox[{0.7801981546397415, 1}], 
    PointBox[{1.3197722688847147`, 1}], PointBox[{1.1883352632824111`, 1}], 
    PointBox[{3.569133817382025, 1}], PointBox[{3.1973531925001852`, 1}], 
    PointBox[{2.6815850270789214`, 1}], PointBox[{0.04528655007430338, 1}], 
    PointBox[{1.2266825685824925`, 1}], PointBox[{2.363735781427958, 1}], 
    PointBox[{1.5386815107562732`, 1}], PointBox[{0.722696633560854, 1}], 
    PointBox[{2.1451795958175, 1}], PointBox[{1.4072749929209567`, 1}], 
    PointBox[{2.9051643819126953`, 1}], PointBox[{0.46231834515146697`, 1}], 
    PointBox[{3.9048750289437755`, 1}], PointBox[{2.3904964891722793`, 1}], 
    PointBox[{1.5113009941663433`, 1}], PointBox[{2.1786362172960008`, 1}], 
    PointBox[{0.9755602811178419, 1}], PointBox[{3.0752123474374784`, 1}], 
    PointBox[{1.593823426260207, 1}], PointBox[{1.3392439845458763`, 1}], 
    PointBox[{2.04341415343975, 1}], PointBox[{1.5850574087189142`, 1}], 
    PointBox[{0.6235348752920673, 1}], PointBox[{1.6657224016048164`, 1}], 
    PointBox[{2.660292698671128, 1}], PointBox[{1.077553916867784, 1}], 
    PointBox[{1.2079204322907533`, 1}], PointBox[{2.6056161709091943`, 1}], 
    PointBox[{0.7879473416056226, 1}], PointBox[{0.3811073012378148, 1}], 
    PointBox[{0.7966257138055829, 1}], PointBox[{0.755484319904522, 1}], 
    PointBox[{2.5237376621973913`, 1}], PointBox[{2.329516161227195, 1}], 
    PointBox[{1.1312488973960817`, 1}], PointBox[{-0.5020498663997768, 1}], 
    PointBox[{1.3994581375634183`, 1}], PointBox[{1.4000717521781612`, 1}], 
    PointBox[{3.37664689481391, 1}], PointBox[{2.4137216769543843`, 1}], 
    PointBox[{2.59866055619716, 1}], PointBox[{0.5367797384153827, 1}], 
    PointBox[{2.3225596598978617`, 1}], PointBox[{2.3051272119401918`, 1}], 
    PointBox[{2.141833533642538, 1}], PointBox[{1.4717691408892544`, 1}], 
    PointBox[{1.3525669915350158`, 1}], PointBox[{2.649537313844206, 1}], 
    PointBox[{0.5513123813433077, 1}], PointBox[{0.37945052737115104`, 1}], 
    PointBox[{1.0916323503059244`, 1}], PointBox[{-0.1407489113821394, 1}], 
    PointBox[{1.3566833291160003`, 1}], PointBox[{3.1324763391711814`, 1}], 
    PointBox[{1.4022185457157856`, 1}], PointBox[{3.123191799325745, 1}], 
    PointBox[{-0.19143121678141628`, 1}], PointBox[{0.5202257876996492, 1}], 
    PointBox[{1.0319401726963657`, 1}], PointBox[{1.679380238662871, 1}], 
    PointBox[{-0.24100130755701743`, 1}], PointBox[{0.9094769570829483, 1}], 
    PointBox[{2.0514153974421774`, 1}], PointBox[{2.1441466360337915`, 1}], 
    PointBox[{2.9456285849106094`, 1}], PointBox[{1.5148280501137135`, 1}], 
    PointBox[{1.8180954792474393`, 1}], PointBox[{0.5420080753014187, 1}], 
    PointBox[{1.2073319245649952`, 1}], PointBox[{1.041709719693117, 1}], 
    PointBox[{2.961912498193961, 1}], PointBox[{1.543790769001829, 1}], 
    PointBox[{1.2458765683068012`, 1}], PointBox[{0.5350883396983723, 1}], 
    PointBox[{0.7972674893133237, 1}], PointBox[{1.3756355695127198`, 1}], 
    PointBox[{2.7914260112007945`, 1}], PointBox[{1.8807596428696673`, 1}], 
    PointBox[{1.4830472932947394`, 1}], PointBox[{2.065889402441356, 1}], 
    PointBox[{3.2363070167987322`, 1}], PointBox[{-0.7995844492902293, 1}], 
    PointBox[{2.3264180727338735`, 1}], PointBox[{0.3391480252060495, 1}], 
    PointBox[{1.1201124601745263`, 1}], PointBox[{2.346589598364095, 1}], 
    PointBox[{-0.3616798040092457, 1}], PointBox[{3.3926085719590247`, 1}], 
    PointBox[{0.2073291069630201, 1}], PointBox[{1.5161857322567882`, 1}], 
    PointBox[{2.2745715575310688`, 1}], PointBox[{0.5895645192205502, 1}], 
    PointBox[{2.1028584070356504`, 1}], PointBox[{0.7197998523898593, 1}], 
    PointBox[{2.6574405502308784`, 1}], PointBox[{1.5464329833643233`, 1}], 
    PointBox[{2.626039803431299, 1}], PointBox[{0.1984770384427028, 1}], 
    PointBox[{1.2497912651296126`, 1}], PointBox[{1.3816169390449846`, 1}], 
    PointBox[{2.4533369702742314`, 1}], PointBox[{2.080900273078587, 1}], 
    PointBox[{-0.3393578417966685, 1}], PointBox[{1.0586575400654117`, 1}], 
    PointBox[{0.6836946737786327, 1}], PointBox[{1.7815966615107992`, 1}], 
    PointBox[{1.6297857924368062`, 1}], PointBox[{1.742709805986203, 1}], 
    PointBox[{1.5387977606894807`, 1}], PointBox[{2.880492235108229, 1}], 
    PointBox[{2.618831757773708, 1}], PointBox[{1.9374060474621562`, 1}], 
    PointBox[{0.8163526593616812, 1}], PointBox[{3.3593655903484323`, 1}], 
    PointBox[{1.3010400321795463`, 1}], PointBox[{2.4478064416370624`, 1}], 
    PointBox[{1.21446642453921, 1}], PointBox[{1.6579469353982867`, 1}], 
    PointBox[{0.6199296729016786, 1}], PointBox[{3.1577411582255053`, 1}], 
    PointBox[{1.348550042872952, 1}], PointBox[{-0.13034770335721957`, 1}], 
    PointBox[{1.545775487325064, 1}], PointBox[{0.7794883217854646, 1}], 
    PointBox[{1.4934422795667937`, 1}], PointBox[{2.228540009505126, 1}], 
    PointBox[{1.2140168612557318`, 1}], PointBox[{2.287613300005768, 1}], 
    PointBox[{1.1532338651574796`, 1}], PointBox[{2.12027103166901, 1}], 
    PointBox[{0.6347636200727687, 1}], PointBox[{2.041018878784573, 1}], 
    PointBox[{2.8431322825901986`, 1}], PointBox[{1.742350670550136, 1}], 
    PointBox[{1.983883045088041, 1}], PointBox[{2.5327155504208196`, 1}], 
    PointBox[{2.708311732522251, 1}], PointBox[{0.0471907921127912, 1}], 
    PointBox[{0.5696562666897064, 1}], PointBox[{0.7605733994789926, 1}], 
    PointBox[{1.2620862396170889`, 1}], PointBox[{-0.491524278764496, 1}], 
    PointBox[{1.265327363332347, 1}], PointBox[{2.472283853033592, 1}], 
    PointBox[{0.6016499622802063, 1}], PointBox[{0.7708138291109013, 1}], 
    PointBox[{1.2041224287007093`, 1}]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{0.6659888443375537, 2}], 
    PointBox[{-0.315759127028102, 2}], PointBox[{-1.3280263981189848`, 2}], 
    PointBox[{-1.0886437214317823`, 2}], PointBox[{-1.5523242671896762`, 2}], 
    PointBox[{0.49376453899093664`, 2}], PointBox[{-0.6738434318387475, 2}], 
    PointBox[{-2.53751487255085, 2}], PointBox[{0.014062267557107488`, 2}], 
    PointBox[{-1.7016956176064488`, 2}], PointBox[{-2.1292247787540965`, 2}], 
    PointBox[{0.23030349700700847`, 2}], PointBox[{-0.8234883520809351, 2}], 
    PointBox[{-0.3453351077928389, 2}], PointBox[{-1.0746844780719715`, 2}], 
    PointBox[{-1.0449432427773653`, 2}], PointBox[{-2.01068275000674, 2}], 
    PointBox[{-1.0116814651726633`, 2}], PointBox[{1.0939306648584899`, 2}], 
    PointBox[{0.2249704487684272, 2}], PointBox[{-2.8717032222486156`, 2}], 
    PointBox[{-0.4733322967358101, 2}], PointBox[{-0.8915559573530569, 2}], 
    PointBox[{-1.0214508915276883`, 2}], PointBox[{-0.47413623644299757`, 2}],
     PointBox[{0.08029171289116044, 2}], PointBox[{0.28634030219773154`, 2}], 
    PointBox[{-0.36086739176827093`, 2}], PointBox[{-0.6765097716784286, 2}], 
    PointBox[{-0.05893505193681403, 2}], PointBox[{-1.5254290932439964`, 2}], 
    PointBox[{-1.3894472673209894`, 2}], PointBox[{-2.1069482459139617`, 2}], 
    PointBox[{0.3541684435877577, 2}], PointBox[{1.2376129986859643`, 2}], 
    PointBox[{-0.7578263233981352, 2}], PointBox[{-1.4648378353427445`, 2}], 
    PointBox[{0.11663352314876263`, 2}], PointBox[{1.2324719544181078`, 2}], 
    PointBox[{0.388434234504877, 2}], PointBox[{-1.135865436640638, 2}], 
    PointBox[{-3.1327392384697292`, 2}], PointBox[{-0.184187924524567, 2}], 
    PointBox[{-0.5436472244324404, 2}], PointBox[{-0.22429179718479525`, 2}], 
    PointBox[{-0.5107078749986234, 2}], PointBox[{0.6740491163909199, 2}], 
    PointBox[{-1.8472920943402262`, 2}], PointBox[{-0.18528780850243942`, 2}],
     PointBox[{-2.7283296039141747`, 2}], PointBox[{-0.8073547947052166, 2}], 
    PointBox[{-2.815053660815429, 2}], PointBox[{-0.8810641243132998, 2}], 
    PointBox[{-1.730396764344658, 2}], PointBox[{-0.3939636672713288, 2}], 
    PointBox[{-2.18504260645075, 2}], PointBox[{-2.7635688388981055`, 2}], 
    PointBox[{-1.8503300602744575`, 2}], PointBox[{-0.34110010365378624`, 2}],
     PointBox[{0.2134479353277563, 2}], PointBox[{0.4027532613440934, 2}], 
    PointBox[{-2.5881429915064853`, 2}], PointBox[{-2.7356801516849747`, 2}], 
    PointBox[{-0.7996127151495946, 2}], PointBox[{-0.5851193557052475, 2}], 
    PointBox[{1.2326473713136727`, 2}], PointBox[{-0.40368233060216324`, 2}], 
    PointBox[{-1.4199143928090028`, 2}], PointBox[{-0.7096567447024356, 2}], 
    PointBox[{-0.8881639259904675, 2}], PointBox[{-2.4538654697967566`, 2}], 
    PointBox[{0.0765268292414516, 2}], PointBox[{0.24733258640311784`, 2}], 
    PointBox[{0.5939848616174648, 2}], PointBox[{-0.8622492787079388, 2}], 
    PointBox[{-0.6032880442487862, 2}], PointBox[{-1.1041664270313516`, 2}], 
    PointBox[{-1.3026991453029275`, 2}], PointBox[{-2.151170683717334, 2}], 
    PointBox[{-0.8151151787422768, 2}], PointBox[{-1.886263914178029, 2}], 
    PointBox[{-1.022596736053187, 2}], PointBox[{-2.505328738397007, 2}], 
    PointBox[{-1.1646594141279376`, 2}], PointBox[{-0.30435303894727356`, 2}],
     PointBox[{0.8095507019695365, 2}], PointBox[{0.7691214750763646, 2}], 
    PointBox[{-0.9040380967190895, 2}], PointBox[{-1.145728355681697, 2}], 
    PointBox[{0.666222111126338, 2}], PointBox[{-0.8888388903370622, 2}], 
    PointBox[{-0.3869180339747339, 2}], PointBox[{-1.175649736749952, 2}], 
    PointBox[{-1.9372646555334108`, 2}], PointBox[{-2.146475024303017, 2}], 
    PointBox[{-2.829791119469129, 2}], PointBox[{-1.1313014119775897`, 2}], 
    PointBox[{-1.4054060351878608`, 2}], PointBox[{1.3931304524092982`, 2}], 
    PointBox[{-0.9764362796895292, 2}], PointBox[{-0.6592672063947471, 2}], 
    PointBox[{-1.5497858537175424`, 2}], PointBox[{-0.17140941099261853`, 2}],
     PointBox[{-0.6663518281557324, 2}], PointBox[{-0.4331258724748383, 2}], 
    PointBox[{-0.6166917899739327, 2}], PointBox[{-0.6437197682783862, 2}], 
    PointBox[{-1.710642595414415, 2}], PointBox[{-1.8380654689331564`, 2}], 
    PointBox[{0.725170892454392, 2}], PointBox[{2.117579756400887, 2}], 
    PointBox[{-0.17619580096692633`, 2}], PointBox[{-1.025854613807967, 2}], 
    PointBox[{-0.8088566929285528, 2}], PointBox[{-0.9178189739071035, 2}], 
    PointBox[{-1.5446718977586062`, 2}], PointBox[{-1.260235949807373, 2}], 
    PointBox[{0.08477613991527622, 2}], PointBox[{-0.5022019347552793, 2}], 
    PointBox[{-2.416250299773538, 2}], PointBox[{-3.5107668564817933`, 2}], 
    PointBox[{-0.6956172718521649, 2}], PointBox[{-1.4842325816621522`, 2}], 
    PointBox[{-1.5965221090489026`, 2}], PointBox[{1.129608175324206, 2}], 
    PointBox[{-1.9337501202938425`, 2}], PointBox[{-0.3407001955217292, 2}], 
    PointBox[{-0.8284986345873343, 2}], PointBox[{-0.41387851283494187`, 2}], 
    PointBox[{-0.5840149716852451, 2}], PointBox[{-2.171782185996328, 2}], 
    PointBox[{-1.5629358254890797`, 2}], PointBox[{-1.1126842287414012`, 2}], 
    PointBox[{-2.0610859497262792`, 2}], PointBox[{-1.7381493803836527`, 2}], 
    PointBox[{-1.1553795948672487`, 2}], PointBox[{-0.5934195362932532, 2}], 
    PointBox[{-0.24092203106619925`, 2}], 
    PointBox[{0.047897001455957544`, 2}], PointBox[{-0.3127549371084336, 2}], 
    PointBox[{-1.0181679321662775`, 2}], PointBox[{-0.9711423011007587, 2}], 
    PointBox[{0.19899377451249678`, 2}], PointBox[{-0.09140445912471318, 2}], 
    PointBox[{-2.172764908417653, 2}], PointBox[{-0.7098678917565437, 2}], 
    PointBox[{-3.435244422370672, 2}], PointBox[{0.4059295292815288, 2}], 
    PointBox[{-0.5937482277080379, 2}], PointBox[{0.37838212254902026`, 2}], 
    PointBox[{0.19546780869668612`, 2}], PointBox[{-2.472825386082083, 2}], 
    PointBox[{-0.12108914379983282`, 2}], PointBox[{-1.0015475532400713`, 2}],
     PointBox[{-1.57561435537053, 2}], PointBox[{-1.7344635150417798`, 2}], 
    PointBox[{-0.8370359457065188, 2}], PointBox[{-1.2059893583919166`, 2}], 
    PointBox[{-0.005932384073618069, 2}], PointBox[{0.8441222992489557, 2}], 
    PointBox[{-0.6644538389372078, 2}], PointBox[{-0.37218297401317024`, 2}], 
    PointBox[{-0.3873393363440355, 2}], PointBox[{-0.4296727383384211, 2}], 
    PointBox[{-1.0684285812883343`, 2}], PointBox[{-0.7443154403987665, 2}], 
    PointBox[{-0.9685967030894269, 2}], PointBox[{0.09835895294718133, 2}], 
    PointBox[{1.0814888085080334`, 2}], PointBox[{-0.547270248775659, 2}], 
    PointBox[{-1.6031966690246615`, 2}], PointBox[{0.4266866356322463, 2}], 
    PointBox[{0.034751319993020724`, 2}], PointBox[{0.7048834099206405, 2}], 
    PointBox[{-2.1255064174659686`, 2}], PointBox[{-0.7365437056113792, 2}], 
    PointBox[{1.199732776862571, 2}], PointBox[{0.5314668468099628, 2}], 
    PointBox[{-1.2163793628964523`, 2}], PointBox[{0.7222040693163914, 2}], 
    PointBox[{-0.42184205936567476`, 2}], PointBox[{-0.3980955985986402, 2}], 
    PointBox[{-0.7539675919799271, 2}], PointBox[{-0.8248213704185701, 2}], 
    PointBox[{-2.0006085580433277`, 2}], PointBox[{-0.42033676471544096`, 2}],
     PointBox[{-1.3320470496998023`, 2}], PointBox[{-1.9705002246123366`, 2}],
     PointBox[{-0.953569334227703, 2}], PointBox[{0.5779970281362257, 2}], 
    PointBox[{-1.5781482620892833`, 2}], PointBox[{-1.1711253047255783`, 2}], 
    PointBox[{-1.4005656604752303`, 2}], PointBox[{0.009094274679361747, 2}], 
    PointBox[{-1.1343588273415393`, 2}], PointBox[{-0.8320483429299712, 2}], 
    PointBox[{-0.8099468912737945, 2}], PointBox[{-1.9803300959509733`, 2}], 
    PointBox[{-0.3579376096188821, 2}], PointBox[{-1.0815465538662528`, 2}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{7.480722416446323, 3}], 
    PointBox[{7.384292738712581, 3}], PointBox[{5.68681995923159, 3}], 
    PointBox[{6.215765587716881, 3}], PointBox[{6.035963961413858, 3}], 
    PointBox[{6.617398247596638, 3}], PointBox[{5.53987709673046, 3}], 
    PointBox[{4.993130644179065, 3}], PointBox[{6.81289042511724, 3}], 
    PointBox[{6.443275496261667, 3}], PointBox[{5.987677955322075, 3}], 
    PointBox[{6.955592809857329, 3}], PointBox[{7.058036503087143, 3}], 
    PointBox[{5.774205923824043, 3}], PointBox[{8.205101807600364, 3}], 
    PointBox[{6.604368517647866, 3}], PointBox[{5.997449732026447, 3}], 
    PointBox[{5.735820538681593, 3}], PointBox[{5.471565245650547, 3}], 
    PointBox[{6.764082715620466, 3}], PointBox[{5.6397932956086985`, 3}], 
    PointBox[{7.148570117981611, 3}], PointBox[{6.9117904538553, 3}], 
    PointBox[{6.054517747519198, 3}], PointBox[{6.856092854959435, 3}], 
    PointBox[{6.001689787966307, 3}], PointBox[{5.516180617366709, 3}], 
    PointBox[{6.4361503068252315`, 3}], PointBox[{6.988869729539455, 3}], 
    PointBox[{7.841657661401237, 3}], PointBox[{6.587773115185588, 3}], 
    PointBox[{6.597001239889411, 3}], PointBox[{7.8833986868158465`, 3}], 
    PointBox[{5.6375642714976495`, 3}], PointBox[{6.7142642485184805`, 3}], 
    PointBox[{6.111135377005428, 3}], PointBox[{6.207733785665262, 3}], 
    PointBox[{5.403225728313586, 3}], PointBox[{5.83519004228054, 3}], 
    PointBox[{7.295825916522988, 3}], PointBox[{7.798826864662302, 3}], 
    PointBox[{5.7896530268259, 3}], PointBox[{4.340503464993985, 3}], 
    PointBox[{5.735070948732255, 3}], PointBox[{6.856918601102579, 3}], 
    PointBox[{6.441347985821081, 3}], PointBox[{6.55865796156966, 3}], 
    PointBox[{6.648494728034135, 3}], PointBox[{7.800287812541508, 3}], 
    PointBox[{7.99096805167998, 3}], PointBox[{5.279524095048906, 3}], 
    PointBox[{8.042905767113915, 3}], PointBox[{5.729529731037193, 3}], 
    PointBox[{4.457740822209232, 3}], PointBox[{5.758701448962493, 3}], 
    PointBox[{6.626599913554312, 3}], PointBox[{6.527853327004976, 3}], 
    PointBox[{4.869568113782435, 3}], PointBox[{5.1255590166855445`, 3}], 
    PointBox[{8.172651255708832, 3}], PointBox[{6.553571188301274, 3}], 
    PointBox[{6.858156572525597, 3}], PointBox[{6.649967621279453, 3}], 
    PointBox[{6.807418147546259, 3}], PointBox[{2.790379909909549, 3}], 
    PointBox[{8.181162290622193, 3}], PointBox[{7.905445464919383, 3}], 
    PointBox[{5.173474807481394, 3}], PointBox[{6.555729055497321, 3}], 
    PointBox[{7.142673836002249, 3}], PointBox[{6.544365059529911, 3}], 
    PointBox[{6.396067783431936, 3}], PointBox[{7.072849683260161, 3}], 
    PointBox[{7.188884397181948, 3}], PointBox[{5.690572497090326, 3}], 
    PointBox[{7.749057200157384, 3}], PointBox[{6.434516301767284, 3}], 
    PointBox[{7.434488889230816, 3}], PointBox[{6.867561738136934, 3}], 
    PointBox[{6.1412227217555815`, 3}], PointBox[{7.067240721153853, 3}], 
    PointBox[{7.66953405440856, 3}], PointBox[{6.002741404085809, 3}], 
    PointBox[{5.844022409179952, 3}], PointBox[{5.237446224687342, 3}], 
    PointBox[{7.293302713764755, 3}], PointBox[{4.9055808090456585`, 3}], 
    PointBox[{6.238742954953836, 3}], PointBox[{5.459503290110037, 3}], 
    PointBox[{5.583212376283912, 3}], PointBox[{6.028223458490221, 3}], 
    PointBox[{6.892648723387841, 3}], PointBox[{7.046474821120299, 3}], 
    PointBox[{4.828535015993705, 3}], PointBox[{6.596617676837481, 3}], 
    PointBox[{7.4059788171127146`, 3}], PointBox[{7.134902882471713, 3}], 
    PointBox[{4.7769389472950206`, 3}], PointBox[{6.062045794311425, 3}], 
    PointBox[{5.940633663597252, 3}], PointBox[{5.43226875560761, 3}], 
    PointBox[{5.611586290829645, 3}], PointBox[{5.314301150374002, 3}], 
    PointBox[{5.321876739222831, 3}], PointBox[{7.201597254503632, 3}], 
    PointBox[{7.145999234646521, 3}], PointBox[{6.044293458949204, 3}], 
    PointBox[{7.51631612881767, 3}], PointBox[{7.332542560847159, 3}], 
    PointBox[{6.5899852727371835`, 3}], PointBox[{7.017345857559689, 3}], 
    PointBox[{7.285572222731735, 3}], PointBox[{4.547257227456611, 3}], 
    PointBox[{8.358827288837665, 3}], PointBox[{6.319389216425547, 3}], 
    PointBox[{6.29498517244476, 3}], PointBox[{7.209274078954704, 3}], 
    PointBox[{8.219713357890212, 3}], PointBox[{5.930315650179349, 3}], 
    PointBox[{6.967655225258277, 3}], PointBox[{6.025837738871998, 3}], 
    PointBox[{5.290953879816852, 3}], PointBox[{4.65758627066211, 3}], 
    PointBox[{5.480490207516531, 3}], PointBox[{4.102202343350831, 3}], 
    PointBox[{5.763213328079193, 3}], PointBox[{6.3682935789929696`, 3}], 
    PointBox[{6.269803626191306, 3}], PointBox[{5.2716304839018555`, 3}], 
    PointBox[{7.5566746151542095`, 3}], PointBox[{6.55025178219585, 3}], 
    PointBox[{5.720399412896653, 3}], PointBox[{6.458350086211474, 3}], 
    PointBox[{7.025227919563417, 3}], PointBox[{8.901141555302585, 3}], 
    PointBox[{6.799889667242641, 3}], PointBox[{5.406871977682928, 3}], 
    PointBox[{6.41572818498521, 3}], PointBox[{5.743569724397268, 3}], 
    PointBox[{6.939001944171377, 3}], PointBox[{5.806571567735643, 3}], 
    PointBox[{4.326658472000425, 3}], PointBox[{6.1633622878839365`, 3}], 
    PointBox[{5.604074037991848, 3}], PointBox[{7.077656646113422, 3}], 
    PointBox[{5.714385585411159, 3}], PointBox[{7.155173154523889, 3}], 
    PointBox[{8.338848502416868, 3}], PointBox[{6.053582679909719, 3}], 
    PointBox[{6.328126997774307, 3}], PointBox[{4.324249229619845, 3}], 
    PointBox[{5.921160831823952, 3}], PointBox[{7.5643357386721455`, 3}], 
    PointBox[{5.891185939058456, 3}], PointBox[{7.739646361612662, 3}], 
    PointBox[{7.675233837663951, 3}], PointBox[{5.362109861444953, 3}], 
    PointBox[{5.228604929110912, 3}], PointBox[{7.628969411609785, 3}], 
    PointBox[{6.928699718597927, 3}], PointBox[{6.4558030180274315`, 3}], 
    PointBox[{7.70971158037065, 3}], PointBox[{5.805607957672579, 3}], 
    PointBox[{7.5333029397963305`, 3}], PointBox[{6.983434825740164, 3}], 
    PointBox[{6.065815862860632, 3}], PointBox[{6.929432161221238, 3}], 
    PointBox[{5.938487669040866, 3}], PointBox[{6.138364923503826, 3}], 
    PointBox[{6.071542211492221, 3}], PointBox[{7.433234317059768, 3}], 
    PointBox[{5.947426702657143, 3}], PointBox[{6.564247684098291, 3}], 
    PointBox[{5.772284527035776, 3}], PointBox[{6.2070699746784985`, 3}], 
    PointBox[{4.6949099078881105`, 3}], PointBox[{5.2174295749053154`, 3}], 
    PointBox[{7.856373395040793, 3}], PointBox[{7.982320076349298, 3}], 
    PointBox[{7.077444457092023, 3}], PointBox[{5.973553192831664, 3}], 
    PointBox[{6.0220933047445, 3}], PointBox[{4.913133371633361, 3}], 
    PointBox[{6.2511676004649175`, 3}], PointBox[{7.116304911962844, 3}], 
    PointBox[{7.909313457124451, 3}], PointBox[{7.193090920479452, 3}], 
    PointBox[{7.23932714335504, 3}], PointBox[{8.280114453038967, 3}], 
    PointBox[{8.360838173577335, 3}], PointBox[{6.635394340385482, 3}], 
    PointBox[{7.222944141772392, 3}], PointBox[{7.06922138803044, 3}], 
    PointBox[{6.4745200189407095`, 3}], PointBox[{8.721291038472707, 3}], 
    PointBox[{6.318749497062297, 3}], PointBox[{6.493249549122385, 3}], 
    PointBox[{7.088910688326306, 3}], PointBox[{6.742426075981447, 3}], 
    PointBox[{5.709706556968651, 3}]}},
  AspectRatio->NCache[Rational[3, 10]/GoldenRatio, 0.18541019662496844`],
  Axes->{True, False},
  AxesLabel->{None},
  AxesOrigin->{Automatic, Automatic},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  ImagePadding->All,
  PlotRange->{{-10., 10.}, {0, 3}},
  PlotRangePadding->{{0., 0.}, {0, 1}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6816664359593697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DotPlusLayer", "[", "30", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"DotPlusLayer", "[", "3", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", "\"\<Scalar\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}], 
       "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.681666439777779*^9, 3.6816666132798066`*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`NetChain`PackagePrivate`grid$$ = 
        Grid[{{
           MouseAppearance[
            Annotation["", {"Inputs", "Input"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation["Input", {"Inputs", "Input"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"encoded", " ", 
               Row[{"vector", " ", 
                 Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                   Row[{"1"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                  BaseStyle -> GrayLevel[0.5]]}]}], {"Inputs", "Input"}, 
             "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["1", 
              GrayLevel[0.5]], {"Layers", "1"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[DotPlusLayer, {"Layers", "1"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"30"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "1"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["2", 
              GrayLevel[0.5]], {"Layers", "2"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ElementwiseLayer, {"Layers", "2"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"30"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "2"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["3", 
              GrayLevel[0.5]], {"Layers", "3"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[DotPlusLayer, {"Layers", "3"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"3"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "3"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["4", 
              GrayLevel[0.5]], {"Layers", "4"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[SoftmaxLayer, {"Layers", "4"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"3"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "4"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation["", {"Outputs", "Output"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation["Output", {"Outputs", "Output"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"decoded", " ", 
               Row[{"vector", " ", 
                 Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                   Row[{"3"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                  BaseStyle -> GrayLevel[0.5]]}]}], {"Outputs", "Output"}, 
             "Mouse"], "LinkHand"]}}, Alignment -> Left, Spacings -> 1.1], 
        NeuralNetworks`NetChain`PackagePrivate`assoc$$ = Association[
        "Type" -> "Chain", "Layers" -> 
         Association[
          "1" -> Association[
            "Type" -> "DotPlus", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[2, {30, 1}], "Biases" -> 
               NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[1, {30}]]], "Parameters" -> 
             Association["Size" -> 30, "$InputSize" -> 1], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {1}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {30}]]], "2" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> Ramp, "$Dimensions" -> {30}, "$Rank" -> 1], 
             "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {30}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {30}]]], "3" -> 
           Association[
            "Type" -> "DotPlus", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[2, {3, 30}], "Biases" -> 
               NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[1, {3}]]], "Parameters" -> 
             Association["Size" -> 3, "$InputSize" -> 30], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {30}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {3}]]], "4" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association["Size" -> 3], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {3}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {3}]]]], 
         "Connections" -> {
          NetPort["Layers", "1", "Inputs", "Input"] -> 
           NetPort["Inputs", "Input"], 
           NetPort["Layers", "2", "Inputs", "Input"] -> 
           NetPort["Layers", "1", "Outputs", "Output"], 
           NetPort["Layers", "3", "Inputs", "Input"] -> 
           NetPort["Layers", "2", "Outputs", "Output"], 
           NetPort["Layers", "4", "Inputs", "Input"] -> 
           NetPort["Layers", "3", "Outputs", "Output"], 
           NetPort["Outputs", "Output"] -> 
           NetPort["Layers", "4", "Outputs", "Output"]}, "Inputs" -> 
         Association["Input" -> NeuralNetworks`EncodedType[
             NetEncoder["Scalar", 
              Association[
              "Parameters" -> Association[], "Output" -> 
               NeuralNetworks`TensorT[1, {1}]]], 
             NeuralNetworks`TensorT[1, {1}]]], "Outputs" -> 
         Association["Output" -> NeuralNetworks`DecodedType[
             NetDecoder["Class", 
              Association[
              "Parameters" -> 
               Association["Labels" -> {"a", "b", "c"}, "Dimensions" -> 3], 
               "Input" -> NeuralNetworks`TensorT[1, {3}]]], 
             NeuralNetworks`TensorT[1, {3}]]]], 
        NeuralNetworks`NetChain`PackagePrivate`opart$$, 
        NeuralNetworks`NetChain`PackagePrivate`part$$, 
        NeuralNetworks`NetChain`PackagePrivate`selected$$ = Null}, 
        DynamicBox[ToBoxes[
          Column[{
            EventHandler[
            NeuralNetworks`NetChain`PackagePrivate`grid$$, "MouseClicked" :> 
             If[
               ListQ[
               NeuralNetworks`NetChain`PackagePrivate`part$$ = 
                MouseAnnotation[]], 
               If[NeuralNetworks`NetChain`PackagePrivate`opart$$ === 
                 NeuralNetworks`NetChain`PackagePrivate`part$$, 
                 NeuralNetworks`NetChain`PackagePrivate`selected$$ = Null; 
                 NeuralNetworks`NetChain`PackagePrivate`opart$$ = Null, 
                 NeuralNetworks`NetChain`PackagePrivate`selected$$ = 
                  Part[NeuralNetworks`NetChain`PackagePrivate`assoc$$, 
                    Apply[
                    Sequence, NeuralNetworks`NetChain`PackagePrivate`part$$]]; 
                 NeuralNetworks`NetChain`PackagePrivate`opart$$ = 
                  NeuralNetworks`NetChain`PackagePrivate`part$$; Null]; 
               Null]], 
            NeuralNetworks`NetChain`PackagePrivate`fmtSelected[
            NeuralNetworks`NetChain`PackagePrivate`selected$$, 
             NeuralNetworks`NetChain`PackagePrivate`part$$]}, Spacings -> 1], 
          StandardForm],
         ImageSizeCache->{379., {67., 76.}},
         TrackedSymbols:>{NeuralNetworks`NetChain`PackagePrivate`selected$$}],
        DynamicModuleValues:>{}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{{3.681666602127507*^9, 3.681666614318308*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetGraph", "[", "net", "]"}]], "Input",
 CellChangeTimes->{{3.681666617555271*^9, 3.681666620063352*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetGraph", 
     RowBox[{"[", 
      PanelBox[
       TagBox[
        DynamicModuleBox[{NeuralNetworks`NetGraph`PackagePrivate`selection$$ =
          4, NeuralNetworks`NetGraph`PackagePrivate`outIndex$$ = 5, 
         NeuralNetworks`NetGraph`PackagePrivate`inputs$$ = Association[
         "Input" -> NeuralNetworks`TensorT[1, {1}]], 
         NeuralNetworks`NetGraph`PackagePrivate`outputs$$ = Association[
         "Output" -> NeuralNetworks`TensorT[1, {3}]], 
         NeuralNetworks`NetGraph`PackagePrivate`labels$$ = {
         "1", "2", "3", "4", "Input", "Output"}, 
         NeuralNetworks`NetGraph`PackagePrivate`vertices$$ = Association[
         "1" -> Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {30, 1}], "Biases" -> 
              NeuralNetworks`Nullable[
                NeuralNetworks`TensorT[1, {30}]]], "Parameters" -> 
            Association["Size" -> 30, "$InputSize" -> 1], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {1}]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {30}]]], "2" -> 
          Association[
           "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Function" -> Ramp, "$Dimensions" -> {30}, "$Rank" -> 1], 
            "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {30}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {30}]]], "3" -> 
          Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {3, 30}], "Biases" -> 
              NeuralNetworks`Nullable[
                NeuralNetworks`TensorT[1, {3}]]], "Parameters" -> 
            Association["Size" -> 3, "$InputSize" -> 30], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {30}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {3}]]], "4" -> 
          Association[
           "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
            Association["Size" -> 3], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {3}]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {3}]]]], 
         NeuralNetworks`NetGraph`PackagePrivate`vports$$ = {
          NetPort["Vertices", "1"], 
          NetPort["Vertices", "2"], 
          NetPort["Vertices", "3"], 
          NetPort["Vertices", "4"], 
          NetPort["Inputs", "Input"], 
          NetPort["Outputs", "Output"]}}, 
         TagBox[GridBox[{
            {
             TemplateBox[{TagBox[
                GraphicsBox[{{
                   GrayLevel[0.7], {
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}}, {
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    2.0818995585505003`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-0.4, 
                    2.4492935982947065`*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}]}, {
                   GrayLevel[0], {
                    AbsolutePointSize[5], {{
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-4., 2.4492935982947064`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    TagBox[
                    PointBox[{-3., 1.8369701987210297`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-2., 1.2246467991473532`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    TagBox[
                    PointBox[{-1., 6.123233995736766*^-17}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-5., 3.061616997868383*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{0., 0.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}}}, {{
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{0, -5.5}, {-4., 2.4492935982947064`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{0, -5.5}, {-3., 1.8369701987210297`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{0, -5.5}, {-2., 1.2246467991473532`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-1., 6.123233995736766*^-17}], 
                    Offset[{0, -5.5}, {-1., 6.123233995736766*^-17}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-5., 3.061616997868383*^-16}], 
                    Offset[{0, -5.5}, {-5., 3.061616997868383*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {0., 0.}], 
                    Offset[{0, -5.5}, {0., 0.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, 
                   StyleBox[{
                    InsetBox[
                    FormBox["\"30\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-3.4, 
                    2.0818995585505003`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"30\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-0.4, 
                    2.4492935982947065`*^-17}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736766*^-17}]}, FontColor -> 
                    GrayLevel[0.5], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, 
                  
                  DynamicModuleBox[{
                   GeneralUtilities`Graphics`PackagePrivate`vpos$1156526 = \
{{-4., 2.4492935982947064`*^-16}, {-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}, {-5., 3.061616997868383*^-16}, {
                    0., 0.}}}, 
                   DynamicBox[
                    Typeset`ToBoxes[
                    If[
                    Not[
                    IntegerQ[
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]], {}, {
                    AbsolutePointSize[10], 
                    Opacity[0.2, Black], 
                    Point[
                    Part[
                    GeneralUtilities`Graphics`PackagePrivate`vpos$1156526, 
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]]}], 
                    StandardForm, Graphics], 
                    TrackedSymbols :> {
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$}], 
                   DynamicModuleValues :> {}]}, 
                 ImageSize -> {362., 25.68000000000002}, AspectRatio -> Full, 
                 PlotRangePadding -> 0, 
                 ImagePadding -> {{19.5, 22.5}, {15.5, 10.179999999999998`}}, 
                 ImageMargins -> {{0, 0}, {15, 15}}, 
                 BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                
                EventHandlerTag[{
                 "MouseClicked" :> (
                   NeuralNetworks`NetGraph`PackagePrivate`selection$$ = None),
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                  PassEventsUp -> True}]],FormBox[
                TemplateBox[{
                  StyleBox["DotPlusLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["ElementwiseLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["SoftmaxLayer", 
                   GrayLevel[0.35], StripOnInput -> False]}, "PointLegend", 
                 DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #3}, "RowDefault"]}, {
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #2}, "RowDefault"], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{2, 2}, {2, 2}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.35], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.23333333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.35]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.35]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.35], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.19333333333333333`, 0.19333333333333333`, 
                    0.5533333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.29, 0.29, 0.83]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.29, 0.29, 0.83]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.29, 0.29, 0.83], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.52, 0.4266666666666667, 0.6533333333333333], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.78, 0.64, 0.98]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.78, 0.64, 0.98]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.78, 0.64, 0.98], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkerSize", "\[Rule]", "12"}], ",", 
                    RowBox[{"LegendMargins", "\[Rule]", "2"}], ",", 
                    
                    RowBox[{
                    "LegendLayout", "\[Rule]", 
                    "GeneralUtilities`Graphics`PackagePrivate`legendTable"}]}]\
, "]"}]& ), Editable -> True], TraditionalForm]},
              "Legended",
              DisplayFunction->(GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> Automatic, 
                BaselinePosition -> {1, 1}]& ),
              Editable->True,
              InterpretationFunction->(RowBox[{"Legended", "[", 
                 RowBox[{#, ",", 
                   RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
            {
             DynamicBox[ToBoxes[
               If[
                IntegerQ[NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                Item[
                 NeuralNetworks`NetGraph`PackagePrivate`vportInfo[
                  Part[
                  NeuralNetworks`NetGraph`PackagePrivate`vports$$, 
                   NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                  NeuralNetworks`NetGraph`PackagePrivate`inputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`outputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`vertices$$], 
                 Alignment -> Center], 
                Item["", ItemSize -> {0, 0}]], StandardForm],
              ImageSizeCache->{263., {93., 103.}},
              
              TrackedSymbols:>{
               NeuralNetworks`NetGraph`PackagePrivate`selection$$}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         DynamicModuleValues:>{},
         Initialization:>{NetGraph}],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       BaselinePosition->(Top -> Scaled[3])], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.681666620456086*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"clusters", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.681666782103774*^9, 3.6816667994651456`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "200"}], "}"}]], "Output",
 CellChangeTimes->{{3.6816667925468807`*^9, 3.6816667998949347`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"RandomSample", "[", "\[IndentingNewLine]", 
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"clusters", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", "\"\<a\>\""}], "]"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"clusters", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "\[Rule]", "\"\<b\>\""}], "]"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"clusters", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "\[Rule]", "\"\<c\>\""}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6816668081924033`*^9, 3.6816668471280546`*^9}, {
  3.6816668915530815`*^9, 3.6816668962330103`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomSample", "[", 
   RowBox[{"data", ",", "10"}], "]"}], "//", "Column"}]], "Input",
 CellChangeTimes->{{3.681666854145095*^9, 3.6816668667199*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"0.8163526593616812`", "\[Rule]", "\<\"a\"\>"}]},
    {
     RowBox[{"2.0177320769768956`", "\[Rule]", "\<\"a\"\>"}]},
    {
     RowBox[{"7.675233837663951`", "\[Rule]", "\<\"c\"\>"}]},
    {
     RowBox[{"0.24733258640311784`", "\[Rule]", "\<\"b\"\>"}]},
    {
     RowBox[{"1.545775487325064`", "\[Rule]", "\<\"a\"\>"}]},
    {
     RowBox[{"6.867561738136934`", "\[Rule]", "\<\"c\"\>"}]},
    {
     RowBox[{"1.2073319245649952`", "\[Rule]", "\<\"a\"\>"}]},
    {
     RowBox[{"6.238742954953836`", "\[Rule]", "\<\"c\"\>"}]},
    {
     RowBox[{"0.5420080753014187`", "\[Rule]", "\<\"a\"\>"}]},
    {
     RowBox[{"1.2041224287007093`", "\[Rule]", "\<\"a\"\>"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.681666860696146*^9, 3.681666867894106*^9}, 
   3.681666899245126*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetInitialize", "[", "net", "]"}]}]], "Input",
 CellChangeTimes->{{3.6816669385504003`*^9, 3.681666941305992*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`NetChain`PackagePrivate`grid$$ = 
        Grid[{{
           MouseAppearance[
            Annotation["", {"Inputs", "Input"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation["Input", {"Inputs", "Input"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"encoded", " ", 
               Row[{"vector", " ", 
                 Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                   Row[{"1"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                  BaseStyle -> GrayLevel[0.5]]}]}], {"Inputs", "Input"}, 
             "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["1", 
              GrayLevel[0.5]], {"Layers", "1"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[DotPlusLayer, {"Layers", "1"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"30"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "1"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["2", 
              GrayLevel[0.5]], {"Layers", "2"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ElementwiseLayer, {"Layers", "2"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"30"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "2"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["3", 
              GrayLevel[0.5]], {"Layers", "3"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[DotPlusLayer, {"Layers", "3"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"3"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "3"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["4", 
              GrayLevel[0.5]], {"Layers", "4"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[SoftmaxLayer, {"Layers", "4"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"3"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "4"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation["", {"Outputs", "Output"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation["Output", {"Outputs", "Output"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"decoded", " ", 
               Row[{"vector", " ", 
                 Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                   Row[{"3"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                  BaseStyle -> GrayLevel[0.5]]}]}], {"Outputs", "Output"}, 
             "Mouse"], "LinkHand"]}}, Alignment -> Left, Spacings -> 1.1], 
        NeuralNetworks`NetChain`PackagePrivate`assoc$$ = Association[
        "Type" -> "Chain", "Layers" -> 
         Association[
          "1" -> Association[
            "Type" -> "DotPlus", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[2, {30, 1}], "Biases" -> 
               NeuralNetworks`TensorT[1, {30}]], "Parameters" -> 
             Association["Size" -> 30, "$InputSize" -> 1], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {1}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {30}]]], "2" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> Ramp, "$Dimensions" -> {30}, "$Rank" -> 1], 
             "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {30}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {30}]]], "3" -> 
           Association[
            "Type" -> "DotPlus", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[2, {3, 30}], "Biases" -> 
               NeuralNetworks`TensorT[1, {3}]], "Parameters" -> 
             Association["Size" -> 3, "$InputSize" -> 30], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {30}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {3}]]], "4" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association["Size" -> 3], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {3}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {3}]]]], 
         "Connections" -> {
          NetPort["Layers", "1", "Inputs", "Input"] -> 
           NetPort["Inputs", "Input"], 
           NetPort["Layers", "2", "Inputs", "Input"] -> 
           NetPort["Layers", "1", "Outputs", "Output"], 
           NetPort["Layers", "3", "Inputs", "Input"] -> 
           NetPort["Layers", "2", "Outputs", "Output"], 
           NetPort["Layers", "4", "Inputs", "Input"] -> 
           NetPort["Layers", "3", "Outputs", "Output"], 
           NetPort["Outputs", "Output"] -> 
           NetPort["Layers", "4", "Outputs", "Output"]}, "Inputs" -> 
         Association["Input" -> NeuralNetworks`EncodedType[
             NetEncoder["Scalar", 
              Association[
              "Parameters" -> Association[], "Output" -> 
               NeuralNetworks`TensorT[1, {1}]]], 
             NeuralNetworks`TensorT[1, {1}]]], "Outputs" -> 
         Association["Output" -> NeuralNetworks`DecodedType[
             NetDecoder["Class", 
              Association[
              "Parameters" -> 
               Association["Labels" -> {"a", "b", "c"}, "Dimensions" -> 3], 
               "Input" -> NeuralNetworks`TensorT[1, {3}]]], 
             NeuralNetworks`TensorT[1, {3}]]]], 
        NeuralNetworks`NetChain`PackagePrivate`opart$$, 
        NeuralNetworks`NetChain`PackagePrivate`part$$, 
        NeuralNetworks`NetChain`PackagePrivate`selected$$ = Null}, 
        DynamicBox[ToBoxes[
          Column[{
            EventHandler[
            NeuralNetworks`NetChain`PackagePrivate`grid$$, "MouseClicked" :> 
             If[
               ListQ[
               NeuralNetworks`NetChain`PackagePrivate`part$$ = 
                MouseAnnotation[]], 
               If[NeuralNetworks`NetChain`PackagePrivate`opart$$ === 
                 NeuralNetworks`NetChain`PackagePrivate`part$$, 
                 NeuralNetworks`NetChain`PackagePrivate`selected$$ = Null; 
                 NeuralNetworks`NetChain`PackagePrivate`opart$$ = Null, 
                 NeuralNetworks`NetChain`PackagePrivate`selected$$ = 
                  Part[NeuralNetworks`NetChain`PackagePrivate`assoc$$, 
                    Apply[
                    Sequence, NeuralNetworks`NetChain`PackagePrivate`part$$]]; 
                 NeuralNetworks`NetChain`PackagePrivate`opart$$ = 
                  NeuralNetworks`NetChain`PackagePrivate`part$$; Null]; 
               Null]], 
            NeuralNetworks`NetChain`PackagePrivate`fmtSelected[
            NeuralNetworks`NetChain`PackagePrivate`selected$$, 
             NeuralNetworks`NetChain`PackagePrivate`part$$]}, Spacings -> 1], 
          StandardForm],
         ImageSizeCache->{379., {67., 76.}},
         TrackedSymbols:>{NeuralNetworks`NetChain`PackagePrivate`selected$$}],
        DynamicModuleValues:>{}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.681666941691501*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "[", "1.0", "]"}]], "Input",
 CellChangeTimes->{{3.6816669320896235`*^9, 3.6816669486742563`*^9}}],

Cell[BoxData["\<\"a\"\>"], "Output",
 CellChangeTimes->{{3.681666934314347*^9, 3.681666949069784*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"net", ",", "data", ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", 
     RowBox[{"10", "^", "6"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.681666904842777*^9, 3.6816669140170712`*^9}, {
  3.681666954057928*^9, 3.681666978923091*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`NetChain`PackagePrivate`grid$$ = 
        Grid[{{
           MouseAppearance[
            Annotation["", {"Inputs", "Input"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation["Input", {"Inputs", "Input"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"encoded", " ", 
               Row[{"vector", " ", 
                 Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                   Row[{"1"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                  BaseStyle -> GrayLevel[0.5]]}]}], {"Inputs", "Input"}, 
             "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["1", 
              GrayLevel[0.5]], {"Layers", "1"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[DotPlusLayer, {"Layers", "1"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"30"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "1"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["2", 
              GrayLevel[0.5]], {"Layers", "2"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ElementwiseLayer, {"Layers", "2"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"30"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "2"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["3", 
              GrayLevel[0.5]], {"Layers", "3"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[DotPlusLayer, {"Layers", "3"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"3"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "3"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["4", 
              GrayLevel[0.5]], {"Layers", "4"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[SoftmaxLayer, {"Layers", "4"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"3"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "4"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation["", {"Outputs", "Output"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation["Output", {"Outputs", "Output"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"decoded", " ", 
               Row[{"vector", " ", 
                 Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                   Row[{"3"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                  BaseStyle -> GrayLevel[0.5]]}]}], {"Outputs", "Output"}, 
             "Mouse"], "LinkHand"]}}, Alignment -> Left, Spacings -> 1.1], 
        NeuralNetworks`NetChain`PackagePrivate`assoc$$ = Association[
        "Type" -> "Chain", "Layers" -> 
         Association[
          "1" -> Association[
            "Type" -> "DotPlus", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[2, {30, 1}], "Biases" -> 
               NeuralNetworks`TensorT[1, {30}]], "Parameters" -> 
             Association["Size" -> 30, "$InputSize" -> 1], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {1}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {30}]]], "2" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> Ramp, "$Dimensions" -> {30}, "$Rank" -> 1], 
             "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {30}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {30}]]], "3" -> 
           Association[
            "Type" -> "DotPlus", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[2, {3, 30}], "Biases" -> 
               NeuralNetworks`TensorT[1, {3}]], "Parameters" -> 
             Association["Size" -> 3, "$InputSize" -> 30], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {30}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {3}]]], "4" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association["Size" -> 3], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {3}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {3}]]]], 
         "Connections" -> {
          NetPort["Layers", "1", "Inputs", "Input"] -> 
           NetPort["Inputs", "Input"], 
           NetPort["Layers", "2", "Inputs", "Input"] -> 
           NetPort["Layers", "1", "Outputs", "Output"], 
           NetPort["Layers", "3", "Inputs", "Input"] -> 
           NetPort["Layers", "2", "Outputs", "Output"], 
           NetPort["Layers", "4", "Inputs", "Input"] -> 
           NetPort["Layers", "3", "Outputs", "Output"], 
           NetPort["Outputs", "Output"] -> 
           NetPort["Layers", "4", "Outputs", "Output"]}, "Inputs" -> 
         Association["Input" -> NeuralNetworks`EncodedType[
             NetEncoder["Scalar", 
              Association[
              "Parameters" -> Association[], "Output" -> 
               NeuralNetworks`TensorT[1, {1}]]], 
             NeuralNetworks`TensorT[1, {1}]]], "Outputs" -> 
         Association["Output" -> NeuralNetworks`DecodedType[
             NetDecoder["Class", 
              Association[
              "Parameters" -> 
               Association["Labels" -> {"a", "b", "c"}, "Dimensions" -> 3], 
               "Input" -> NeuralNetworks`TensorT[1, {3}]]], 
             NeuralNetworks`TensorT[1, {3}]]]], 
        NeuralNetworks`NetChain`PackagePrivate`opart$$, 
        NeuralNetworks`NetChain`PackagePrivate`part$$, 
        NeuralNetworks`NetChain`PackagePrivate`selected$$ = Null}, 
        DynamicBox[ToBoxes[
          Column[{
            EventHandler[
            NeuralNetworks`NetChain`PackagePrivate`grid$$, "MouseClicked" :> 
             If[
               ListQ[
               NeuralNetworks`NetChain`PackagePrivate`part$$ = 
                MouseAnnotation[]], 
               If[NeuralNetworks`NetChain`PackagePrivate`opart$$ === 
                 NeuralNetworks`NetChain`PackagePrivate`part$$, 
                 NeuralNetworks`NetChain`PackagePrivate`selected$$ = Null; 
                 NeuralNetworks`NetChain`PackagePrivate`opart$$ = Null, 
                 NeuralNetworks`NetChain`PackagePrivate`selected$$ = 
                  Part[NeuralNetworks`NetChain`PackagePrivate`assoc$$, 
                    Apply[
                    Sequence, NeuralNetworks`NetChain`PackagePrivate`part$$]]; 
                 NeuralNetworks`NetChain`PackagePrivate`opart$$ = 
                  NeuralNetworks`NetChain`PackagePrivate`part$$; Null]; 
               Null]], 
            NeuralNetworks`NetChain`PackagePrivate`fmtSelected[
            NeuralNetworks`NetChain`PackagePrivate`selected$$, 
             NeuralNetworks`NetChain`PackagePrivate`part$$]}, Spacings -> 1], 
          StandardForm],
         ImageSizeCache->{379., {67., 76.}},
         TrackedSymbols:>{NeuralNetworks`NetChain`PackagePrivate`selected$$}],
        DynamicModuleValues:>{}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.681666962280282*^9, 3.6816670556916046`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberLinePlot", "[", 
  RowBox[{"clusters", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", "10"}], "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{2.5435803966368473`, 1}], 
    PointBox[{1.2580651113217458`, 1}], PointBox[{1.7255158956046992`, 1}], 
    PointBox[{0.8178373605347178, 1}], PointBox[{2.2568957643120924`, 1}], 
    PointBox[{1.7491181874251165`, 1}], PointBox[{1.2815010599084056`, 1}], 
    PointBox[{1.4206108440681797`, 1}], PointBox[{0.8094583553415846, 1}], 
    PointBox[{0.7784232227380845, 1}], PointBox[{1.5547881560231114`, 1}], 
    PointBox[{1.4594172834886567`, 1}], PointBox[{1.7335635893885262`, 1}], 
    PointBox[{2.0177320769768956`, 1}], PointBox[{2.420012798503714, 1}], 
    PointBox[{3.988290809649561, 1}], PointBox[{2.2123925060367293`, 1}], 
    PointBox[{1.4724930132472596`, 1}], PointBox[{1.9508863225381972`, 1}], 
    PointBox[{0.706107205354756, 1}], PointBox[{2.1414793572767508`, 1}], 
    PointBox[{2.059834452268876, 1}], PointBox[{2.2519816628368297`, 1}], 
    PointBox[{1.4082444254853324`, 1}], PointBox[{1.162882109114632, 1}], 
    PointBox[{0.7637201578391372, 1}], PointBox[{2.8038355099065897`, 1}], 
    PointBox[{1.7091626474829553`, 1}], PointBox[{2.5377666299102786`, 1}], 
    PointBox[{1.814649737609908, 1}], PointBox[{0.28142366976311295`, 1}], 
    PointBox[{2.790942150006483, 1}], PointBox[{0.949968762785471, 1}], 
    PointBox[{2.842859841967379, 1}], PointBox[{0.3167689292173732, 1}], 
    PointBox[{0.6161282972142212, 1}], PointBox[{0.33008543666806944`, 1}], 
    PointBox[{1.6496522471553037`, 1}], PointBox[{-0.08742033251033021, 1}], 
    PointBox[{0.9898625178195709, 1}], PointBox[{1.4913189322547733`, 1}], 
    PointBox[{1.3490540493807905`, 1}], PointBox[{0.5994224024594668, 1}], 
    PointBox[{1.4594189180674335`, 1}], PointBox[{1.6737604461988698`, 1}], 
    PointBox[{1.3446511149154552`, 1}], PointBox[{1.3767230370233197`, 1}], 
    PointBox[{0.9105423940353957, 1}], PointBox[{2.2792888410465872`, 1}], 
    PointBox[{-0.34505314536473586`, 1}], PointBox[{0.7801981546397415, 1}], 
    PointBox[{1.3197722688847147`, 1}], PointBox[{1.1883352632824111`, 1}], 
    PointBox[{3.569133817382025, 1}], PointBox[{3.1973531925001852`, 1}], 
    PointBox[{2.6815850270789214`, 1}], PointBox[{0.04528655007430338, 1}], 
    PointBox[{1.2266825685824925`, 1}], PointBox[{2.363735781427958, 1}], 
    PointBox[{1.5386815107562732`, 1}], PointBox[{0.722696633560854, 1}], 
    PointBox[{2.1451795958175, 1}], PointBox[{1.4072749929209567`, 1}], 
    PointBox[{2.9051643819126953`, 1}], PointBox[{0.46231834515146697`, 1}], 
    PointBox[{3.9048750289437755`, 1}], PointBox[{2.3904964891722793`, 1}], 
    PointBox[{1.5113009941663433`, 1}], PointBox[{2.1786362172960008`, 1}], 
    PointBox[{0.9755602811178419, 1}], PointBox[{3.0752123474374784`, 1}], 
    PointBox[{1.593823426260207, 1}], PointBox[{1.3392439845458763`, 1}], 
    PointBox[{2.04341415343975, 1}], PointBox[{1.5850574087189142`, 1}], 
    PointBox[{0.6235348752920673, 1}], PointBox[{1.6657224016048164`, 1}], 
    PointBox[{2.660292698671128, 1}], PointBox[{1.077553916867784, 1}], 
    PointBox[{1.2079204322907533`, 1}], PointBox[{2.6056161709091943`, 1}], 
    PointBox[{0.7879473416056226, 1}], PointBox[{0.3811073012378148, 1}], 
    PointBox[{0.7966257138055829, 1}], PointBox[{0.755484319904522, 1}], 
    PointBox[{2.5237376621973913`, 1}], PointBox[{2.329516161227195, 1}], 
    PointBox[{1.1312488973960817`, 1}], PointBox[{-0.5020498663997768, 1}], 
    PointBox[{1.3994581375634183`, 1}], PointBox[{1.4000717521781612`, 1}], 
    PointBox[{3.37664689481391, 1}], PointBox[{2.4137216769543843`, 1}], 
    PointBox[{2.59866055619716, 1}], PointBox[{0.5367797384153827, 1}], 
    PointBox[{2.3225596598978617`, 1}], PointBox[{2.3051272119401918`, 1}], 
    PointBox[{2.141833533642538, 1}], PointBox[{1.4717691408892544`, 1}], 
    PointBox[{1.3525669915350158`, 1}], PointBox[{2.649537313844206, 1}], 
    PointBox[{0.5513123813433077, 1}], PointBox[{0.37945052737115104`, 1}], 
    PointBox[{1.0916323503059244`, 1}], PointBox[{-0.1407489113821394, 1}], 
    PointBox[{1.3566833291160003`, 1}], PointBox[{3.1324763391711814`, 1}], 
    PointBox[{1.4022185457157856`, 1}], PointBox[{3.123191799325745, 1}], 
    PointBox[{-0.19143121678141628`, 1}], PointBox[{0.5202257876996492, 1}], 
    PointBox[{1.0319401726963657`, 1}], PointBox[{1.679380238662871, 1}], 
    PointBox[{-0.24100130755701743`, 1}], PointBox[{0.9094769570829483, 1}], 
    PointBox[{2.0514153974421774`, 1}], PointBox[{2.1441466360337915`, 1}], 
    PointBox[{2.9456285849106094`, 1}], PointBox[{1.5148280501137135`, 1}], 
    PointBox[{1.8180954792474393`, 1}], PointBox[{0.5420080753014187, 1}], 
    PointBox[{1.2073319245649952`, 1}], PointBox[{1.041709719693117, 1}], 
    PointBox[{2.961912498193961, 1}], PointBox[{1.543790769001829, 1}], 
    PointBox[{1.2458765683068012`, 1}], PointBox[{0.5350883396983723, 1}], 
    PointBox[{0.7972674893133237, 1}], PointBox[{1.3756355695127198`, 1}], 
    PointBox[{2.7914260112007945`, 1}], PointBox[{1.8807596428696673`, 1}], 
    PointBox[{1.4830472932947394`, 1}], PointBox[{2.065889402441356, 1}], 
    PointBox[{3.2363070167987322`, 1}], PointBox[{-0.7995844492902293, 1}], 
    PointBox[{2.3264180727338735`, 1}], PointBox[{0.3391480252060495, 1}], 
    PointBox[{1.1201124601745263`, 1}], PointBox[{2.346589598364095, 1}], 
    PointBox[{-0.3616798040092457, 1}], PointBox[{3.3926085719590247`, 1}], 
    PointBox[{0.2073291069630201, 1}], PointBox[{1.5161857322567882`, 1}], 
    PointBox[{2.2745715575310688`, 1}], PointBox[{0.5895645192205502, 1}], 
    PointBox[{2.1028584070356504`, 1}], PointBox[{0.7197998523898593, 1}], 
    PointBox[{2.6574405502308784`, 1}], PointBox[{1.5464329833643233`, 1}], 
    PointBox[{2.626039803431299, 1}], PointBox[{0.1984770384427028, 1}], 
    PointBox[{1.2497912651296126`, 1}], PointBox[{1.3816169390449846`, 1}], 
    PointBox[{2.4533369702742314`, 1}], PointBox[{2.080900273078587, 1}], 
    PointBox[{-0.3393578417966685, 1}], PointBox[{1.0586575400654117`, 1}], 
    PointBox[{0.6836946737786327, 1}], PointBox[{1.7815966615107992`, 1}], 
    PointBox[{1.6297857924368062`, 1}], PointBox[{1.742709805986203, 1}], 
    PointBox[{1.5387977606894807`, 1}], PointBox[{2.880492235108229, 1}], 
    PointBox[{2.618831757773708, 1}], PointBox[{1.9374060474621562`, 1}], 
    PointBox[{0.8163526593616812, 1}], PointBox[{3.3593655903484323`, 1}], 
    PointBox[{1.3010400321795463`, 1}], PointBox[{2.4478064416370624`, 1}], 
    PointBox[{1.21446642453921, 1}], PointBox[{1.6579469353982867`, 1}], 
    PointBox[{0.6199296729016786, 1}], PointBox[{3.1577411582255053`, 1}], 
    PointBox[{1.348550042872952, 1}], PointBox[{-0.13034770335721957`, 1}], 
    PointBox[{1.545775487325064, 1}], PointBox[{0.7794883217854646, 1}], 
    PointBox[{1.4934422795667937`, 1}], PointBox[{2.228540009505126, 1}], 
    PointBox[{1.2140168612557318`, 1}], PointBox[{2.287613300005768, 1}], 
    PointBox[{1.1532338651574796`, 1}], PointBox[{2.12027103166901, 1}], 
    PointBox[{0.6347636200727687, 1}], PointBox[{2.041018878784573, 1}], 
    PointBox[{2.8431322825901986`, 1}], PointBox[{1.742350670550136, 1}], 
    PointBox[{1.983883045088041, 1}], PointBox[{2.5327155504208196`, 1}], 
    PointBox[{2.708311732522251, 1}], PointBox[{0.0471907921127912, 1}], 
    PointBox[{0.5696562666897064, 1}], PointBox[{0.7605733994789926, 1}], 
    PointBox[{1.2620862396170889`, 1}], PointBox[{-0.491524278764496, 1}], 
    PointBox[{1.265327363332347, 1}], PointBox[{2.472283853033592, 1}], 
    PointBox[{0.6016499622802063, 1}], PointBox[{0.7708138291109013, 1}], 
    PointBox[{1.2041224287007093`, 1}]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{0.6659888443375537, 2}], 
    PointBox[{-0.315759127028102, 2}], PointBox[{-1.3280263981189848`, 2}], 
    PointBox[{-1.0886437214317823`, 2}], PointBox[{-1.5523242671896762`, 2}], 
    PointBox[{0.49376453899093664`, 2}], PointBox[{-0.6738434318387475, 2}], 
    PointBox[{-2.53751487255085, 2}], PointBox[{0.014062267557107488`, 2}], 
    PointBox[{-1.7016956176064488`, 2}], PointBox[{-2.1292247787540965`, 2}], 
    PointBox[{0.23030349700700847`, 2}], PointBox[{-0.8234883520809351, 2}], 
    PointBox[{-0.3453351077928389, 2}], PointBox[{-1.0746844780719715`, 2}], 
    PointBox[{-1.0449432427773653`, 2}], PointBox[{-2.01068275000674, 2}], 
    PointBox[{-1.0116814651726633`, 2}], PointBox[{1.0939306648584899`, 2}], 
    PointBox[{0.2249704487684272, 2}], PointBox[{-2.8717032222486156`, 2}], 
    PointBox[{-0.4733322967358101, 2}], PointBox[{-0.8915559573530569, 2}], 
    PointBox[{-1.0214508915276883`, 2}], PointBox[{-0.47413623644299757`, 2}],
     PointBox[{0.08029171289116044, 2}], PointBox[{0.28634030219773154`, 2}], 
    PointBox[{-0.36086739176827093`, 2}], PointBox[{-0.6765097716784286, 2}], 
    PointBox[{-0.05893505193681403, 2}], PointBox[{-1.5254290932439964`, 2}], 
    PointBox[{-1.3894472673209894`, 2}], PointBox[{-2.1069482459139617`, 2}], 
    PointBox[{0.3541684435877577, 2}], PointBox[{1.2376129986859643`, 2}], 
    PointBox[{-0.7578263233981352, 2}], PointBox[{-1.4648378353427445`, 2}], 
    PointBox[{0.11663352314876263`, 2}], PointBox[{1.2324719544181078`, 2}], 
    PointBox[{0.388434234504877, 2}], PointBox[{-1.135865436640638, 2}], 
    PointBox[{-3.1327392384697292`, 2}], PointBox[{-0.184187924524567, 2}], 
    PointBox[{-0.5436472244324404, 2}], PointBox[{-0.22429179718479525`, 2}], 
    PointBox[{-0.5107078749986234, 2}], PointBox[{0.6740491163909199, 2}], 
    PointBox[{-1.8472920943402262`, 2}], PointBox[{-0.18528780850243942`, 2}],
     PointBox[{-2.7283296039141747`, 2}], PointBox[{-0.8073547947052166, 2}], 
    PointBox[{-2.815053660815429, 2}], PointBox[{-0.8810641243132998, 2}], 
    PointBox[{-1.730396764344658, 2}], PointBox[{-0.3939636672713288, 2}], 
    PointBox[{-2.18504260645075, 2}], PointBox[{-2.7635688388981055`, 2}], 
    PointBox[{-1.8503300602744575`, 2}], PointBox[{-0.34110010365378624`, 2}],
     PointBox[{0.2134479353277563, 2}], PointBox[{0.4027532613440934, 2}], 
    PointBox[{-2.5881429915064853`, 2}], PointBox[{-2.7356801516849747`, 2}], 
    PointBox[{-0.7996127151495946, 2}], PointBox[{-0.5851193557052475, 2}], 
    PointBox[{1.2326473713136727`, 2}], PointBox[{-0.40368233060216324`, 2}], 
    PointBox[{-1.4199143928090028`, 2}], PointBox[{-0.7096567447024356, 2}], 
    PointBox[{-0.8881639259904675, 2}], PointBox[{-2.4538654697967566`, 2}], 
    PointBox[{0.0765268292414516, 2}], PointBox[{0.24733258640311784`, 2}], 
    PointBox[{0.5939848616174648, 2}], PointBox[{-0.8622492787079388, 2}], 
    PointBox[{-0.6032880442487862, 2}], PointBox[{-1.1041664270313516`, 2}], 
    PointBox[{-1.3026991453029275`, 2}], PointBox[{-2.151170683717334, 2}], 
    PointBox[{-0.8151151787422768, 2}], PointBox[{-1.886263914178029, 2}], 
    PointBox[{-1.022596736053187, 2}], PointBox[{-2.505328738397007, 2}], 
    PointBox[{-1.1646594141279376`, 2}], PointBox[{-0.30435303894727356`, 2}],
     PointBox[{0.8095507019695365, 2}], PointBox[{0.7691214750763646, 2}], 
    PointBox[{-0.9040380967190895, 2}], PointBox[{-1.145728355681697, 2}], 
    PointBox[{0.666222111126338, 2}], PointBox[{-0.8888388903370622, 2}], 
    PointBox[{-0.3869180339747339, 2}], PointBox[{-1.175649736749952, 2}], 
    PointBox[{-1.9372646555334108`, 2}], PointBox[{-2.146475024303017, 2}], 
    PointBox[{-2.829791119469129, 2}], PointBox[{-1.1313014119775897`, 2}], 
    PointBox[{-1.4054060351878608`, 2}], PointBox[{1.3931304524092982`, 2}], 
    PointBox[{-0.9764362796895292, 2}], PointBox[{-0.6592672063947471, 2}], 
    PointBox[{-1.5497858537175424`, 2}], PointBox[{-0.17140941099261853`, 2}],
     PointBox[{-0.6663518281557324, 2}], PointBox[{-0.4331258724748383, 2}], 
    PointBox[{-0.6166917899739327, 2}], PointBox[{-0.6437197682783862, 2}], 
    PointBox[{-1.710642595414415, 2}], PointBox[{-1.8380654689331564`, 2}], 
    PointBox[{0.725170892454392, 2}], PointBox[{2.117579756400887, 2}], 
    PointBox[{-0.17619580096692633`, 2}], PointBox[{-1.025854613807967, 2}], 
    PointBox[{-0.8088566929285528, 2}], PointBox[{-0.9178189739071035, 2}], 
    PointBox[{-1.5446718977586062`, 2}], PointBox[{-1.260235949807373, 2}], 
    PointBox[{0.08477613991527622, 2}], PointBox[{-0.5022019347552793, 2}], 
    PointBox[{-2.416250299773538, 2}], PointBox[{-3.5107668564817933`, 2}], 
    PointBox[{-0.6956172718521649, 2}], PointBox[{-1.4842325816621522`, 2}], 
    PointBox[{-1.5965221090489026`, 2}], PointBox[{1.129608175324206, 2}], 
    PointBox[{-1.9337501202938425`, 2}], PointBox[{-0.3407001955217292, 2}], 
    PointBox[{-0.8284986345873343, 2}], PointBox[{-0.41387851283494187`, 2}], 
    PointBox[{-0.5840149716852451, 2}], PointBox[{-2.171782185996328, 2}], 
    PointBox[{-1.5629358254890797`, 2}], PointBox[{-1.1126842287414012`, 2}], 
    PointBox[{-2.0610859497262792`, 2}], PointBox[{-1.7381493803836527`, 2}], 
    PointBox[{-1.1553795948672487`, 2}], PointBox[{-0.5934195362932532, 2}], 
    PointBox[{-0.24092203106619925`, 2}], 
    PointBox[{0.047897001455957544`, 2}], PointBox[{-0.3127549371084336, 2}], 
    PointBox[{-1.0181679321662775`, 2}], PointBox[{-0.9711423011007587, 2}], 
    PointBox[{0.19899377451249678`, 2}], PointBox[{-0.09140445912471318, 2}], 
    PointBox[{-2.172764908417653, 2}], PointBox[{-0.7098678917565437, 2}], 
    PointBox[{-3.435244422370672, 2}], PointBox[{0.4059295292815288, 2}], 
    PointBox[{-0.5937482277080379, 2}], PointBox[{0.37838212254902026`, 2}], 
    PointBox[{0.19546780869668612`, 2}], PointBox[{-2.472825386082083, 2}], 
    PointBox[{-0.12108914379983282`, 2}], PointBox[{-1.0015475532400713`, 2}],
     PointBox[{-1.57561435537053, 2}], PointBox[{-1.7344635150417798`, 2}], 
    PointBox[{-0.8370359457065188, 2}], PointBox[{-1.2059893583919166`, 2}], 
    PointBox[{-0.005932384073618069, 2}], PointBox[{0.8441222992489557, 2}], 
    PointBox[{-0.6644538389372078, 2}], PointBox[{-0.37218297401317024`, 2}], 
    PointBox[{-0.3873393363440355, 2}], PointBox[{-0.4296727383384211, 2}], 
    PointBox[{-1.0684285812883343`, 2}], PointBox[{-0.7443154403987665, 2}], 
    PointBox[{-0.9685967030894269, 2}], PointBox[{0.09835895294718133, 2}], 
    PointBox[{1.0814888085080334`, 2}], PointBox[{-0.547270248775659, 2}], 
    PointBox[{-1.6031966690246615`, 2}], PointBox[{0.4266866356322463, 2}], 
    PointBox[{0.034751319993020724`, 2}], PointBox[{0.7048834099206405, 2}], 
    PointBox[{-2.1255064174659686`, 2}], PointBox[{-0.7365437056113792, 2}], 
    PointBox[{1.199732776862571, 2}], PointBox[{0.5314668468099628, 2}], 
    PointBox[{-1.2163793628964523`, 2}], PointBox[{0.7222040693163914, 2}], 
    PointBox[{-0.42184205936567476`, 2}], PointBox[{-0.3980955985986402, 2}], 
    PointBox[{-0.7539675919799271, 2}], PointBox[{-0.8248213704185701, 2}], 
    PointBox[{-2.0006085580433277`, 2}], PointBox[{-0.42033676471544096`, 2}],
     PointBox[{-1.3320470496998023`, 2}], PointBox[{-1.9705002246123366`, 2}],
     PointBox[{-0.953569334227703, 2}], PointBox[{0.5779970281362257, 2}], 
    PointBox[{-1.5781482620892833`, 2}], PointBox[{-1.1711253047255783`, 2}], 
    PointBox[{-1.4005656604752303`, 2}], PointBox[{0.009094274679361747, 2}], 
    PointBox[{-1.1343588273415393`, 2}], PointBox[{-0.8320483429299712, 2}], 
    PointBox[{-0.8099468912737945, 2}], PointBox[{-1.9803300959509733`, 2}], 
    PointBox[{-0.3579376096188821, 2}], PointBox[{-1.0815465538662528`, 2}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{7.480722416446323, 3}], 
    PointBox[{7.384292738712581, 3}], PointBox[{5.68681995923159, 3}], 
    PointBox[{6.215765587716881, 3}], PointBox[{6.035963961413858, 3}], 
    PointBox[{6.617398247596638, 3}], PointBox[{5.53987709673046, 3}], 
    PointBox[{4.993130644179065, 3}], PointBox[{6.81289042511724, 3}], 
    PointBox[{6.443275496261667, 3}], PointBox[{5.987677955322075, 3}], 
    PointBox[{6.955592809857329, 3}], PointBox[{7.058036503087143, 3}], 
    PointBox[{5.774205923824043, 3}], PointBox[{8.205101807600364, 3}], 
    PointBox[{6.604368517647866, 3}], PointBox[{5.997449732026447, 3}], 
    PointBox[{5.735820538681593, 3}], PointBox[{5.471565245650547, 3}], 
    PointBox[{6.764082715620466, 3}], PointBox[{5.6397932956086985`, 3}], 
    PointBox[{7.148570117981611, 3}], PointBox[{6.9117904538553, 3}], 
    PointBox[{6.054517747519198, 3}], PointBox[{6.856092854959435, 3}], 
    PointBox[{6.001689787966307, 3}], PointBox[{5.516180617366709, 3}], 
    PointBox[{6.4361503068252315`, 3}], PointBox[{6.988869729539455, 3}], 
    PointBox[{7.841657661401237, 3}], PointBox[{6.587773115185588, 3}], 
    PointBox[{6.597001239889411, 3}], PointBox[{7.8833986868158465`, 3}], 
    PointBox[{5.6375642714976495`, 3}], PointBox[{6.7142642485184805`, 3}], 
    PointBox[{6.111135377005428, 3}], PointBox[{6.207733785665262, 3}], 
    PointBox[{5.403225728313586, 3}], PointBox[{5.83519004228054, 3}], 
    PointBox[{7.295825916522988, 3}], PointBox[{7.798826864662302, 3}], 
    PointBox[{5.7896530268259, 3}], PointBox[{4.340503464993985, 3}], 
    PointBox[{5.735070948732255, 3}], PointBox[{6.856918601102579, 3}], 
    PointBox[{6.441347985821081, 3}], PointBox[{6.55865796156966, 3}], 
    PointBox[{6.648494728034135, 3}], PointBox[{7.800287812541508, 3}], 
    PointBox[{7.99096805167998, 3}], PointBox[{5.279524095048906, 3}], 
    PointBox[{8.042905767113915, 3}], PointBox[{5.729529731037193, 3}], 
    PointBox[{4.457740822209232, 3}], PointBox[{5.758701448962493, 3}], 
    PointBox[{6.626599913554312, 3}], PointBox[{6.527853327004976, 3}], 
    PointBox[{4.869568113782435, 3}], PointBox[{5.1255590166855445`, 3}], 
    PointBox[{8.172651255708832, 3}], PointBox[{6.553571188301274, 3}], 
    PointBox[{6.858156572525597, 3}], PointBox[{6.649967621279453, 3}], 
    PointBox[{6.807418147546259, 3}], PointBox[{2.790379909909549, 3}], 
    PointBox[{8.181162290622193, 3}], PointBox[{7.905445464919383, 3}], 
    PointBox[{5.173474807481394, 3}], PointBox[{6.555729055497321, 3}], 
    PointBox[{7.142673836002249, 3}], PointBox[{6.544365059529911, 3}], 
    PointBox[{6.396067783431936, 3}], PointBox[{7.072849683260161, 3}], 
    PointBox[{7.188884397181948, 3}], PointBox[{5.690572497090326, 3}], 
    PointBox[{7.749057200157384, 3}], PointBox[{6.434516301767284, 3}], 
    PointBox[{7.434488889230816, 3}], PointBox[{6.867561738136934, 3}], 
    PointBox[{6.1412227217555815`, 3}], PointBox[{7.067240721153853, 3}], 
    PointBox[{7.66953405440856, 3}], PointBox[{6.002741404085809, 3}], 
    PointBox[{5.844022409179952, 3}], PointBox[{5.237446224687342, 3}], 
    PointBox[{7.293302713764755, 3}], PointBox[{4.9055808090456585`, 3}], 
    PointBox[{6.238742954953836, 3}], PointBox[{5.459503290110037, 3}], 
    PointBox[{5.583212376283912, 3}], PointBox[{6.028223458490221, 3}], 
    PointBox[{6.892648723387841, 3}], PointBox[{7.046474821120299, 3}], 
    PointBox[{4.828535015993705, 3}], PointBox[{6.596617676837481, 3}], 
    PointBox[{7.4059788171127146`, 3}], PointBox[{7.134902882471713, 3}], 
    PointBox[{4.7769389472950206`, 3}], PointBox[{6.062045794311425, 3}], 
    PointBox[{5.940633663597252, 3}], PointBox[{5.43226875560761, 3}], 
    PointBox[{5.611586290829645, 3}], PointBox[{5.314301150374002, 3}], 
    PointBox[{5.321876739222831, 3}], PointBox[{7.201597254503632, 3}], 
    PointBox[{7.145999234646521, 3}], PointBox[{6.044293458949204, 3}], 
    PointBox[{7.51631612881767, 3}], PointBox[{7.332542560847159, 3}], 
    PointBox[{6.5899852727371835`, 3}], PointBox[{7.017345857559689, 3}], 
    PointBox[{7.285572222731735, 3}], PointBox[{4.547257227456611, 3}], 
    PointBox[{8.358827288837665, 3}], PointBox[{6.319389216425547, 3}], 
    PointBox[{6.29498517244476, 3}], PointBox[{7.209274078954704, 3}], 
    PointBox[{8.219713357890212, 3}], PointBox[{5.930315650179349, 3}], 
    PointBox[{6.967655225258277, 3}], PointBox[{6.025837738871998, 3}], 
    PointBox[{5.290953879816852, 3}], PointBox[{4.65758627066211, 3}], 
    PointBox[{5.480490207516531, 3}], PointBox[{4.102202343350831, 3}], 
    PointBox[{5.763213328079193, 3}], PointBox[{6.3682935789929696`, 3}], 
    PointBox[{6.269803626191306, 3}], PointBox[{5.2716304839018555`, 3}], 
    PointBox[{7.5566746151542095`, 3}], PointBox[{6.55025178219585, 3}], 
    PointBox[{5.720399412896653, 3}], PointBox[{6.458350086211474, 3}], 
    PointBox[{7.025227919563417, 3}], PointBox[{8.901141555302585, 3}], 
    PointBox[{6.799889667242641, 3}], PointBox[{5.406871977682928, 3}], 
    PointBox[{6.41572818498521, 3}], PointBox[{5.743569724397268, 3}], 
    PointBox[{6.939001944171377, 3}], PointBox[{5.806571567735643, 3}], 
    PointBox[{4.326658472000425, 3}], PointBox[{6.1633622878839365`, 3}], 
    PointBox[{5.604074037991848, 3}], PointBox[{7.077656646113422, 3}], 
    PointBox[{5.714385585411159, 3}], PointBox[{7.155173154523889, 3}], 
    PointBox[{8.338848502416868, 3}], PointBox[{6.053582679909719, 3}], 
    PointBox[{6.328126997774307, 3}], PointBox[{4.324249229619845, 3}], 
    PointBox[{5.921160831823952, 3}], PointBox[{7.5643357386721455`, 3}], 
    PointBox[{5.891185939058456, 3}], PointBox[{7.739646361612662, 3}], 
    PointBox[{7.675233837663951, 3}], PointBox[{5.362109861444953, 3}], 
    PointBox[{5.228604929110912, 3}], PointBox[{7.628969411609785, 3}], 
    PointBox[{6.928699718597927, 3}], PointBox[{6.4558030180274315`, 3}], 
    PointBox[{7.70971158037065, 3}], PointBox[{5.805607957672579, 3}], 
    PointBox[{7.5333029397963305`, 3}], PointBox[{6.983434825740164, 3}], 
    PointBox[{6.065815862860632, 3}], PointBox[{6.929432161221238, 3}], 
    PointBox[{5.938487669040866, 3}], PointBox[{6.138364923503826, 3}], 
    PointBox[{6.071542211492221, 3}], PointBox[{7.433234317059768, 3}], 
    PointBox[{5.947426702657143, 3}], PointBox[{6.564247684098291, 3}], 
    PointBox[{5.772284527035776, 3}], PointBox[{6.2070699746784985`, 3}], 
    PointBox[{4.6949099078881105`, 3}], PointBox[{5.2174295749053154`, 3}], 
    PointBox[{7.856373395040793, 3}], PointBox[{7.982320076349298, 3}], 
    PointBox[{7.077444457092023, 3}], PointBox[{5.973553192831664, 3}], 
    PointBox[{6.0220933047445, 3}], PointBox[{4.913133371633361, 3}], 
    PointBox[{6.2511676004649175`, 3}], PointBox[{7.116304911962844, 3}], 
    PointBox[{7.909313457124451, 3}], PointBox[{7.193090920479452, 3}], 
    PointBox[{7.23932714335504, 3}], PointBox[{8.280114453038967, 3}], 
    PointBox[{8.360838173577335, 3}], PointBox[{6.635394340385482, 3}], 
    PointBox[{7.222944141772392, 3}], PointBox[{7.06922138803044, 3}], 
    PointBox[{6.4745200189407095`, 3}], PointBox[{8.721291038472707, 3}], 
    PointBox[{6.318749497062297, 3}], PointBox[{6.493249549122385, 3}], 
    PointBox[{7.088910688326306, 3}], PointBox[{6.742426075981447, 3}], 
    PointBox[{5.709706556968651, 3}]}},
  AspectRatio->NCache[Rational[3, 10]/GoldenRatio, 0.18541019662496844`],
  Axes->{True, False},
  AxesLabel->{None},
  AxesOrigin->{Automatic, Automatic},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  ImagePadding->All,
  PlotRange->{{-10., 10.}, {0, 3}},
  PlotRangePadding->{{0., 0.}, {0, 1}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6816664359593697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "[", "7.0", "]"}]], "Input",
 CellChangeTimes->{{3.681667061388422*^9, 3.6816670795332384`*^9}}],

Cell[BoxData["\<\"c\"\>"], "Output",
 CellChangeTimes->{3.6816670871337037`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "[", 
  RowBox[{"-", "3.0"}], "]"}]], "Input",
 CellChangeTimes->{{3.681667091772337*^9, 3.6816670952219276`*^9}}],

Cell[BoxData["\<\"b\"\>"], "Output",
 CellChangeTimes->{3.681667098691104*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "[", 
  RowBox[{"3.0", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Probability\>\"", ",", "\"\<a\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6816671036394815`*^9, 3.68166714191195*^9}}],

Cell[BoxData["0.9727337956428528`"], "Output",
 CellChangeTimes->{{3.681667106633825*^9, 3.6816671430054045`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"result", "[", 
       RowBox[{"x", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Probability\>\"", ",", "\"\<a\>\""}], "}"}]}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"result", "[", 
       RowBox[{"x", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Probability\>\"", ",", "\"\<b\>\""}], "}"}]}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"result", "[", 
       RowBox[{"x", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Probability\>\"", ",", "\"\<c\>\""}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.681667164727192*^9, 3.6816671887846174`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxN22k8VO//MPAhWyWkKEomlaRS2Zc55xpJaKVUSjEJZUnShtCIhAgpu5ok
2VoQSqUpWyEhZDeWGLtk+1L8z1zX7zZ3T7zer896rjnnzDxprdWFQza8JBJp
0QISifPXs2f/6NzcOiYJ/hsB9y/T9tJjuU7juZRI0uCa38ZAWeqU3LyX1Rc5
JoStnfehgpgzm0rJ874+jDmGdsrO+821GPuXB9fM+8C9I+TZ6NXzNoj/cMBw
QHreSSVudZfMpeZt4Xtf4nvyinl70Ra8WLxMct6krbIf9W4tn3fjnejbabXi
81696FzK2M6l83ZQU+RvWi067zMarckFBYvnreiqPeeUKDTvxy2HC910+eed
uXuX3NZrfPMufKlKZ6UvmLdQ6atj+9253t+1ZVueAdfOv/tinJW4vjebLLBR
gut1/P6Um0Jcv1581qVlhnfe+uK7kzWHoZlzc8OgbuWG1vAOri32ywSf9+S6
x1uCYrCSayVXoyesvzzzvurkuci9nesYuxX5xT+4zrfOuLisGJrOcYfl3g20
N1wLmP+qT0/l+oCJFHV3CNcPDPY/a7vE9ZudPSe22HLdjHmLuJlxTdJa9blo
DzSV4/Wq2VfEMa4dFXub09Zy/Zoss0tfgOv6VbmTYVOkef+VNElr7YMmcUwW
77fY3MK13pJb4q7fubYVki0u/MR14IK3bktfc/1i9tBWiyRo5izh6v8GWKlR
XE+M+d2fDORaeoRsuMsTms4x3p83E3qBa6tu05ctp7n2ax+yUjTlOrXZX/La
bnQ9HFf8lCst0OR6tPq9p9hmtB/HkhVHd5yS4Vr760hXiijXFoWBURM8aL9/
hHlvGEX5sec+/j/vueI5J/sNms5xmEOG7dsMrutP//p2KAKayjHZTEptwB2a
xPG5A/vjblly/WqX9wLZXaj/X8JT2tn2bxRQP47Bjt4qkyVc+22U0er/PQv7
c1whY8LwrYMmcWyx6K1T7iNo+gzhJNJgrbEvyud4cIKM9Z1D+Rx7dPovllFG
+dOECxveu+RIonyOhStHGg7O/IP5HJsWr9ftbYOm/0c49r1Z8s1CaCrHHZlB
oqtToJlThBVTmFezg1E+xy6PxloOuKB+HOc9UNBnH0XxScJC5j1neCioH8dH
yUk3pdeifhOEE39ZP1YRQHGOR1PXMff1/4XxccJU545Wm0poEsd31R7/88qG
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
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
6Z//B47dbAo=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{511.3333333333334, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6816671983749075`*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{2.5435803966368473`, 1}], 
    PointBox[{1.2580651113217458`, 1}], PointBox[{1.7255158956046992`, 1}], 
    PointBox[{0.8178373605347178, 1}], PointBox[{2.2568957643120924`, 1}], 
    PointBox[{1.7491181874251165`, 1}], PointBox[{1.2815010599084056`, 1}], 
    PointBox[{1.4206108440681797`, 1}], PointBox[{0.8094583553415846, 1}], 
    PointBox[{0.7784232227380845, 1}], PointBox[{1.5547881560231114`, 1}], 
    PointBox[{1.4594172834886567`, 1}], PointBox[{1.7335635893885262`, 1}], 
    PointBox[{2.0177320769768956`, 1}], PointBox[{2.420012798503714, 1}], 
    PointBox[{3.988290809649561, 1}], PointBox[{2.2123925060367293`, 1}], 
    PointBox[{1.4724930132472596`, 1}], PointBox[{1.9508863225381972`, 1}], 
    PointBox[{0.706107205354756, 1}], PointBox[{2.1414793572767508`, 1}], 
    PointBox[{2.059834452268876, 1}], PointBox[{2.2519816628368297`, 1}], 
    PointBox[{1.4082444254853324`, 1}], PointBox[{1.162882109114632, 1}], 
    PointBox[{0.7637201578391372, 1}], PointBox[{2.8038355099065897`, 1}], 
    PointBox[{1.7091626474829553`, 1}], PointBox[{2.5377666299102786`, 1}], 
    PointBox[{1.814649737609908, 1}], PointBox[{0.28142366976311295`, 1}], 
    PointBox[{2.790942150006483, 1}], PointBox[{0.949968762785471, 1}], 
    PointBox[{2.842859841967379, 1}], PointBox[{0.3167689292173732, 1}], 
    PointBox[{0.6161282972142212, 1}], PointBox[{0.33008543666806944`, 1}], 
    PointBox[{1.6496522471553037`, 1}], PointBox[{-0.08742033251033021, 1}], 
    PointBox[{0.9898625178195709, 1}], PointBox[{1.4913189322547733`, 1}], 
    PointBox[{1.3490540493807905`, 1}], PointBox[{0.5994224024594668, 1}], 
    PointBox[{1.4594189180674335`, 1}], PointBox[{1.6737604461988698`, 1}], 
    PointBox[{1.3446511149154552`, 1}], PointBox[{1.3767230370233197`, 1}], 
    PointBox[{0.9105423940353957, 1}], PointBox[{2.2792888410465872`, 1}], 
    PointBox[{-0.34505314536473586`, 1}], PointBox[{0.7801981546397415, 1}], 
    PointBox[{1.3197722688847147`, 1}], PointBox[{1.1883352632824111`, 1}], 
    PointBox[{3.569133817382025, 1}], PointBox[{3.1973531925001852`, 1}], 
    PointBox[{2.6815850270789214`, 1}], PointBox[{0.04528655007430338, 1}], 
    PointBox[{1.2266825685824925`, 1}], PointBox[{2.363735781427958, 1}], 
    PointBox[{1.5386815107562732`, 1}], PointBox[{0.722696633560854, 1}], 
    PointBox[{2.1451795958175, 1}], PointBox[{1.4072749929209567`, 1}], 
    PointBox[{2.9051643819126953`, 1}], PointBox[{0.46231834515146697`, 1}], 
    PointBox[{3.9048750289437755`, 1}], PointBox[{2.3904964891722793`, 1}], 
    PointBox[{1.5113009941663433`, 1}], PointBox[{2.1786362172960008`, 1}], 
    PointBox[{0.9755602811178419, 1}], PointBox[{3.0752123474374784`, 1}], 
    PointBox[{1.593823426260207, 1}], PointBox[{1.3392439845458763`, 1}], 
    PointBox[{2.04341415343975, 1}], PointBox[{1.5850574087189142`, 1}], 
    PointBox[{0.6235348752920673, 1}], PointBox[{1.6657224016048164`, 1}], 
    PointBox[{2.660292698671128, 1}], PointBox[{1.077553916867784, 1}], 
    PointBox[{1.2079204322907533`, 1}], PointBox[{2.6056161709091943`, 1}], 
    PointBox[{0.7879473416056226, 1}], PointBox[{0.3811073012378148, 1}], 
    PointBox[{0.7966257138055829, 1}], PointBox[{0.755484319904522, 1}], 
    PointBox[{2.5237376621973913`, 1}], PointBox[{2.329516161227195, 1}], 
    PointBox[{1.1312488973960817`, 1}], PointBox[{-0.5020498663997768, 1}], 
    PointBox[{1.3994581375634183`, 1}], PointBox[{1.4000717521781612`, 1}], 
    PointBox[{3.37664689481391, 1}], PointBox[{2.4137216769543843`, 1}], 
    PointBox[{2.59866055619716, 1}], PointBox[{0.5367797384153827, 1}], 
    PointBox[{2.3225596598978617`, 1}], PointBox[{2.3051272119401918`, 1}], 
    PointBox[{2.141833533642538, 1}], PointBox[{1.4717691408892544`, 1}], 
    PointBox[{1.3525669915350158`, 1}], PointBox[{2.649537313844206, 1}], 
    PointBox[{0.5513123813433077, 1}], PointBox[{0.37945052737115104`, 1}], 
    PointBox[{1.0916323503059244`, 1}], PointBox[{-0.1407489113821394, 1}], 
    PointBox[{1.3566833291160003`, 1}], PointBox[{3.1324763391711814`, 1}], 
    PointBox[{1.4022185457157856`, 1}], PointBox[{3.123191799325745, 1}], 
    PointBox[{-0.19143121678141628`, 1}], PointBox[{0.5202257876996492, 1}], 
    PointBox[{1.0319401726963657`, 1}], PointBox[{1.679380238662871, 1}], 
    PointBox[{-0.24100130755701743`, 1}], PointBox[{0.9094769570829483, 1}], 
    PointBox[{2.0514153974421774`, 1}], PointBox[{2.1441466360337915`, 1}], 
    PointBox[{2.9456285849106094`, 1}], PointBox[{1.5148280501137135`, 1}], 
    PointBox[{1.8180954792474393`, 1}], PointBox[{0.5420080753014187, 1}], 
    PointBox[{1.2073319245649952`, 1}], PointBox[{1.041709719693117, 1}], 
    PointBox[{2.961912498193961, 1}], PointBox[{1.543790769001829, 1}], 
    PointBox[{1.2458765683068012`, 1}], PointBox[{0.5350883396983723, 1}], 
    PointBox[{0.7972674893133237, 1}], PointBox[{1.3756355695127198`, 1}], 
    PointBox[{2.7914260112007945`, 1}], PointBox[{1.8807596428696673`, 1}], 
    PointBox[{1.4830472932947394`, 1}], PointBox[{2.065889402441356, 1}], 
    PointBox[{3.2363070167987322`, 1}], PointBox[{-0.7995844492902293, 1}], 
    PointBox[{2.3264180727338735`, 1}], PointBox[{0.3391480252060495, 1}], 
    PointBox[{1.1201124601745263`, 1}], PointBox[{2.346589598364095, 1}], 
    PointBox[{-0.3616798040092457, 1}], PointBox[{3.3926085719590247`, 1}], 
    PointBox[{0.2073291069630201, 1}], PointBox[{1.5161857322567882`, 1}], 
    PointBox[{2.2745715575310688`, 1}], PointBox[{0.5895645192205502, 1}], 
    PointBox[{2.1028584070356504`, 1}], PointBox[{0.7197998523898593, 1}], 
    PointBox[{2.6574405502308784`, 1}], PointBox[{1.5464329833643233`, 1}], 
    PointBox[{2.626039803431299, 1}], PointBox[{0.1984770384427028, 1}], 
    PointBox[{1.2497912651296126`, 1}], PointBox[{1.3816169390449846`, 1}], 
    PointBox[{2.4533369702742314`, 1}], PointBox[{2.080900273078587, 1}], 
    PointBox[{-0.3393578417966685, 1}], PointBox[{1.0586575400654117`, 1}], 
    PointBox[{0.6836946737786327, 1}], PointBox[{1.7815966615107992`, 1}], 
    PointBox[{1.6297857924368062`, 1}], PointBox[{1.742709805986203, 1}], 
    PointBox[{1.5387977606894807`, 1}], PointBox[{2.880492235108229, 1}], 
    PointBox[{2.618831757773708, 1}], PointBox[{1.9374060474621562`, 1}], 
    PointBox[{0.8163526593616812, 1}], PointBox[{3.3593655903484323`, 1}], 
    PointBox[{1.3010400321795463`, 1}], PointBox[{2.4478064416370624`, 1}], 
    PointBox[{1.21446642453921, 1}], PointBox[{1.6579469353982867`, 1}], 
    PointBox[{0.6199296729016786, 1}], PointBox[{3.1577411582255053`, 1}], 
    PointBox[{1.348550042872952, 1}], PointBox[{-0.13034770335721957`, 1}], 
    PointBox[{1.545775487325064, 1}], PointBox[{0.7794883217854646, 1}], 
    PointBox[{1.4934422795667937`, 1}], PointBox[{2.228540009505126, 1}], 
    PointBox[{1.2140168612557318`, 1}], PointBox[{2.287613300005768, 1}], 
    PointBox[{1.1532338651574796`, 1}], PointBox[{2.12027103166901, 1}], 
    PointBox[{0.6347636200727687, 1}], PointBox[{2.041018878784573, 1}], 
    PointBox[{2.8431322825901986`, 1}], PointBox[{1.742350670550136, 1}], 
    PointBox[{1.983883045088041, 1}], PointBox[{2.5327155504208196`, 1}], 
    PointBox[{2.708311732522251, 1}], PointBox[{0.0471907921127912, 1}], 
    PointBox[{0.5696562666897064, 1}], PointBox[{0.7605733994789926, 1}], 
    PointBox[{1.2620862396170889`, 1}], PointBox[{-0.491524278764496, 1}], 
    PointBox[{1.265327363332347, 1}], PointBox[{2.472283853033592, 1}], 
    PointBox[{0.6016499622802063, 1}], PointBox[{0.7708138291109013, 1}], 
    PointBox[{1.2041224287007093`, 1}]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{0.6659888443375537, 2}], 
    PointBox[{-0.315759127028102, 2}], PointBox[{-1.3280263981189848`, 2}], 
    PointBox[{-1.0886437214317823`, 2}], PointBox[{-1.5523242671896762`, 2}], 
    PointBox[{0.49376453899093664`, 2}], PointBox[{-0.6738434318387475, 2}], 
    PointBox[{-2.53751487255085, 2}], PointBox[{0.014062267557107488`, 2}], 
    PointBox[{-1.7016956176064488`, 2}], PointBox[{-2.1292247787540965`, 2}], 
    PointBox[{0.23030349700700847`, 2}], PointBox[{-0.8234883520809351, 2}], 
    PointBox[{-0.3453351077928389, 2}], PointBox[{-1.0746844780719715`, 2}], 
    PointBox[{-1.0449432427773653`, 2}], PointBox[{-2.01068275000674, 2}], 
    PointBox[{-1.0116814651726633`, 2}], PointBox[{1.0939306648584899`, 2}], 
    PointBox[{0.2249704487684272, 2}], PointBox[{-2.8717032222486156`, 2}], 
    PointBox[{-0.4733322967358101, 2}], PointBox[{-0.8915559573530569, 2}], 
    PointBox[{-1.0214508915276883`, 2}], PointBox[{-0.47413623644299757`, 2}],
     PointBox[{0.08029171289116044, 2}], PointBox[{0.28634030219773154`, 2}], 
    PointBox[{-0.36086739176827093`, 2}], PointBox[{-0.6765097716784286, 2}], 
    PointBox[{-0.05893505193681403, 2}], PointBox[{-1.5254290932439964`, 2}], 
    PointBox[{-1.3894472673209894`, 2}], PointBox[{-2.1069482459139617`, 2}], 
    PointBox[{0.3541684435877577, 2}], PointBox[{1.2376129986859643`, 2}], 
    PointBox[{-0.7578263233981352, 2}], PointBox[{-1.4648378353427445`, 2}], 
    PointBox[{0.11663352314876263`, 2}], PointBox[{1.2324719544181078`, 2}], 
    PointBox[{0.388434234504877, 2}], PointBox[{-1.135865436640638, 2}], 
    PointBox[{-3.1327392384697292`, 2}], PointBox[{-0.184187924524567, 2}], 
    PointBox[{-0.5436472244324404, 2}], PointBox[{-0.22429179718479525`, 2}], 
    PointBox[{-0.5107078749986234, 2}], PointBox[{0.6740491163909199, 2}], 
    PointBox[{-1.8472920943402262`, 2}], PointBox[{-0.18528780850243942`, 2}],
     PointBox[{-2.7283296039141747`, 2}], PointBox[{-0.8073547947052166, 2}], 
    PointBox[{-2.815053660815429, 2}], PointBox[{-0.8810641243132998, 2}], 
    PointBox[{-1.730396764344658, 2}], PointBox[{-0.3939636672713288, 2}], 
    PointBox[{-2.18504260645075, 2}], PointBox[{-2.7635688388981055`, 2}], 
    PointBox[{-1.8503300602744575`, 2}], PointBox[{-0.34110010365378624`, 2}],
     PointBox[{0.2134479353277563, 2}], PointBox[{0.4027532613440934, 2}], 
    PointBox[{-2.5881429915064853`, 2}], PointBox[{-2.7356801516849747`, 2}], 
    PointBox[{-0.7996127151495946, 2}], PointBox[{-0.5851193557052475, 2}], 
    PointBox[{1.2326473713136727`, 2}], PointBox[{-0.40368233060216324`, 2}], 
    PointBox[{-1.4199143928090028`, 2}], PointBox[{-0.7096567447024356, 2}], 
    PointBox[{-0.8881639259904675, 2}], PointBox[{-2.4538654697967566`, 2}], 
    PointBox[{0.0765268292414516, 2}], PointBox[{0.24733258640311784`, 2}], 
    PointBox[{0.5939848616174648, 2}], PointBox[{-0.8622492787079388, 2}], 
    PointBox[{-0.6032880442487862, 2}], PointBox[{-1.1041664270313516`, 2}], 
    PointBox[{-1.3026991453029275`, 2}], PointBox[{-2.151170683717334, 2}], 
    PointBox[{-0.8151151787422768, 2}], PointBox[{-1.886263914178029, 2}], 
    PointBox[{-1.022596736053187, 2}], PointBox[{-2.505328738397007, 2}], 
    PointBox[{-1.1646594141279376`, 2}], PointBox[{-0.30435303894727356`, 2}],
     PointBox[{0.8095507019695365, 2}], PointBox[{0.7691214750763646, 2}], 
    PointBox[{-0.9040380967190895, 2}], PointBox[{-1.145728355681697, 2}], 
    PointBox[{0.666222111126338, 2}], PointBox[{-0.8888388903370622, 2}], 
    PointBox[{-0.3869180339747339, 2}], PointBox[{-1.175649736749952, 2}], 
    PointBox[{-1.9372646555334108`, 2}], PointBox[{-2.146475024303017, 2}], 
    PointBox[{-2.829791119469129, 2}], PointBox[{-1.1313014119775897`, 2}], 
    PointBox[{-1.4054060351878608`, 2}], PointBox[{1.3931304524092982`, 2}], 
    PointBox[{-0.9764362796895292, 2}], PointBox[{-0.6592672063947471, 2}], 
    PointBox[{-1.5497858537175424`, 2}], PointBox[{-0.17140941099261853`, 2}],
     PointBox[{-0.6663518281557324, 2}], PointBox[{-0.4331258724748383, 2}], 
    PointBox[{-0.6166917899739327, 2}], PointBox[{-0.6437197682783862, 2}], 
    PointBox[{-1.710642595414415, 2}], PointBox[{-1.8380654689331564`, 2}], 
    PointBox[{0.725170892454392, 2}], PointBox[{2.117579756400887, 2}], 
    PointBox[{-0.17619580096692633`, 2}], PointBox[{-1.025854613807967, 2}], 
    PointBox[{-0.8088566929285528, 2}], PointBox[{-0.9178189739071035, 2}], 
    PointBox[{-1.5446718977586062`, 2}], PointBox[{-1.260235949807373, 2}], 
    PointBox[{0.08477613991527622, 2}], PointBox[{-0.5022019347552793, 2}], 
    PointBox[{-2.416250299773538, 2}], PointBox[{-3.5107668564817933`, 2}], 
    PointBox[{-0.6956172718521649, 2}], PointBox[{-1.4842325816621522`, 2}], 
    PointBox[{-1.5965221090489026`, 2}], PointBox[{1.129608175324206, 2}], 
    PointBox[{-1.9337501202938425`, 2}], PointBox[{-0.3407001955217292, 2}], 
    PointBox[{-0.8284986345873343, 2}], PointBox[{-0.41387851283494187`, 2}], 
    PointBox[{-0.5840149716852451, 2}], PointBox[{-2.171782185996328, 2}], 
    PointBox[{-1.5629358254890797`, 2}], PointBox[{-1.1126842287414012`, 2}], 
    PointBox[{-2.0610859497262792`, 2}], PointBox[{-1.7381493803836527`, 2}], 
    PointBox[{-1.1553795948672487`, 2}], PointBox[{-0.5934195362932532, 2}], 
    PointBox[{-0.24092203106619925`, 2}], 
    PointBox[{0.047897001455957544`, 2}], PointBox[{-0.3127549371084336, 2}], 
    PointBox[{-1.0181679321662775`, 2}], PointBox[{-0.9711423011007587, 2}], 
    PointBox[{0.19899377451249678`, 2}], PointBox[{-0.09140445912471318, 2}], 
    PointBox[{-2.172764908417653, 2}], PointBox[{-0.7098678917565437, 2}], 
    PointBox[{-3.435244422370672, 2}], PointBox[{0.4059295292815288, 2}], 
    PointBox[{-0.5937482277080379, 2}], PointBox[{0.37838212254902026`, 2}], 
    PointBox[{0.19546780869668612`, 2}], PointBox[{-2.472825386082083, 2}], 
    PointBox[{-0.12108914379983282`, 2}], PointBox[{-1.0015475532400713`, 2}],
     PointBox[{-1.57561435537053, 2}], PointBox[{-1.7344635150417798`, 2}], 
    PointBox[{-0.8370359457065188, 2}], PointBox[{-1.2059893583919166`, 2}], 
    PointBox[{-0.005932384073618069, 2}], PointBox[{0.8441222992489557, 2}], 
    PointBox[{-0.6644538389372078, 2}], PointBox[{-0.37218297401317024`, 2}], 
    PointBox[{-0.3873393363440355, 2}], PointBox[{-0.4296727383384211, 2}], 
    PointBox[{-1.0684285812883343`, 2}], PointBox[{-0.7443154403987665, 2}], 
    PointBox[{-0.9685967030894269, 2}], PointBox[{0.09835895294718133, 2}], 
    PointBox[{1.0814888085080334`, 2}], PointBox[{-0.547270248775659, 2}], 
    PointBox[{-1.6031966690246615`, 2}], PointBox[{0.4266866356322463, 2}], 
    PointBox[{0.034751319993020724`, 2}], PointBox[{0.7048834099206405, 2}], 
    PointBox[{-2.1255064174659686`, 2}], PointBox[{-0.7365437056113792, 2}], 
    PointBox[{1.199732776862571, 2}], PointBox[{0.5314668468099628, 2}], 
    PointBox[{-1.2163793628964523`, 2}], PointBox[{0.7222040693163914, 2}], 
    PointBox[{-0.42184205936567476`, 2}], PointBox[{-0.3980955985986402, 2}], 
    PointBox[{-0.7539675919799271, 2}], PointBox[{-0.8248213704185701, 2}], 
    PointBox[{-2.0006085580433277`, 2}], PointBox[{-0.42033676471544096`, 2}],
     PointBox[{-1.3320470496998023`, 2}], PointBox[{-1.9705002246123366`, 2}],
     PointBox[{-0.953569334227703, 2}], PointBox[{0.5779970281362257, 2}], 
    PointBox[{-1.5781482620892833`, 2}], PointBox[{-1.1711253047255783`, 2}], 
    PointBox[{-1.4005656604752303`, 2}], PointBox[{0.009094274679361747, 2}], 
    PointBox[{-1.1343588273415393`, 2}], PointBox[{-0.8320483429299712, 2}], 
    PointBox[{-0.8099468912737945, 2}], PointBox[{-1.9803300959509733`, 2}], 
    PointBox[{-0.3579376096188821, 2}], PointBox[{-1.0815465538662528`, 2}]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{7.480722416446323, 3}], 
    PointBox[{7.384292738712581, 3}], PointBox[{5.68681995923159, 3}], 
    PointBox[{6.215765587716881, 3}], PointBox[{6.035963961413858, 3}], 
    PointBox[{6.617398247596638, 3}], PointBox[{5.53987709673046, 3}], 
    PointBox[{4.993130644179065, 3}], PointBox[{6.81289042511724, 3}], 
    PointBox[{6.443275496261667, 3}], PointBox[{5.987677955322075, 3}], 
    PointBox[{6.955592809857329, 3}], PointBox[{7.058036503087143, 3}], 
    PointBox[{5.774205923824043, 3}], PointBox[{8.205101807600364, 3}], 
    PointBox[{6.604368517647866, 3}], PointBox[{5.997449732026447, 3}], 
    PointBox[{5.735820538681593, 3}], PointBox[{5.471565245650547, 3}], 
    PointBox[{6.764082715620466, 3}], PointBox[{5.6397932956086985`, 3}], 
    PointBox[{7.148570117981611, 3}], PointBox[{6.9117904538553, 3}], 
    PointBox[{6.054517747519198, 3}], PointBox[{6.856092854959435, 3}], 
    PointBox[{6.001689787966307, 3}], PointBox[{5.516180617366709, 3}], 
    PointBox[{6.4361503068252315`, 3}], PointBox[{6.988869729539455, 3}], 
    PointBox[{7.841657661401237, 3}], PointBox[{6.587773115185588, 3}], 
    PointBox[{6.597001239889411, 3}], PointBox[{7.8833986868158465`, 3}], 
    PointBox[{5.6375642714976495`, 3}], PointBox[{6.7142642485184805`, 3}], 
    PointBox[{6.111135377005428, 3}], PointBox[{6.207733785665262, 3}], 
    PointBox[{5.403225728313586, 3}], PointBox[{5.83519004228054, 3}], 
    PointBox[{7.295825916522988, 3}], PointBox[{7.798826864662302, 3}], 
    PointBox[{5.7896530268259, 3}], PointBox[{4.340503464993985, 3}], 
    PointBox[{5.735070948732255, 3}], PointBox[{6.856918601102579, 3}], 
    PointBox[{6.441347985821081, 3}], PointBox[{6.55865796156966, 3}], 
    PointBox[{6.648494728034135, 3}], PointBox[{7.800287812541508, 3}], 
    PointBox[{7.99096805167998, 3}], PointBox[{5.279524095048906, 3}], 
    PointBox[{8.042905767113915, 3}], PointBox[{5.729529731037193, 3}], 
    PointBox[{4.457740822209232, 3}], PointBox[{5.758701448962493, 3}], 
    PointBox[{6.626599913554312, 3}], PointBox[{6.527853327004976, 3}], 
    PointBox[{4.869568113782435, 3}], PointBox[{5.1255590166855445`, 3}], 
    PointBox[{8.172651255708832, 3}], PointBox[{6.553571188301274, 3}], 
    PointBox[{6.858156572525597, 3}], PointBox[{6.649967621279453, 3}], 
    PointBox[{6.807418147546259, 3}], PointBox[{2.790379909909549, 3}], 
    PointBox[{8.181162290622193, 3}], PointBox[{7.905445464919383, 3}], 
    PointBox[{5.173474807481394, 3}], PointBox[{6.555729055497321, 3}], 
    PointBox[{7.142673836002249, 3}], PointBox[{6.544365059529911, 3}], 
    PointBox[{6.396067783431936, 3}], PointBox[{7.072849683260161, 3}], 
    PointBox[{7.188884397181948, 3}], PointBox[{5.690572497090326, 3}], 
    PointBox[{7.749057200157384, 3}], PointBox[{6.434516301767284, 3}], 
    PointBox[{7.434488889230816, 3}], PointBox[{6.867561738136934, 3}], 
    PointBox[{6.1412227217555815`, 3}], PointBox[{7.067240721153853, 3}], 
    PointBox[{7.66953405440856, 3}], PointBox[{6.002741404085809, 3}], 
    PointBox[{5.844022409179952, 3}], PointBox[{5.237446224687342, 3}], 
    PointBox[{7.293302713764755, 3}], PointBox[{4.9055808090456585`, 3}], 
    PointBox[{6.238742954953836, 3}], PointBox[{5.459503290110037, 3}], 
    PointBox[{5.583212376283912, 3}], PointBox[{6.028223458490221, 3}], 
    PointBox[{6.892648723387841, 3}], PointBox[{7.046474821120299, 3}], 
    PointBox[{4.828535015993705, 3}], PointBox[{6.596617676837481, 3}], 
    PointBox[{7.4059788171127146`, 3}], PointBox[{7.134902882471713, 3}], 
    PointBox[{4.7769389472950206`, 3}], PointBox[{6.062045794311425, 3}], 
    PointBox[{5.940633663597252, 3}], PointBox[{5.43226875560761, 3}], 
    PointBox[{5.611586290829645, 3}], PointBox[{5.314301150374002, 3}], 
    PointBox[{5.321876739222831, 3}], PointBox[{7.201597254503632, 3}], 
    PointBox[{7.145999234646521, 3}], PointBox[{6.044293458949204, 3}], 
    PointBox[{7.51631612881767, 3}], PointBox[{7.332542560847159, 3}], 
    PointBox[{6.5899852727371835`, 3}], PointBox[{7.017345857559689, 3}], 
    PointBox[{7.285572222731735, 3}], PointBox[{4.547257227456611, 3}], 
    PointBox[{8.358827288837665, 3}], PointBox[{6.319389216425547, 3}], 
    PointBox[{6.29498517244476, 3}], PointBox[{7.209274078954704, 3}], 
    PointBox[{8.219713357890212, 3}], PointBox[{5.930315650179349, 3}], 
    PointBox[{6.967655225258277, 3}], PointBox[{6.025837738871998, 3}], 
    PointBox[{5.290953879816852, 3}], PointBox[{4.65758627066211, 3}], 
    PointBox[{5.480490207516531, 3}], PointBox[{4.102202343350831, 3}], 
    PointBox[{5.763213328079193, 3}], PointBox[{6.3682935789929696`, 3}], 
    PointBox[{6.269803626191306, 3}], PointBox[{5.2716304839018555`, 3}], 
    PointBox[{7.5566746151542095`, 3}], PointBox[{6.55025178219585, 3}], 
    PointBox[{5.720399412896653, 3}], PointBox[{6.458350086211474, 3}], 
    PointBox[{7.025227919563417, 3}], PointBox[{8.901141555302585, 3}], 
    PointBox[{6.799889667242641, 3}], PointBox[{5.406871977682928, 3}], 
    PointBox[{6.41572818498521, 3}], PointBox[{5.743569724397268, 3}], 
    PointBox[{6.939001944171377, 3}], PointBox[{5.806571567735643, 3}], 
    PointBox[{4.326658472000425, 3}], PointBox[{6.1633622878839365`, 3}], 
    PointBox[{5.604074037991848, 3}], PointBox[{7.077656646113422, 3}], 
    PointBox[{5.714385585411159, 3}], PointBox[{7.155173154523889, 3}], 
    PointBox[{8.338848502416868, 3}], PointBox[{6.053582679909719, 3}], 
    PointBox[{6.328126997774307, 3}], PointBox[{4.324249229619845, 3}], 
    PointBox[{5.921160831823952, 3}], PointBox[{7.5643357386721455`, 3}], 
    PointBox[{5.891185939058456, 3}], PointBox[{7.739646361612662, 3}], 
    PointBox[{7.675233837663951, 3}], PointBox[{5.362109861444953, 3}], 
    PointBox[{5.228604929110912, 3}], PointBox[{7.628969411609785, 3}], 
    PointBox[{6.928699718597927, 3}], PointBox[{6.4558030180274315`, 3}], 
    PointBox[{7.70971158037065, 3}], PointBox[{5.805607957672579, 3}], 
    PointBox[{7.5333029397963305`, 3}], PointBox[{6.983434825740164, 3}], 
    PointBox[{6.065815862860632, 3}], PointBox[{6.929432161221238, 3}], 
    PointBox[{5.938487669040866, 3}], PointBox[{6.138364923503826, 3}], 
    PointBox[{6.071542211492221, 3}], PointBox[{7.433234317059768, 3}], 
    PointBox[{5.947426702657143, 3}], PointBox[{6.564247684098291, 3}], 
    PointBox[{5.772284527035776, 3}], PointBox[{6.2070699746784985`, 3}], 
    PointBox[{4.6949099078881105`, 3}], PointBox[{5.2174295749053154`, 3}], 
    PointBox[{7.856373395040793, 3}], PointBox[{7.982320076349298, 3}], 
    PointBox[{7.077444457092023, 3}], PointBox[{5.973553192831664, 3}], 
    PointBox[{6.0220933047445, 3}], PointBox[{4.913133371633361, 3}], 
    PointBox[{6.2511676004649175`, 3}], PointBox[{7.116304911962844, 3}], 
    PointBox[{7.909313457124451, 3}], PointBox[{7.193090920479452, 3}], 
    PointBox[{7.23932714335504, 3}], PointBox[{8.280114453038967, 3}], 
    PointBox[{8.360838173577335, 3}], PointBox[{6.635394340385482, 3}], 
    PointBox[{7.222944141772392, 3}], PointBox[{7.06922138803044, 3}], 
    PointBox[{6.4745200189407095`, 3}], PointBox[{8.721291038472707, 3}], 
    PointBox[{6.318749497062297, 3}], PointBox[{6.493249549122385, 3}], 
    PointBox[{7.088910688326306, 3}], PointBox[{6.742426075981447, 3}], 
    PointBox[{5.709706556968651, 3}]}},
  AspectRatio->NCache[Rational[3, 10]/GoldenRatio, 0.18541019662496844`],
  Axes->{True, False},
  AxesLabel->{None},
  AxesOrigin->{Automatic, Automatic},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  ImagePadding->All,
  ImageSize->{534.6666666666654, Automatic},
  PlotRange->{{-10., 10.}, {0, 3}},
  PlotRangePadding->{{0., 0.}, {0, 1}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6816664359593697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<|", 
  RowBox[{
   RowBox[{"\"\<a\>\"", "\[Rule]", "1"}], ",", 
   RowBox[{"\"\<b\>\"", "\[Rule]", "2"}]}], "|>"}]], "Input",
 CellChangeTimes->{{3.681667350599718*^9, 3.6816673579244328`*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"a\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "2"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.6816673585949593`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<input\>\"", "\[Rule]", "#"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<predicted\>\"", "\[Rule]", 
        RowBox[{"result", "[", "#", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<probabilities\>\"", "\[Rule]", 
        RowBox[{"result", "[", 
         RowBox[{"#", ",", "\"\<Probabilities\>\""}], "]"}]}]}], 
      "\[IndentingNewLine]", "|>"}], "&"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "10"}], ",", "10", ",", "0.25"}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6816673096575017`*^9, 3.681667344883998*^9}, {
  3.6816673920450983`*^9, 3.681667436222509*^9}, {3.681667676653368*^9, 
  3.6816676784602146`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 81, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"input", "predicted", "probabilities"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["a", "b", "c"]], 
            TypeSystem`Struct[{"a", "b", "c"}, {
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real]}]}], 81], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "input"} -> 1, {All, "predicted"} -> 
           1, {All, "probabilities"} -> 
           Association[{All, "probabilities", "a"} -> 
             1, {All, "probabilities", "b"} -> 1, {All, "probabilities", "c"} -> 
             1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "input" -> TypeSystem`PackageScope`AtomShape[60], "predicted" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
              "probabilities" -> TypeSystem`PackageScope`RowShape[
                Association[
                "a" -> TypeSystem`PackageScope`AtomShape[60], "b" -> 
                 TypeSystem`PackageScope`AtomShape[60], "c" -> 
                 TypeSystem`PackageScope`AtomShape[60]]]]]], 20, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1704342419], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"input", "predicted", "probabilities"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["a", "b", "c"]], 
            TypeSystem`Struct[{"a", "b", "c"}, {
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real]}]}], 81], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1704342419]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"input\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"input\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1059143944][{All, "input"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[All, "input"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"predicted\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"predicted\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1059143944][{All, "predicted"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[All, "predicted"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"probabilities\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"probabilities\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1059143944][{All, "probabilities"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[All, "probabilities"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Center, Baseline}], SpanFromLeft, 
               SpanFromLeft}, {SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"a\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"a\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1059143944][{All, "probabilities", "a"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[All, "probabilities", "a"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"b\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"b\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1059143944][{All, "probabilities", "b"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[All, "probabilities", "b"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"c\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"c\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1059143944][{All, "probabilities", "c"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[All, "probabilities", "c"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["-10."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[1, 
                   Key["input"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[1, 
                   Key["predicted"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00000000000000000000000000000000436564"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[1, 
                   Key["probabilities"], 
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[1, 
                   Key["probabilities"], 
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[1, 
                   Key["probabilities"], 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["-9.75"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[2, 
                   Key["input"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[2, 
                   Key["predicted"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0000000000000000000000000000000289324"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[2, 
                   Key["probabilities"], 
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[2, 
                   Key["probabilities"], 
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[2, 
                   Key["probabilities"], 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["-9.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[3, 
                   Key["input"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[3, 
                   Key["predicted"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000000000000000000000000000000191739"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[3, 
                   Key["probabilities"], 
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[3, 
                   Key["probabilities"], 
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[3, 
                   Key["probabilities"], 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["-9.25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[4, 
                   Key["input"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[4, 
                   Key["predicted"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00000000000000000000000000000127069"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[4, 
                   Key["probabilities"], 
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[4, 
                   Key["probabilities"], 
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[4, 
                   Key["probabilities"], 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["-9."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[5, 
                   Key["input"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[5, 
                   Key["predicted"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00000000000000000000000000000842114"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[5, 
                   Key["probabilities"], 
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[5, 
                   Key["probabilities"], 
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[5, 
                   Key["probabilities"], 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["-8.75"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[6, 
                   Key["input"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[6, 
                   Key["predicted"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000000000000000000000000000055809"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[6, 
                   Key["probabilities"], 
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[6, 
                   Key["probabilities"], 
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[6, 
                   Key["probabilities"], 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["-8.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[7, 
                   Key["input"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[7, 
                   Key["predicted"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000000000000000000000000000369858"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[7, 
                   Key["probabilities"], 
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[7, 
                   Key["probabilities"], 
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[7, 
                   Key["probabilities"], 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["-8.25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[8, 
                   Key["input"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[8, 
                   Key["predicted"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00000000000000000000000000245114"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[8, 
                   Key["probabilities"], 
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[8, 
                   Key["probabilities"], 
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[8, 
                   Key["probabilities"], 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["-8."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[9, 
                   Key["input"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[9, 
                   Key["predicted"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0000000000000000000000000162441"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[9, 
                   Key["probabilities"], 
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[9, 
                   Key["probabilities"], 
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[9, 
                   Key["probabilities"], 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["-7.75"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[10, 
                   Key["input"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[10, 
                   Key["predicted"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000000000000000000000000107654"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[10, 
                   Key["probabilities"], 
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[10, 
                   Key["probabilities"], 
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[10, 
                   Key["probabilities"], 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["-7.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[11, 
                   Key["input"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[11, 
                   Key["predicted"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000000000000000000000000713444"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[11, 
                   Key["probabilities"], 
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[11, 
                   Key["probabilities"], 
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[11, 
                   Key["probabilities"], 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["-7.25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[12, 
                   Key["input"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[12, 
                   Key["predicted"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00000000000000000000000472815"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[12, 
                   Key["probabilities"], 
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[12, 
                   Key["probabilities"], 
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[12, 
                   Key["probabilities"], 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["-7."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[13, 
                   Key["input"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[13, 
                   Key["predicted"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0000000000000000000000313344"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[13, 
                   Key["probabilities"], 
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[13, 
                   Key["probabilities"], 
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[13, 
                   Key["probabilities"], 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["-6.75"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[14, 
                   Key["input"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[14, 
                   Key["predicted"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00000000000000000000020766"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[14, 
                   Key["probabilities"], 
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[14, 
                   Key["probabilities"], 
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[14, 
                   Key["probabilities"], 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["-6.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[15, 
                   Key["input"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[15, 
                   Key["predicted"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00000000000000000000137621"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[15, 
                   Key["probabilities"], 
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[15, 
                   Key["probabilities"], 
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[15, 
                   Key["probabilities"], 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["-6.25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[16, 
                   Key["input"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[16, 
                   Key["predicted"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00000000000000000000912045"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[16, 
                   Key["probabilities"], 
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[16, 
                   Key["probabilities"], 
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[16, 
                   Key["probabilities"], 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["-6."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[17, 
                   Key["input"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[17, 
                   Key["predicted"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000000000000000000060443"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[17, 
                   Key["probabilities"], 
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[17, 
                   Key["probabilities"], 
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[17, 
                   Key["probabilities"], 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["-5.75"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[18, 
                   Key["input"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[18, 
                   Key["predicted"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000000000000000000400569"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[18, 
                   Key["probabilities"], 
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[18, 
                   Key["probabilities"], 
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                 "0.0000000000000000000000000000000000000000000196182"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[18, 
                   Key["probabilities"], 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["-5.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[19, 
                   Key["input"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[19, 
                   Key["predicted"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00000000000000000265468"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[19, 
                   Key["probabilities"], 
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[19, 
                   Key["probabilities"], 
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                 "0.00000000000000000000000000000000000000000063619"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[19, 
                   Key["probabilities"], 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["-5.25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[20, 
                   Key["input"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[20, 
                   Key["predicted"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000000000000000017593"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[20, 
                   Key["probabilities"], 
                   Key["a"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[20, 
                   Key["probabilities"], 
                   Key["b"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.0000000000000000000000000000000000000000203623"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
                  GeneralUtilities`Slice[20, 
                   Key["probabilities"], 
                   Key["c"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Grid[{{
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    81 (-20), {1, 81 - -20 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 81 - -20 + 1}])}]], 
                    Spacer[{5, 1}], 
                    Style[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    81, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], BaselinePosition -> Baseline], 
                    Spacer[{5, 1}], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 81 - 20 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    81 20, {1, 81 - 20 + 1}])}]]}}, 
                   Alignment -> {Center, Bottom}], 
                  Grid[{{
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    81 (-20), {1, 81 - -20 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 81 - -20 + 1}])}]], 
                    Spacer[{5, 1}], 
                    Style[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    81, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], BaselinePosition -> Baseline], 
                    Spacer[{5, 1}], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 81 - 20 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    81 20, {1, 81 - 20 + 1}])}]]}}, 
                   Alignment -> {Center, Bottom}]]], Background -> 
                GrayLevel[0.98], Alignment -> {Center, 
                  Scaled[1]}, BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1059143944},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1059143944},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1059143944},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1059143944},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1059143944},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1059143944][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1059143944]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1059143944][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]], DynamicModuleValues :> {}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
    DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.681667448237116*^9, 3.6816676792258043`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["two dimensional", "Subsection",
 CellChangeTimes->{{3.6816677160769577`*^9, 3.6816677308053217`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sample", "[", 
   RowBox[{"c_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{
    RowBox[{"MultinormalDistribution", "[", 
     RowBox[{"c", ",", 
      RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "]"}], ",", "n"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.681667732296502*^9, 3.6816677788627443`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sample", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", "10"}], "]"}], "//", 
  "Grid"}]], "Input",
 CellChangeTimes->{{3.6816677862267036`*^9, 3.681667808831143*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.6599971295954836`", "0.08959763603164604`"},
    {
     RowBox[{"-", "0.9013082351643297`"}], "0.8735435019842894`"},
    {"0.9797983740161413`", 
     RowBox[{"-", "0.24643732674319843`"}]},
    {
     RowBox[{"-", "0.06218364384822839`"}], 
     RowBox[{"-", "0.5879257016166588`"}]},
    {
     RowBox[{"-", "0.16453756949485662`"}], "0.9560240851602878`"},
    {"1.9304169677749698`", 
     RowBox[{"-", "0.6629420592575478`"}]},
    {"0.6668773591937258`", 
     RowBox[{"-", "0.9173529254242351`"}]},
    {"1.0605741451225728`", 
     RowBox[{"-", "0.10069021079542761`"}]},
    {
     RowBox[{"-", "0.4150917646125993`"}], "1.0559943024425578`"},
    {
     RowBox[{"-", "0.07657577425976413`"}], "0.39153914899310965`"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.68166780408421*^9, 3.68166780966347*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"sample", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "8000"}], "]"}], ",", 
   RowBox[{"Background", "\[Rule]", "Black"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.681667816659137*^9, 3.681667879433631*^9}, {
  3.6816679162909126`*^9, 3.681667920611068*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 1, 0], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJwUl2cg1f8Xx82SVEZo55cVZRSFpCOSURKJspJVGRkNDTIiEZHKSipJkqyM
Io6997X3dbm41nWvPf/+j77Pvg/O533O+/X6z8JRz5qJgYFB+SADw/+/PNzs
7A9gFRS05ATF/o7ift/tw/CzH4OZHbztT1BABm79vObZAUKap97zM1QCSxiH
7gP3fkit6jaUMyThBYf8w+dnyJjG5nOSlp6LN+OejHUXFGJhW/HCHtk+KLBj
KK5i74LTtAGxxKF4+OtUGq3sHQEO7KyDWcv+SHGsrtna2wWfP7+Zws4/KHjv
gQ5Dby1eYIn96v5sBgopXOYnHy5Blbno+T0/O5HqclPDl6Uan67kcgSy1+KE
atwIv3M1uJ7W5Ak8NYAZZhKFH83z4XiwUE7lyjCol7EIxIT2YcBehuMkziLI
0pLrOchPQ0q+7fd41Wmcsm+fudfcDbT3nlRTJTJsyXIK87tLhreeniahF2uA
941NcXdUBzblJ5UW/xiGwCE2O/su5oKXUtd2fM5sRn1+YU8P+hD28bBF824Z
wJXA2ScOig3I/vMk44wrBWs2vX751KUHqO4ugTasy2DC+x81VoMKYft6t1fv
nIYao5KqBMkxbFp3ZQ2NmIfOKJJ71mQLiod19FzwGQTrmbZv3IzjEDEnGEnO
9wJdiXTD+J4pJO0+VzqFa7AaVRq1LYSO7Zn73I4ap2LmWyHOD/9oGKtofFt7
nISmTr+ErlWMQuRDt1yL1mXweKEfc/9PD6gqOWm7hM7CJkGuJqe4NZB7KBy6
rjuA0QfLFzyMR3Gnf85PI/UhkEupHra4OQRCy680k2+0QHLMu8WcXcvQpke+
0XeTDnsPRDSe52lHUy4X7sGn86h7dKq0qr0Rvme37TW9TMWl4AnU0yuEiiDr
BurPMTzQa/xWm5lJ+fZfssYuvgl4wFhsIHiDiLQfCcKcyYU4+sxfPE6NCJy7
j9/wdJyEW3R7C56zc5AtPnFkb80kSLPePfDmABG2ion/GMtaQt/d55K2d5Cw
0n4nZ4IzQ0FKkK3ZvQM0CCs9oCqwLxjXaau+wqkz6H7JZm2zZAecqVhn9Jbo
ASYjB6r9cgjeeb50W+tkE14kVEduPcWk/L6bs5d1bhgodz/RJT+nwY01wy2u
rzowJuyu6tcvk2AbtbMu58QaGNw2oU+dXsR3Z18FFBnm4OutmZl8QcuYHfV1
SVpyHquKtlR6hSyA6yPRUfzdAVtvf6/JJNJg4OvZrvd3V9DZ+kf5ad1F3PdY
/4r272mo+y/IPuRiApLPMu5+epaO9xL2hcQbx4Gj5qTsgugULk7vEj1+ZQIs
xc6oqcdS8fOhc3UM8dPgrvrp6luJadh8heHrdDcZQob2nax5SoGMXectpPWI
MFLarHP49CpmnMi3eiFMxUeadmKD3Y2oF0FajU6rh8N7JXMM5ipB/KWL5e66
USjklb9+J3walHqtn7sdCISWzaLz/vbpYOkl2+McMgWi1HFRw/d0lJYJlT76
uxwvgIZ9mkc3XI6NsN1pQwfnKSvBI1dnUOZCsvJN9mW8832m2SmsEbwdgpnk
L8wiH0cmsaGAjr2TW7mmEFF8T2NYzMlGFGXiGU9tvYvnrq41vZSdx9/uDzdl
kCfA7871hXb5SuQKsrx7omYcvh88NBcdOIZukftLbaom4Ll/YUVt6hC+9JcJ
v3+dhNtOe/N/YKkFeb/vqoQnBWjur5R0TbgFtXYGO3tKdADTeJek1sMWOG4Z
cP50/QgSRtwptRcp0HW6ToP3KEPBytJa1n2dTrROfqZyhoEEWamZU6b/UUDh
7fNLBR1jWGR5+eWVrHnUfFTGobK5Hdb2pyk9yOnHnXLNqrU7h3CoxJOZMbQf
D8eq7D1XlAohlqPbIy6swMp8eMMeh0VI1jBcs80lwm+FBWDYNohDZ38qK9MJ
EHqidVVsaQ49DZKvWG/pQOHH+ca8vzKwjac8qatgGKyOnX5wL7ENbRh9T5kY
U4FdxNG8uImGdno37mkXTONPbxcVoeBVROccFmcGKqa9ExYzjqbBwf4dn/NF
lrEjbXHXVGQ/VkxfD2bPIINsZuapV9r9MPrskWn11xbUuy5jzzacBtmzD7TW
eejwk7OF9YpDJ+q4+PlNBVHx7s93urt+zuH5dMXTYwodaHv8ZI3EEypuOT13
RJVhAo3qHjRls07DCq3mitHsL+Cp8l0yc5+G0dqrhB3kZijODvn7ZykbWjy1
/9Z7UHDHjSf9Gh4D2KspnJ2jUYpHyZrf9nH9wcqZaeqljBF4be7F/uJ5O5zm
17mpN0cExc9zq/i8HiuOW5UGzHUgsWT+9stj01D4YqJb4F4f0qQnpc1iB2F/
qETiatoiqjNuY1WNZFD+wLDL3SCMBsyPriRt9abj9vubCPZynSjrp8Nao1SE
xNuT95W8bPBQoUbovyOT2PPccbuJzDCmE28t8Yq0I0XyTxHpGw35OkLDNO50
gFxgznefh9NwU/bs2LcfVGyOkbW3uUVDL9kINuMUAvpwO47ML7EoS2+ytOX1
6odQu6E4j8e1+Mzi3KX/GqqB60qinI7fZuWkFF/LDPsujD0nKZUfNoOcdxxm
6p4MgDy3X9Q/p1Z4PV0rGb+FAJ9ZvxXWrS3BPgfdbzzciyjyY2T0WMcEWB1+
Xi+gPw9zrsGvXvJ2YW/okEMfExlMWptfmBypRpdFQ5FrSxu9GeoV8ampDnpC
QfPJgzSYuEY26Upagqcve3jCaWRwdNyTwV3wHTRzTp7kuT8D9jaCFjtdMuDo
uGHdrfhBsBx5K+mbRwOT55afKgMpkLtwz930EhkXbCkF6ub9mMbN7PvJohTm
P3OXFVC68XjztGtuUQsoJoWX+byqxYQwellMLFPB9+ZXwcYdU/Czuumms+kU
sFhct0q36QCr8ENFGaVrMOCfGPuE2oV15Rrm5IB5sFje92T8VzrcvPWw0IqB
qYDwhqxw/VE9zl72lbvmNAVeM2K6C4pdUPT5jqLS/DREjp5nOkFbws5Jg0qe
tEGoiTNap2IIhlk7ErXlFmDPKQZVdodqLA8K4mjt7cETbGJeZ/UI6Jj3ZZ31
wTv473OOp0JWL5xmqdE8urcLGL6lquilk5BD6GNFetAsWjqJ3dW4QQY1xXgB
9t9l8DsxgkdMZx7JPwcLhaOmIeM//2vlvwrhVsEO8Q6mONB7NdlO/r2M38vc
dh3Kp6LWQIRaW/g4dmbzcwQ4IH5xKXz99XQn7rv9XXvmPgEWrY51/jZbxW7y
vlbVyt9wdiB6+rzud1wOrmdkfkMBi6BHMlu+zqLLt13sF7zbgF1W+IH54UGk
q3HdJm6LwONyJ56Zm8/imuCyIEl8DJn/OV87oTSF5+3c42O8EuBZQ77ci8IS
UF+c4ytfnQM7Zc3dbtReNPVocuvUWQel1dvB4xvvUbOlUuScUwmWGl4e82Ap
hM0d9dJhpmTIcbZrS2OthY5nhz/j8V582DRklqTTBtfBK3owagR3ZHy+27y7
Dx8KsT+8FkqD55dWtx16PgLbT1Tb7S3vwcCkHvOkd4NoHJjqnOFfgI6+SRUf
1Ulw7bXnTMaOYHhvIuPBmE6Gnu5nq5c5iiBwzn33vr9zqJp/VVxUYBbZin5F
WDwpRp1MB/Xz2ezKD2u9LHqSGzG5TCnhyrkhFA3nPbLwewzJWzN8KjkR9pzI
DDgv2QPL6h/6ZrrmwYb86eGfgAm4fMGL3FOzBpX7L4vduL0C4QfZivtvTSCf
edlr6e46fDy0mW+dawZ4EiO3D3OOolmSkaT4rwXgbZsK/yTdhGrEtZx2HEQO
kx4Py1+reKn5nr6mwSRMl74vTGJcgotaHKqnqwtQ+fh7gX+bqPiVqWJZNIIE
9bMNNC4BOpKDtzXRTdfhOT4zjWxcQhmlfevqTfP4suPxA6eTVFDjjz5WH5yF
klsFBr1iqPg+7+yZwyl1cMfn4+F33WvIf/rE7RDVPthrzH51p0cPJF0/79Sa
RkK0etppqPIaJ4ZET287OYY3Ja9vnr5Zg9x9eV8oiRNYnMH5nefbPHQTxi/3
f/wBEfnDxGOJfeDK/kvra+UM7I7Dw288mAqMD0g1vrNaxseb0/31384A24fw
0uMcw+hfKX4w5hERqF88/GXyiXBYLmLZPKAF+VgdNJh+/4MTsYwzq8RBkFi5
HHJR+i9cCp/fQeGbgoP7pYR3+NWA+vwrrk0tOdD7X6/GG9F+aCzmZ63VGMGH
I80u3U8oWPJdqaR9DoH9lrefuEwlaDCsHQyZJaHTqbGj1CGmglbWXXYVzT54
7f2NE2K+TMrvaq0zxLqmMaVxc+GPrl5INviy6nprDRkLKjgi86h4pGP9Ab9j
Mwg8V/mxyagcz0WOZXMVzsKZtvEDMs0DUPxalf9zXze8TagcdFEigMAwzzyT
Ng06G1KPpqY04rSBlPgF/UpUyzIr6G+gQvvGwj46OYEowSZjSyFjzc6+ub6S
BdjWp/+N5PAFxtNTiPSN+ynYp3JkYG4BDYt30okGEeCr8kNknloK/DvSknWG
61AjVpBY09cFXDVnEgTOLmDafxPfVvQmIC3Uu7f11w94af32AKk0FzQepv0Z
HRiEHkJLsUJaLlTTb+rlXZ8F1vXJ9BTTXOBw+NDSpjOGjWy25/aXDmBIj+Ol
a/eGwThooI7bax6n7s0YT9UuwsSbaxJra6NQ1751+4gnHVzaUSDxIRHTQh8+
I15/AzMKL4uPKDMVnI70obrVRiCLoraHqt4IWpd0ztu/GECmEsdyAsMQRmZP
qHarZ0MUYdfNrvtkYIw7/tiitgQipUIGbz3uhe3f+XyKspmUm0jKLGpMBDRJ
KDPsEKFChlipaePrRrxHGwvlMCiGSDXbwv2LURikrJjVn1YFtbxSIXLXB9D7
Ga+afG0/xr80c2XSnIHqzV2sgRb98JC34NHheyNg6lVRuHVnFnIX8uD5LDqK
H7i/+LlkGk6q0yF3fAbnth7w+s9gEN9cL60t4v8Ax0SZl88k54LaiEpGzXsa
XDQJNHQqGt/w18/S6tsncUdNm2dozRK8a9Lw+a8mDHbECd0R62QuePzMzysi
KR0c46WKw89MwDdHwf7cqkLo1lowbZki4pBYkhTd4wfMt3btvPy0HxqibMtF
3zEVjM/HmMlcnYPJXfZ5kQ/HUMaDxfnW2QHYc3vIi1+SBNRq69kqhQ0OTVGy
zpRaB926yqQbTbPwYu0Q57BfPVTV9fxoDO/C+A6CvkJCGSbVRR/QKRnHb2q/
5UiaA/hI4a7NH2Uaxil1V43dZiz4kPtJKbCcuSD1Rml478kGYBc/5vz55xRU
PPYXVB+YgdPkM+1Xvg5g6ZCPFxNtAKyiT+RJiP5Df7aQ2V8ifZDpoUcISpiC
HOVzX4uK62FftFTBzMU+rEiS+KS6wdkN3XlKKVtqUEa4ec3CYBYfrZO/ue6t
hmilmT4rl24QPFLjk7Iwhak2zDyTIhtz5XKvnOWqA6kSq4S462S4wHk+Wku9
BiR887McCtugVqlTXepcHyx+KGcM6CTjv8juwPHlFry2lJo7FD+APYe5g9YT
emHoYcEN48BpkNntsgAflrDbZrVVcKQEPnLPMMaTZkFqTiTb++kSXLpRZ7aU
QwMSY2Gh6flZlJZiKud3WwZWs+l5v83FKHLVNFGFcxilYcu3d0dacZW3ffMK
/ywGbfoCZtuYCt4F79Lnv0XHmwoNDX7qNDRUH/KTWxsD7gf/OkrutANJVnKm
N3IVuU7Yndz1jklZV1tFvPl1AloxSCjo/07Hc+s/g7dxbdxdSsvHtDg6zjg9
iyjxmgTCQb57uXcm4LaY0I5O6WkMKXoj6r+lCI6Nb0n+wtON7DWn69ppY2gc
ojlMeDQNqSaLTS/NVrC1zmZrpM53FHmZduir2wq8LNnfUvCYCJFbZk5eTmJW
LqpSSs7alAr5vzLsp3NIUMEV61ybuYjScbrkB319yG12VqQ1txt9b2lXcjN2
ge7svjNZa7N4t6PbJkuqEajCOlZa31Yw8GCozrLoFBzK/HtzIMUfBPfn6aue
3PDjh1LlB49NIynBQ11SoQm2KITfCowiouC82vFsqXocv6/EcK2YhDP0wvGq
312YTvs3FpO9gJY7/jU5FVMx7KCdotspIpjc9RjIiSHDFdMt9CN7SBDJeIFz
baAfJfPj+13+DoG7odKtRvVx6F35vXBecgj15BP99P/rxKtOZWaffk+AyeWS
wwCT+CAnneUJZxPeXBJvYGBcQtUvNeqbesZwD6HC++2rAcgY3MT9lXMWA16u
mP/T3eB1/7G/kRvv+dC2Pfel8ChkTl6rlJQqB/O8/T2WxizKjk179nvtGkVN
s8eZl3e24LflJ/Hb/jAW6GhwXLGSm8cBiucH5Wt0FJm7QNnV8BsE7tsb6DIt
o1NeblK+/hDqf730kqOyBf9zVRkumyyAo/LnCy70lyFPj2X/00vDIKJk/06i
cwKvBRQodZ/uwrsKg00RRwZRWPRUSMHLEqjNn+W8GjsOj94qzhsFNgKfcuq8
3m46CIm52len9gHdfPT0ohkV5Vq2Nrr9R4LOF52XvGSooL84/PIB5zRIBmax
nt1CBfLrQ/Wguob/hTskTxq3YKj//tD7p1phumZ917g2EbWba82rSFNQkNBe
fPnVhuf7EVwfRNI3ekJTz3N9Fqqb1XbeX5mBJNaZVif+TcplRyMEHG59w7Ym
9u1nbozC9neT914xrWPP23n7hnBWZa0LjP4vf4yCW1ei+OOGFRTYwn836m49
jDK4MnadGoWFBU5P+74I8Gi3vxvwkA6qe1cNUokDsGn9hBj//Coc8BJRJG/k
iW4UT76jMI8xH4JjKuRzYNPaxPsXxUtQmflPcq6kDzX1OrM8A6aAoWf134HB
KVTMU77VptWJeo6ZbNQOGtqLf5jU0JvGb1sHrxjwdKC41edrs/+aMXC65vhl
rg2PSV5RjvivG+8xyCf+GiRAM8+nqKu3uzGsIodZTzIHd4xuV3BrWwb1m6d4
iXeG8UTssy+vvnXhW8NC1549S6B/y9xLeTMR9v71jL9/iI4v35nvHTJYQvqK
WeYM8yqk8gRyNSjnooV0xZHE9WE8pXWsbcaAiHUN+ZPEgb9AEXwecsCCDK26
1fXdQXRgy9iRfHtqGdVnFF7cTxrBoFJzhfTdVNgS8NKTiYEIP83aroTs3cjr
T4+hX1Mj+Ia5tSlWLAsNUu6d3PdrBo1l4sV/XuzEha0oa/P2DyYb6/DtnGoD
YUuqE9/fQawsv9veuMGbkg7Ki+ynF2DrXitS/K5h7L3P/6TPigrTft/qNKLp
8KHD/NGb7yTIvD6ayMZajt6vLTcXuaZBdMzjgW/5FGinezzZ0UNFnvM/+X2s
aWi123WJ05uK9MBDIsk3mjF3vKzqD0MmNhWr66zEkDBKT/ljoysZNduNqK62
jVgWO63YFknA0a+Sc/pV43BZnGvM14WMUn/mGGK6F+FKbPDjsEsLePy43BG2
jz9Q4oxVZyR5AhLKbBettWZRZ7kpTqCJoWCF2/f7xzdJOHmmdpGjpRjECx+t
hyaQ4AHZx9/qFBlDbnsNGP03DCGsegGWlQ14O14hx3GD98/d57D0NKLB0YOx
ButcFXg4/CArkZsEl/5mbDV+PATefKnvhOy64cWc1/xwxj+0Jswpv7vcDEeN
ht14Viex6lLZCte2ZnQKdMLX6xnoubbKRVEcxKvPIjgvl294ZPKXW85KVJDs
r2l2bx4CdqfnujqfysB18Mqjwx0D6M7Hq2lV1AxuwmlsQtmzmEKrmts2PoVy
x/oUzzKOoGSSxlHuk4u4LcdfdnquGkIpKwQlHjLq631ueP6bCi7sF4X81sch
wPYOYxNlFm5yly+V3C2GubzNR2omNikPTvm77f22Dh7uD+l99hs8GHnc8sY/
Mvz+r+LSV79enHd91tkdwqK8/OHMTz7GUZh5ceXnUZEVMMzYJxkouYpjJjcS
RmqW0WZ0F4s02wz82yVoe4bcjyH1TVenrGdBaTj7oEV9GbYldo8lKvZjZdij
umOfJuFVVk/5rv0EmK8Yvey+8hSq7CNT24/Pw499EwJNnETUYRk/knEWQf2h
20fJ3mkQ/qyizM3WgZELz1TGxygYc0xrxO09AU64ZJhfPTKLwbu6VK/aLoPA
EffunfFfsRiZi30yJ9GyevQl9fQyPNj0Rs/y4iCk7p0buf6HAJIWzO33Ezug
KfHFVlvrYlBcOcFveWoc7tcUNrX+peGOtw06/Xx14FM1Lj9puYSiAbRoI7Mq
9Pbv0Jc7ugIzFd083xWa8LRWxcVD0qPoRD0iJLyDCOd31P63fqgLntJ/0I5H
rwLXC8/3fZadIDErFVG+0IydTDWE56f7cdRjcTKpmLFgN12WQ7Q4HXP6Nqf9
im6H3aaX73R0VOLo3nEecfYJYGnZo7NFlQLGq3ZVcUYT+PZcfkrAbgqmzn/1
N6mehdcGKc2kxDX8yUHk6kntQZ6+3SrOglNY5PE7PPFoE24JZpZqHCTgWlBt
4eEGIkj0HdRiKOgD4jdDgu06CXnvTfUG841hZYamBq8WFZ6cHkr4MbMKaU0r
u+NGp0F/e3CGcsEQlLtObTlnQ0DS76dcOyRp4Hhmk+G+mFwsCX7oMpFDRUu5
xxJW2iTcbchjdWt4Br0Wt5QNSy/g1frrS46jG7lx06Z5/6ag613ZrffmR9Fz
9ejCZb8hqN8+unmBsR+5CaXCdRwZSJUf7KfYDoHFSJy9pXwetMfVt0M8GVlb
/TrZXszA14xjWkr9dDz4i8PLt60BnG7SyxvpRBRyNOtkud8Ejw59zOLjHYDD
GpRNfE5zMEcPrtH2oIDjOaN90SIMyuPjvfIfeFvx8ZRc9iuZDBQqdjO9WLUx
kTjyR9mqDV5mE1V2qGYryPu3TWGKkQYnv6d/lThHQHMts3q/H8OgMyjJnF2c
DXSREh52J8aCRTEzsR05DTA8deB2gEYdfGyzt6ofYFVuu7v1w7cLJHiRcMdw
bLAXRzJ2jJxUYCgY+az+wEZ3Gn5oPZ2TDUfg21Y6l3ScUfmhzvnw578IsF1l
c0MQ4zJuFZfJ4JKpgdp/Gc9imj/AB8cYKktEKzTMy7o5SZLwDLGeh+H5CIa+
11k765uHAtvvx3ZzzoBQrlFcx1bmgqyLTWwFRUsoQWFq/W5QiqH35LtZpfrB
atlIlE8/EI5h8luZc6OY2jof7C1ZAx9vWT+uuT0POW7z+RGLnWijfljN9T0d
l9xMDso5klFmUiTz+2IvfLlfrHmBgYItHd3G0XvG0OsWz75oQiJGp7Z3hZ3N
gdiSKOuGvC70Dm8x542sgpSE1GPhHCTIFj/25tTmAsji9TtoGFcBw9+mnK6P
L0Cnd0WxmdR3dH+xlyuDUAc7JbMoF94O4oFX3B9baSNA/vTcNsZ5Fq4xCpQy
yA2AUcGaBfXNIG6RrZkN+TSF5/uCDbmDSPiH0SFlFDf6+Zmdj972NjDnzOY6
ttHbPXfubSf0N0ANPvrP1bIBG7fpaRq6dGHEukDiizoaXt53bkvFpjk46hBP
/OhfBnvOV4VWXl2B2M5L52mZIzBVkDEzphaBXhYKa7d5h4F/S6rtbmFfqDz2
bjwDhlBTwz9vaoM7ziec2SxXPo9X11UfjeaEotH0a9/xbjLIW62EB5nOYOzx
g806XNN4x/RMkWEzCb6sSLx2dRuCP5mUD+th/1DzB/fDfzsaYfGhy4O6o2tw
PD08UP4jU8Hv1bS7lVW1qLggMz1qRgEX6bNP3u7rx7DziTEkchsyfOV9Jg1k
GDCvki+MmUa1D5LSd4yb8CPxKVv2BocuFU682HMgE/JPmchFRNJQ4uqXn9nP
8/B1WqfBVashGGr0/q1dPQfy91i+TjcuwSLX0frdNq/wy1Zbl2SPGlRU5Llz
4FobEG9vl0090IofXJOS/EyWgN2NeY+1dAcoHnKes7FfQrmwzkPNdWlgOH7E
dmhsg4OuzKmxhzAoeyjfazkK/UDbQ2Y02s+kTODsc3JLHMS/hxNVOSS/4WU+
JW7RWwMo4Pxj9eKxy9hZ4030eTEOtqNrg2aco+h2zbE/oHcMzRwX6Be9osE6
tlFoIYIGddpS9Mu0fvhIXnVsDumFteioT13b50GSYbN/rG8TnC/cMZ5xaGMe
Yfa/wkgsBYOUG6/qZMZw5kbLjZL2f9AUp3kZ1ArRWC3nLsEgCfK1CQdem1GB
TRyKnuEEvs9aqpnePIcnj21XdPJYw0Eh4d8iT0Zg4mBLr25kM7qnCYv8lSiG
l8pfVFNGF2C5mWby8PQ0TmfJ94irj6K4m+6Bd9cGcfjep5kqjj64F0zYYvhk
Be2W2Gb9bUcR2G7Gvlzrwu7feXX7jAfwh9nOncL/JkB71t3oycQY6Ly6RU7b
04oGxEJ3swUiuu8uOPZ0jgIN6Y6ZDSs/IOeWwNBdwy8gyt8Veyb4D/JnbLGV
sp/FOr8ePlGbaXzCwr6+/yUVjbnuYD93P7S+EfZbilvHjHObpAviurD9GLPy
VYFe2PHRxdWbvwd7mc6HfagZR129g8HO93txu97poWwFGpZ8SfEa2piz9e7H
haUHs7Ds4MG3N0/2o5Pbtz8+eST8q3nUBDgWUEHeOUXSkYbq53tFNltSoYap
ti+QlAlZb2ZsdWz6cHt1bdK2JgZl7T03J3y/96Cs3KBDw+Ioth1U56drDCDn
veQFofFU9LVcEGFdm4GAXfFxFrfH4WeLqPezURres1zkbTOhwn/PyKZ+59Jw
9ViU8AUuBuU23gWCIzsdAmixNhca+iAmtPqo6J8G8BZUer797DrITsqs820t
BuN/Pje4X9PhS5HY7PvlTHglXzkX0jSAYwN/0EVmAk8KP0zYvToC/aesLh2c
6YO+Q4UabLenYUXzSlXe81l449Bs6hZUCHVHez2Osk+DsYmDoZZiG2z1fHeB
4UUbik1VDGaIh6LkLoXGFyIT0O+Z3/tLqgdkaUszLhtzzTHLD/n53QU7tHty
rfPmIETRxhATp/F75huiW8MIWPz39m6x9QSoKF2S3vajH7t5RPmklAaxoJZT
berEEJIjZxW5vTrxQNbg+NUgIngHxRx+lZsHP+ZmniVpt8LjH+wl16zmcLBv
iSS3NAQ696sIxz9S0EFNWv+jzBr0a9h7q2x40e7Vy+sJYStgceJIzpmgUmRv
/pPNfyoXQx8vCukELoLnd6fPSdJrYEiS2cdgTgKraYfkftMFEBvK5h/aT4Et
CTqsAzWNEMR8fXH8ejNeYor2E0sewge0zqPM9s0YWh93J2PPFIT4PRz1ky9F
Ds/ZC+Xfp1BHN+G1k3A8CnAvZLkGruMzz2VKUGoy1ryi9N9h3eCllIcD3Sy9
+O2CVwjDcSqY2C7zfcltwdbkgt83h3uBX7n1Z88UHdJHyw5dMqTh973LHprd
dDjlKNGYMEfCibVmoei/7SjqW2S3kJ6Pd+3dtyucnUE2B0vZsl9k2P/ijdRd
pR8osrk0N/g0Bb2eZDIwS9ORyM8QkXVvGA98+61SWNeEEd/HPgtgPQZt6ozI
OtGLDifvD0c8aID7R40Dwj3GgOVN2z5R1UGQ+BBlkmQyCQMJAi93Jr7Eh5FO
u6dGZ/AjB+/8T9VSELYS9yIaDuJpqleVuMwCtj5X2Z9zYQwiMywNiO61cOmL
0lcG2jLsclj4MNYYDf6LYhEtSxv/m1PIKr/cCPz7PQU290+D2eEk7d+7O0C2
cC2k+V8rpD5pjAu2G8Kpz4OyzaYj2BRxbaHgHw39tL7eKZOqxuDYs86OsRl4
kPwsm9OwGYMWTl07pxgB9pIBz1UWJ0D+i294chhjwbYtSWKzGzkb0OBLe3WO
jnXGR+nu4jlgtrlP4LLcInazCgXrro2A5BiPcsn3NFDfdC/wcwkR9sndYVx3
7Ifw8k67DLdp7JXe//7ayhS+Eyh1iapogcKJjw1cDkwFFofu7+N7U4aX7/zr
kpMYR48nq3/vr5ehwlYO4b088/CMv9Pc9CAJqD/2JB/52g+p16P6nVQIoF+U
EictTEXbTMv0e5QhjGKs2OZ0eAx3Jcn6DsqV4qc2yubF993I03l7ebakDUpd
T9bYbXjnjfy/ZmRoA++ryTGlJAL4ZV9R0SIwFrxRz9G+Qf4HiW9Er1UMzgHH
Eh7WtqDhkS/cAv92taC6drdY4oNluKuudl1dkQICzwQkzV8R8e/NikbS+Hec
PFKzzqE/A4lGrlUCK1RQ+prqEkOn4q6z+UvBh7uB6XxlHm2DfwfqeyJGVHpx
Krz80x37RowrFovK9KUh0e9KU9nwHHrNZW5mMyThsPKeF3ezR0FP/ZdAp98k
fkwc/eCjsgi3iqOud1yiw7bGAIf/TlHB803tAalOOxB/kmWxKsikTHnrPHeC
ZQ6bWN91r6cX4lV7M+cr/4qRY29PjunEELjx5/C5ZE/D9vc2WcUVg4DCN1QC
jfowROHc4BEbOrx45CzGJHoTJR1lBt2SqdAsOJy/Aht3zP1x+4/meWi9fWS8
hHkYL5hdz07fQ0UpaniSH0Mrut336NCqmsSXYtu8eR5MAofBkQdW1hS8Hlij
KvdqGvWPTQ2GfSVjaZee/5uedpwI8vCa7fCGbH3+4a93N/aaNTvBZbETnC12
DnKkDOI+8kj1UmQF+hLNcpWSxjEg7VKXUngn9JFgeGTvLL5x040y0hsDr0KZ
W78MBjHDSeqS3YG/mNaVORJVsAizo7fkdDmIsBbMtrtioxdf/dm1vpc8iPL5
ahX9jqwFKxOUf9vuz2HyRICTgEs/jBIELUTqUnHwq7FwhBcNP/w84Rsr0grB
qhHCV0bjgWDxXOGjCJty3MmXbSmcg9BwVo6nViEKNMxlM3sL6Zhm0Sj2PKcf
Tb+kC/z4MwUVv71bX7BQIdS8c2xxeRTM2zavfmlrRI09JYZbLr8FJ8Kj3sJD
rXA7g61GY4IC2y7omk8LVqJ1hjXzd61eKKuev/RScR7m4pv0B0QLQXtT3Pvl
e5NI5TA76jDcjgMd9a0Wh5rQUCR1a1cKAYq8nVNtGRPw+nV57oAdy9BV5Npt
IdUGN09m5u6y6MBMi5D7XrwtoBKn71ooWgUcT5y5DQ1H8fupyjFzaSrS7jzb
fqybhJzvz70cftGEYl4e0hUyXXBm7N+jt6R83NRx/86vJ82Qd8pOTVmtHzkH
d0iaXaBiYMGdJeeLReD3bvTh6XdErHQ5YsNOqwDCTR3veRsiXJWwuSkT1o6P
mqMyvsqUY8tHvu6YXRTsDRAvuEYeBKZjLwRSFGahwszaY/tLGiD/VlC1XYe7
HdtG5aomcOz+FFd8SB+QRjOrVTs7kGmz2ZmBp90gpLbDp/zGKExo7JhStZ9H
m+cZT/UMquH8v4wpC60e+G83rWHvzgnk0uS9G/NfI14k/llY3UaCBKO7IVov
F+DU+AepFzoVkJvCN6kY24nCr5hZLJ5v8GGvzPsLW5ux0vn74962VWhke6cU
eaME3gV13XKTb0Tj334maZpkjJLV/bJtjQAZrkcs4xXbYTl8yWuV0glGYjwB
U8NUXAm02GFuTMZaAefvk6GDKNCXzbrvKBlu3fXV06PTgPFWf+pHmxzM0RWW
8L9JhPrIfyWhAdOoYNsrX7xnAS6NDjP4sAxCEN4llg0Pwc6tmtW8WszKvQd3
yztvKQY1koOglWoT9hmx68f96oUIoeksBlo1GP62HJl62IXif1iO7c3vwz3z
hw8fqh3EHvVrTYcuN6PF/hQtd5416Lxt+WtZthXsJGZTbJzXoL75ZKtpxxiy
bdp507JwHh0rnlI+7h2GN2/fq/zK3/CmU72B/sKd+ON4TAVD0hs8bWr4PgPn
kL/Q5YXo4qaC1oAPVSvEEjQxei9ByfkDHVPPLSd2k6G5Uc3C/MM4VP4gzKio
zsJ4TLiIs+YknvF78urJ+VqUfpXfcWCUirPtorvtrpGQ38GWppFSCElLVyV+
tq5hMJmtyGmDT2a+qD9yd5KGTPGQoG39zbDz5cfJc4+bsNZuRrDl2wi0SXbM
fmBhVFZMPGC232QIRcYCz8rt6MJ82mXNMnESOgWZVdi9G0bmNpX1yy+WwP1t
8Ru9jXzItI9n51WP45FOF0+jxSG8/fbP/umRVmS56jv75T8ifD4heEKqugF3
1D5T4xYog0sSD9PO+syB7LXwIu/sIvgxqHn1Hk8HjKsr7SSkMxZQd17y1cyZ
h46wUJlXFhX4IPwfAzM5D9L+FvjZZnZjfZ26j8bLfujU96nhHB7BwZyAmuLh
WbDjsc+Sp9fDpdfasfUhI0DpkQ9SfpUO5WoPGZLuMCivL8p3fjpFw6mjBtNv
V6Zxp1lq1PXzPXBpj+s93V/T6O3uQNHyG8DKEze+HTnXDYNbLmiFzC7Cj7cM
Nq+eMCk/iKTdeE0sAfZq8w8ZL+jg8K5qK8NvEsbf5uCREWJUfrG+6Sw2DOIu
7p2e2oRBvNrQ0fdzfhbwPO+pySMdOHqPaHKRsw7VKqP/22XcCEdCn4WZaFIg
MyWEmamqFC5+lKKNNU1AcZPhlSgPRmU2M276IUI6aqsUewxRp9HlScO9dEop
ZpkIWbjyDaA5r7Vn/Wg/hOxgFGzaM4InnKYC31+kwPM3n3j32Rbh+2/9x3/f
6AZ77caBesFSSNujvMK5sxG+xFg+I1GyILD6xpapE7U4I6jPNnJjHK39yRGk
KBJmEDx4yJ506Lt3e+LMARoor9NCGze8g7fUsdfVmoanZ5NqfTKrUCorQfBh
MQn6F97Uu0hMY/aeqLeyZ2hYne0YF+A4Bj+2Pmknc7YD49I/rxN8lA3v1vZv
WybBwKADoejjIuAuzvi13ROga3zgaLl8PGwzXfh7jTiK2kmzgcKUVeh8c1bi
fjcReE3MTr5wHgOXzUaDdRsccM9K+6uPAQXumF2WFXWewke1lfk82t0wzLP2
iPCtC+bVC7YlzdAhpyP0ouTHWfyhrpjXmDsDPHuNHhezkGHfI+6qn5/nkNDe
m7XNiAZ3WBwO1Qhu8Jr54orEeWes36tUbUmYw69kr1PaqWOYNGy7+uU+i/JP
QkMbw0U6vLI9utfWqwKmBCVyL9waxZkB/Yr58DmoukAO36VMhuSMys9ndw+A
zbrirllFIiRksJy7wDkO7awWAXtvLqNkrYfZL9URUH2pOqlwZh1JZWNFqj/S
8OPX/fa+tSQsN1t3Z8hfhLzbApM8a1TgTSakMhOJUNSQ9c+taxpfEClaiX5M
yt0H35pwW60hr1fchb/MY/BGP/TU3dc/UHtaX1aQoRdonzxuNeYPon6V0J+M
umH41ZWeVBo5BVnjMY68cgN4QCF2Pc45FxZnyYc2WxUDrzjyvahpxc9WZbdX
7nfgIRZiE/X1EopYPFrrCpyE6OnPQcvUMVRUTrkaxjWK6TfXXDZZDmH6GaUg
H9dhOLaaRRoJ7wZdjU+NiaR66HlG2XRhkAKhPHv7Q+8soLacxL9tERRoDs6N
06ifRUOtP6Y1v6jAIs1uQCsox4Dlp3mTrUMQytx1SzZ+Bm+8ufQoxHka+E+8
MToS1I+b5r2qS7o6YGWf/ZYyyxk04q1ZWjmXicfsDsqOXZpH+h/WA67BCTh3
/oyUSxsNWakvKNdNZvBzwNDXsfhaSMwVPW3/uhul3qn2uU+OosGFEBZ/RioG
PH7YLLqVAKUPnaiDttNQ43RD99OJv1D/yT4vOqgdt4elhdQtVqHfQMTpwLIp
nDw5eI5wtxBNtJ1v1XhR4JfjkwClLe2QfmIkB0sXUOXCO6Ng+0UY2SXy+8rr
EfA7pCGZrduNBsEn646ptuOtxaS7ae2zkKh+zSdFqwlcLAWrqhz64NX7xeOl
3NnQ9kGktvcWFRNZ9h01Oz8Hj9s49M7yToL7Uw+Xn7yB6PKI92Od/iBUiXSr
7rduxYtdwvbDkyu4q1Cm6tztDCDu+7rTVp2xYNr3utXRc4gDYkaVXD/ncNxn
Lpad+x+I648PiH2iYjOjRqau6CQc5Ysabd41DueMJ1JPKJTBf/4lrCU8LfiS
l7z6Z3gFFkfTzS5ZkYGmdWiTwKkBzDsIZ7Ufp4EQrKZVPBkBu7gLTE6f88Bi
ZTg/aysdjBqNz6tU98IsY6wae8AcWk2BtVrjBJhfWKA+ffsXZnenHyqwo8FX
tfLWd7R82NZik9qjPAS9J/l1bLpCcVEkzN5CaQIPn2YmRB2YxNRqoSvX1CbQ
66Go+cwKHW11c33Xx2awY5N2WotEKxwt3+/xbl8PhNkfrKN7DsH21WWXPkUK
9smVCoh30lGlT3CO8Vw8tpGKSuuGmuBF3Cyjzo4VcHisyJl/tQjOBl9aG/7S
j4dL2fS6Rcogzww5G1XG8PbF46xx+jNYFRnV2KE1A5uLR2g8QjQ4xl6/5F9M
hjirXN3vr2fBNzZz0PzNOlhPv87ne7QAKd/276amDkN3siBuMlhAWe6rI748
RDg2/3lu5W4TJsYryFm7jQNa2n8gCg2BvCrj2/9uEGGLc0TzJeoorkZzH7ZU
GwDW17ZulH00bPW9IyQkxqCc2JQUEW9BxD6VBg0vwXrI61Gsr+iibPAhmw97
IhF3KBo4+SgtwLM9Zw5ZWcxjrPHMCeeYHHieUr3HVWsOsjiYpGULhnBWa3fv
6AbPNjtc7O8STMFnZrzfanbMoPXozX4hmQloNtUh/tXY4GnWLXzhfTQwIfFf
UibNgaXnHSnToCUs0ZXXHjg1h/LWszk5PUOgzat/aGLDL0w1xX8lsK1ifrdB
jN51T3y2lfo0Qq8cDuZoe9oYEWH3SPzHjo8F+Fzw8w7/pwQwC3J9pRnVgPev
PLC4/XEObhxOKBEcG0C7b8NhdXNk1AjfdvCAfzfeqd2qp/54AnpU02cZlCmw
dMiGMYI8A2Vxf+22utVgVd9S9Q7XfLhzSD56uHIe3IWefe3PXsd3aZc5C23G
8TWTz73csGWsEMerGnbTeKLq5e+b1l24Uvj0YOsUBZpCyvici9rx7L26dJ+4
XjiVIKAwPvsWZbKbfAUihzA3zyDx6YZPkj5ddbazacSORDeTP+IteOGKn/vl
bDJk3s7d/Vx3CbP3Hjzys3UZ68dv2Y6bRYDgn+y7o0MlWO1a+knQkwQm+T2R
Z+rHwe36TRu5oEb8aDwpKn1+FZL53tX/3Zin1W6/YLOUBYzn2tPF+moAdC4z
BiZrV0PnNf+iWaEJWB3PE0x/wVBgJ20ssKmajnejdtQxJPeCpc+53PUdVAw+
vjMmd7kfmGeuXp3tqwPPwtNe80vtaLaDoPZYkAJ8JjdVH25egG7DfcWs7SSk
+X/vPHxhHFWSDvc9+I+E+vK9sXHeg6DHerT6T/ww2qr9F/t73wi8zk13X56d
hoAwwdqGhBEQED+Zti1hAvsDHbfFmjRgTdLsvS8ei5in/l7lA1MddO288tRB
Mx/uy2+ramL+gQ1L5TuCU0Yh+bfob+frI/j2Pqtw2CfGguL3v5Krr41ATQpj
pq1GKihuX9DYRWcq2J3wlgDnRuHRKVE/HWYC7ivPvOHc0AYT3gXebhE00JX/
+XbGbgmHrUcfnWwh4dktco8uTFUCQeRcj6JBItYbtB1xPzWE6srE69st6yBC
hOdI09kRePOsfv2rSzemPE1IYhMaRhrpOO6tXsZxm3hFF4cCeHrciq3SbB1v
/Ss06mcrBTFvo5j0Y0PI+0L78+GKBSixECtnZplEqX+JLBp8RLBkb47afYcI
f+P5mUQp5dC55toyvGsRd8t2vnnhvgS1Gfci9buZC/y+T8kfFsvDTsV3ZveS
ZjBCY6hUWmAEFYhdhw+opuLt208UZNg2FXR/LS7wjNlU4BRdWSTMNQt7k4mp
lHez6GQrW6WSSAdCqqADcewXuDnx+Yaw9MMDr85HC0+nYE1+ZNnwWDBQ065a
cUkPY2GL2G6OTwNw3rPzanY1Fb6/ujisJTWJ+tL3ubRm2zB119Cp+CwKfviw
7fKv7AXYttQ3NekaBh82N/9IdkqAKomq/R8dq6C6U9xORHVjXwS+uk7kVEPM
6+CXLosryF5e6mvN+Bs1jPaW66r+gsLVnQmlHXPYC/zHpFcXMd7b3ulDYzrE
riqddKvuRJE9J85E2xGh5Imad6EECT767XlbIjuNrc0/yjK5qSBUKl+aLdwA
yiUZ6FFWhfqEPt/eXTOgo6D2qjueiETes0/KjpAwkb2x9JIbo7JGofKmyZv9
qMuplOXXvo4PDd7FEX4MYdilhj9k/m9o99Ir9JLrPLzk9KHFGgzi5tr9JPYv
+SAbGqwce3gOxl4cLHsnVAoefx7IVcilwq4mpU1T1jPomEP8ycJXia/dk8U6
ozrx1ekHq40bHCx85Ml+hfut+Onth8ng7UsocONYesNREpp+47HbsGfM3dL5
+d36AjA9OBSwC4vxS7DpiU1Ji/Av81eBNFsqPow7kVocRwCL4dW6HoF1GItn
mNgiOA6sXiHPBU1HkXkuziwhmQ538usSLWXYlTVPaUgE3hjGO2IxgsL+pVhQ
3Xhmy+0CIG9338s2kIk6M5UPernmEapnCvWzuoEhOkRn351JOLZ7aeLMkjsM
x98eEvbvBi39Ebu9al2or/21EUcrgBRnvmeVjw4ahUa8MdsL8SCDEX9kTScc
GjlazvuuFw+y3jjnbdcFuebxFzOvjeGmucPWbkdT4bc2y70bzxux+dHeYh39
MRTvCSdzRA7BaGyqrp71P3hsUi4ROd2CLdL1ml8PbPS4VNV+v+fTQOBY/Ow/
PQ7mnyz/MBbSwMl0RHEvKw2uDZ84+/RXL3rXu1zoMSXBiJChTWzbRq/k3tq0
79wMumdHEkw2er3BVfbOvrs5aPnfcn24Oh2f/b3FzfPfDEqJDyZU/xxClvJA
B6tzZBCoOlD6SoUCdWezIpgb29Go84evdVwInhKXM2RRLUZ+/5MMadN0cGT1
qA41r0TbtNAAJcokqFQnTad9KIFLlT6ZFrlDEL75eKxFZyXuGp9PDDLtxWVz
T4Us5zmsN70YXSYxASlyKNFmQUbHMcaRODsS9ljP+954TIcjO1yedR4uQ4uY
7WENV6qxJP5vNCmISbmIFK4pdJyITHMPzvSYxSAEnfzEqFqC0vcPSX3yHkMd
mxMOClcJGBW791yaPwUmP7+I7UxpxrS9k0Um/mtwpJylK69qDlSVJQiux/rh
WX534v6Ujf/yB1m6BXXiHJ2Xx4BnEVMv3vyycRxA90ze0KN9c1jAaC7FYVII
yb7+lduX/uJ6iMrn16EjsMgztifvShc67kqSs81bAPne4uTOrd/Baqd3k17E
XxiKlenzHemG41lOD8qpTTAb3XBrNZaOg5j0q507HU4uaEUaBVbg/XPhEilR
ZHAtVxvZEugLy0cGxJ+9ooMs64OBJ0cmIGRPeOdb3m6crHiTNcFJgksd+fu5
zYj4SPOYor/aEpxzDQ2c7OqBrZMTvCtRM3D1T3DLZ7VWePdfvKb0eg/Sok8V
dt8YQIK9GCr4r0PY3gs+PItU7My6jaLJneCgt01sqGkapfj5jNsD/6Lyv3QR
U8EaIHgblEpwjQDHQXHmnQp1yDSfQVYensRpKeXnocfSoOFAK8XpIx2bhYPL
tBwW8aTETY9Z+V58G4KUnQ7Myv7zmUr7oQ+9Hz5LeM2bhyfVLhvtftWMWym+
a5eMRuDKQGvAgbkG5EkZ9KEOjEG2ZsiFPYFUIGTk5HEl0TGGcn1P9Vwz5k1t
/66kRkb9imGOn9+p+Pqtz2RKJkNBm+dTxadTvUA+PN1t29QFw0c0kyfap/G3
ATd9AHphdK/NuHVCO7ZfPnRIQa8Mo9cqYuwYSfCrrtTvtWIL6jLeFXJMb8Ys
4omTgz5jMCfbxXhx0xz0cd6/qSFbAFdSPF7pj1LwvKjpgzvuxbB1BAu3XCzB
txfKps/fnsKVsPYezYwJ4PF5+fG5ah6sGyvONl1pArrbv+g11mV0vbVW8eLy
OChFdPu5/o6CArq3C4c8ERkOONbv314AR9vuLOZ/ocMTu4hefcIE6Nc1KeVb
buT27vvrAdPV2Ow7aGcik4BOlXYVfNeisEHkS2/0HLPygN1wo2ffFGpeY1k/
O90DJYZ+AaVyLWgn7bTzAd8MmE4lK3JtrYG+Ko2OYikaVB3aGWEwOQGTRZWp
MsZ0vHhQO0Zgww9CJ0dKk//mwjchen3I9CSwRm5xZbnJqHyMT/OJp1QHcJxb
Pr0/sXWDe+MKllvnMPv+9CHGHURU/r37UwhvF+pavX2wZVsRjogM9xIYZ1BY
vEtm13UaVndUEDMM2At2545F/RNZAg52rYBbciNwNFTemjbWDIdLGjPSB0nQ
eiDx7x/TGXjz/bpK9MkO0IwIz2dNX4U21/lMWXECjC6Wb1JSJGG3+muC+Jls
HPCRo5dfK4Jkd4lMYkU//t37MrmfvRDaFHnHzD6k4eYvzl5zjwlAcBQSUOBc
QclvZz1/tTXjwEEVLvlrPUDXIG2XUGmHS54coZu5/gBNdevvFo8FYDiY4xeu
PANN7985mrWtwJmFwq96LVNwlcXTIr6mCKn1FKeRZ8MYLEQXoYXXYNvhuNcO
jn/wVSVXojSQsTDva/LgSwqwlLa7e6c0Qlu/T1iDdD980fbbRtlcC7q1wvU8
mQQ865PbISQwB8SfbkfEhHPxeDz6fUqgwF1/1Zufd7aiotlnheCrY2DSPPl6
ZgeLco3IfMgUoQPyBR1Knm7kw2DVZ/+Zn5uUHXs5RN9+paD6g2KDnWHdGG9n
XKwRuHGnL3rpBmym4+3jy7b+fJ9xtdOa6Be2CglTvqXnv7TB5rEPMk8DNjjO
4urzoaNjeOqonCxzxQ88UfDt0cepdJS9JSyhFsSgrKG6xWxidnPBauWwOr79
CtEeRUM79rQBL+XZl4DyCfDheREYxzEMLea3G302+PGMTqHUttvjMHGr9e0e
eQZlwyH2mbrfU+grt/rgPh8VvBNETv0xnAOTqkiPswx/kUHv+FrR5WXcYnf3
hqBKLbBl7TPLkVgG4+3v7n7RGkXf0alSvrQhvE7x02XILYOnPUEE7rJl7JN/
VfnCohot+LsJwVYrGJ+JotFtI8h5vyBLV7sVTNn2XUz95omiMXnRN57VgtLM
05uDSdPY0RlR+yBmCAe7w5OiT9XC85YzJmptfehVkpi7STMFmxWr2/M6euCJ
8HRIBYFBOVC6R/3DrSXIdnZ50nugBwnmm/bCt1Z0JRa+P/m7Bh4ab1WeM5sD
W/eLeYbhG/uWmcLlw1cJ3H6Knlxq69gXN3c0KuU9jN3hvhLSzVoAdv6jfKP9
IL+TwT+nkAqjafureqMqsOn6zg+N48sQUlnrpHxjBiouCx9i3FyBKgsXzB3k
Fv7HcHm4U8GGcdhsyigNKomGFCVKWY9QGSUVJSQjPikpQkNlZIQKGVlJaBmR
neo59t57cxzrWGc6ts8/8F7X+7zP+/vdNyTd89/aMUYDm05Trvemrbj9+Efx
8+qD4D9233eokoT6IeVyHN0FEHNr1PfyJgaap84V1QAdGfIe22NZ03CU49he
bWEKct86GaUm/xu1X9rHcVt3wdbRivqajtV+7xIueWOYD8/ObuVz6yOCWl7r
EcksMuwWOzw7mUoGvvh/FPKXdpBzXo4zODgG/wpKKR8bx+Dag29riRGrHNrQ
eqpi1TfK6WHRxirJ2Pkhy+p5yAxof//uOWRGxfPn2dmKepowYERmPeXkLBa9
HwprLh4Cqqzh3MmFPMhsngjbw05EIeNUqSPv2rFNf43Z4okhkF4UZzv6twks
78V3rtlQAgIyIp8MfKfR0HDroX1yw3hQYuFllfA4xB3nl+LsJEA3DNSwtqah
ccZ1fY5rawkm2+1e0e064MqTqxWORYVwx2LhUNaZOfh4evb55sQ+ZN7btLnb
pwQ9yiwe3WjmIEiPJK2QfMvBy0CiPu5nMxh650jzyw2hqs3FuBVlFtBCznNL
BbahcfQu8yQvGgyJUQ48d2+HpSTgmrCnQbdGa3NYEws2TM0uhme5ofRd4+u0
x4MYcHPXrO4QCV0OqchJZRDhGrGl99W6aRQWORpJla2DitNX9esShjFJ+ejl
Kf90rMk4FSvoR0EpHm/hFi8WONque+DoyYR3W7IOMXf0YoGDcMjV9D+YpU3Y
emw7DWIu6GbrWvfjpYUWuwecDKx/hRpD91fgFZFy8rQ8Eyr5ObW5QlpAjPvv
vcGhSbgnJPHXa+wfHLN+8+Oj4wjGqluUnSSOwN1R/xDT5D5Q3Jgz8KaYgsTL
i57E5HZsJQesbD43g7ai37XS1JloMS6+P9K6BzeUCmpKbR5Bt48pN749+4Fe
m10yOvMZEOvvNtfG1wwb0khF/LNtqLVPZVJ0jRMGTIvMzA0zoeXlHi4ZUite
H+ca2nxllUufHzZ8By2YZ2n7l3p3Chotmlz483pR7vPwKXcBImQl3y68vNSO
0Xc9eAfrx0GQLCG5LZKK7t3txsNZ43BmqVS21n0OuyqzvjQqjaAq1+uNkYcp
6OqpnsmbMAgqm2Y8RI2ncE2Le/fTP0SMyv9QS7aJgvuexv+qdFZz5qnDnk8K
yzi14U1jVRcZWGyl7uFKdHC3JhYry7TBS90vnx/3UrDm17+suue9mP/7Q5jb
/ja4JWX4IefmIvSOEYpMjQag2mPkw3J1G2zzOBR+36MdRm7pbr/yph2th55m
XhWvx4Q3Z7I5gIra60VUCOtnYCmb/+jt9ETokx2KaiMOQZ/6r5BttbNo8/rh
K39fNtV1oPWGq5KO1t+lTmktkXE9aeXWs1U+Pi/uUiVnSMZLmesaAwfpGNRl
V8KYJ8Hxs1lcWV9KkItE/1wczUawUE5j8ytpQ9y3Q/pz5hK23xxg+7J3ADuS
A68YpA9gUlrTThqMYrCycGG8VjB2SB7cX53fjFtR+qKPSyZOPyz0b5IYB/uH
vCU9dRT0PRGm+/jcEswr1PwlXGWh28olPf5rSVh4y2NsJnEOV15GnZuiz2KM
YY654Yl2OOwVkWaX9BsuJH7U7VEhIkF5rKHgbgWq0t42L0XN4id3f8aW4mzU
NlIKD2NM4B2ZN2WzN9gJXiN8oR9X3xefbzhytZSDkMu7JtJZbxoevl/H59o8
AkkFP4obWusxRddZ2i1nAnjav51Y+jUAEdum+Dv3sqt6fJKYL2abwrsbW6fn
HpJA0bRcRravGjUdJkPuSXai4BnbVj5hJn6phoO7ail4mdvyzFmVGbC/0TfX
oUMFl2LZvmeajfD651KVjg4dk3ZljRtWzQGuV/1iYsGA8MR3p2J0V3nlzH/h
nLRZ+Bw4sX1NGw1uzP1SgEUKvPScv/frfRhcM9599rVbP45UOSyUVlIxMMxA
ADdW4xe/r9d8+UYx59W8xL8TBbBUxs9/bXs/pCuT9Prah2C29fBvehYRaT06
HiqVC3jpau1kzRtOgspC3JO8rd1Art9bSJKfgietS9vPncqBB+4E8saiCswT
Gi9hk2JCyJL8WKUXE1Xec+8OeT0EAi25M9nNk7C5/fzGSU42VRsB6ZyyK8ng
3HXdMeZvM1gZfb374eEcitFTD975RweS2QPurjVcqqr0tbdmnjPgsuQs0V9t
DLVvpmKU3zSeePNtT2gOA/LJw3t941jABZZVz57Pofjx23MHfy7DVrU/f4lO
FLjX3Vs3+KEOzzn+ZAQ3dKHxDcqxvPVjcNI2b4fE7n542TSyb2JTD+TOfhBO
F1p95/f13H9sJ+DO2ecyjn/pEAf9feeutCLfE78rEbYDqBWnznGWOIFX9XTO
bHwwhUndfXlvf5ajkpLmv0cBVTi5lSqd31IKu+Kd776pHIfHIbunb9OI0HYt
Lnk8JhNHOpKrem4MQ1CF7aHlunooF98S3Bs0hLRMHr3lulaYfLzxbE4WA7Uj
rpi6kThVv4xdSsoTmQeRJ2HMO7KNWL/jvoDyWTaCMs+G6t9Wi3g8qELlYBwF
cpICBl+I0uBLPqFd52c5xCz7Z/OfnAEZv9ZQ7uOTGF08LuCs0QMZB3WPJc71
gNHHkJ18TwdBxjLp+o3wYqTF3gx4vprfFj+Uhxo5m0FzjcaqS9ZglG6C3oe+
drhwLrMRLMaAwpSLzuCuxkcHFkx7BQfxR9x5kRI9GvbbaTD1BT+B/VZJP+Lv
WYwlbdUbaGhDwReKb7bsaYHZ0k3SwuJUeHXn0lbBdzPIdm19Uer9CTxJVnl5
y38Jbac0llOog/DA93RE6dQw+MarnZ76sQhdMR/jA0y/Q9yVbVI2gk2oqyzW
/t+ZelTdvN+Wz60dath3UApH2jHmpstga20lWL4YuKdAHsffiqV9vC88UPD3
2pj3x+Zwf4nRZyX31XwUssrma6yB/eszHwUNjoJ6ZVvft6h+sNwdeY5XqwLd
9mXNLq3PgaC59VvOnSWDu+KC3qu+btyVdNLWv3UUbX2XndyvjeKtr2uTtBRn
sHff+XeFJhWwRSTb7lzBInaEHBlK8kf8LX+L3diHimz/Gf5VG2gGOeND+2IF
G1b99Pqu33/ZCH6GV0cPXvoFZvO371KMaKC/0phUeLQY1q/pmLQodISbvGmH
2fNZcDi8eDrYigWCfEdy/O4VYKSER9O19gG8ZP1q55LsGIa1OPm6RNOQX9ez
yoVv1Ss4pwLt7zSh2bJEr1jaAKxN0WQqHirFyDntiw/FGjH0tM8ho4V+1O+d
vC+dwU6IXybHkv9W4lmLylGe6SqMsEtf1/6oC59wSd8a7aiHcyOyZTZ+1Tgr
9t/1NctUVFPW017h6QWxUzALfQxkid/278Iu2MKvfT7jaRAUblLWKg9lU/1+
8v5s3nYOwlEbUh5nHAUX30sax7jNo2yfIX+xAQ1v2p7gmshOxdYkQa/S9n4k
Pb2l8+5PG0j539p3rn0KH6vZfa7kn4La1M2+TkezsMbOJy70bi0e7/4VklQ1
gcci9S5v2tkJF6KML9npt4Hyg7NxYfwDoBa0oGYcPgm/EpMzP+0noa9A7bUX
D2bxI/8bqxPu3jBT6yI1618Jw3dEu21o3ZC2aEeZ8hmDyMPb2P+6pUHtYwNh
9xtktHjFKdgvWg4nzc8Xqh0cQrf98tKFd9YRCl5oW+R1DUKmOfepL6+YcGxQ
mRETVwIfn7RkjN+fh7lk7uPJx9hUSRY7FQu/cBM67Og2UaFNkNC+SzZYKhOs
7q6R/TG8DJZlpPIjFT340nTURfTSEP7KbfNu+UjEd2t4uB8HNuKXodemJ1a9
Ye5SuxosryH8TX6bFSQwit5BD1lm8ewEhuBktsPJMXCefKbYe6YMy1nzYqcT
+vFrufNJn92DwBm8u7iLNg1fdju/v/ffMBQ4d1aFXxrHX0eqt5eoZMHKLup3
hRtLUH0zP8mPOw54uRSHpXlaYeWBKP15cxfwZsl5fT+ZBx+/Hn72fC8TQx4c
kjV5O4qRgryqXnaLqGa5fmNw7DLctUtr+Lu1HwyoabnbqtaonlZTWyBqzmJW
cH+XBfcAPC1eaJhUZ+CgivVJV3INxopSig9ZshMKO0qule1k4XcfGaFMOgXy
DL9p08634G3OXTvDLyzjHcuBU+RV7s7nlr1vv+MrXJ1tOFifvso/64oIERpk
vLsuNHpXeAf6XC3RcVjsBZfXxfKXE+m4+99JRVM5Agb5h9xxeheO/xwmffJ4
fuPXKx+eHC4ZwSclZWOS7Cy02rbz4qGs1b6uXi4c/kcB9X5n2Rc7elb34FrB
6cOTmH7Do/b3o0FUZ9RkvTwzj3scxgRqb9Qjl+gH2kuFGUx2PTRrt4GO53bV
2PINTOKEkpHIz/YycApSmX8d0AaNL3fE3LYagiEDjwNBF6lQLB756/IgFQ5v
S021LedU3ZhTSZcJbcBbzrwma3IGUOZ6fnjz4BQsxVptfUviUHUa6tTjbh2E
hBFz4YOhc2hNtGNrjBtCB1ZmRvTkInDQr6r8Mh5B5fs+r1LKR1DawDPzDf+H
1f91tMzwZDkK+BvqSfPOozZP0UzO6VG8X187eJPYjkEmt613fZvAW6VsbVVv
E4BRr37OOvsPMsJv/bIJa8HB1BiXB2I/4bjW7oEfbnP4OZqDKZw5CGXdMWx/
Uwfx7CanM9nDGfgvRNMw/+ME1C8PTscpLUPLs8IHx+ZfAHdilpfRYSLe/Cu9
9uCqH9+6vE2YuaMI7r7sU/nNuYBnb+jKXLBkgfef4ZrjMySIfZjwUKygAJdN
aOf4Dg3BmHvgPKfZGDjBejvPrSNQGWAfzd02D09Ib3c6Vw2j/Ku43pzACYhf
P/huiyEFVae6ea7gdzD3r6BFO83g8ulfRjybKzAsqujuhgulKJJQN7NJhAJN
AY4B3/YygJe5y+Dw+QFkGJUpGH2dhHcbrUy1u71QyC53i60EDX0L+DseMxfg
sW2PNa2/ATOdSJLNRwdBQlqyI6wsG2sJA9zJskvgdeLQlNeBGehu3r3pVg4R
7zyTdXHY0QSvB19sdM5pRWfuvI/dgQysID336OAcx83Et/3UyE4k20TGnHvG
rco7WBX24nwdGOsnHzi4bQT/61u5fNutC/3PS+rRGhA2F6sQtadHUE3YrXzc
gAVCLPXBDiUmWEoLatyAKVDVDvzxBx3h4QWJpq9Gpbjz7T+bPUwi3Gm2m4gI
HcTXNXbV0M2u+kq88UtvVRuS5aksggQJ5Q4JyF1RREjc3lz+c4KElS4XYqW4
aqG5ztOGujl8lescJFzMx/ByoMjV3yp/cC5bLtSaXA4vy9y/GdylwLHy/yq0
0mnghc96NLfRweCGp5U1TzPCo//MmsupSCME+TPLJvCi2rzw+300EHVXKR1f
9dSz+xt+kk70Yv+vt9XXDRuw0nDLcgQ9Ayt/LwbtfDmI10ui/aWb2FXX9Iu/
PRYzDtW8YduvvSChsM/9Mq6zk1BGL7jp7UlDy043SwN+NzzMl5QURSGDw2P9
nwXtnATBfob1wtYsuN2VLXujioXBbDl8M3vHsSxT/UFMKBMP1Ccft3Kgw+iZ
huCVh6NInhZjqubnw7pOF01xgRYwv78lV2iCANzfNONUT1VAhGWy2Os9FNhO
3/p0u0wXXopefK0Tw8Ikz/u3A1mTWJ9zf07l9QS8dmGbut9aD56Sp4jTnUQM
TtBhhudT8VT2xg/7AqYgvfej3IY/fcC6K1/XPpgBOex8ccp7RmHws/DSRGkj
PvXfMOFHq8VdLjm4Y28esulUrg1rpGI31ya9s2NDKLr/VmfiwAp8rmtuFMia
gNGvdWu2LwTh0yjBhB1vp1BE5aWa0c8J/FHwVGv0PCdBa7OKhMGTUYiR2uYj
OMKCzdvHWrZqLaH3ybUXLgX9glb7+pXH/ssQ0PwhRK2Lid/alvwyCxiwf9YL
PR9lY1E0if2UOxn29pd8phrOwphCg2rDJA32bFXR1MxNRbewgJHVlQT3hT1Z
G/IaQP2IUtXO1Z7h/0SJPzozjbsCNKucTCnQFVX744D+LOwMcg6u/ZgCu/4r
vKx9sBpKlCwFftUvwEgPL9cpbwrevrlQtnNqEu2Vbs5ub6OD2cYc4YBTy5ik
YPo68CoVQrgaLbR4OVUfVB7sVhxeAYEdIWa/fAg496+ODXcygJOj3yeFdww4
nbbwBFuR0fyowtzyNhIeeBQZ9qirFZWC2fYlPKWAxu23V75LrHrfQ6mAWtMR
JAkrm5w51gWPU5WeIyUbX1+RqLOx7QQiTZ765A4Vnwftz7jHUY27KvbclrHj
JNCGFz2vZVFw+vjHj9wFv7H07dTbAO9RJHBlLj2rX4SSG/6tMtL1oO9nrHQx
YxB5rBoVwuencHQs5P3o0Vac9A4MjLWcBvW1lVGXlEjoHvfBa1GtEThm/5s0
E+iDXRy/zKp+jMKF6OOBtZ4FuOD9VQXFEIbn+872+JTh0txCxqbpcvie3e4k
tmcOhT01Dldzp6NmtPTP/VUU9M46xWXOzURrAStRs/FwVC6ZVeyVZWFYs1Kq
5XoWclhpyy1wkjD/W7v01uRpNPO4lHGzYRi0txu7LjlEos96uWtKXhyE/Gkd
cm9iC37+ZbZkso6NwDpAZjhXsRHWUQvpj5dqMOxJX8J5bRpuaRHfI+JYDzmH
FSmXnckYbHP6zs+Wx3A5rDxw328iXHWmC0+5JoKIoNU3M+MuYGWPestHpoPf
xMOad7Z0fCkVf1dn6yKo5m6snjUkwuJK0N9Cn0rgjaE+tHiFMEG3y396phM8
VONzVMy+wdEvLo+Xt1TCibcvMy7pN0PZo8tfbqv3wAGBgYLyfS2w8MZtkvCi
Axa82/7LvdWFy3RSkNJoAWwnKvd84unCR9HnLcd5Z6D93UHx990t8Ez+0yyP
DBUDqqt/6IY2ooXvWWlRswHwUHNubFSYRhORLZ1zvdyEYeoRaaITFTkr/p3o
ODoN8qezyAeetcAa4wdl7SYDYLE18aDPqzbMqmPQXrXMgvoVDXv14SE4f5HS
3zLcAkUPtKeZNoMovAKv0hJYWMDP84YTB/BYTRNPud8U+EZu333RpBVUOF/r
lPSUoNvynBD/RA46GPGmsK/6VjaN99asVQ9ODFwL/O3RgbrJ95Jvco1Bx57z
WgOv29DvMS328vceNFl3kqCv0A279U+yPHVW8Iy2WbPLq340HQ/6zBFBhOx9
8QcfjQ1g5H8djZqdJHRgWmwXWM1nf2QKsqfNoruqK//utlJMvpFcoWCaBYUX
RiM6YjLB+VsEMcy3HhwsBS3X8ZGhODCGHFKej2HlqTy5/yXgcFbkSQ5/Em49
3ay1bNyIx8YPVv6QawJrxxO6wT2chKpz9edyFQugqak/2ayOBpNcIRY6b6jQ
ZPp2/KL/MH4eb1E83D4F8ZbiO8mzZMwUsunbLv9s1QdIjNgDdJx48vtB6+V6
9DOJ31G5jo6l53QGk+hD0PK4Rbu1dQbiXjvxvvOph/rJ6oaUsmn8MSnr7qZQ
AZ+ffHOkaHCo3q1Q6+zc1IfNneZbi50H0LjHqz7SrAu1XHRq3brL8e7O3xs/
SrSBZbfEK+BZQNfxxCdpWZ9htvNfMx9fIz7+fbymdXc9ZOgV0axWvfJID6+e
icU8tjXknRq9SIGUz8qGB7OC0OnOj0kFga+oxsXxR1piGV1ULv1cN9ONQTad
oHBzDl2kz5TuSC4GXZ7QH98rsrDE0HBbhVUiaKxxF+QzbsHjhluub3rfjWVJ
rhd50jlVd9CPFOgcpUNotcSey/viMeWF4i4YJEG0gofggEIPlvy3/nH9HSoc
v2FqPxzfBELmqo9Nv7Kras41RmzrGUffPKPNLfcakGd/42bdi+UoX1il6Gmz
gt7+FeHPAypR97R6pA4PO8Hqd3YDTwQVNRxDekeONYDBLm8FRWEGTH6Ot324
bRR8o4ICfG+RYevaDAMfAwLu3/jZ8ojgCLpkCpmN/fHDPWr8ruZy02jdut6m
fomFt/7rS0obGsMj6/I3WilQQDI0R8nFkQTeT6uc7hQyoHFWeSkvnwSTHcUW
Cpdn4ODWH7Ma8hyqO0qDxV5pj2LB5eeqtnmD8IHNyPbllzF0TlfjcnUehRM5
18eIpBqY0R8PyJKZgIv6JELrPRZG/zN8s8ttAC5R1LnkRyZRPl7qeYvuMhJT
nfeuC27Hm/+5HiC1U5Bz/JITS30Zuwsubu1QmQK5T5ZD+IIC4k2FWSOXBmFH
ze7uqYcj8PdKb2Tzh0Vofa2iHGs8jZ4fk8wC7CcwJn3YOVlpHolyydUFGUM4
xWlq35C+iBnNGgItVCqsV2x7uC+PgzD+KYKYsrEBqraY79MTmsKxe4bLs/M9
yFSzSL59YBBT0nsE86cGgF9x879hpQX48PPfMVFBBiZK1evvuMhE/m2VYuMH
Vz1nKkH1vu4sNBfXzN32q8LL8YUbqiKYUHv/tO3z0CxYC+FS9jy1eKphb4M9
iw4nvsYupXKTcXyv7Q+nQxOo9HLzhSkPDtUv59zY3H5RgfvqxS8P3avxyMkU
pydeq5zbrWDEv58JtwQcLMV3E4GVoa27pDMKgWabczXjaKiTJ7CgGl6A9R2a
cnSrJsy4Q9dZ2E+HF4np4w1KnKoffu7xlCExMXnNvux+7ly4IAsuu4jjIDgf
KVa+8hmlfX4IvDQbhevNitz1RylQ/6kqfd21SjDanF9tv5ACJXoeMT13R7BU
Nze2zJsBvbN8LVpGTIy7Wx37/kI/OB7JYbIP10JXS0p7ij8Fq52uvrcYXk+I
EtqRvLRuGpg5FrFKk53w8aW61FLKMCwPqKnyWbMT7LUsxIPjSmFB5pPrZcMx
GBXyc9BnX1j1801zioqD8G0o6c/tJQZ8Db1Weex8H9y6Mq2zJ58MVnZyIY6R
U7jtOHvcr9V5+E268z7nHcd/7e5BZ55UQ/iDyuOM+WnsCiPpluSQgEvY6rNU
WwcGYu+LZmMi8CpcbSq70I87CekRThIjeGj9mleqk7/geq/e9jL9CWAMNzou
nWeCsYqCW+7ZWfy+ZirbQIUANRtchEh0MrTnbeH9pl8CXMx1HfwyJPj2yVij
nTmIRg6jX47unsOfvFO/dEUXcN+oyFODwyu4x1Mh9HL6KCZMfDgd+4eC93Jn
eY1+NsDB31zs9ic6MA9jZfy3/EUWN/tXatssOv07JXrPdhC+VAW1LhwchY/k
zqCu9EUwMBKWNeHtg5Jb0vsuKlehnpu2FHGGDJ9tFFOChZcgZTLKbb1WF5LY
jCs5DkygFEOiKvfdJDx+xx0oeLMHxu55bliZnoD8y8+GKhP70H0dKXEgMQVe
D7W6Mc5/A/FrxnF7StogCOWUPZX6gVVUz5/J245fghIeyepW4x4bt9otq//5
esEh43NBLXBEYuyMKjTCJ1278ftEKuq1qDALmgfRIVqG031wEH5GNbwUlW7F
YVW2mY8nFiBgVrE2xKsRJbifOnzuYCPwJ36QzZZPx7ccfuxtt+vgoPQk/8vj
TPQZ2PcyntUE3I0P1L2GRqBM14/x63kVunoRx/Q3rKCtQYK44OrcXTHZ5OSz
fhCtBp2ZejpmPUz7oYCTMC9VOnL/0yT8lYyvln8QDeOhCxXPHIaQTNhz3rpw
CERz5iTTGqkg5rvd4oxHHy7x5Wk9WsnHgBm+tLWvqbDca8yaXs2rb3Nq54Uk
v6E85XDCSfLqvPZvMle4z6X61mzuwb1dmRiXF3o4ZfQRnHsZzSd2qB8Y1mdC
qcfqoW3dR/UbKVP4aMA/8fbqvMe9xZ+rPGoDXQWfbbk2/ZB2RSR3w1kKXKQe
s43pS8N6mXVrm0KG8Zq9vuG7ey24pNvT9uphAd7f/9qq614tFk2fUeefo2PX
mhyZ7TH3oG632AvlcwP4rMrghYrJGLSkz37+6zOHXd3bKxwCm6FCqvVTfjcB
/lPKhdipcdwod0I+bisTz/H86jxUlgomrL8yQxveY0YZxi9OEWB2l4UG228G
3m8XnkqRaIcAR8FCZ8MhTLc7pbxfuhEzeNx9N0n1g+GLdYsuHCNo+4JP9tNY
Hsy1TN58bMmE2JgYas78NHhni5ocMJoBOsPyqEIqHazb3xi9imuHSte8j5Gv
mvGv4I9GtRwaOn6J2LRzqRPVULec91MVrrV5X73dYRbdeJz/2b3owkZ7w8Gs
Uje4UM7XctuhDJ/vW5tLzF7CH7/nSJeoLSi27qa03gARuttey3DdbIOjxcah
ZUdYqLwodf39ySlITnHZXfONjPpa9x7c1i0BXuoRgZnNhejufasy6GYj2mb/
E1drHUCHkML1eYd+Q8zejp3TCkzM7A+se0Ji4Wuhx484b6fjptu6UuM3hzEk
Q82tkToHxVqqJuflKLgHvIC16tPENj3XiFWecxqoJpwzZVPt2ao54b6/Cb/L
qwbb+7Crfp5SlPseOgLR+a7dRmZUmAsuz4xUHIOLS7qFBUpEWHNaluPB1BC4
V8c4mhnWgUwNJSHmehtGWBwf6hknYVDwLusXiZP4aGJerU6EU/UmsZv+UpxN
dfGXempqUyE4vxe94PdnDAQdf6w9SBmFR/tPKmT+nIRXSd8/8Jn2IaH/0Lan
GnHgkBBn5Ks8BH9iOG77fusEiXLBC9YPGGhBJ/N7xo1C6vv8qmBNBvZIbY5c
v74Ykj/fZh7e3YFrBTbNjoz2IXPtd92F5yPYrR3+ihlRjqmeAd2NBDZCyr7I
A9seMEHQJfVhx5YvUNQdPBX+3yJozf9nsm7VEzSFg3xvE0cwWzfjsskIE3oE
1FwrM9ugbuOZNzeLBkGk4FDmyAwVJT/EmW9wTsc7ZkHHAjaPAXehKdnjYzu2
+c6r+ypPgOpvM982qUY4HKT/1ORCL+pk/dzQUtGKhpumXq4xawDRydy7PIHz
GKq/NkpI0gW1HLnqZryGIeq2uJiTHgVeDHPzb5Wbw6t70g+4TZSAzX2dx5KN
NJh/IjJ/35KEXFKXCjMtF3ApKeB4oms9WnsbDh9emAS6UShJuZhN9c9uRdED
hks4FPc8WoOXCXiH96ac6ig0VD8wWMpjwPR1xcP6PRM4WnnFzsqMiV99lnWi
iph449h+vXf7f+P99RV/Lu5gYpBsGb/4jkHIH3vx4YfXIP5WP8Th8oQOvwOG
c6FvHE3Txp/vFfgKQR0RnWe7c5Hfo994x/sh2KpW88j80iz+WZEMo2lPgHmk
LP1CIQ2ung3zuF5DxITd20Z4rzBRI4ZN0d6HCqkJlx34FUhIPdnio6LTDzLv
hzLaOUqx65vuh3tlc/BTwvVC8e0yzDr5aqSmlAEnJaVfP1whA8/LHVoak22r
HvRna3ZeA9pwZT3XmM8ChzneoTfCdNTP0xNaPzqLcitt67haaUBv22rtv/sv
9Op4Hc1Z7W/rB2trrUfHwFlkrmtv+wJWJt2fnp+Zgu5fAycN/pFxJf53dufb
Mew17GXp/26E5tOFiYFDo0CjrTWpq+pEh9+nsuvEpvCK8cclnyUqro0/t5Pn
fBc6clzC+EsU1Nln5qQ5QMXTPeZamlKD4CV84nJ8XBNIRtXqq14h4+ClSn3L
VzSUCLh2xzwjBUcbDaP7m4bg06lebgnZCQC9k6WXT1LgJUFXQfrIOBw7LG12
1pECTTvkW2sK+5D0IDAzTZAIdXIrL3oWh1FzV0Cpmiu7qv+2YQfHgWZ48WAm
P52zF3d/HTTZlDSLNP0/mlEKLNyzzsh/4CIdqKnqCyEhXSjjp7dJ3GoOW36K
rb0m0oWls8Ujn56NwNMzOonfsqewMPTaBLG/E1TGkrOFg37B1agXbqUbZsCB
OaHTyEHEv7tCRhU2r3KBK2bpmIzhyPSulf37+uBzfZvbYkgP5nwO/uWRQISu
OQbnsZFeSDqfwfZCfxY6cdTqIxcRf1eFz9xWKwe9pz6xUwE0OMQxRSo2H0HP
OEnJMbUqvHl4D08PiQWH/uyUUNzahSd2vNozVNSJESIZjv1JQ0BTt+FdMzGA
X5sSy1mXu4HscLvq8T46sq7H3wnY3Q2kwTxZizVDuE1rgSZiMgGt/kP+RPMx
EDEsGm3nZlON3vg10lWaiiXM2UW4X4xLGrnf1zzuhD2dTz/tCR/A4eKw7ZOl
zSBMHNu+mDkGTnnX1rZThmC6oakrXpSFhxJHzGVXBiCfra17IqMVILzheEkE
A6mEh0f3RBWD2t0z4kbaRUgxmnRt/zEH3qnnb/8RGQPhDSrDRyWHcNfZ2VLV
bir8vljwa8OGdrBoPrvL2LcVnrBod9MuzQF5uMfmxql6TP4eqWLu2gf/OGY3
PU5pgadmqncX+ZughcNSYmgLC/bzXdtq79WFF3inbDZ8zIGx9z9OlF3PRW8D
7w2axjSUGW5XthQZQh+DCcN7jQxMnzkaEGC9VvV3Vsv9/cndkOD7teBsGAWb
LxLH4j2mIVvziLC/JwlIPNJvw6faIXugcI71KQ6evg8SXftvGA/rfSoyFm/C
oc6jZ/SeN+MKRnuIfugDyY0tdiUZRcC0YOx6sZkBG2mV/x4KLcOt46EvXURy
kNr+bmPIw2ko2/HzpNSxRLjzua2EVTAFL1podgmDc1CjXxjeLsiC2+bmtpQf
TLBhuPMPHZmA3jHWntITbKqiKfU22yOGwHIg7Ln6MSaue/vPQkOdDjwr75u2
DqXgX16nvjvNQ8BvhRoCxQ3wz1qywctuFPq9pNQ3kbuRQ2BjUNj+Odz/q9Bn
59l0lLCRFDVoG8C3h1yP1qUTMNa+rTv1TQecM/AUrdhKRIOrB3mc9q721K90
KTMbDoLpnxCpFOXVvnl1z7pyCw13j+98bcrRDkt3qFGnrdrQPmTq553aEbwR
5fuyT6ESZRLEKiVVhnF50jv0cnEhxExvUP37nQBxqSB9/VkjTBoZRTvarvbN
tOO2DYnTUON6dECCrxdadg7z/axoglolu5VxxgjodiZOlBqO41O1o4Tbvp3w
Ql9DXugdDa0KKuOjolf9aPgUi3SGuUrDfrtOnyZj0OKLkCNfh1fzkeNytd80
7FToI818ywWUmasVOdADEvcDlkKIFKB8Hf74Mb4VmdULaVTpDnBWDH0w7loL
p09qWPf40rDDzyZ25RYF1cDi2BaLdnQ4Plll/Zi56qFTqUSDKZxl8zqVk0KE
Z8KEKdmfY7hX5LyBJPcsjKtysQIfk+GP3N5NNQMsKFC98kcwjAJZ0coXTxv0
g3N96npTdzpedBW5caz4H/LU2Ly/dn0MHmlofTz/jJPQIkRxaCPOQEiZyRGu
J+wE9QCryOjEamgpKdMh887A893f2b96zeNaiXOlR95yqDY9v6blbd6MtuJf
5B+FTqAnkzxyLIACgeH9os1rqdDo6jV92j8MMogTB1/yL+GKSXVN/Moo8tfO
fH69On/1fWXbPmdM4Ptcku2o+gDWB4YN3KovhOPX9tZX3GsD2yu7rdddHsLr
bEYBF6Lo+GG0w7Z+qR+V+2oHyhOaYNzuuph1Mx3WRFDkZV0ZoBIxVevXTYKo
pgJHIeYU2sgdDFfiLoHTTjLy1wu5CE2909NK/9hVv5z+Tt4TzYCdK+qMC5fY
CBELFe5NnmO4S9LbUDylBJmjh8T07jLgeM7ShPGJCfxmoCifwjuA8ZP5bfZb
3sHPZ0bbJh9R0dNwcL/BUi82D/CamcvSsXftfqfO7yx0AlLT67oOYHdwf+rc
OIsysQ0lDrJdOPd+f4WdSB+67P4jW2o0CzN3g0bKwj7jqdqDd+NLitHuaK6F
kPYwPio22yv9pRS9gzSLZN3YVFMm2ZLkOcbwW1NX9G0BDsLdNrLQ3uVMzKqO
ye5Qmocf8da+Hw5Qod0sxLQihYTI+aU55E8bdh0qmx4vWYYNmjZtY/00eJT1
VLhLmIjfb5ZZb88fgvWVxZ9fak5hsucWEY1uEtocfd9yIogBmyp87Nhz56Bp
1096c9oEutYrNki2TkJ4Fiv0sngjtozUD+YRhiFE2V9sw2AiSlpmP8s9PIcx
4k5c6DwGVpmb1lh4rWCv1+irGwwOVY83IYxo8XowfVhzmaFLhKsytOi09VV4
OjhSdoi4el9GCvvgBBlOX6gV/aZIR/fR8W8vlwpA0FPjMJFWjVMqHyT97Iew
/dJmF1vRVvxytzMxr5eM2o03Ct8ujyJLlaOSeL0I9GIYEs13Gdh0TvI/no0V
mGL7fMPY0CSsfRy73ypwGCQuRi/cADbV5S2iZaTzORg4fFyyz6sb51P6HXo8
RrFsH1+xMw8JDwhxVtzd3oeFT3dkxWrOAu2KzDrWbyrE5wm+E/jCwvnRWOub
n6dAX1lc3ECFCTHPqkaPz7fBpoTCt81KdbDN1LJe924XbvSUIbdRPNHkvcgV
zel+2Ff2I5c8Mwncj4r8+h6NYapIUIsC/zIQEgcePng/iE4eUpvZL7fi9cOO
PFqB9WhetbORtHket1tklvwXUIa1VipnD9TQ4eDL6xIUuWEUWDpdonlyAKy+
KUtExtWB55HkGZvbo7D0/Ihnd+QoRpfgnW9CefjD8Uqw5kwPzv0JN/7kMYmX
uyZnomrb0F3gBWPg1wg2n9svGpDbDzPmVNdHs4MgP+Md6DY8D2vOqGia3hvF
nGPuhCZ9LoLpjb+XO9gHoPuPc6L4MA3K+Seoth4teLVu+50W0wGQjTATfaNP
wr059etOWDfhjx0Lwh+8qRhHu8JT8ZdN9dYR3oMhp1owg1vrOXK1gFLKK9GI
mmzwb7LQdTDuh1q3VMp6gULc5sF9s2YwEJTm2UrNeVrwfaxiYXBYA3byjh6K
02nHho5SVrnyElw3OBXwLmUajxZfHAjynwRRs5obskqzeHZiSeTQKu2kXRG/
bvu0BuXf6BO0nxXB7Ijc8rXXC8B7yj94GzUO9rQ42Q10TGCskeLpzsgWqArn
XB6froR+No0HXQpcquvqP/Wepbjim4roF6WC8+j0ITu23a4X1s7zvRltysfk
v3FpAvbduM1V9KF32DSmZJ34+7m8AB6/prl9tS3Aok0DNunmZKBt0Xy01bUf
OfgDHvvXd6DovQyBqC1UMBxyrz25vgfubA3uHfqPvJqjRuZzT4cg+uR77qi6
Box9VHUby2cw+eBlqYTtRNg1dso9xYOKFefb+TUU6MDe4fn1aewstAYvDN/4
l77KJYQLBzra4F3F7UfPjzIw60Oi9DF6OLbKEbTdDdaoFlrflWN5/kWnVxlH
3lqL4dXQiye11xEhHWQZTWVN4FHgosxzYrW/lA/XpnsvA+vsSlbMIhGEW7Yn
PIilo3yiUMehUDLOBFdw55ZQQbf77YD4sXcg1tD3JrR0BtO+RVFF1Kch9huQ
eypKcfygyLu3Z0j4nYOt8oX+CDjV2x5uFWxDTp0mwbfNVHj/FdS7IzeoEsit
Ns+laOinpf3taAgVIis+foxYX4IjTEbg0WMsyBH+WpjcOYGWRuSr7KscnCf1
n5Npvjdqy9Nrnp5hgQP7G0Z/WT3wmYh/DzZqg84/QvllW0uhUFwn+2PLHJy3
kS9VliiEb201Tlv29SLj986X7Cd7cKb3Usvb2WGUVTx0c+bcIHJdO/eo1L4b
RGZd1CSsBuB0LoFXe30zGv8+fshTsh6Xbl3w3bxExPP2Bubkg134xdtL/6b4
NH5Lf5vzaYWM9W03KjabdkKexeLBqdwfGG3MHvKvvhdecG85cdeHW5UvY5py
d00IjL/Vkz6qNYJ5BKHNNip9IGb2ZjdKLmN7huXu3ksVgDP+D776P4M9XSll
fOfo2JO2ZnFBbAaX+ueufK0iA5Y8MqYe41K9Le7oa2uziAuaE9cv7ptAZYc/
yq/Te+FnYL1rePQYFDsLPzt1h4SpSh17HGbpEPQhueNjMgNa76refpNaChXd
95u/MFjwpevpNbnydpDfXM4fwqCj8ZmjXVEaJPDvGfqzoToNTTT7fPMeDcGA
9fKNfcNUvHSAtyh+cRZt700+rnNthK8HTmwbPFyLA2XrZ15ndYLShdzks30U
uHldzEKouQIupKQdueNRC4UBH/ZV+o0CkTqjka7NgkxJTaN9zp3gyE2mdt/l
JDQKtFptTh2AkvDxbV5NLcCn0vt3S/EA/NJv+K3QQIfFgXNmvWnVsL4tyV3q
GQV6RzsiXm2ZB7HFfQ7Md/1I/ILGGq1jkHk6d5POZBHuZCxKKX8mIyuLyObt
noM+QXG6K7dWzyV8p0wY1IHTl3kRGTsGDFxXzFLP7QXn7/I3krKHQDqsoDZr
RyFemXompBQ0i7uf6uj6KVHgIVvnzGF7Ciz8Pn+LvrCAR24oEQ6QZ7D0S0fl
kQ3DMEodKkwDBnRddWm7tjYB7fhCqhSmm+CTRFiG7oZrMMbZ2HTVlwIardde
3BOJgsNUnYy7xE5k5mfpUjaPQf4215QVOwpenV3bVLeBCc7Dkq//20CGxcIT
X79dG8eY1+0dkm5j+L12z/Te/ikkavS36v43CTolzEIT+wZMGLGXlTrahUnX
Qs1/qhExWUM7k6hfjjs19tlfTcvBQsO/if89WkaT0kRHrxMVeMT8Zke1YwEm
sSbCp08/w192Slv7fxJxcsz3xj36Cn4vXHDkhAloJj2fyvDugIfcjSPbL5Qg
23+S1boHcnHNrr25L7VmkXm+eKTx3TC+jXsUOFZBgnCdyNMXbcfhv8AjKpXd
yxj8TLsmktSMh5rqFG8NzeJ5W273Z8/ZVCn7DqRHn/WEyGmqkd6lcjyStrEp
N7kBP09teGnKVYDlWR4Xcr72o87K4merXBr+iu+4dP3VBBYEXjikfCgDGp78
KWxcHMK3Z3a+o+iSMGLn9vA2mQYYf7oxXE1oFNfwXVt5HVOOe0NSDjtIkODs
T01Tjr2DcGxv4ab/Csvg/aeK9/sNRkHLrUN+bsMymu2lC2sGjMM1ibrm5aFW
PJh9nWskehByzVwLHY50wAM/Dff/OOsxwNFbNmcjDUZ0XZ7YKk7h7TMRln5P
iPjjnEde/RsipNS+4RBbKYPJs9/5+u3pSBJd8+QDzygcrfxqFp2+miufcrg+
TVFQ3rn9UmloDZwlCgqxTZNhqrnugWm8GQq6BPBtC6aBri6n7p+d9XD9LzXR
9Xc9jC5rrMhOjkBue9magtZFEO5WeDFqQ0YZP6tTkcf6kfY6/kVtDhUHCB+U
a6MpYO+wY1R/OwV+j0e8WzFvwHRjRs0GUSaY105F6N/sQW2lLv7BY33oiSFn
ShP7Qaq3q0zZjIlqHyOELz3thp8m37NldhRB9XPTLx4WpagZbiomnc+A79pq
XWkHWcAqzqS8oDPgmZh6L/lROyZwFOzQzJlB+vdfPnwJv3CdBN+bvh3xcD9c
MmjJpBu395ICrsf2g9UMOahAsAfZ/NgPRqqQ0HsuooEl0A63qLoch3snUG6b
l35o8hR8LPXWmKdSwOxQfDDnehrMpaj+k1ygQtDQ0xn4U4xsdxXLhQ40o1Fq
vaGUHBP19SPWzzsPYQLPctFTxiJQvVwbo24xkbfnafUQqxGmDdtOmw7/RKHo
HiGtdVSUNyFmjYi0AWn9IuHJPxbc+hz4wbOIgr/yz9izmc+Dlslj+cHgEhiX
UuMfrFiAER+rOK2cAvhslaxXxLcC/I6uXF2Z/fBPMi/liPYstls8++VkNYGb
meX++HUSmyfcvP5Md6GXWEo/SkSB5TAQR+/Vg2O8tPUVHhYIHdC5pyJIA+8c
co+kLgdBe9eda8Ie09itzqP8IpWK9dndB7TU++GUus+mhoBRlPkesDhpNwuO
lfuVTXuHgGR0iDu5bBGFtcpmCDcIyPH3Ba/1OQau388hWGKxCGUaYPDjJRN/
WY4N1T6lAlwQshd26cAaitLfyfBY7Jh2ut7VP4YjWk+LlKVLkFiY0B75moLk
neUtus3zIKdSMRUtFQZrB7wnwxxaoPf4vHjDj3Zk+Hdqp1wnQe/B3z7lmwdR
nn4zjWxDh3qT7/G1bOwEyuHpT59KKzBi+o3206kFePHr8LPi46NwqDtEkOpJ
hHpdqgmHGAvuXyzK9zWbQu3MlR9Cu1pBpoKft5g+gBwDuez6piNwx/W4tf9p
BhjGC9immo/AY5VHbUKfsiDV4o2Dp+A46FRN3lT/ScPGEdlDzpQptKXE/3lX
OQpnA0yupSjXwB5Hh3Whzj1wbrR28UDiEG5cLGSEzc7Bq1r/JP4QMp58Pxr9
17ECrh7SlK7xn0Xes010I4tRWGFv2pXmPo4SEWzHnxk3QdmRlU+04y0oprSL
b1pwEHcf/ctpdokKrV+f9JwSacf5hPTG9MJCML4TNzOYmQYN9E0f5stH0d53
Y7/KThLClaPBiY6DWH3Vw5fv3AD4eUwv23SOo37F5dKXymyqJkncY8oOJIif
FolN16fAax31T8KeLLB61Gh09y8TZUX0J+74kNA4PIcVcWoQxpXCvxfKdMJP
osY310+LeNHP8mTXf0RMmRYnDe7sxzRTC9qpLQ2QdGbqfs+lYPQSYJpK2Q5A
K+kW+6xBLZaXqjy7OZ4BH5xF5I4bseCt1gMPv4OD6CDjvC8mgYnf1e7sUND6
hHrl9kdLqiKgaxd3bGVvDVIfL1e2GNAxWCDZIlGrHPt4b2OpCBOs5aMCDa4T
QcIx/lVd0zhkbHiwZ8AoE7UHSkYjSloxdVL+sun3HozJ0JB1CPiEXP0EIZJw
F1C4Rt7ri1RiEbkotcwkBNk17U8fyx0Eo016NNNMKjy6uVXz7kIDlBv6PDz5
nAqDCfqPvd5Uo55py+eslBmMkdt1PNuSAltCL/qkhlGh5RnuvG9AxcXMQtP3
Wgww2c4VmhtKQsW6k2KXbpTBmMdNvbCZLqhzthvZ7k2Bf0LRnMLnevC9qMtN
IbVM4DKfTxRnb8ez9kYhvMRBpG6sbThlSUPRwr9D+H0INh7lXDm3rgWWhsJ2
iBSVoIDKf6i3ZQFv33H3lRabx4uShfbTcgxwNLbmtP7HoUp7eCkn9M4odgym
nI73HUchsZljw4FjePfest+Pv2QsedH/j2NkGpnvb77arTQG6nIPBhUrW7G3
U/RCNu8Sbrl0afLf1z4wddvPchhhgr/mV2srIyrc+uVYzophIzApLa+Hg8ch
cyYqeynqF0RLLL18bBuBP96YLup15eDv8myN/h4qxJ4xaosxIkOD26BSIhcV
GSe3qFeJlsLcwA4Xf48ZqFfEtpLNNFA/pQPK3J1ooP7JmSd2AWwqPDclsFjg
UqijPxnRAWHRkd9KWxfx1vFx63+sRqwNWFs4+YkKIxapZzLOVoGa5tXyCxUT
cONOsYtddiee9M5/lSzZjAPHtybeOMsCvjWEH1L8FWhOvfDZaLXPx4eFcvWk
yjHar4wtXnwKwgZ7+rnoNPAVnFZ4nrcEpdzH9Y2AAuw1KQLFCTRw0vZW8dox
jke+/XlxsjAeWgg2Q/H2RYDRXQbWxrXwbn4qUMy7DKHJNuvKHA1tX/FobMom
wqldj3vr/chw9ei2XI03dJh5rqeoozMKJioiBi4TFKDfPdKnbEhEQ7rdne9K
FbBDdd3n0axm6E+r3SVKrcGFiic7mmsmsem4Rd4eriI0vLpTry5kCbu/h24c
ARquFxkwd3sygdOp0trMM7NI2pdk4Cw2jv+4h/yMqitxWdde+WdyMTTIWQhf
72IjTBXa/H6oOg4unF53uGgVcGKLiO3D3dVQ2Ctzvyh5BPwPa+xXSKvC8onH
cY7zsRjMtRDSbdYPElHb3j7sGILTP3rfmFpTYZ4je3fs9DT4bEla/9GnBZj5
tUqkT41wcEQkjBIyC+VpX/voQeOgdUJlwyHtCij/csS18gENjZ4W7Yz7sZqP
t0n9rwg10LnmeefFOYS8RLURT/oozJ9ms0h4ScN5wemHYZ2D6DrcZPCRSYKD
g8uK9epsqtEOTQ0FSuMYutXwXBWZBvMjMs0+vCyczL36FLzoqFVxLcbu6hw0
5hDga3wXWFrMpDb+nYOo/44aqEs1o47K7VBy9wCY1JOq868x0WyN8aOWn5PQ
cChiKceOjuTbNUWCayh4s7AvP7qNicJn543E3CZxS1uco0VoFbQFUwO6zJbw
mcSztq66Vd7nDfGj9pXCjI24LxudCgSpH505U2MAnI5XW2pX8NO2+0ZlZzLA
E6K2zHxvgi2WoeyGCk1IeJ2poK6eDs9tDocd12yBYP63DdNaC+A1W6ASokzB
gB7ZZZ62Pqy2DSkOXCbD3nyNF+whFNi9+dLzysg+WCPo13RacRC9eodZofkE
aEv8r0+iYgHXF+acYPjRYZjw7s9PnUncyW7g+PNeK34LOUx5hRSsibW5/5E9
Fs3S1Cyjtfoh/N6rK7Sb/cD5QUrK4TQdj/16N8XH1o/n9uuNdDzqAV6z4Y+B
00vAb195CGXmUXpjLPdAUhuu22oqmlAxgsFJb+MNRrqxZciZu7uGirJ177++
yxkB9f2+kZ/UOAniPEIFhoL96BQb8EBhpBv6Jl5+cRf4CPo01yyb0TzgunrX
7pRyEdjIX2ov3jyN15s226e9awLSlZH7Sg8G4eZan6XtubNYrO0Xn5fNRrAd
zG3oHqOiQEkdt9c0EV9zNaalLZCgu7DNpn2WAZfHm4LOCAxD07jimm7FHuQR
bfYd9FjN71tNPI1pZOSS1KI/eF+HtzSPc6JvG8qJBesdHKrH1P69vDfMhxFz
LqnsYbTDnQNSBxNXmBjg8OzWk68MgGYNiy0rTVD4TW2jWNnqns3u9SwK+opC
mTIfRu814oNaNfu50j+wm6f1HdOCinLjrNPKW6hwXCvWTc69DgZ8PY/4PVhY
9drnBrYJyzjy0Pyq49Lqnrpeu7RXaAhtN2/YmHyNBg3CNv727+ZxxHJMZM3e
OaR3UebOFk0gi6n+ZK6rBSwOGkQXcpBBNvzLpxxxBj57rDZ8bKIK/UV6KEfe
MWC6LuHnCe9ODH1wvFXYm4l7tlvbdDn3I9tbq3ahzeNw1uRpxpoGFpClue80
eNLgL5FwlvKKigaeG48Pr2PgHfOoD3G9XRgWxRzjX+U02zi10Y/YAuladlK8
bd1wTNMkznFNH8Z0u6yI7qZjwb4tkuu5u0GR9VXeX/072BKezL+278b48N37
gmv/orm24qAAswgGLuae85ygws7Yb3u/ylOhuHb/hxs9RNyVbfdsWbETL09r
ZVZ/pyPr6ZeK8ZYkjNC/qjWzlopej/tiGOcn4a8/3dnWh4ib/H9xffQshPeh
9CePrdhUzbzfE0yyGDgHkuzPNtMwmHDfiMxFBe7IWtvrFwZQ4Z399tOURJx1
qn2sacKm+uS4Y6LGgXH4n4LzfqTyf+Ow9VFCQ2nQMCKSkCjCLUqFjISMIoUU
lVBWmipKijIzE5Kdve5j7733cY69Dw6Oka/vX/C81/16XdcvT/2hnhrTgE6o
7sk2cWIko9jLPWzWChNYoxjmLyc3DrLHJ0OJm/wbUyQmx5u/jsJtu367soVj
q/rFNMUnNHhAeW8R+3EQ038l0Rs8q8VLINQdJrkMC43JPNvTeoFTzJczQ34O
wsom0jSBhlwSZ5UsDrWCxpbPKpmc08hvyWF8fWUA0ypV8k6eoCe8Doy8g68K
8YRhT2Dq5ALw+/R55rl0Y8fd57l1c21w0RbWmkozIeaQqa6McjTGfvqhH9C5
gjmzvx8zjaYC+9cH5O0SFLRKto7XUmvFy+PN/B/o49Hszosz+idyYWdslMz4
wybwWgyh2mnQMKT24vplhjk8QfkpLSXSh6mc5qUi/IO4W4xX8PWublh7/Mz0
/O0lODp76F68UD+mL7qXVEeQYZJ36JvbQX/4yMAjdvL3DA5r1C54+C1iLoto
jZNZAzgFFuap1Y3hhZjrZyai2+GprSOnj8AU8OUy71xQrcXsSzwZOtcpcDvz
9wPa1jr44OUuK1zRiXuSg/fnHaXhw9897E3pI+Dr84idd28JcD6TcAgwbkUm
k+SfFXQIHB6Wc+1xC3DsbI5ciE0vmJ67LlXJ0I6u/+52jUvOIjVqr7yc/BCe
/hwjL355HRh1QhnZRpuQxMPi+Fx+DKN+eIkePTOOEx4xC5UNLbiFy0ey5t44
mDMnRr73KceJt1+kSYpLoCJqfa6KJxKeWJgcrBGfAe2YSn2hkjq4z62d/GuZ
hBdkPAY9JxbRY19Q/5/d5SjBrbLHIy4F3b+m6PqFNmL0ZM7Ui9UlJE0UPFD4
SsT47vPraaZ0BPF7DF8UCAsYvBT3h+XeHHyhXCw+EVyM1kqPbAu9VmGjVkm/
89QUHorJ95s9NgvL6iZaX13IqCdjfV8/YAajc+QDbv0ZxfsnDoGwTzeaFfKS
n3k0YWHugxv/7tbB4/kp869VCRirKhR07c8chtGYOn969sE/ybOSOdqekC9v
yP2HWoCrKp4PCZH+wOtpOjG5yV8VU3xn9GQa8Brvng6F3nx0uDn/sd6fhv8W
Ux2LOeZRPsPI9uarOUgaL0uXVG+Gq0PV6yEXJ9HzF4Qv9Tdj4s4pnbPWj+Ei
c2U+Y1YzUt/YKaJhG/xo5Kof9iaDifq1PpfbAxgU5HE4r5cKtPKhegeBLhT5
6UR8GcKseKFCIiBlagiM/9me7u5ugDgXqwcmeX3I0Xt2Xw/vIN6N0tWRf0eF
0EOt36TKydCuyfopdowCv7+qztfNfQaOPqrn9jezMGRInvvmNAVLqj+I5acG
8WTmgx0nDbKA0DEk8EmKiLUE9gK5LWQwbhlV30E3j61ehqeqWL/hDHU4MEOP
jGvvv2zwqrThfDnfKU+/KfD75JimobAEUerXpid3TMDTiuLd9zT6cEZ0byNh
s+/wlcqiXPMiPFktyr5zqgI7j33ispwYgxXLdF29zbxTiisMqOspQcYbIgdP
P6PArJ+lvPJUJr5/ou2s96MZbjx/8E1ypnWz/0pfhvmSQZDbFvZodsNShCJv
YOpTYDA80ng0ehS4uQhoRiLDFnlyntyHTpQgBd5UUJ6Hgh/mOh+WWtHjiWyi
OBcN7vgPdDUstmHtr2XGBPZxOO35muEGpRPaZbyKZKwoUKVW3l0a0g+/+qsO
Lgf3Qq/Nt0kGx27clfLbvcyUnpDf3dbvLLmKSw2rmVFFQ5B0RN7YedsSXLKv
S5AaGoSqJ9c/D36eQhnua1T1r0yEHxuPTFU+05Bzwv9zrkUJeLaErv1dasTH
W0c45SJYCL69V1qS5lZBtOVitB/9Zs8Z+3zJifoLsg1MZjJc9IQsWasa8S/z
0BuVGfK5sxC8rSycXcVnceP13nQJrSWcY32UfPRcMzCW+3GOHZ7Bd/doqck/
CbjLv6o0JH8OG/svzB+zqoJQv0Sn+p4RDFxwDuY/04SfiGo/5FwH0P+AE/FO
SRd0Er+0+hQ2Quo2TiVjrwac0LXZa6ydhcOczUFCQUWoxO8y5j7cCe4/T/Ip
SjeDGGdXupPMMGDKsIRpThUqpdfXnj3fjBx3W6yj55bBy2Zp6ovFNBL+2h6M
2E5BBU0z3trD9cBr8+jGbtUWgFyiE8vpdvgaz7t7rHoEeBtfVoWXNgIrz2Ox
+dIuLJ8IrV1vGcCO/WeerVg3bvKNc/YtnjG81VKksmzchI5cir/7k9xh9LzI
3WY5IihfzWRume2GNI5vtwoT20DN5urpvf/38UJurTt8xcC06spc0LOEq53z
2jkqdIpqLrGXBzZ7n3dbr5Rk7TKEdW677mfeUaAqMunHcbcHFCym99p0duI4
Cic/vEYCDa//pJTWqSDs4LJj/VctKhr3+w6w9sJbw3bl/Xa9KE9mV79JpOD2
ldLhEvVhbDlGcTp0sAUIAaFxxCstmDPZTwlVpIBd3d/QlskmeL+s9lL5XAvM
hFvT20oNguIOK0ar0iKw66rhfhI1iz8PfGtqrBpCeYvj7kf8F5GtrsDjjUAl
lphrWtXzjILVUGCrLWcXeD7+1tBrTsWnUs7v7A9Mw0+a8kq92BJM3fNnuaJQ
gnf2nLE2qXGHX/XmBqT2Itg45x749fkw3O6wopUwDgE7kSAZkf4ZTo69bD0f
8R3rKNsuvV68gwN6dnUC1HlQ7IkJW1mchbIv0dkcBiN45x/76hbrBnAJK5ID
wzEw38708dZoHbB4KGVV+DShxoZ39YNNL1Z+Kl7/+/Ua3LNpNrJc/gufiYrT
xx2X8YGIX/SH2FQwMK44cHBzf4b8EucVc+kUWXNzb0elrqI5p+qOXjUS3Js6
XnuhNh497UdZvRomgaU8fDM6h0D5jKIzS143FL7b9ZHiVQGy1xME4u3qUClT
xWBxiITLN7wUjnwcxYxxX1H6e1lADRzNUmejwNeM7WfVRYbgSGDRlFUsCWRX
b17gs23CnKS3H02FBlG3iFgjKs2guH6Ds+nUsS4oCjMo3BY4DQJCGybvHCfB
Re0L8gT24sjzwxVv4mehb6+E1c/FUnj5hN7I5TkJ9u5cDqoKXMYyIQVn6/ZR
jIsx5A5vnoOCPA8/I/IQjAgk/uB48xlNx+l1J5404S8pnlER02ZUo0u0Xz04
jKYE3pNJ9hNAEZFs76gYwd/+0Nz+th73ZKL/V5FR3PFAriRwKAw64jlfzqZT
4Rq/rmHXajMc2PaHnEZbxIfT20TcDjbDxwiGZ3LRZKhNoWeJodET2k4bktpN
Vzb5Sls1wKAd2nccMtesW4Dw3U//i639h2w2baKplxbgVabQTp1TFOBn0X78
VnUCp8IHg233LsCZrbkEy1M5yNdi/6qAsx8faPR5rj9fA46cc8eF3zApPv5A
1RbYPKfdkzVXa+crkbOeRVK/aAGC8s4WBN9th12Wr+aKiYXw3awscUVpAEbK
6Q9Ic6SD+I17epF+f0BdtfHtOZdRYGY+5ydMT4KY0TqXiy1LaLCoxR58fAS3
ye5sVBCrgVeuHzqZr7TDqBiRXpxWh9GBlirmN+kVn0npFkZNTEJQyjDFvnca
vZxmqN+uMRBSilhn/xOngAGS8q7794P497uOl7I78NM1X0IuRx4a2RJ02A81
45qD+RnrY0OYNNIzbndrDjO2q5ebPllAvy0t3ycZG9GC3dPhn+ESHpL4eTmG
sRsvyJUwbef9gP3HdmXEvE/A5PTX/CKd4yiIQX2/AruQqTtddKG4C+j0y+/L
fmUgaEq4vSjf3L/qkZ/tcz0TYCEY1zSZ3gQxmifKNu6VQhSpSltxFz2BqcV+
9lHcDCS4nGluC6Cg3Cnv/gubeX6TduHr7MA0bP3e81/cbB/o3vcrX2WtwpGj
DVf0jTNhj3SGtJxoG9xwfNS0kbMAF0yU/2O8vYFbeTT5bC9t5hf5RYrsnwyU
FCZcDXHMBDmS5vm/L5vgr1WSVKPaLGT37NDeMTCAhw08BPo0FjD1/mrp8xs0
sB/v6ZbhY1AcPK2xHLdlGJ/vfe3ut3MEVYwfeQ+zJeMN/svI5pOD5lclw0Qf
r2FARsHX/EeDaHaD4u1+fRpO0P/75OkzDNleA1eauppx+bQd1Uh4CC6fEN1l
Z10IY43jpiLTq6Cf0jaa1TCPy7LHpcg+6zhz6PZprceDwEX/ysNbux7adidS
xuvoCPr57/9KbO2BWIPto1litVjOnuPTTPgHQgl34g7TCnGVU+dZF28j/ppY
b/D4NYXqUQqP8BgN9vDWXvpZ4gcvjPOC9p0sQsVjPOstW3qASeJDc3hqMQbT
conCQZNQ9Jn9quYsPWGRZ+uRrD8rWPkzeGIpeRxWioo4dawm4N+fh0V77hBx
KlngtKBhPSy/bHy3VJIJfcrLI0c3GvFtdj/n7a556El52Ji+WI8T8lvTWPYs
weS9zvT8sTUo/Mgknb06guaNF7a9bl6BjS0+/tS+QTzjffJMxuskUNFleSbQ
vQGFy70lTJl0hN/qRt9drRgVo461ffp3ZhLXLW41PY/pAdqzLNOI7Alcw6T1
CdYSeKRqbVtHJkHb3vCs0o00nL+yQZbL74DbflUDubPjeDS1pbt8fBTf8AU5
O7xtQJqiPYeQyiDY8buyOJ2aA4scZTZz/yEkMo3uC3OvAYJUu6CZSz+UVZfk
TXlPojX10yOhfjpCQc6rw7meLcDsPppSs28AHDeGS6tc5+DZ+xTWTuZZ/NFX
fkCBfRTTgtbzbe2oaPU6ZbDaoA7WWdz2HdYtAvG09A6xCCZF4++zIUxa6WBx
+8SzL1YzIMJDDqqYHMbUDaVDx48OwA9W7pd+OrMo9JisYrXpBdsPn3Cg6Gx6
kwLtEd3bGfRWI58vVC5FqvU5Lre8Uky8FfjIV4AMqpbnx/9GtkKjlWYNf/08
9u7k9nxk2QZH3p6u+OLVAN4ZmluCHqRB7KvZw8dLp2AoIGjn6vw0sKke/Sn3
uBeytKx7LL8vwUdSSqC4bT04d+2Rv266trnf6BM/rOgUs8R+hj/9WAEXFR7f
+atfC8rR7zKyPnQhb+UJwz293bDv017LfUUzePzGsT7eT0tIzybh0JBLwcrs
vouC50ZwOsG6x+oxGXVK+PcN83UjJY1vu0pDPz78Uy80eWZzrqurL4/z0hEe
m6ffmmBawdzbhVWM3zqBSv0QijYjeM/Seu7Cg3awocz+K7RZB5U53VihazQk
cXVn6bmOAN/F9lBN/XHsNWqiNhkMwKfZ49t3882hlneoQvbHAcTL3AGCvktw
OK9kOtV8AK3sbewmJ5NxLm7sVO5GB5weCtQ+7j6FvkMM8VJWxcDNEi74a28R
7IIHYkT2EYwlqi43RXfB1qcJq1ridVAcp/X5cDIV79/d6UZkLkFzySvtasnz
YJZQ7b1yYQVTRgRM/moN408XQcVnT7twYOak+eHNfTwPtN1KAgq6QgVdwIE2
FDTtecB+YQwXtDM0vQxIeDFMaf+L0XacmG0P3tCbxAvJ9y2r3oxjgOvKj8y5
JbQLbI6daO5H3rDUIJPBWYw5aWq/vFAJF047RLnJLGAt5fBiU8MozjevaNfH
juPSGTfnJ+HDIG2r8cQugQyNZ7oO8uwnwpnBAQFyeT1ylpXuc9vM6521ksXy
RbFY98Z/YndVNfpbX+oyU26FVa0Qd9ed62DanPNRcfswkpz00l0kJtDFRtHE
PPsZHFQ9r3nhUzeKHPPo4AoeRhMn9ZeMt0hArd6WdJZcDk+3b+w4I0NC3evN
vz8UjAC7elSH2s1YsHlQTSqvIcPC383alWrH4Xca30usK3Cg73VJku4McMoy
s6T1lkL09aPBlH1UtO4vdfZqGoMcGXWTV+VroHgwTvmzdTsKVz9xMOWYxi9M
3QnvREjYLvag9clYD85eV5XsiX+MFrx5ykbPskF3xx7ntYh14NzjNZ981BNH
eH5IeEgOgZvbsbTzyWPwOWwmf+xAF6xdH75EGW4ALrXrAnu+TkALn0LEzT3L
mOcqHaQes4zWyVmyem8HcZ33gZ9eMyPhmbp0W2bvLEQN5OdpDq9DQdTH4kLs
xhbx8pXnzFRIaq9SIDxJwpuHdjTGuYxAZnCybOL8GD6dZ9/LmZONW7JvOMRX
LgPt2I+Pt68OY+0F2szFyShI+ffk+LBKJYj0rkiG7VuEjqiZ5zo4iAyeu/eK
P2Qk3NdRv3ledB6GXyHHsDO9opVYmvwilQYVi6fGku80gseqko1j+SLwv7p6
MFC8Aam+f5K8xGawMHd0Kxf9Iia0dCoO76cA6X5w84z7CFB1VhZZCsjw3uoe
Wj4hgkN98elp6Xq4wv3p0kTnOhZ49Q1mSjfjVfNsiXOv3eEh9abpwO9WrBO+
6r8kOojeSUxCR3Z2wQ0VgQUB8UlQjG3jjT+8gLzVdP7bmhqgWk3zlODFJeQ3
4TziPDGMQ0JsA/RnOuDqyie/yPRNT/7zyCfYogUaFgqFLF3JqM/Q1vKtvhl0
eqNWFdsjUb/4eXnHpa2Kn5hIpW5881B6trh6/80CzE5+Nd5gNIY7cusF68WI
oDU0G8Sjn4OP1h9y5z+bBNsd7mMoR0/gFfJ2uX5/BrO2z33889wfL6SIBVqX
kiHp4Alb3pBV/OMvTmA3H4LzDiV3HNr/QfCSRh9r6wZY+Pd8pGsZw6u7HDfm
BRbgq1Tr7vqiURCUkT4amVELEgzPL+1yWISPhyt1+ryJIH7XIpf85Ssyd/8X
4aJORFNa4kubzRw6omyR6D85DilWdC/OXVxHactDgToVZKjf3yObFE+ECDkJ
nt+P5rDqQv24vlYpMI1LM20/UgUxN7ecsV1sRZaEDq/Bfe0YbA8vfhPnYdJL
70vLpm+RrZTl7KRbsObLeL2xOQnd3hT2p10Ih/rHhbszP5Fga7Xd9ec4jNf6
Hh6R9C2EpNfcXWnfppHHI0PGfXEV/TKkouJKiiE7/tKw0b8OGP6NWpHrBWgm
KXtDPGGzN1LcOH1jssG0zos7IYleUbf2crZt6RpqmFy2tgkfhZUs3yiVL7Nw
f2W4r1qtB5qbtCVtHLphSa2848/iIuYx3h58nd4N/6q+7yMbzWFSyukVHnZb
XI8N7N9ZVgIevFIWMS10hAHOjutuDHPgks5v3fO0EXi2wRNi+xJ2Wyvula8t
g40opypiHhHvGvZw7hQfhuKbo+HdxVMoMKGhvGO8G760dh6YVqbg74XCWXUx
Kp5fWNaMP/qf4jalLi8p1XEw+lRLFbrZBs9Z9HhhehYbm597hmcvol76w527
d7Sj66RwoGtVNZxhUP4uRJ0GrefS0qF36QiefoOPWBM372+nnaBvQysMaj88
PvJ6AZauTn7KbVzHUfHwcAXvRcCZi3vfc1ZB+ao/257pYbydXH1soHsKYp4x
sP0uLcKMPQHVEj+bcOeOXQ4KBQSo1/ayvv2wC30KwEdjlQjs+8KL0vl68Jl+
2H1xeRpeP3hNx8J/FfYdXBaILJ2EKxUr4tK3W8CE4/5fZ8yDAt83r87yDqFZ
/oORF8GIG57nWMKDq9Ej55JYmMoMNvcwJjiTO9FJSsrkYc8yIgxTJPdR4Uv/
zXMeAsMg3hVvkspCREpIr+HLUkTRD6+bOARIQD/kn3mybxkNLlw3nq2dQPeH
a0SF06NgfoKX/Fu5BzQox+eJWqNw9JEhT9D6IgKD5bsIwSI8mHmrLYQ4Cicf
K3F2si8Brhcm1cWR0VXnFymVswZ6Fe8NRrImIovhYQG6PUOoQfk6yH6iEuyW
7WTPKi1Djf/OXunnmRBTGP+7O5cGfCeCutn/GwcNYUZvlo4G0HoX3+GvO4IR
tTmqq8vzsLONRSa3ZQY1R12V5Efm4dxMtm+80gJeZvI5fulIF1q67NBk3LJ5
MATO+qrKcqgj0U7/O4HooWV3N42HDCtad2SVvtVAPz9xyz+119giVzeSLEOv
SDE6ZbZ3RzVcTK6SyLXrALakXzJXq1JAZPlWxPciesWTLA2HG3csIuP75W2k
zb48uYXdXtdtDYakP4u2DQ/goQfnLMrfD+Go69Wkj8d88NlRn8kjR4eBnfNG
47OaZbxUwSR4LLAS7gA5dndBDeSEnM1Y0SBDsN2U6sm1bHxxpLLkivgwHnG0
fOO2WoG1zyUzhJPXABY9uuwSSjGCJfdSTNc46rhe2/VtqQXk7vy+EtIwgpGa
M1rbNr+fwg0Gwco5+MLo47RCwjxaTkt+JhYkgWq8h9rUySXsmMvcqus8it5N
/9USWNvAq2HFga2qG02KyEL/LlBhvJhx9lw1Dfbb6fSI8I7DthLeN9OH6AmX
1yJDGSNa0FQ23/1A5CgEzmcoXdKtQ/6s1NpjyVl4U7K4yVRhFvJ5+anccvV4
5tkBx0ub8z7rL3jC7OQYHuyjcV1IoqCBaeYggbcEVQ3v05sLLMGNFEWd2q4W
uFDL3GSj1QYWxlT3Ce8NeD5B33fnbBO0xpalMv5dBPdWEk8D/Qxuq6iS4tUj
w4tpnq1Fk3SKq+uujw0nuvDf0tfq24mLkBhhd/HcrXlge1jIn589AvwJHQW9
uZs5q7HvTuH7evjP10G57vsYrCtm/pTNrIRJ4RauXIYx1Cup9fOeaIGTp7Ve
Svim4IaU2vPy2BbkzvBZdD48ASn1bMfjDEqA6iP9k3v3IoYKxd1/eGUSmr69
LV6LW4B0eeGjB29PAeMBmQ85K9OgQt7K5/2SCt1aF7MtRNfhMZuN8kubRvzS
8O7Ky6Y6DLjzIfPQ6gi0BbE8InxiItjHn4q/H7zZA6mRoVtPduOC3et7E3Ek
bGO+7bIkvoZ5EjlOYjVMimmz69eNorLRaMCVxhhDwsfihVoa4RN44kvqwmjP
EnCXh9w0qcmGLb78izeVOkEsh1uKaaQGDr2KmQpjpKC/RYMORXsB+MutSst9
hjHo3GrWpMYirNxNSZvbO4W0Kr29bIzZoB86YvKmsR6HFi/aKSSSMe/rx+W/
m75Us2WrPQ7N4kcnZfm+nGtIVH0S2pu1gpE27lyHE+awO2pYZ2RhDDk4/+kc
0o3HENpbCetrJLhi9n1CqqwD4yvV8nnjBjDWTpSr4kE3ZrZWPxQ/14DJdP2f
GA82og25ZV4opxHMpROvRF31RtUWVaJxbhPwCuFB58MDQJ/3rSMsg4bkLFOQ
LuhAFVJMuFx5A7aGjs0HtNeguHws8ZYwGTyWvQXixEcww6vZ4r41GU7UPSl8
5NuNt+jznVj2LsLvegWGbJ5NrqHEut30HcPtEkOWginzIPJZy+uU2SSm1V3W
jOItRxemEw/ldtERSF51x89ORGAtXYHjp4hpbGozelm3bQxNHYSZCU9p0PFD
XvjAdB+Ob+Whi6Z0bOb2zId6u2nwvhFyTf31BMyU/hB3sVnEb+eXs4zfV8KG
DefyVYtW+Ei3jd5APwv2vX1YabuVAsvjhX/P7q9Av+w/4mKfR5Bd2ZPRYuQP
jgxaG+ab0RMiq8MtaeHTkBF3/WJneQeaxuxf/bPp2TgSkJIdQsUWK12Ld9dW
0fl9ui3//ABcj3tzLU6NBipb0h+2zcxDbYKpXzdnAz4Pm2ccNC3Eo42cq6Zq
jSjQwzxUCwT0r3+6tMGZizI/7/N/KBxCeZ5ZKhcMYvbGK64rB0jwu4/XhWl/
O9zOOeIWWjyNr2Z5HjZsW0biYaZj8c7LOGjr/Ovw1nWY/hauJQAVmCsa587m
+A9cJqQmn7jPw9VdZ78IJSxhMG+W7AmvNTALumfSe4qCTZ0tPz4qjcKWuN5h
G+FEvMhfF/TiyCwup48E27TPYfZ5GtOZogl8dirHvUS7AnWWHVyRtoAjawVd
lFsj+PXFYZ2jDvN48n7pNcOxcbQjVWeNyS0A7v33YN2LhPz8ZutJqlMAw2pm
LOyNMHJFXKxWlojuYy/GG7ASya9L3vwMJqEFn7Kb/vlhPGl0TYP55DLe+FF3
iOZVBvyZTcLBR4jwmtvhvF/UNBzaast9U3kaHyytG3w914+STiK7uJrbsWf2
7aU10XGIbLst6Kk8imZoG8LvQYXKcM2QDb5FcEsvpqa0zuInfYVKT7cZiD35
4PpyeRFGygydu5s5Dy/XN/Q+JHXBu+eUQ27RGcAyotRIPJaFuv161T7pRFxW
1KOtxI+j1R7ZbeftJvCXZI8G+7ZGVOR5kMpTR0SRPZEvjVXGMG7r89VjA/Ng
ayGboDgYAAcu+w7LjQ3C29VgZsGlOvivOcLJNfw3cvVs/3CfIRV2+O+Zbyvv
gHBGpY8SX6ig8tI+wMaQAk04MrqLcQ41nbcio+kUTB8ff6ciPAzPM/OyfZR7
sMa2pYOQSsWpmuHSY5Nr6Ks3nWck1YmZjmWfypyaMWb+nZDBCSJeKD4u5WXQ
h61xFd6Ob6cQnwYbeWZNo8GpiHtL02NIcluXiy5vhZ9tuwf8SleQhbfUPFGL
DHS5ZFvxrV3Qxf7o/rUYCq6LbuOjk2zHxOdfqr4yrALJyfkt+7E1WDNy+ivF
24DRuQy4ZY6Ie04F83mEL+JNdg0h+9gFCEsy0upSTITaJV6Sw/ZOkHDR7Hdb
KIOvv3QJc+pzkHu9S634QBU6aC9wuOlR0DS3wcSoux346qNH2yiTkC9I/nDN
rRZ56hVPmGxyZrm1hdCZphgUidYz4thSh9w1lj+VD/Ziy9CJ2iM1s7DtPWvM
PHsT6IVM/TfjPYPu1Q0MSkco6NG6252Jm5EQrGke9/QCAyHEQbvkyPooLn7W
T6jRH4WSAt0GwZQh8OJmnrtgTa/ou2RmXbU5r7yCD13/C6dXrEW+rPCnqbjw
Lc0h1YaK9jZeuzQGe7HflY9xI6QfQ64bnX5mRIM7PF4bW1i7wK+5kPHYuzbM
Lt/vLvqqEIzoEv4k7++CjAfvGqu829DCdkrJSrIZJZX1vzoLUTA2MvGwmhsZ
747Gz4sXToPdu+QXXVyNaBTaZP81aRZDZa+EsjQOoOkb5ChYLMejPRo3GfdS
cYso/1at94Pwfj37wTHtX5C+IGfMYpwHCZ8cGGnsvfBN0S5ib8EYCvfJ7UnW
JaKSnMTQU90ItOBKZxawm0bnYNvbNivDaP9+eJihuBhlnup5cSr1IeNchZYr
axjaxutrTUVXQNBWMxL1MkIG43fS/p2j0PKm9lHbsUnM9xkjelmNAfPx0xVi
omQ017v3qydxEqdK65y6nzZgwcHqQ1lmRLxm12hwRo6AmVGs1peaCvBDSP0g
I2sJhFGF53/L/6e4ocZ0/OejCVzZV1z23/YeSHlKmnvu14Hf3joZ7eMahgku
x7S7FaNwZPLau+NTpdj10kzwbkEgoGw8y+XqTrSke+CseGASJL1YJsMoa2B7
0dfWz6MZnQpNFRZ4qMAxXlwZqjKAhjEfEhfr6AhP/f7T9XpFQGuprSdb9UpR
vZyVW+cVGQaZ1pPl3jErZn31k5FKqwYhsW6R4LpaNDO//i3eZRxMIgOZH2ss
gFG4XrXuJufpGIZ4Pl2cwB5ldHp/F7Gz3fMxnWsa9LbfGzl35f//3/4uJJbe
jDTPAC1DYjMmybcn5fJ24g9O6ic6/jS42ZR5o/dXMlZKzRW6/R1B+YXIVEWj
RegaNTi9EU+CjMG1I1TaGFYfnkrsqR+FnS9DHXs8xvH+h6x1xTNjmCEnwSt3
aAIuXw/34VSnJ6jobD192rMUWpsFf0o7jiN3VugHbTEK1P2dNmz3LQNbmfg9
f38MwJ+QRVN242Ys7oigmdjN4HeBG5d+Bz7GpfN0b6OEy2GOEqjC5z2PN4RV
WgpEG6H4kZ5l47d5dDxwUXiPVRY+I3ZxTO4YgOa8bbHCIqMwHepLLswrB09H
Cj+9CAkzR48bnNzMV7qXkqvfZ1Mgebp8/70HFNjF+Fe/1JsGxg3SxRxP2iDN
NldWw3gUx8sto9xr6QnPwnwqw5+RN/l2/G1RyhzyyfQ6vxojwrpmUnO2wSye
iVvXJS21I32f5xM9jUX8c5vwWsRgGGRIOkuDT7vgs0AbS4xoH/zgXdzStkTG
qZ3CPHnf10Hrl6pfc2cj5me1DUy4zIFuzVWnc6o/IZ2NsCZiNwkvc1h903JT
4Hv6rRvnj0/Cwu3a5G62FewTXv9RcGMc/st5UX5MdhzrV5J7SxyW8I1jOdfQ
TA8C7ezDJ54UvPbTbZ2g0IJy6t1vT9pUQYdQzj2hxV7ofXh9btaOglduWz4c
5BqBW5dert1+1IUcv1w0Rv5QUEX2+gGlN2OQk8kjZOozhH831O/Rl/UBfZqh
Zo/nCBiFTv/a8t8w7Bc5Zcd1cwaVy++cV8jtQrT5JW64bRkc6bvf3/KIxjPT
OxKWJYdg6xKTruifFZSoe80kWroI7PPN319GjqGQl7pFtG05Ri5+eCF4owcZ
v+brGqb2QKCIBPfYp3HQVw+f5rq5BhFneXnFn8TDJeG9ISKL/ehhni933nkM
dSQ5XVLsxnCtrXisIW8CVRbsOT8ZpeOisdfNKNoiXpP+o/jk7zwWujfMRamQ
UVXleKEhwxIGbj3KcU5kCn5A7h+nTzP4RvCzW/jyPcgOSPqU+aIZRf87n1+z
VI6/z2occLadxe/Gxq/zmecwzt17zz1dMgooRF1tLlqCVGpNBXvqKK6cCC5+
8rgZU3e84HenzaHWfcdHf8TCoYbPWScqsBxc9WY7fFq68NvZKrbDOXQE1dWD
SfdvtOAlDRMxJ+osfGR2kuFeIIM/O5sgK7EHDvlcsXlr2odbenelv7acR0F3
zyYGqVmIveUpnGGag10jPo3KlbPYO+HDXpzcglLj+qZ7JfrwTO+N1/mLo7hL
8z0X01gNLB70tSsuoWB/z4fSEiY6Aj29JdnmVCUkps33JhsOg3P++Pbz7N14
uD6tu1YmHZPDaTam9DPw12JD6wwHGezTpA9v/zELwbOLdCHMCyj5eMM4THoS
+vKTU7d7b6Bc1HviJeY6jJN4FVl9fgG2be9bqdZbQ9ud3Ru+9sUwvVDOdSVy
GRIf9XNSH7TAwcx6BlXhabjdG/6Yj4GKRSnJfD1iQ2C87+rywy4yZvJa/elQ
piLh0Tm+xnOzcLbkDlP+8gLmxgxoR5r2YHQ3X+eyfC+yVl99/IZ5Ec1ZfZ/L
Zc2jSDlr8D76Hgh4GxlQUEFHuGSYJ1BBJeMb58nERPZJ3PnFpVFPZBI1CsZi
fT8v4gMxHbbrUWS8+eo2t0PXIuqJll+0oY6BnW9p3Df+ZlQpsi34T3oBc86w
Pgn+1I4TwtHVWs86MGvijXNIxAga/ex39n3UChLZPJfPiiyA8eiTHUzHevGL
i29J9/FJDPMKzinlGIOLo/+9q7JcAIVHHoeIQlnYqHq30P5zN6SFH6vo4mcg
EHaG6tg4DODu0Abf/OgePNr6fOv3wglQPJyWciq7CXyKVfXlSF1Q5DYYQ/uz
BlvuPUoi1s3C+72CrEGVI1Cf2vf66IE5rNVVqmXTpeD+w5ls1a9WUc3X6cCO
3HJ0L6UszpQWocNTda5XYTkQq/3l7s48Mvp7Ru3mlx+EUUMt4gzvCJjren2N
54rEn3tYGVR9qHDILzHi6dtWuJT2h5nt5Rzu8t9lS/Cag8LQZI2/m3MjlrKl
l7hBAsEAwYwUphlMScrVH4gfhsr7vIc8U1eh9loC+wkSDXZ27Dn7150ChP6D
ovL+dIrP/rFlsIqWweFyrYcahcPA7p98Jta2H3PfCrptXKqCk6Ocag8PTgBj
959OH/0+vFKn9fuUTzsEB4Tbl1nWw2cIkxBxz0QTpyxaztU5IH3d5WPHXIx+
foSNAbERSJX2zmlc/wcpIMbZyFkJOwru/vr+oRMLIlRdTgmPwfJ77T90YySM
vsLRQWZfhffSxxqljYaQOe3RoOrhPhCnPh/a9i4V1VaKMvtyOjHmjWEIgZWK
VZ5eW+RKK9FtY234v++TKPt2t/FcIw1qed0u93cuIoXVgTWtYA4t9A/5RCsw
Kx5a2cbbCu1YIWPwPaGzDxTkhKmLzEuwZewlM8d8GV4/xuE6PTqIRzJWB0w0
I2D87kzIEfo+MDL4Qu+rgFDNmH+5sK8Hcp7FPdfg6QbNAC/pH5bR2Bzh6GJN
moV6xtOO0XWt8KcvgkV7fQENR6/lHE5exdB3KzKdrU1YYfvY7T9/OkLCNq4a
9vRhHLnJ3lRGGca4g/TvVw/Wbr53lk6JugnMpldcSaBtYOK22Wd036jgzahi
qPG2Eq8+NefheP0PvltPbTF5SQOToWsZr6x7geHh6M/TFsPA0S8yuvs3Gc6+
2z/Z8mkWJ0dnX52lb4DflclSe9ymMCR3haNWbBKbOWJumQaMoLfy1fMG/ptc
WEUr+7jWD88G03XThCchR43sGb9r893z3BIfj9jsTS98e1xuAhbPJF6ovBkA
H+5cZRM40wxPgmZLBXzXcPm/63ynpzvgzncdBWIUES7MnhNOjVyDT0c1HvNJ
pYKSmFOWyIEG0AoufzH3bxm+vL9idJpKwk8xWRPslkMQwjX/b6yyD/U/Rwdc
kVkAulf1CjSeWSi4rEjvFbSGLrsOrdvv6kDj3bzMg96JaBW7kCCmOYpBT8IP
RqQN4y1T41nxp0T0M01hFt/0uTsVNjKv5jvhv3vDHisdX5HbjMCnOdSHzwxP
7BaImoTzpzDij+QKjFumJPG5r+FIIeMLFttWGHx49X0nYQ4ub/uv0kJtFKih
2x477GiHtrM7XJqOZ8D+tycMPaZ78PcdLSG5/8pRolZBpiK2GOacdz9Ze1cO
h12Pxh4PyIfiol9fLTPrsanEfvr67RkY69XbYfahFy5Lc54NVQnAb8r/1aY/
74KV+mfRR8Rm4NOQy6JSWzh2bCkr36NNR2h7f4Rfc+QfBByXmw66O4tX8i7t
fS/BTNje8/iz61A9OJPYfLy3UoF/t5KO3t0e/CndufyebRC2nrRsCuvuhPlO
vdPKix1o2uqrd1GrGdRUk+9Jb1uAAVNsrbeaxcjxtBr57yvgGUb3luMXFe+9
OfHfyjUaRCbkcnqMUCA0InYdLyyhybksthrrQVCbeeLOM7SARN4vzu4TC1Ct
PfFo4MAEah3+eIOx+Qv4PXdK9dAZxMjDpXm/drSCMtcNy647k/g5tqitd6ET
eMu+fz3h1QOnzHhOeqVtAN+qn57Cl0l4FFDDznZnAALqFF68iC/AZB3mvIH1
dpgxusR1KpOEkQeOBN9Pr4Gdn62dvDfX8VXjdaduKg1ENG59unmZDNcq1A6E
RQyA+GUF76uvR3Bsi/BJq4OL2CG1fq98sRSlixtPur4cQsfcbSxfZBahP0aQ
NMmfj6U9b7W7uChoK3Ryi1H7GGgePD2+GNYHonlaJROyo7h7PV8ryWsOP5Um
VnJ3zqJ/7e6yhal+sBCaOELMmATD/1SHB28wbb6U3tveWkyE1JmH56x8G3Cp
5sWGdnI1MJlFbRS6jqLCbUcuv9ZfaP2JMGUsMAHOzQlv6UJq0D/ksmOZXRPc
pcSbVx/tAPtf6vPzExW4p8TdWvQ1IyHm8ylJ6ygavvqo6Guf1IbiMxQmV49N
nnn/cjrt1iwYnbr959qnHHwtK/wt9GI3ThMDmDP1GQgZYo+5bH6MoQxjWqjf
lwpgj/jrT9aoBc+P1dos43Xoel3TNNVrDe98ehAWqEiDhvdXlM79XcUCi5Yj
K1IU5Ca8scuUaAfh3MOyXykUIHayk0L/K8S92S7m5YadcGsLLaGmrBqKDYt3
rj6ah/itP+aEOdehn7HnV1vQHMwE/n6VE1CDbm5nSZePNoH5SeViP88SCKWK
mqXX03DdXDtcIGkWvG5/WY7Y+he8sxr797owKp7NNz5u1TKDO6d+ZOVGDGBv
73qSnOQIFsaaPnQJ7QPe7tibDnZz+GHrjRznuytQqJUyLWhBxH3yjyWLHtZD
t1W7s9kyBb8zGv5VSO8F3sXrinK2RFS7cTttuW4cFxODBuM9SMBCZxzTQyZB
8N/IRNfKBjhWlruzbXoYT8lOBLUONMC2pw9fvHpBhpXjOvorrJv3GczJpHqe
Ajceiu0sSiLh3Xel5meryyD6dKvB3P5hnD4yzRh8vB3w20WDyPAxiEv5QzS0
LcOpg98v+otOIMHot5CXfTlcU7HUsR1OgtiTsx+dny3ikboJie20WVio/kar
jt7kgzmmj6uf0+CZtlMo06lcaPk5ZVTZMg/GxybDVlnaUMT4FZ9afAheauEO
1ejMwsySu14nExcgVQRqZO4MoLTq2sHDrcOwrzmwh2t/KuZ+PD3PGJoD3ikn
Qsa1KbD9mDr1QFgPaqYEsdmZLyD1ZevGKf9hNDnddkZIfwDSapTmvzkQ8e0v
4xumjiSUnN97Ybm4DFYtw1tO3J3BcoEPD85WlWNQN6/SrcA1qJ9k8wvvRPh7
oWUlbH0aGKyOSdjrE2Fj6uibXbHlwNHgs56w6aNsUglVPw+XYfkBnrzz0atI
PRFjbxZBxfTdSVcnBXoxNoAzqJOrG458LLi3e2AWvng/vuAy3g6aGdyLc93V
sHsfHC6aWAMqO5qEsdATrD1nKLIvciAv5hVJsJYKG5J8x/Qbp+CjfvUDfv1l
FI1MHBAp78ZdJ7c61A9Nwp6/nTv3/50FAsdIv/6XAdS0/yyycn8YA/esnjPs
W4ADBxLZDpkMIC0HUwb7B4F87nGwYQIZf9CXHa37OQDUfjXSlZNdwFIk/OPI
7masTP8hwpE9BBoMsbXOknSKxVd7/5kO0lBV9XjuN+lKZIq+cyZvaQG1EjPM
7t7agNG7bS43JWeRaHPINPPUGESq9P59ndEBHQafixx30xO0kiz8A1jn8euO
o/aqDFO4aMv2vYSnDO0k/eeqf9HQMyXs10mMhKnRJnvnKTK4Co37SPuTgJze
8EzVqQ9NT6ffl3lDRI19Y1eLXOow+/qeT5S6bky98Td+11IP/hoy7U0QmMSQ
pwLdCet0hI9TuyX55MeAV/vpgbaLdISTs4+ZifJ+oMd+zGskvQU2zHvoDwQ0
YL/ZXd3hO8sQI6bwkd5sCs/tdMjNixqFOr/J2A+bcyrgx1Sh4tmDByQ4DB//
rAACZTaOpakD3/9QTareVQcVFj2Hi6caoHZLrcwMaRDpl3dHq4fRKTIfLf/1
pnYJvadwsCF5GAXTXzZIppJx4qTSO9fg7s38VwloOVgKbSOhiW1YgYVL9lw9
vnNw1G757U3ff3jMf1fk+rFxMAhz7+Tx2uSoYt4XpIZh8NsTMDow1I9lvkP5
fU+IaMOTNWEv2IS5+vVHhM6QsH0XO8NLmQXMLzntXEMigdaflOoLDsMwYvZm
W2ogEfUZAxgPOQzB6I31VM7wfjzRYpD8/DKDovbxtwI6ErOQ5fvnAgc9Ea0H
5I4tHVvCW2X9v9XM1+HFTYJK4mg6Hi+/W3hQOxuVGlzmvDL+I1jpPOLp0ZjH
feGx0U9fUkBN4/YvM5MuMIm3TLLumcTeGq6nZUs0IIWWZTvUbt6DjPrtAaCA
/OrV2C1TG2D9/Awzx911FJzcNyRGN41s+Snj185RoDN74HKXbRd+FiFmFLKM
Yh6zmvpu/811ZsisXqIbx6imV+0oswHdlhSTQJ0G5OO+/nR/1iLEi7uWxQzF
o75sHdcUG4JeBg8z55tZdNRkLbdrHIV7xt1G0rQRnKiaL6hj7ca9cWwtLk+H
4WTnfPH+bxP4u4D0Rc5lDqlme+h2aFSjSbbLFrMLDIqJNKq3U3Uh6LU2lw4o
UGFi1XGm8uYEwueWGOqtQmBj+5RA7zOE170vt2kvreCu+GQH1l2VwB9+s8Rg
dxrucj4zPNfsg99bvHgNLf5ByB5J8U+3hrG9fJ/yUPgUjDPGlDuzD4AM8nAe
p276+12pvdkWi3D5t0G+cEkg7pNtDut+2ga8e/9WMd3sxWCTvXQCblUouF/6
ng49Fe5EqOv8tgmH91J+i/kf56C7NGhclETDKycyUz97FMLEQ1atgqIebD36
Zv9U2Cp2bjTIbP1cjJIaBlxn55vBko5/8Yv4Gjzw8BhSfzeNJ/ebLpkw9qN0
AA/duyYGxX8bpy529DTil5Ad6vav6vGCWYtT2/sVyPugO2T2MQhCBB2zf3q3
4xYJhehHlE2vnX9x70VuOixE7tknM9iAThWK9avtoyC6xs2S3liGgr1cTGTX
SuzRq5NTTi0E1wvj4kKb97I9aknM8NEY3M97XTTdScK/eu83xM83APdeW/m0
j2P4ZNcBpoMnpuCylWHBi7xEdL/m3CV0rwt1piuiLC+2Ysi/Zxl31ufhynX7
tF1rhXDjBV4Nzu5HoQqtNlmzGNwyf9jIsYqOYDMQK+Ff1AKGv84afFRvh6jf
PxXSNpqBp2DOYeTNpv8YcZ15wLgCHlIbAd+OtcMQ/+3dPNIEtOW3JxnqdEJp
70i9UvASEr0GsgYs6QjWZbp3HjYyEgR1SrRpi/3QcOocX0ysP5j3yJeoqZJB
qkBIMzeyCCkrnHZPFgvx5kRly9S9GtQ88fRI3CaPajyvOnpmZQELpYuFfX7O
gKimqWwl0yw+3lW81TtmDpfF3ZLdE8cxOpc1NOrUKnRoDKWOd47hnwO/0h+2
EfH4+Vsz8n5L2L3nF/OXx0Qc3X5reoJjFNeN2nTNYsmbuXIywWl1BOKrNBvP
lm+gvyrBlxcDkY1h4lrZMgX2cCok9O7twNspdQP1EhPYfL3dgbMqCPZ6tFcw
6m5yRLlx3fW8IRw/NfDO5egM5gatvHd63Qo3zhVffmo4AItidw/kbXptn1oi
ncq9cdASv/srcJAAfycbUjWFesC3kns91LEJSid53p0eXIGyZG1Z5/Fy2BGv
rDPf0IStbl58fzg2IPzbguzdBDrCXGYyTesWEb6mOWbz6c5BQsOhtaARGpqe
udinxzUDOvEOPzw3uSJy2zxddn8Jzqz9+ucg249dpWpXt7nR8P37UePIxw1g
ohFolzrSCzI6B7ytZCdgLrr56/ZDA/gk7wJX8+E70HKFasJ/aRiu/XZ7I6uW
DVmKkrTYFjqCmLXC+bRQEv56aXbWKm4QnLR7aiB7CDeY3t1opw7gbPiH5+KW
JNCIoMjXlVLw8anTPbxCQ3Cg8/4VpYpFTOmX1dRZGMbT0ndss8LWMHfi7b2h
aALsu9V1hN43B7J/rok7Xk6HK2EXw8+blyNP6QlN+pQRNDtYTnaxakC95NqD
wNSE5DZRW2bCClqWMb9cCWzF+yKFTXTbw8DyagdlxyYnHLhbRq9iuMnJFjXj
mboz6JdpWOm1tQjidAqyh21mQeFD3DvW5ZhNvmuNn5OYwnYVKD3f8RfKrunJ
n6iYx/HjV3ST/yzhjPSbSX8GKpy4ZOquxFKLMjHf+Mek5nHh1W9OoQNxcPP0
y1LNMRLk7np17VTDGCb1LrzvHOnDL3+3xSSW1OMgS4KHtGcraKvM560RW+BK
JPWITmoz0t0Rp/11GcbsF7eNJ3yHwfR46KfE7cVQ7OupoEyYQ9/ruvrf5qsx
55/1MtV5Bb5p/SpYNV2DW+rvbjtemQdDJzaB3sIFtODav6zTWwbrpf3B0gWd
0K/14/iREzXQ/LKZR6k6DT+H/OfBc7YWIwoOqCwH5uETNQt17tzf8PoUw4lY
hz4UWIrm1t0/i92nbE+8hznkT6u49tt3dZM3/ypd2raMUhT/0ZWISRjMlJVg
Wp6FMkceSnbdCFRXtUa3xLbgyMu3NK16Iu5nqCPmJL7BzxZ5dBLVU4jaXL9Z
NciI3jedJA+SIVsk4vxsJxnrW1p218RT8XVPp+pPpwGkP1/N9btlGbUS+I8G
5fei4OWMQ9dfdePg1rCFLT9G4cu/nY86LWmYkmiUXV9EwS+ZtrXTPYMg2MSa
SX+fDLNbiw1Cc5vB7PDB1qyH7fiHcFnj/b2veIfnXE/9hXkouLYrPnpLGOzK
IDD3G+VBGI7+UqiewPwdfJGa6xUYcn9t5WhZLq481YiS7VjD78GL9OfolkC1
5Rp71AMiPCAmPj/2oA6bHnkeTJ4uAvu9h5WJmq04XXMnfNm7F8POhp339BuD
zAvTrQzXSDgvtXj2wAkqnrVrPhW6NICXPwTcOc44CBHjSXkPjFbQ+KbLvTFB
Iti73tJ9d3QKt3XSbZNZ6UKjZ9JageJTaPlpkqV2M3dvV+y/78ZUDAMSlOW/
hH5QN9yuF+3UDvGr9+RTS9cw2dKsw8x1HnKatOT0zUjQczHX5EfHLBIOqs0+
0FsGnzPaNPltbXBJz36ZYr+Bp7/px9sTO4C9judIgMUwvDO5IHrctw+dXJ8t
981MQRc3f2rWcA6cD9WwoQ224lHG9B16x0goWhKUuio6D69i7ML/6dDwqEB1
CdtyK3J9iDhC01qAQh3DOL4LI5BpfVmQ5DcMpznPaWx5sA4zeuo/D9ym4gUn
Je0oljkkzJpFOjsO4ZvKf+oePANQkOSxukJZRBR7sadEZgKPh5zzpin0glJH
B+3HmQGU/zlzNCOvFt4yrI+KONMp/k3TCyfpD4K5QZmx0D4mRZMvA18nR6fA
c8L4Zc5zAhhUfztk0z2A3PaE/We1Z5F359V5gRutgK1ipav9vcBPJumW+07B
EXUZnuk9VCR/N+m987cDTzw1axhJoVNMaDPnc3tLQ467caeCBMfg5FLds2uL
uThMs9l1NnscbJqtTHtl5nHvrxu6nMO14IMGz3+zdGL5tKEOb0wDbHmokudv
uoDzjSu0abp12PJOS6rWbQid18m70umIuEcsVsLGeQpnVKtL4vlWYc7e9EOZ
WxV8CGiniMnTES6XyAcNsvtjK+nCFYdbdSBU0/Px0GZ+EPO96l7pzMJqwijr
QHgfrIis0D07NIdLUV0vzPgbwJLZRvqWXgOc3v/2wfLHQWg9vFc9bqEM2piK
9hZvNMFFn9aRF4lU+ADRT9+u9uLtIcuoXuMqGKoKHDqmRAJd1q1RGt5LGE3Y
/oPFewjSegkLgnfbcCj8sVvplUFU4zXguLNtBpPtHtHruZZDNrf/2fbXf2H9
dpyUo8sc0JezfCB4T0FcfPp2F6VxYEvvUD3CW4MdERx0hxx7cWvdtK3Q6QKI
bLvGUx/ZjLZEwewj9FXIVOJnbX2vANydXaNepFJR4uq6nR39ELbTcxLejc+C
MUcF11OdFtR58dqn+Gk7apGbDBxtxiHefl6ieWUa6t8rf7Ny7YDaeOHbUcKN
2BKTosIguwGcDdKczhpLEMO4/2CO/ByoVr9ueOxagRnrcrB8qAftgG/Pu3B7
qOka3VcnNYgpsmeDRCue4KK2aKz+NRJI3e3c4XGrCUmXOtrctxcjt8LTcGGr
cPjzH2MYITETAgPOtT8sXwCBu4WTdQOr6CF/RNOAUx9PnXOke6+26aHHRFf6
95Ug65Ydv3f+j4Lzjqf6++O4hJJIWREhUXaERPVGEVpEw7eklBCh0rCJZFZG
KSOjsgnZyfuS7L33ds2Le7n2+Pn9df46j/P5nHPer/fz+c8pJ0PsOb6JwdOV
cFyyZrJvezakLTi1vb1ABS5by6e7XbqReTtdx0P2CdhzQ+QmpbwFm6cnY9i1
5yHYV6982qYbb+v7TCbz9eJmvSBl3GgK7n0V+LvHpgcWC/5r23+SnqDtxH2R
Yb4fQxWsP+0v2K4ioCvCEG+5gj0D39aeCXRD/vHvp6ivxvEHa9SZqBMzaBV9
qrl/2zDMHb8EdVbu8OaIwtlqpnjg/iptVmA/gs10QWunwua2fHDA59vVWdA9
qpTQumcNbMrqC90lQtDVgq+y3HEC3O+rfJlBOkKig/aK2QaNSsIn10u0qbPI
FZ/1aX6wAT6I9xO3OA1azsT9Pv+yHwjZX81iu5pRazD9gbP0Etx7+7uIvekn
dPDl0Rq5RGFJkkCiWwYJGL3lxa/cGIHjgQV0c4xTEBOazhe9NACW22rrkhUX
sErBhIQKY/DaKnLicPI6ciuwhog3zoF0PbfPCzUiJHF+Z79PP4FBL8ptp8vI
MEo1Pe6+/hcDfJoMDa+3oJMDy8jo3WzcqOtf/3p4ANIrD5wU7iCCEbupRsux
FTjO/leDcK4BvDqPF2g83/KHM8Ua2/gHsePoxIxJTB046tGTtOg2cTVYg4Ht
1RAUy9z98mxqAFzCvISVA0tws/BAyhlHCrjlZxmY32rBzjLZt01fKECu7mKg
hI3AYZqbn3OnS7DOx9GMlP8HqH+uunVfb4ZdL+t3Hz9OAbN857QHBdsIlNez
q+cDljFV7TSPa94boFWU/sTs+hcn/ALoLf/MgKjNATO0pyHIBVtR21zngfdZ
nhTtUTIk+Bf0fl6mJTSk2gYtbvmErN+178Ex1aB2WOvg0I9ycHa7duu5O5MK
X246rdE+ImhysHdzxhFx/eiQdLhYE9RF7qlc312JRGGNZ8etlpFfzCFeiocM
Vrv5SmM+dUFVb5bLfNwA3NVS1HR/1Q60T6LDzugM4TGe9f3XncfB7n2o5tMc
Ii7KJwtGGE8B306CBM3zMVR6FWWQGEuGlwaqoZP/DWFwu/puL9d+yNE7Wvqa
0IQ5LILbf+mM4hv9R/17ts4x+7tNXB1lEPcsTZ13M5xC0w8EQvyOCYjVnBRf
CfuFFWdOurWe6wD6vyLE5ulZOE0X95x/sBNYW9N7dSMq4NvH9QjjiEa0aDRg
bk+iU7lXetWU72UvVgne328XMIj7/dVa6Wkp0MFUP5vSWwkCi+dWVHso0Kdv
+GRNuwN1T90cqjJcgZxL6bwexqugVf22REPnEBgrBX7UvUXBabP0BiGrajyj
Z/Ky7vcyVBrs+7dNcwBsRQavlIuP//89lDzOFVqCpAE9v2HPCKRbVWzc9EO8
LJBIvqk+DHkLQx4yH36ixkv9dZuJYrxiUpF0T2ObSlXTNZ/T043AHHb1x7bR
fBgIwFz/nu9QLKpjOfF5BGfM0x/wk8aQb/P6PntXOhX+YFLOwN9BDP8Tv1pU
PAle72Lcbv9rwueWEbTeh+axWLC8l+ZqATiYjR3NEplFlW1WouHVvbhXQdE5
nG8Vfmy8rbpbOQjRziM6u3p7Ic1pr7TQAgma3ivG0dfNgkjipw3Gw6NodHrz
94+Hv0A5P82y7f4sFB588pRNowrHrfd1qpY0Qdp7ZeY31QR8TnzPa0BsAe/l
U4+LLqyhQN+hUMmt0V8wJ6hOMx9GCFbv1m23q5w7alvvotCNt6bL82Q8JkGr
KmMtXKwTE1v45X6yk9Agm/utmesqqDNVxPIRxiEs5AyR12gCr859uTtmtYoc
chfbjjQvwkf39MOt7TEo5W6fe8ajD34FSdFVxw9jQV+Q4FRsAko/T10Jft0D
c6vB7QdlJ3G485fpYNcsRuVuS7rjTEB18Yoq+1g/GFNjxbN7xiBu36c7zTvr
cFz20pp15zh2vFPlzSyag2cDfg/SdUPg4pH3ipKvliAmT5Dd5sosmmnzppVw
1sKx+/Zi4x8C0Shb6MzJ04NgzxsUdilwFTJFrHrey9RA4fvxmKfWDdiaO0N4
27SOFZwGJTeeU/GahouXosTU1npTzcn36kFkh8b0TfMG2Mc36sh8oBXyNB8r
rIT3o/mMNNw16YbLsirGeSqjaDajPyH+rx94TDOcctl/gLa8UkXzRSrqx9qQ
KjyHMOr2nez9xzaQ/ilqPlIaQJYpLoOgmias8F9br8sdQP3+2ORHV9px7+kv
Ky4ewxgVQtdlLroI4xotLizF21RKVpo0p+s2Ydj0VqPmRCvmZ8RV3e2ehByP
nXnqnVTQCbJq5TYZh6XK5n2ObSNIrzoUusBehex7RKbnYqtQ/OPuL6tz8yCv
33I9gbsbRv7i2xX+OQipoJuUSN+Eya74h8/6pzDbkPfaWtQ2lVAzLuGkF0Qw
iacYPFlcRI+LrLHfrWrwM18BV19gKOg7eOUEFvbCBY/EOHfCKDJQ1z/uvlsG
h1ZpNH4otAFFkqunl7oIOm0T3Mcp0xBCIyffxzaCDvoP5lwW/2HfAlOlSkYl
iN3PXY2tbETdPHruZZpR2JesdL1ZpBHDHRhi4+YawXWSIifm3A/HQ4mZPznH
MbKWqJTKXIY6cVp/nj8axDOHX+kFtBDh603c+BjdCh/uXbmYplQLc4+uyP7X
NYnnyMXt52KJ4LQj1I3r2k/sFWQqZinqgKGPEifpo3ogcbb8RXVHG+REEW+t
Dw8Aa31vLPPvWfxVLzFxb2MGjcRdHyRx16NAsFFLy/kZKNVfWmZLawE5gn5P
jiGiEMOj6OjtCci9ps8Xbd+EomRxVz2VKmwyZh7OuTOC+3Mv+5ZFE5GR+DTe
RHYV1WSvikostuP+acny3U+GMKT5alXsg06w8dw3fW2MiPn2xbosZ+hUzsot
ByZbbu1raNeLpLI+vFow9zvPnAIJmWtIr9wDO5cPxewqyEOdOqVSprVF4PNI
YyFlEtGvwnKk/vMAqBWWi513XMKWn9rIzF0OgdDWv5G1Bp3LNkLKpQuw75my
Xjx5BJWpGyXWbVQsDj2m1OzejYILS+QW7SLMXVKmyIWmYZDhpTeHj1HQ7q8Z
r1flKDg4lH/KZRqDBhOa0CubayisL8/+8r9l2Omdd/f6ni5QDtxUf9fWBtnr
M0dV+sZh+HLPTcX+IcitlLX61r+IMr4mKBc9jB9VlKdYGMmoqMex7Y5bDe4b
kP1EZh4DNV6hDuKzVcy0/7TW9rwOnV3MP7M71KNXnaxIt/EymPXXjsXX0qlE
DZxUdhPLR7lwaqtkVgOaDUUppoZT8Y39kTvFtvOYsOvbq8z5ZMw68Ck7VW0c
Vtee0G7/WQ28+0KCzukNY10IXQuj7Ry4jrvJKz3thkzrcGXLzEl0rbHb6STb
hsxNbnr7+xfAbLpm0YVjBhS1vJX1hgYwuujU2MLlFshwviowJbcOqsW60aE/
RsD81I6nDrprUBPvVnT1bxTmyXM1BBJD8FN2yPIYrsCwGm0gK10P6BLvqGrd
puLv84LZpOY5lExS9r/Fv4QXaKrfZSsvg/qh8M7QnfXA+Wuv9pnaBfxb7P3Z
TYGWkHJw+UeL5zzmnEx0efKkFE+UfL/J2NoJubRGPFieBywSNXF2pktYFWUn
uH9jBEPiXy4HpPXCs6svf/U2dEGUrTqQeRehk8voUIJ8C+TK7e79U0tGgiG5
2sO+BTRGKqkhCS3Qe+9PaOjtJSxIjFwr8O9Enue9zS8s/kFSTV45ncUa7rp2
4bHMFRJoDXcU738/iWbu9tp1lhkwzStIIRVR4O4+sQu8rxrwMytV96RtLZhf
CugPKKbi6m+HhFOVwxAjbdcIY6Po+iWpwXFqCRv4FHN8+mYhJ69Srz+5Dz1k
p8tuqEzBp3quO0SVVGAMKjjusb0fr/NYdxoHD4PEUf9+Os91tC/6dz/dqRnX
2Kzsx97EwISPyXYLsQx4WKjk8/ZTEs7bBvCrsSzBupRyrOZPFQiXrBA0W6uD
tVMp3ZPX+yCCXO7sXt0I7W2BaWpPB9BLiUn1669WDI+8/PuhKBl8w+U/Dr4u
gKr/ypVYwsZAT048UbCjD3bV/ieh8z0KfBRS2QdLZvHVY+6Lkw2LaHE8fEeB
5zI6fbjKKkJfCJG6s3Fxl9pRijusV/3rOD70IjoJ313Ey8rTJ5X1ejBx5+lb
eXs28GvQZd+2O3PwWFzOX6x+FAs4vQjupun4gKZkgV9rHZdMXOQ/JW9TWRmN
6/QvXgUhulPVzFrVoPN1dKbYsBRvVAvi07VxaHpoly1RNQ6S9tpSdGujMLRP
VYhDfwxdZR7ohcxMIeP1Q7qHQivxKekk9x+BX5AUXj0a9HFkywdrOHeen0OS
FPqQlsfg96zwdZYeKhIlzR1NucbAX48j1HChCGJ+Fh4vVyDBbY/td2QMo4ES
RiOX2jUG6jri+bPaFehGQ5PmXjKCdew3Gn9E0xH2lZadsNvyx64fTt+bh/Kx
dIbrdUAGBQ7rf3mZWNaK+ua5dGOVzWBz/6duE9MA7P2rEHu+zxxN93uJp7NM
gkDufKfqiXmo2XbdM8RhAWvP+koTeylAdfYVKJ1tQ2vf6MHAPySwldSeTUmn
Qp/jqPjjjF7Y3btbgi/7D/rdiGueZSRBVuTmMvkmDWEjPWrNJbobRC5NGI75
LaLRSWdun+8b6ImczrQ8s8BByRK9b9KLObnP6o8qVGGD7dpNiSfdaNz+QEr6
4RLczsUJFfdWaFHj+NerNA3vWBd9WKcHIeipdHSVXQWqfOpef0NpRMWr3xiS
E3sgOmvk/aZgOy6Xry/yMU7j4BKfxqnUOcg4ZP806HkTPEpncBg6modfrG6t
9puvQMLUr00Fl03I2c8XwqJWjAce7M7Qvj8Otn+S7uuSy9A4YGdA5+NJFEmv
C43034DM02L2QlueoTEiNpLhNwz/yRSTdCpX0TxZPa0wugPWJz3OqwZO4ClD
xcBO0VhsYlCiXTKfRpkf3UZTtQ14Qow7Kd1mCqMJcgOt+VMQ1MqVs1ZMR3g3
YJFv6VKCZXTjNMZf28DwVzFFkYaecM8gbKeJ09pWPkUMxZsvw8B9Ib7qrizI
taePYJcfRErmJFdoLy2h989Id4QxGbNkVcJcJubg6knhmaEt3+eI5RfJCK/H
xGDtpEGVGFSLTDKvpqzix9/BF1OYh1Hel8Yg5cgITt/NW6jsmkHT+JgsUdca
vDUcaStDIaK+jLS1rnk7chU/oR+OGIbNHY/OPE9qgW+ua4MZ3NO4rD6pL224
xcd2SteznZow7JT041TnIch5y2UjpJAAheHbiuPlCcA6Xabjp9aGPl7OzYpF
WXDgcfsiQZiCqYZX5nSHV/CFyOXPaju8YaU151WkTRGYVH9JYaIlQrI49UDQ
20F0k+XrrHEh4Mi9v+oWtFPwq/yNNMPTGXzPFdnvOTGLbNp3eF6encfKnBiv
W+prOMhxl/Xp+hgy33zm/o00jvR5qoN9JYV4WmZFNru9BT8wsuqy7ltDo3jr
WzsyOtBPwUtTcHgero8Z/j5G3eJAx44iNeM1FEp5kPH95wjohiVfKmeYg1vf
ZW6HPiSA2d8rkd7Lg+gVe4Dl29TWuWxnbOLZT4Kl9g9c35IJeFA/N+R++Xdg
T+12vLeO8DBG6SB8KMf+um7Lc1+n8UfweJVxIWJ9tses1/ZZNPHj1y2abIaX
gY8ld/X0o4tb0nH1jC0+ZTcy5N1BBSg2drwhPYpzRTJBdpvjKGwavyPBowu/
1SXybja3YKh3fNmm1PwWFwZPli5uAOfHFC2eOSosPJx5PyXciv/F7RJzPz6L
L2JUh7oXtqn4sOnuFeQaRdu+4m5tuzGAZQqNosMkrEhKXVRvI6GTnW0XU149
XPYzLdSwoiLze5MiLmkSBqhLLmqfb8XHnrt/TMtSQGuKb5M+aA5/vgz09mDr
g9z5+LpAoWWknz8bnh+6ikY/5vNPS7WiP/MOO8ayZdzRVUJ/4XYqphLZ68ji
JFQetNCRFN1AgeKuHdOaPfg+/pyodmQTRp2cpyzsncOj+fYvG/RIwPYkgXx/
ioydY+MZRT/JyEuweaLa3QWP4nfDya8U5LK49IvZNArv3omwfr17Hm5/9Zbw
HquAOI23V9/KDoBk6MPLBdyLOGX4M+I/lzr4qKsaHWUyCxauZwtajebBckVK
UKFgHI/BZa0xH1oCl37D0sS2aWx1SCm2kdoAsYXOvVabFBBStH/Zu3ebCi33
uOjv5mFs0TzUELpzAjU8dfc++dmB6tKfuq72zMDpx5/9vU+PolX0T1N7i0r0
5CqozWRtxVJ7Ouqx/F60SK6qZJfLBqvYysHW90vw57On6O/SWjxVcJ3m3PcZ
bDvcoh6dRILAb3cUPtgMg/dayEuXgyRYJHx5R+nZRmDipaGcKOjFN6/VzWJ3
F8CZ/vCkv7xUEAttPH3AlwK6V1gijLOHsMv4iD9fzDJGluBseXo+nJ2Rc3ae
bEWRTjwe6J6J1385djmrkWFf3qVvXhyL4Jvdd6nBl4qp/F6XSAp/sOfI4Vy/
AiJUfVq1zwlfAhFSF2OQ2gS68clM/ldSgcnkoo6Qbx3orlf+UM57DBhyBUp5
DWYwYokq9mRyARfD2tk+7+3f4uxXa82XV2AqODKkUXscFHe+zMv/MYZnS+Kv
PFgawO+1F6VAZhiyVBi1bSTLgK+RMbC6cgDiTpTtCxRowteMqdr7uRZBSbT4
kjdbDzo92vT7ZdePbM+shG71T6JxtCWJc2UGJ/g3V+/P/4XiQclDtjcG4WA0
9fTPG+Ng983zjUtQDZ4tV9XTYx2C2wo5mXbpC3CuOmlH5EAnxDsefLjDZg3e
N9gNnCiYAvYKXLQTXYIPz13ZDOfpCK6rtSoNvOP4oFdY6XjtB/RoPr/PwYOE
mmXL3u7xE6h21PETzela2LFTP+7KpSFwWaiO77IfxIkPRjwGnsN4R13nWRc7
A+Fdxq7CkIYmPHchaZ2nbwByiQIKpBsTUHSfYMUlOANH6RNMuJmXcHeVpEAV
+xD4GRexrEY0guL75lv9/AS48eYdE27OomwSW34wHRWjBJkvxDsN4OfIm7L3
2GvAzW2npd7nfty+27jrR+kIngpkDxkIo+KtwDcz60pDmNpm+VJOYwJ1Zest
HrbPQuwzvi8/H5WijZaFnILKGvw1d/wkobaADBb30g9d/AJa1yTlqg7NoVyP
EKlJdx5ml5ZfUfLH8al7+/1ANSq8sVqUVdRewm8DlMILekPYHF1lvaK8Bgc/
v0r7tsU5e9k6F2V/TqGdWXDIPZYJWP/AL37dgww6i9/vqli0Y6Rl6S4Szyby
rHLmPn46A5vr+0nel4gwe96q32u0F12KLwq5kXPx8rZoOePuIbiR9KjC4doa
Dky+C1ud3wTd13/7d0ZmYMdMgiy34yRWn3M9PHJuDIvPZ17MV9iqZ8YHF/89
7sS/SsdP9ZjP4fBm7bVn1eM4N3Jhv+jrdjylaf3yh+oslsg/25u6OoGXry+7
CV+lwsHIGGbXZ0MYY7ux6Os+gHa+5k0K91dwH/E0w4ORNlCW/bQi9WQFT164
kneq+B86VWXHvMuugPNUI+72qUF4zXhUX7K0BHpINx/YLbehbvozlf8cyXiA
T4ArX38et9fXFgZ7D0DkGY8xuxNLSMc8K0DU/IWYvOeOXmk37lWeX7FUHYDU
x+6MjfVb/7vGcIhWYhadFxdP9mbUwecw5pgyq048anvNWYt9Gq+8nTA04+nA
sJWJzuRtW/lTzt2SqECFAvvFts+kv3iBTfCUo84ynA27Q/If6gT7r9cNE4j9
8OxLn4i9aDOeYn99i4ZSBNqHDRdm8iaAp+QGu097Gzy7L6p3gJiLl4on/omf
+AdfdF/XOb9YQBeTganov1SUSBoyVLKYRuYJQw3NFiLSJ2YYFmx5W6Zi9yuZ
n0toeC02vd2hDc+FnIr1OPYThIo4VJKD/oJdr+aXz5xNALpffosUz+A+k7YR
tdx2eGjQ9mVCrBxrJHYIF9sVw9+3VTQknkF45kgOYnkyB//tr+eW16RgvS5r
vo5gF0yVSxausXVCC7HB4NiPDgzpusg7dmwZ1i1H8yNsBiGvLsSAL34E2Ucq
dC6+pldxaq8Nv7TWAxvtV1glzeaxfmYhiu53DobtV48U2qxHkTTlXIOLZGza
+/KP9fEplCQwn4/5TMFM/aE/avzbCLrfeC7PNQ5iHPuNepPGDLjnfPdW2L5J
KFiSjPm0tIaHm/FguVswJHyqmlt/2gBhK/NqUZy9aEoxKltSXIeMEuee1OYP
8IKzJ817ZAGvH7jN5HC4HxYvODXfSaZg1FsZ2S/tW8BQ7tbaMbgEhZT+uhq6
cQi61vgqo6kdOzhvH1I9sYy7JH9/eUhTD792vGqQmGsE0cilPQGvtzhpbzCD
sf0Epp5xfGx4Pxe2P2tbDo2cwY3VJm8fqyZUt+GU69KnIfjzw2+P/CWY9H29
MyQ7D1RtfDSDjGbQ2l5+PvZ2I6CtvUcQ9zKcr37DLZeSARz6YmXKleMYa7R+
dFBmHFM/q6brW69ilZLsjwzKHLJ0zOlySpHxLGOZegbTG0hYf65eOLCBUdIt
cz+JM0Ap1nHrwwU46jP9CE3WoSLlkW/503ZwRCnTIa4B1DG/sT9r9xSo8Sfs
kdEh4Xpmx/cPBXM4xFl3RPMUBS5oX5/+6DGMSxzjxxjJzXh8sGLu3L1Z9A9n
46wqbkBTwVvCLX9+otCo8QnTnwsgrLaHc7mHCm5RPBtpm2NYdmj/bJXdPJxQ
ZA0f5G7GmohTAQkcdTBYmLBXeyMCCQnEjSMnB3B7pFPwp18TmJZSteBStwIu
k9G11iIz2Hx9oik+cQwEdpWata2+AcbuaKnR+kXsL9Joih5fh9KlwcMmz5pA
zbTsyyF2GkKVh+xdidFhMLrc4uBVMQIUmcCx5L4sZC0rVCipe4sjyoIrKk4l
uCu4ixcshoC659if7jkqHlDmsX3pScGz98KDr+2Zhesja7pMt9sx+9Cpa8lB
JHTguGHNt5X/z4V7v+S2zWJekQsuVBJQmlHA2CDCC8d00vv4txMwhhU7Zcfq
IYLEGJ+knQvWB99xR3DOoLjFtbBArUVY7LBge5A8hE6lDmlHjq9Co0xg65np
QeSolHnGolELX48d3ftONx/Sfqr99/xjJ5p3/tV6nD4MR3wZa2tWKvBs57vg
ooh5YH225Pe0Zquf7Jkn4IsqVBY3cE5LHYFETmnjI67jeMci1KaJsweDtxd4
Rz2awJrmvLDLDv+weoSLY7Z9AptsICjn/TS+szEYJ7j3I5Wvndi9PgUihuZn
WyNX4cVcYoBB4jASDwR39twkgUJm/4984gLu1Zjf90J0Ajd6L/l8Fe6HRAnz
bt7XOwjJ483HtF60o1VdBzlWbQ5DRCZIJ50HMLRm2P7nYRqCemfawtfZWYzR
P7OPYb0W73iUTb573gIc9FOM47vXkZS62rz9GhH9ryQcbNo5h4UXXJ4+HCFj
mv3waPbFObz+uJ5Np6kPPc+aHiYZkMEykL/n+bftKp8aVKXCluJB9wLz/JzB
IDipMlCfOFfB9uOvHZq38lIz6SL1yd4N2GWRLzViXYHDxjNaU68mcE1Pm9OR
0g56omlHzhmugs0y80eKly/uTamau9jWjGd6U9hUVEfQoklkmnSjByn3jskF
P5+B8Joyq72cVPCcLH7XoEcBFpM3k5/8hjDt40OR32bDcKyqSyVVnAwz40Kl
cbe80EzNfML37SzSnCl5v51pBpQP27RKZpGBI3cix2Wrj0eK3uaSy2qBiIzb
VbTaPyHwxFCkZPU69sd5TwcuDkByGCWe/N8CHPAbOh+quQLZD58KvTg+hgrj
OetkAg1BpEAuR+Z5EA403tTrvFkDlszdKa9lJqEuDzk6blHwl5j6FR/becz8
QNpM2z0KE1n7IjhZayH1mP+1z3xDkPFKJGDhPAXyxNZdtyu1wmPMx+5IKgrs
Nb2m9rkGfDP2D+w+nwl7NzXuZCq3Q10B1bO9bhjknSbriudbkJBe42iTP4j5
pkLuF9KG0JFTKqg/NQvZC3Kluifb8dncK7vH+ssgY59/1T9hGh0CP3n4W3Ri
yzpD6gOMhzLBljMMk0R0WdVMUSwsR4F3rUvhn+cwOEtU6dX3epCZv9bZOziG
Xu0SscK8wxC3Ptwe9XkITt6vKcH5RYyMO3gh0YOM+57PXuSZHYS3f8Pya0/3
Y7e/wj22/H48puAnffYMDaG6jvE3dA6DC2dItZvOJrJtjr15Vr0Ipw8v0qSq
zeN/mX8GspUK4IhfwJnzPeVgFvT1uab6JLChsY54AxGUbPt5x54NIPOhZFm2
T1ve/4jq+fZNPrzx2VH49TsZFeV3OrclDqB48p1/dzwnsOzzh0mRvePAxEbK
2ue1DEteltej+D+C2dcDMhEio6DzsdfmytAI/pV7Lnc3uwyrM63OdmiQYbLA
5GAoToKtpW2SMEsTfPfaVTsyuoJ8Pan/GY9SMUi1vWj+Qh94hN6NPGNegXRn
Nhdap+cxtX8g8AhPI77YQ/T2EBwAgS8ng50O58HSNMk56RUFm17q6F5v7IGc
4R8k6fpJ2NnP5ERzYw5iM4o500O7MC15haPs9D/489C7ysKuHi/dO32UW3AF
WZtIERkXZiFCV/N19q8JUJY4fvLHuUpgkXYOxH9kjOd5Y2682YANXucj+MTs
sbRziMHn2AhmkR+vXN8cA5amWbp10XWwJI0KDLb0wr8dnn4sk1Pwy+xDzrLp
OHDSDnYmksbg2OU/2mE3OzAynv8TozEJr4nQ/RrpQqy2/CcHOybQ+2Hw8o6i
VlR/E2Z6f+te/rks9vbNk1Q4cpTV/a/jBv7yvxPt9J0IlV0/ObKGuiFM9DpF
OXcdtdr2zLpQhtFUQ2uFbb0Fg2pjlH23+EWc+8jrz8r9EDfi9/vWHkTpoOnb
779Woo7CwxBPizkUd31FtfpIAd+eiVWtpgHYm3WOevhyB/yyUJ1zMtum0nnu
4QfmyBb88fFRiepLCohJqp9JnSzH2LqBH2cHyuBiwM3D/+n04mEl36GHD+pw
0UX+lANvEZhXJ3zgLs7HuBS5Lir9MMC26VexLv3A7fs4sjKzHxm/PqBvfTOO
Yvdk78R4leF7kefV3bsmMbqXQVvXqxxaVAeco8+RoIPRU/3EfzN4bIhTXsJr
EHNsbvSa3SbBYOi1eFOXOVzc0exbQdpGWPKoefw5fBFOVQeMBCjOw9Xd0DJf
Oo5jYg+LtHf3Q72f7kF9t1loJD/q9yGWIInvt8EATQ/M+SiUJ/3oxaSXH9bq
tItQwKO7NpmRgnvGheXcC/7gEM9a/6TcPzzy8kJo/YUVDD1wUfbC7jl4Eb6x
a2B/G6atH7Ex/NQDL6rmql7Hx6C/ogOdXX0XDP34eEHKZhvBu/Wm30veCeyz
p9vXTZyGXZyFOnaRVPBed3J45DAMn+otb7wXCcDWwp7N9kYKLlqUedlObidM
B8RONB2joIaDVYMM1zyKhSxF/x0nYcoNqVUnq1XYeMTVxrYwC/NjXu3p49tV
7ORZ+cUdquHmwMymZfsqvqRnGBrRLYZv7VWtcY15wOFKbRi4TobQA0n62S+n
4KoNa8s5pUZgzDnnMnxtCeZOPM7IvEkF5TSJtYyqHtijeEEn3Sge/KN6zXRe
T+HEtdN5B3Rn8ORxxgRR3y0v9h5AhiwiDijnSv7O+g94yQUnM5+swT0OQdvp
naO48kbI49XDAZzdyfHG/+cARHEwS12tm8L73pFPSPzz2PVuj/yDiEF4EEjr
/Z4tDm7x/+0arJuDJP7+xIStHDu/OnpNqLoNTeuuXg7VboF/D/Ymu5vOQaT7
TVo7bhLsym+R7X/YjzwJ73m/v+6GuJ31N6R856GK1VxCUHkW2Bcamp1ujMLp
X2epQkepkL9WdiU0eQATcpuYWtd/4T8ZnZRck7/oq8LM4RTRg0lXyXdGGaew
4/GQmr7qOkiETQQ89/wDAUqyUFI1gZxc0/LfDP4C31elxUDXJezq00vcz9KL
JUG9mxU8Cygzkn/Rbkc/RJ9mTmVRX4Ck/9R4Dj+bgshrrFcz4wZRky+iOOLU
NEyrPggTO7EE/qf/WNuFD4LvW4uxwN9tuHLFMEGovhJ6fJ/8gEtVGFuYVmAG
NISehhuPXHm3uPZHxVSMxhhab0uMagqaB458aveyKgVNz93IMRjqAKlbvs9V
tLrx1n/RQ6dPlaBkSTz1MgsFfIJTr9X3T4HSA+9S2T1EeEH3SMfEm4y/E0+S
/AxGsGFGgJzs34aXXIrDL9ASoTp3/bwm/yJcvPSKo0GsEdl5ODq9t6eBEclD
dwfMgbB+ygdzvwFUNmFm6eiewbAS2otiWhTIFn3gc0BhAv2l3T682/IMB++a
NYF5KmbMJu6pCBpD5WcSHsFK39HpzsWyZadF1MGVq6+FepCUJTaso1CLba/y
0sQbAuFD0v1ianwrzgSx89EzzECxhV6oZ/QS3v9rLPORnoK37kTM+qqXoFF1
1qdXfKNQ0Ofv1Fo/gF857PfwibfAWOBet7H+HjSr4he3vVcCB2TKs3d25oC7
84PKL8XdQHeGZJGuNIh21j/mvr9CUND1pNlVvIwyhuzSIfGDKEoVJm2nkGF4
Ytb8yutm+N1waKyjexq/OLp5Xgr6Do9zv8mo5RGBLTTcstaoFTsSJR5aHG2G
lZ7Fwd8/tvxUfbf6Gc1pXPs6xXvneDOcUvz6KdWZlsBg+TCwqXQGFR85787t
WgbTGxHfzBRKcNvouvlSbj8G/Gl3bdxLhJuDz/Vfry4ju0v74T8SUSDoe9Eh
+BIFC2VsQ3/EzOPBJef+OKtR3Mf/frKUqQYOdHN5eiiuo25qsHzRDyqa+1Ib
fXevotexds4Tf0eg7IByxLEHW/zD8HzU3HQNGXMux4yPlQFVNEPbyJOI6l3F
VLfzc3BDY7449WUvzhsKVQ65FcIK/+m31xoH4Iseu+HiYB+OqGpxR3asQevJ
o5GRRWvgOHnqlxtPAx6/79OTLECGR6EXAg2/DONntXM7oi/N4qT8vAonbyco
7TiSYXRuDsNNbqMhbRu+qvj0rK54BvrUSz5MMM+g1OxmdNQkLaH74OPS3olB
dLJPPvcomowvVaev0QoifPthSKXSzyApzXAbFy8Rox84dq1fXYLwvVcsHkqS
4WDqi1wTgzSIz5W7nWTdjI4/dtirS/3G1p6x12X0HWBdfaWDu3I74bttll6Y
5BpwyW98MiT14+BQ2KcoPiKcPFy/p/TPLMrfOyoXnTeHAfSD1PWTVIhiqrr9
YWAESK6p/M6lZOyM7DZhSaiCO/dyd5i/bkKdKQ/ZjTPzIJw242PSXw5jbWFv
k3nq4WkMt6+50gYwcVd+3TFPAq6zPJosyTU4NEOwP/qeDMx7FlTCfpFhV8cr
rh+b/TCinZVsxtIPsgYB175/G4HeC7nLc4n98DwiylF3ahIulk2yOF3YyiX2
ENcU8RV8sFuO+9YBMib0/n0YdigbOthGU9Lal8CE7uEvEYdRfEoXzSv+hwyv
A53YltnHQYOzkZtFagC4LIMZHOnnwEa39Yc7vRd86Z01IMm1gDxVM+yc6Rg4
kP3Wp9VzMOSOTbiXZAO6+D58NXxgHsfZty0diqRT0eNaYdtXNoAXr79UKfau
gAO95P73f7LBlzDG9Y6/Af0lbobVBo9iQH93q+K7UWxrvHrR7gQVR2TY4+6U
E5BWMzrGiG8D+IxoSy+Pt2LI/mw9wsMRIPeY9WpuZuG1Z9cLKsvWkdtUU1hi
ZYuDy/7Tm6ZPgau20dwcErNocdz91aJLHzJ+V1R2PTqKLJG7hDq2/CKMPkEj
ffc2wqGIdVoLx2X8pGSzocBXCmP5xyb1b3ajsPj6L17nUvRhlHEhbXlkIJsw
PbmZjOofxMziQ2fQ6tyCqmR4N3Ador/4LbIJBZO1iIPly5h3OPet5sEJuPXX
331WYgOYA0k6ZrklcLXR+gxJfgmMD9vwxK/1w51DXCcj42dAWoFLXNdnDBuH
8ifNRMrQrk4itCZuDNQY45hiT89i2YS5mBDHFHJc72CxNm/CpCbJzBd/luCY
24wxp8YsZGntSupuXAQJ7XNHnsyNb3FyzHGOs5Pwct/YN5smPXxQd3VAY+8K
lrV3hXg+S4IVb/mW/cKtGDmmFtbuQMSdvlJSPzM7YHi86/YeuiqQ3Uif9lJu
BFrD5OYAmW4Umo8R/dhGxsvWjKm836gwZqfgvx4wjm0pE7082AKPu70/yRuR
kffWzAOVXbNgkF9o+mSqFo/mxif+3aq/yUT3kZjveeDyjLGOjpuEL25lHt/v
R0KmjyalBvPTcHlP4d45jgIs/mbRGey4TWVtPcLPfWciZPVYkpvUguGNd/85
A9dRGBSnNiyYRWPWA61epcRZeGH+ZtB8ZhZcRN6v7tqcR/kEoTueKhQI+JZH
XrgzhH3vN6zpj7xBVvekMWXDQYD+V3+PHKNVsbs0ojjePYvZyf+KT+mmwnnx
5z/Ng+dB1PZJ1vfhSbh/2bT3VmUXENpyRDIXF2BwZ2qJzPs5HCBf+hcn2QPs
bacPLdi5A7fWN+nF6HlIS6CdUOidBq9/VhKhfpPoflf0CcuDYWxOmAkzNJqF
f8octSGnyMApmUcIrUAggUzJ8nM6FeuaihdLHAtwNYem4AtlZmvebRo/tiFc
ihIYU2zvh0+o49ewxb3ljy2r9Zop6Pkj77qwwiB2yow22VgnwV9R00cnRkjA
5ERacbiwDAe0Rvbz6JPwmexB9qo3aXiy/oyS+M9usP2IkmWy89j0PZDW4P0Y
HIoMcfgotIhN4boeUg7joJNRJ5Hs2Ygf43b8I0YMo+Om3bSTHRVj+Evaxsao
oBHLLdlwdgif7lGANYYlPPtzUDVxqgtF3Q22h2j0QV3ixuD061Xg/so+9Xyp
GUhuvKeOvf2F8rvdzQ5X5sD0FMX41YtJSH/ox+iZNYS9R/I6mR6UYvWQ6bS/
5yc44J1nGpZHxohKHpbAUCo8ne/XGTo6AmKPBQ4/bctCauARAVqGbSpK+cPK
i0emsZNNmEfqbTJaDxW/MnatwzLiyyfiiiOYGTfl67Dla6wntQ5h+zIKxdlz
3zo2A/45X71s9DPgKC1d1rTwLJxuFrjQtG0MHvy7t7ogkA5FkbS2anuIOM21
R4XedBqY9u3pu51CxmJjYo08/SrocYfvIsTlwT3Pruk2NSI0Ntv9trs0BD3T
BJ8F1X7gf34z8KIfBTyk9ClXH1ej6/veL3XvR/BqUGhL1RGEvnQhPu/ZTugO
1fD0+VkKc3deqYcfGcKxEhsOS9YxzOZZrvgsOoMzxUf2OjHMgqFn958XW1zJ
7vN4zde5A88X3b/1xDQJoubjx5Y7F7HtxgjpyOYcTHg55bq+IMP8mfgSnvEu
UFprHtM7H4l3hbqqVARWsMtluCrs1DwoWGkfuS/XhTEGwd3rR2hU6L3K5UXa
dhJS7aY0jk9RoPWRdJOj/iRaX6o9Es85iXvERc8cvl8LMRE/mN54MhFuaRI0
/XynwYYqaq1qR0t4l5QxL3E5Hy6BnWmG6AQ+4/2kZSsYjJU6DiF9/yh4/eHi
r+80fWB90tys5Eg/QJOU6o+pedxL79stlUjCBvceg9OVQ8j2J2LZJPYrPuUt
CcqencCLwhedQ5Kn0bMrpt+cqx7yvKLiBq0GcNszIl3ZuzaQ3BCvF7jbiMe0
hqRX6MYxbJxuf9LgHEzmPIqiY8/A8CYBd3UNOpULtSKxrw3JWPmnIEEppxjV
b0ROpPVVYMQ2gyed0fGwSldXI52xANSXevu/f6iA4y4tq/l/1iGr61Jb/TIt
wXkmapK5fBUKwx+0/FZD3P5vVIPiMAcJlQtpNZqpeE2ogCyR1QeeUqd7Mokj
WPi74qu25BDEddpscCum4UUG3LAa2PL7zj8xS6emcOfXrI9PGfrgplriMnNU
B1ywtDQrtV0CvzMHCxUuToD+0UT2m7KzcJ2z+zKf6AhcKlbckA8vRx/VqwF1
Skno0EbnWv5qGLjCjokPylmgmlNw0ipXL8TPNksIlA1CrFjmCePJZtA7eGYy
cmMBPQU/+vtW9ALzm7oDQz5tkF0Zv2u9eA3oMw5H3bIbgvxfVok/DO9CfYDE
RYYhZzT5R3Y0P1yOimFBzObKA8gJmLAgsoyxkg/l/Ue3E+qeN96yzx+B/8rf
j+zoG4Ifv+rCWbfqeMfSUnvWf+PguOntYPxyASNFbp5IT9mAXIa9TnH5tIQb
cTO3FPSH0S/8dsDJQyPA++XB1esCbYirTHqsg1PIlDX025VtABfu31u/nEnE
m5SEgwt3qch+ueIpJWAD2lmPL4SOh2PNztTo65d/A89nmu2nyxrhnxiHwdrv
bihncqnlLXkHxCGRRxEVsyjn4Myj+bcYdLun2jdbC+DDtS+tf050wO8CD8uF
Q00QVW8Vlzp1D13Epcpqf06B0UZUQ/yucXhBjjzL1EfBzUv3MlsYG1HQPXDi
iFAJXmVhGp/xb0VukfNEFtFlDL9Y5nF4cRY4BOkvGAhPQNy3+ZLmESLU3xtm
UtciQsmAq6nb02l0iA4U1703A8xyYedO11LhTuLrVanjLfDWmZeDc7gMLx6y
bPJko8BD9eUyk8pmOKY5zeuydX/uTKY0a2vNYCXx0Qtf7WbU9Dux+9s/Egpf
XvhZpbyI33c+T8mbHgF1k0lv8t5RrH34NWV/5hKQTvq/4to/BfEbnevHdrci
V/dzZgn5BTRdU7N/ZLKIPBeuEajTMxh4+Nxb7qgOTL5q2DCiMgLhHBavLOLa
UPhFTPCC7iKI5fkHPBMMhY3bh0YTr4zDJWlC7cSrHqC33P685/UGjg18pXBM
DcDS3XciU1vesWtaOG/FbQpH7+r/l2xGQG7xJdkNKhH7rWZmdyo242Vdy8L7
Ulv5uCPofa7xCiZ+GevPHH2FofILU4PL3UCr/phP5Ok8zj3m5j4p2g+XbRM1
Th+fQIli9R2D1s0gs2K0JJdSD0FHWTv8k0ggaphQdLZ1CvQzb9ubHa+Fm02K
Aruax7Fcgu25Z+ggnDr4++3+jQ5g9OD/VtzRBDtLn3ExK3WC9e32L0L3ysFC
+wNLqxoFr1kQn3/OIWHnjQ9XGiymMMzMscrBvhtlj1VusJyYwX3Md7Zd0URM
UAvY5DAbg1tXfxafFyQjfzVx2Fg7E67uO/Hg+64G7DdJtGCZIWHwZLKwtNUy
Pvsi17IeNI5nZQNf0Ma0oE7plbt1uzrxVZJci5jIllfb5pxcWFmAJd4ZWlem
UXzRY9v+wGcD9sZdSXo31AyKz76G3j3ahwVc715+3E0CeQHzLLJfBbw/HPeG
Z/8IqEo/asQeCrAmPoEoJwoYEKXmvrb9wp5E3bCnwZnw87BmT6PtCN6QuyjR
PTWHZS4D7MbNbWBVyK4cKkpH0OdrSVZRmcMZud83bz2YB5FJxXC1R4vw4DLV
a6HxF16Qf7O/6d8v2HHKhuZwrgCcrVJ7zlTYi4UL32sNdRrhzFnFW6r8/Zif
VnmJx2CrL0YpxX3gLIDxe1KZ8jKtqF1eN8X0rgJNbyc9nyuaAMaxKdvYunl0
LnnIRfYZgX8UYZEAy3Jw13SUaRpfAS9trTO5FWMo/CuF/FO8CR9XBG/N8ITp
X6nfC2RHISXKlP6SdRPGrEu9LXuUBbN0N35lRdXh0xi/m1ofK8G/+O5r9i9/
0e/61LQzM62KP18BWFCbwOf7Kk9g/SicjNxQTT8/i85aRnoMxzqhVTo8x21h
GNaa9M8wBZciW3zMQOHSGMSKX+mNoq6DV0xO5G73ApAs/n50iK8dW+u8/hnz
1iHzdKvg+ucxNC8UX0r7GAzrbZV7XikQ0TLULVL1KBmJtmktHZMDqKpZ/Pb6
cSqm3Hz2eqw3C6WMXi5qpyygLfPN5lUvIszTM7x+mvsRNAS963UkB3D2i95Z
rt4iCMjWvS3DMI5qy6FyLMoLUNP64lsgdzXuNBbbVvo1G9gLLHtCZKmwO8cs
om24C3ee/u15ZF8zOmyr9dM7R4JqgXHJAMUJKGfzedO/+B08+HsiDqe2gtsF
+/73HQijdAftuoNI8JbZkzHIZxD//rFWZu/pASbJYzeE21rBtCQx/mBEOwqI
pXFdet0OWvz69ZN9/+CRNOFz6FozDta8zDt8cBEDPLOO7vi6lRO8a3Un+GhU
YDw2xfXvHNzdyzkQ+LoS1I+KXJg8Td3y7JNqks00Kg7vTVijHrXiystjs181
RkBFmn/vy+oFcJKKb434REET3V/b8vVHcZFm4CpNBhXUiXQnbvLQEo7fvs1r
JNWGp3q+xkqnzSPnhJ5GyeM2iG9NzrYzo1MxJW/75lnWBxmz1XqHVheRmX1C
QmCtE1hvtEt7cA/h9mXdF1+u1iPZL19C4csMdtHY7geXRRwxvGfyIq4VHi3M
n/nyG8FNYD+T5exfMHOv8ah8uIQz8RqhszIjsK35JbvBxx68c0P2M/0JMjhe
vz8ebdeIg66STWXMw1BSrafYnjCN6R+Xv1VkDKOaQtA62zwZvNsCO2WjElG+
q3Hu/rkV2EtKyb4g0IszRrmHQ/vmsNBvbdVDtA8Lld8llskvALFx48Gt9+MQ
r8U48ramFmzDUg4v/VyAM8yOj1mZKKBiz397p3cUGLif2C04S6PSjQI7YhjT
0Ty/6llOZgP4eZOk25zaUYLr5hd6gyWcOtAcPTlLhZX4sV077eZhmdh5uXjs
E7qpJYvIyueAgYVVinxwOSorKOur3F7G5URd+f9ExqF0X0m6itkC3JT42f1D
fg6SPOcElu4RUGAs1atFkQJj7tmGEWZEcH0xH/hty+vzzjG0BU1tV/n6k8X6
/MwkZj/nEKQtGcSCxWE6n5JEIDrwzInWrqEn98voo+5U1KN9epbddhRCa2Gv
zcoibDb7qlw/sICd08Eta4kjaNsaZFR0loq9Fxhkk7VpCIosDRYtfePAsTke
1nduFR+cdLx9lZWA8bXm/twxNCoc2TOPRl+OYo/w+bF/O1dQn6c/RXWMBLXH
bnDec52Ej1wn7Jms58CdyqsT5FaB78UvPY8poVH5LCNGozCzgt5FUucUVUex
ReHgXGcfFUwutkYEOc7g0JK0wozaKh5ONxTzfdmDnr8E4zWLZqDL1juL+mYO
PJOcdmnVjUNGRFx4pOw4/lly+vTQtgRNntj7Vu0owoOxywIns9PA8JD+l6+W
v/HFzpLFtVYflKZPF5R1bcTPQfmOpJZ07CKH7Cu+v4ANFsF3PB1LQMhIKtRh
fxvmvkvb96ZvGltVAji/H1vCr36/rrX7dCJEPaxps4pBDZ+Y3kvlKxB826Cv
vnQIJeMFTmj/+wa3vhu+GDHsxAMbwbKMb9fRvv4DqvfPQ6la+zfukjZ87ELM
KZnsR01WMdqEz0XI63/Ry3OQAu55gaP6lZ2ozT0hJEClIwgWpTGX1m+gQKXW
mftJzcBiTnzpZbkE3zq5emQ+r+E+3rB73w/0wGvvMTd6nia0d0tJLVodgdLH
py59jW3HliTL6va4XjChBFwsokWoGdNZZd3KyZmeM+69OXMwn2126m35DJQu
Ot88wUWCBwWVhfp7aQmGnq82RL70IqsZvfBB/WZ4xO9y6LHSIFbId9eLTizC
rkuXRe5d34RIR6+s2MBqZGVkzmlMKQaepuLeXdqT+K1m/ZRkfxEqyYiUmv5d
BePYUroe42mssHEcaKdQ4Uc5amzwkTCaje7FiR3dcDskd5TXpBBpXu+XjXKn
UbnZ9opI510JF1nO03Te7UQmnjrHzOsjWHM6lCWDjQi7HC+1agr/g5pjoRFd
5EVwvrSaLqSVD94ChsGqdSuol2eivl/jN3zeTY14pNKLqQdOybhu+WFIOTct
21Q7Poq2+3y8aAkJQjZsnTt+YUtswwWB11PAsf71ULD4DBaFX1AmizSArsNM
4ZXcSpiuruE4ucVRMQz/2I9rZWJmBzvG+WzCoR2e0SfIs/iwtKjDWjoJZFne
sf5z+oeWWToCJxVGMDSC+YNSfh0WJjzaU7Y6hPozkycNP+RhYdP7A39L25Br
ZMr6AM7C8+vt/XtVVnCx4H75HbkWVLhDS9+StwBHPv5meVy5naC4xrbqmtUJ
lZX0RJfUZGy8IjzyhqUTh5Jp1itFGrD6hWBQzzkqip2++bavLgebjNqVYm0H
sGlUOn121zx+S2FXNjLJwSVpoz+XDcKgqubfTeLFQTzlXWnhrUVBi1k/dbHU
DPhgfunQ96ohjO95kpyT2ozFnyWad2YuguLdSku+W5tgWHe/hMulF9WVviiW
OvWAw80bH/7xtYKYS8C6SGM98oonVSh/ooDfw6o05d1DwEmfwPDmbz+8SIqX
8lZqhvvTIRW+osHw8YpjXW9LMn7UOiLk3UGE6Z92ST9rO9DLm/Z+4L5hkIhf
nt3nTYU93oOQ4NMEqkfDbZUb15HXlluyhmkKDxhlzXvwz6Pv948mX3iGMGV7
krX133H01LYNGeYfxvS3gVbVUo0YljvDcWONgs+49X07ROcxZP8ty9rhUQy4
lRFm3bcESqdl3koyVSIP/1vJ+c4xYPWa/atu0onMtKOxcbXx2Plu+uuZulKQ
9PItJ9pQ0Gd3RcM+SQaV3+2ZG/Vn14HRNde3ypdOJfBwqgpz2AzMaQevyv2Y
wJE8XtD0roV53iOj2cvFsEu5hLPqwDhMOMX6W4VMoti1UwL1NLnA0hvlR7ae
Bmu/r1f7cQFPNzL0LkuvgFHe09CFXZXovdIVOLm2Djt5GfaqIQX5eJ/8+2DX
jAFqRq12dKNoM1jbJVIyD83caUppE5OooGL1ziKlGfeMGu/iNKpDIXGOu8ff
TILkzepaeb5/0LhxTVa5vB2E4lyEna4nIpUicKJffQm195cduMFExGRFQ4O+
iWK8UXOD6qYzhHKk6yJVmAlVz1Im+c2zsTsy5jVdzSwKVqUaejGQ0TdP8VaT
VR/GqWTvD7QgoMrOsS/GHh/Q31qRPvBgC1w/fszf+9cI6KwlGt51WsBsmpiD
EXZV6GRMc/DDg1q86F53SpN9BoU5NEWrdpbg1lcK0tq3wIJAksFx1Viw6Wx1
597ytf8Gtd+cEHmIOZ7zRiOq8xBXGjxJe74Ci+38hX9W7VLx3J0fXMSQgiZZ
9zQYX6zgGL+Xf47DHH7UJOgkS3bA4wzhe16ECchZ0cq9LLIIqmbiJY1xRciq
fEUqP38DlMW+b2PRt8DFHNM0kTQS8v+PgvPwp/r/4riRERlFKRIVKippUnFo
iFRCQ4qMRCVJAxHfrEgIhVAUMkLJJs61Z/be3OsO895r75/fP/AZ78c55/V8
Pt7vx1tQZJOGPRHTq3+oD/T2ot/It0KnA9XA7sWjXHOUgRb7upbkHo7gP7UA
kxP/WiHRKAHSz6z55jY/Wk7wDNoXl4UFvJpHwoZ/9YH6QRjVsInhXbuM11Ou
b/42w4A0R+5JtKfBje3w50M0Ay+zdFrXjrVCbjB5+9S/MuRUL/zXL0qEkqCY
uC32k3jC8/nc1z/RkLMn991rQzbC6xM81ZZbWvGa062dvz1JcMb3Sr+SaCG4
Skh4V72l4sLDvv7I0knM/XSyRHRwEoL7NVmGHzdD+a8yWe6kIWB7Mqpr5juC
mGVKbEwMgB0mm/nVbjHx3sjOI30EEo4D/3Hj1VHk61T98eV2E5DeyYa1fR7G
g9Z93c/Xx6HZJYLclhIGetju/+ac04rU7Z8/Hv0ygfwLr2n5AcuwWtXzxNRx
ENNtjyiUCU5iTlAs0S6xDg4bhusA/zz4lz3tY1saBKkuz4svD9ZjIUvxI2mn
XlAJJ6+EJ1Pw44YG34qsIbh5PUz3GhaCreirw06iTEw53DiXPdiAdYmD1NaP
61Rd92rSDUb7sCbw1qm0HDrGGnrfETtWDd2CAc1VXoMQWFuvNZvdDTO2rvuk
DdbWtWLd0Yf2DCzL7pTQ0mWC3e9VxXIqAwUJjwkJXjlYYvDuR6DaBA5oyldf
aJ0DtiALa65r/SASpLRMExtEUwlNf4kdFUjonFjeKFwPZDTnteWdRlZTHn7x
W3R4Rpp/SWYnIjnCxcj4BxPOKyvgk9lJTAq6eTrsRy9Uvom9/Xu1FfmJrFGc
hwfxOWnzkWJxdkJJemTpwde9wHnD1n53bi/snwm6HLxrEp1Ks+l0i3J4kalk
3LtIg76nJ3aFO1UidWP1Y7+CVthkqnE3Y24UlNM37iKMjANPzjEhX0UaWleZ
xNjUd0NLK1s1k06FTdmkc8bCK6Cl5Ss469gEvksTUqK7CqFMo0mUXN2CmW7b
cni1xrErVVY3qacNgk64qB3fwKLK58G0+bg8i/tagqhXeehIthszH0ynQnpg
5+dHdwfwXIaKXNnBdry213LJGVvg2ey7Og6FVbjwhSL39UwrNj03ufSf+gSU
1F7aXsm7CrpBFPEaBxqoqrzK2dbRhscqBJXdN8VDbcR97XWdk6h6YsDq/ZkW
9GzWSrzG34a8X/S4v3TEQv5sfFScLhVnTy983qc5Ao/ORfao7F1E34SvboEc
dJzsUFH8bTiADfaKZvEHTfCV1tNdHDf6oZ7rzwH1DzPI9nsl0yxiAD5sEbLh
j2fgv2XqfzmbmPi8I29ZO7sTXyhua70xXgoSkXv6by20YFDCcf+e5E6w86Z8
Ec2YhFvHNjZyKvQg5ZLbeffro0jxPB/XGjUMLDtqvgh+pqGIQuECcWgIDURa
7H8t9OEYJTH+9e9p+HijNnGcpxteF59TO7x5BiMESUnbW9Y4oy29t1g9BrZY
PjfawTqF7yo5s3Sn29H+iAVbe/wE7vNhZeMo6cEW104dj+EEjDM91vNVbBYX
kzXlgiW6oWmyy+Jr8giGDXY4Jok64+lb9tmH0jtQ0ea+ctBZEn5y5iLxNvWA
VNJBmu0UFeI2xKuXvqLBipLFpmJaG+5UQJGKiTaY9whvUDhdD7wcxq9fpS3j
29BLCy/X16CzziXvunPFeFlEUTfRvBf8t9c2G7NEgZReV1ag+xRMHtHnunqG
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
ejAQ1azvsn69MQQCVyVTRY+RYbxwy/Y+3QH8bqa2zj5xBiLPuZgvbyHBh8CC
tMxfU7D1Fff7x200qKwdv18WmQccG74LRnh04W8LN1/XH8Nw+7rQF8k1fxv9
ZbXMFz2JSRsr626GTKF16AF31lYmponJpjyv51Q9mBsbKVDTBip30l+Fx5FA
rLc6JlyICuNjuwZvUbtR6toH6oxtD7hl33V5b9MAxNEHafGPlvCLwMXCg7ED
yCrU9eeOxhpnjZ0dPZf2AasLFumilGEIO7nL7uPJdjx38eM2TdMyeGxnwabc
OY+13nfUmAINcEurxbt8YBRqsMFovJqCZgTB5tSJMdyw5+7sWMUgnh32qWCy
EbFhJn842bEBKU90RDp/l8Kdkktz5xrn8aHBJbZM0Vlg8/68Gj1EQ5VnqxZ7
s2bhyMLV7Wzba8FG71RST4Q9frfJCU1uKIe8LWr/3XWehvOxOSf2pk5jRYOL
whvHKBCSSyuPjOrGClJSVvurSSz7QPzw2WMIvyZkFNNTmKDtM3Bu7zgTteZ5
Xl4OS8P1So62RpH9eFUNr+T+XUCbnkr3ytFhlNxvLvXk5poPHeD5G2BIwaMl
IqwZrH9gx85cw2c7lyB7yui4x9gUkg+z3cz/ugovid61u9ioGGiudE5LfhgW
WouXy34yIL/qEeH/+8VU1ZmIMBEWVe5NU7MmVCZyfXR8bGqcDp58L9aVzjLB
akCuoelhIU69UrFKipmESp6zejeiV/F+2da2mnUjyKUXLDKlTcH9rPas96W6
8ZrwC9d97ytRbF2qx6aWNc6fPCta2bACLhL0BKumZXSNzT9XYlGBrvlC/hqP
mWi3j4/rNycT479y8dg9GcKb9jf1hqKGUEpSqVuxeAau/5LSLV2koUFeOFNA
dRapw1zZoiZ0zIrMuXnSPhPfuHEmB8skgmTMtaoeXMs58ZaUTUJFKJHL9vvH
ybWcMj5Z95m9HVwpYsmqt16j1N6bp31XFlDx/YNnluokqFjZelS9vx5Wt2VM
sm8dQ5vLjckch+tx1u2c8VzIIBwQ1MgeL2yF8Y8Wv8Jah7DL+JBnmisJP155
REkZG0VCtuXDIRcWQvCV8ar0O8PYdLruu8aGGfwduBxw3HAQ7Uz7nNyc54C+
7ZD5eFoL9B90H9p7fRwjRva8rNZrwHiLm/mh4TMQcIGFxeNJPswUT1GSAxtx
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
eN6Z3vEdSeZ2WROlC9iW6/ZlcOQtbAu3oUisUrGmvztiZVc7pjmxFinNruJ6
vYpMef8s7o/KJhf2VcKtSfOZxtwh5DjTKfy+cABWnuemeEesgPvynzOENRrE
/PHrklSvBs7I7s/nPs3BqLpoFpfCKBjfTmD9pNKORhUM12tk2rGoyY4z6GwU
2ueXsfL/YiQyn7h8zjgnBc+85PuWwDsO9IrFHnvnCfwzWWN87D4ZPL6u1vG2
NqPLmfWsO9atuGKTtpzXNodGrkp6j16u4aXUrDjFlyyEuCpCwYzKMr5xT+S4
odcDNh0Ke3vrZvCV2dmnNL8BzH8cGXJyPQePdZf1Ele7sF5ISD37XhOkVD3M
3/a5D95MMZfnGNThNKdmWNBbGrReMA+oKVxBsff7RVuaSvAkSx1Drd0gfhD3
5aX5ZaKlwqyx3o+sjf+b6aywrxu9H2nPNMht5K2fHAxfWSaRz7mh8EzwLN4P
ikxvaRzFcMO2ZxfiOlCEW3o3A3sLnBq8rCj9ZBye9mr6l1C6QPm74AmLzmVI
i1vkSY+bwhbO5hveT6ZgTI7+LFdlAlJ2sjjW/uyGRA/FN18CJpD1z14zldYu
CJjpFD98tQo+3yrnZ97TiM47Px2Oa1iC+kd736e+piPjlroTqmG1UBtsf8jo
zm+4deiVysHkUvicmvX1jmctDAxyixx9MAkivEfzCoxa8RwnPT6XuwECfOq/
SEUu4aOMDLfLPxOB8irgTF4yGUU5H/zXwzCJIrcVpOUm6kDnXB/nj7I0bNhe
VT59aBJCz5rs0OqZgiS60VKgYzLIxiwz2z6fBqkPIVEVA3QIjg9Jub/hf3nh
pwlHZYZxMvxlQAdhCjpiEhLlNEfwpuXDhEUHKoTJCr4YFpuCISYH01bZAvBX
yzGR902G0IJCq6fr2UhNkXsRktuI68clJpTOWeKdgMvKOR2FAFEuWQdux+Cp
95mBL+5R0CrFzOflSjI8E1kBmc3jcM3LeDmDbxpuPmSr0+OaRFudmgdk1h8Q
+EuoY/nSNH6wush2IKwUDI49Y+xJ6cFNOw238p8aQX6vXR07o//iaqUB41OX
Kch6ufexm3YXrpkbehYr/gPybbwr2TuDXEpN44pSPfjAYyxN2osE2X+fazrp
Ip6RbeN1ke5DO0Xl252lZPhntK/s93wdtg57aiXTB8GfdVBvTYIMVdJXdk53
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
mZ88L0DFr9mDalJzjbAaK3v1tFwf/g/Zf5ax
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Background->GrayLevel[0],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4, 4}, {-4, 4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6816678279229794`*^9, 3.681667879816593*^9}, {
  3.6816679174500246`*^9, 3.6816679213151817`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"clusters", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"sample", "[", 
      RowBox[{"#", ",", "1000"}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.5", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "3"}]}], "}"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6816679345314784`*^9, 3.6816679654990845`*^9}, 
   3.6816680132607393`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"clusters", ",", 
   RowBox[{"Background", "\[Rule]", "Black"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6816679805794897`*^9, 3.681667991348242*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwVl3c8Vf8fx++9rl3SRIuUaMgoJaX3Ie2obySrHSJFSyoJaZOR0SIkkWRT
kvenkJm9s/d2cbmucf38/jp/nMc5n/P5vM/79X4+V52zPWbOoNFoXXw02v+v
m7TZi7/HsdDIJzdo++9hnOTY3171gkGoPR+3d/1Lxaz9pdELLRhkGYf37PaO
YXjn9WCU/roG+65m/5bxaoU5tQFx3ubdeGxhisigPZOymS9Y8/DlOJ46eySs
aOcUCMhe//eJJ0S8rhxPvJ/HgqaEhPXKIh/A4DKz959jLUpuMGwTC8nEo5af
F36solORUV6K0YI8TP/1tqahfhRONkfFqzkyic7FH/akYRKYGXsHjz1gwboI
un3qZwFKeXpm3deMUTwrklt+U28CYjRkn59fzMa0q5NeBbfK8Zr74wH5KRrx
T+jCXZnjMN3lqZLVM4rfcoc66fNYOLg/TF8lfRA3XA+dQxZNQeorDaazGgfV
nfi3ZpbUQ7V+0vaF/G3gVtBpcmCOALXGb8n2HU50kqoa3zSRO4VW97LW519k
Y+zqH9LB7/txTnZ0V8ozYSJ9n34kxlCAUje4m35Xg0HulPimZba2gcvG4C0H
smjEXec/8x2h3aC069C1/Mgh9H1wb23lomaIP2brQPtEI7JzTqhmzKdRJeJz
6Qsd2cgq1G/vS/qFku13z0S685OAkN/+F1XaIXUJZ4nnq14MXT2lXCrYCUOp
J+xEusZR6cjub/OuC1F3wdWo+xqTUPFyB4y4edBrLtXDf5BGdp3sFj3v0AXB
l5rcXQdqIPPGon1rxTrAIU8y4sPEX9xiem+d65k/YOY5cvq86BAmWj4YLTg4
DiIFZ+J6VwqQiAtuepcL+8CryOeQSywPI/KKfqx7n4mbrjwwFW+hkfXbnlR4
5rBhv+/mB5kvJ+DnwR07NA8NwSVDlZICnUHMS11etbusDdpuOjALw+hE4d1J
Y5EzdZD5OFu+uYZJbhz70Dj6QpA6+jZuYUgNjahtbtF+MTQMZwrCmgwuCpPg
rPa/8zQj8NXaZPPA/GH8/F75cmvqIH7Cl6nuy3pQq0rnZ+vzXnC4Hr6q9oMg
kfGeEP2+7yvQ9HsK+Uxy8amSyZcaaRole+nCr68KPCScWPdtTllIJnN1tCSS
8aNrhrpUZC+4FJaseSbNR4S4pum1WIzvz0TSlZK56ByU/nezjxfiRpmLQgMs
dL1T+n1hVCeEm9789n7nAN6QfdOjXk+jfjZ9S1bsbsL07qsWfCPDkPc98b80
BTpxcEsrDPTiwkju+WNNxi24yEGloCv0HzpYDkfflJpA9/kxhotaS/Dp3k+d
FrZjWN1wpmXhUho1Nn/8rNWj2f60O3zKZ8UMkJ3tG6UL22BzRLrK8QtsGHMd
l1aVZJLY0FAzuSetkK/wLn+NGZ24JvsGhbxoAi93askJriDZo6TiG2vYD8EX
I1v9NOmk+0KjjFYcD/wWXvov/kIvmikfpQ94FGPpr48x88pGMHHmpmBQ2Rgs
ePtVccc5fjJnRNEj1KcWZBUi7TxyO1Av4cf9ccYIMHs3rVyhw0emoh6Xlp2s
QcpbZSLl5RsYfePY/3hFLygUKi7dlsFCtfUUv972FnjVbufovFiUNNlsfMl6
SKP88/TP3vjIIMPHLMviE4qhN13eKTliBL99jm3w82Cj2b8Ha16PTaD1xzTF
xR8n4Umkjlu1PJ3IbAs7pN0wCrvENtZtLexCh8GTt29siIelBsaZ7KxJDGlT
2Ku0qB+WHPP0S9abrVdL56LkjTNw381uzfbjM7hq4eqY1a7CVLBaqvQusxlk
r48UGlMtww9Zo0+XS48h9Y1RO2Sbg/4PY5rKk+hkvZhkmdLFETjqc1as6FA6
RG0rl31gTqfEnP/5+nJGMO/yeJn8Dh4oB8Q6FOfxER0tMR9e6QRsWif8bdns
Pr5kn/FcJMaBnGVqsjEGZZB5tGKxwp0qeN277t0RgVGcs3PXSP2KStyplv9G
T7cWe5Sv6NqvKIffUxei6Of4yOFEVX2mQj/oeKgc9yyrgN6duQk5zzmg9F/Z
lKpDB969zftBarhgvGD1pPZ3LsbfFPsWSbWAgVn5vZDNNPJ3WdL8V9LTsCPv
VrvzbD7RmGJxjyUI/uaoqDyXHkbDGKmL/ZlsCHay79n1JhK7qrmxmze1w/yl
seWKRxiksjt/V4xlNcReLjpWESpINFS05K5l8aAswlnuqjCDvNtyIXJSegh2
Bxw8V7WBj4RHBJwOezEOtIyMPoY+gzTZt66RPECjpJO/6WlOT6Nz/OEg1tVx
0Pv4KWjYtRulFqZfaK2fAquHsTJzz/KReXd+njh3tQmK6ZaLDvb+AdfkN3Uv
Fw6Bcvmxur2jrfhoi3jgzPUauOz5z9NxHhdVp0J0z2Y0wp2XSVsPx/HQixmv
uv8oF5rcMw+LmSdifTqVJFPPgVrpQ3p9WkwS4e9/zq+xBhiBAenuInzEWXA9
GB3ho0SObjk39G4Uj4uFDR/gccH5ZK78TvlWpJoVijI8u9DFR7OA1zSBa68F
2b20ngS3JCnfts8MctOhvyzLug+OT0bEHZMTJaRjTcyhoix8pZGsIzk4hiJT
nWlmPDplt9rz3o8wAdLxUmX8oWwjvF9qIBu7aBjJssJidVYkzpcruRQ0MI0z
2hul0s6wwUja/u6h7Als++p7Zq3xFOhYhPwruCxAaHxnzb47ZcOl7Z6fOXsG
sH+52RNjKx58o91YueBsNZ76PnHoetIYUIoyy03GeHjFs4Xr/WsY5vRkx4Xv
qASrp8XtJof6IfXR3GCPiSncv+KLteCfbqiKRj1/Lp3YrueJ26W3wKdVoS4v
rWfrf1pGe7/TDNzQSvjvyZ1WtMg47+iZyaD27vJ+LlE/ierKLozI2TxqW+/G
NdtYiTBM2y36ZwCEg4ejxoLacAvDepcXVQFKfP2LJ4/RyA/DfWZRo6Mw57Dt
9/k/m9CIrbL7Ymk2BAksEvDpY+Ma81atrTJdcDfr0pqmqzPoBmIPvZ+XwIot
Fw42PKORy73hC8WWDsDl2/UZZybb8Vn5+TMugi0Azo9XlD9uQ/8TnnIbbNpg
MavsgvyrQSTV5zaWK/8AHZmn6mELBMmX8CFJtSPF0He2eGLJ8hH84xS9RLx8
CNuq7whZrGIQN4kTkam/RsBOo2Gt9C3u7PPND8M2BCC1vOoYG2cwN2PNWt22
PlBeeX46qZGHtN+feN8kryPwxk5FuHORli28JVo2Ap/opepozRlCmt9/NzNa
HNDRMT/B6eso7t+Qdk0teQyaXtC/7xAWIMOLyj5ySjvRaUbUzmI5jRi9VZWs
lCjHUI6I7bjkMNKYVy8Fu1Zie/kPRkhAJ1Iru94ICn+Eb+FyUX5DvcBq/Opt
2DcB1EbhoaeR0+gT5XFbcjMLNq7/L89rNj/IlPCb4Y52vOitF+Fn8gs3in2H
l1l9sFH5r+20yAzG2+Qa7TvMoLaNfWXoBU3j1hXkQ/aRdrj/1vK7Sc0AOtWJ
GZ78NQ77DSYGb+1rx6XstBFv8yHQOyV0cOnVQZRx8n2hHD0AiwVXdpwwECKV
o6Hl7su5wJ1bcObpBzq5X9S2Q690BJzfLQnz0yVQ90lBcVquGus6mbeq5pfj
1hN1JyUPD+Fj0WPSsrF04q+VdKPtRC18tYoyHk4cwPlP+yduvGVQPSPv+CNO
jWPsgabgNZVjMK5m/4qybMRXSi4XYoy4sDE3kh21kEH05C2tnbY3QpnDpqXT
2nwkzT3PsXL5MMjeEF7s1dOGQil8D/n1RoB7dtGvUlEujpt+eUJVVaNEYsRl
t1dj+Oa51Ijlj3p4WFoSG3VtBItv2wU07/gGmi7dBmYHefg5om7wwv5mkFr8
yUFHhoNBJVsuMyQ5oHbSQ+lDbA8memgeZQ52YrWYb518Kg/DOveVyv+uhe7Y
PQpPV/Yjz6s3DjXoVOjVd5e3fWLj7/sBE2DfD0Y33lylPWeSLYbcvK2naJTv
szZLo7vTGKeg3/NqBQcM6bJrnRZxkNbv9qz8+zAQ8z5uXiWN9F3YnsHnRqd0
QisD1tD5icHPMd7PE5PgUGJyUb2ATmbmBIoof+qCYrOTjhEPS7AjZo+Wb+AM
MGVcJVy/VOOVIXv68v/PJ2OtL449ImSfxLCv7tEpKHHe785by0Hq+wIPBDrl
dKwub9laPqIdpFs1f1cHvLL0E/T0ECDlxTV+Ex2dkPX6RWKP9CQ6/7j7njVQ
iOkhgcPafh1Ie2gjsy7cAcX3wiXWSCU2iETCrUo+qlyjdF1kxhCo+zHtB2EC
gqxUXh8zY5A6k9F3v2J7IOzZy+VjXdNI3thdMdryA5vOa5Xc1WyDmbdSrZ92
9MJaOu/aC7UpjHl5YLVmeR8k3D31OnO5KDELdt/k1NkBD26PuNFKBzBpfUNN
dVQbaNsRvXxXfkLtzl38PnMYFBReC0/lM0l1xVxvpwX1mFj6iJXNrYCjtqtS
Th+NhZr4+t4712nkd/Su0uDG6dnzGpLU4zBJ5TPGihGxIVCZq+e++2g/spV3
9bpLdYBrU52li8EwxO5WrqB/GoGGD68qB//xk0OCxk0GDA5Ubp6TJXZoli9f
O62u5GsFe5/mhVrn+1FVMPn0jTld4BZAp+yrBzFn6oi7B70Ih4uVbwhxRtGw
Ze29D5XVYC11b2SO/ThW14/dWe9XgmHZItffSUxgdc5nqc/vfkCf+tE6w4pJ
dCMLUhl2XCA8kf8kWrgoT70pOr9qAOw+uDp1zPI962XrvW+rC3C1umbg11/d
+F7t38d7/a2wfc988S/iXBSoUWWnJrWDde/eMVY6G+F+tJFA8Dhs1d7U9Yuf
i3/O3Tr4xKITyhMk0p9l0Uma7b6T42/rsW2OAXPdj3HsIw3v/Cf+wtzhI2ya
MBvHttH91vf24p8stdu0bjaeyiJnTNaNgBV6qZq3jeLn+UI//IqbYfXTsbPP
Q/owL/6rjuXkKGg/VZ3hBk5hh7VRSZjxJFy411O02rsHhn3XHS8s6wGznUzJ
q1vpxNdYKm2pfS2IC0WvqZjt4zf3Prxe9aoF2u78XOvLV42RWKFCl2XDmsCt
5ufLOpE9T6jf/2YLCuvMpB7tn0s0+HYkF+/rhGvVjdcdL88hsRwbifpKGpV4
94SPSHc1XFied35fF5NK/9W10jGiGWlLNEfeVrmihfme4uVcLqqvirJhRQ/D
tUF63F2rMQyTkpII1mVBZRN3UNyxA882+89bf2IMVjxoCesLppPskbMrCr04
QIlNDnncZBCZ9NubA/nfQplCnPqyvGF8Mudc+sRfOpUVds2F48Qk7y6fOi64
vhEOmihqHNg0n6RZuNx+9YVOrVt5o689WoCcFjuV7Cc2ADcu3PQXVm9BbX3V
d/USY7CyqHo7z5tGgmn81/McuvHohSr1vMdsuPLFjXdEsB+UzZPkTHbHw6Mj
70jslj4IVebvcXw0gW6h622kCT91c8zGS6GmAz9I2G6+fbkf7hiv0nfEKXwo
sqcq0GAKBE95KF0I5uDUcccfoUvLwaEvb2E4twA7epl6Aup9IFO77eGzdn5S
a9pPL3reBLffpBzXlh1DslBRxi45FQw/mLPYBgyiCE7y3U9YoPyxZr7L7nh0
130uuTYhG1Tt86j9piwM/vN0nfzjIjhWVDnVZC1AVj5Sur1/QSukqnE22Yb2
ItG7qbj2sg+ar3aWJYU0opvZl5edN+snGh3CTtU0svNuq/aLlGLwm8jRadjQ
gV+bbi1+eXkSOCn2RzedGkbTNc/vLOmdhF+2XTnRmzi4xUfEpPhXPxSts9dc
/p6P5H2euyxVZhK6MraKvZf8B8VldsuaHVlY/tXRyzKSRur2/npx9UEjZObs
XUx7X4J6Q5VzqqbYMPBl4Nz62fylAhtt5ir9hYsP881jxEfQNky3+3HGGBQ3
qrC+Rg6hzRaf3fbPW3HHdnP6rSO9+PbicXfdngnY+FYtdX4SGx9XpnjsZvZD
3r/ta1WXihF2xPvQNbcncWpViqRnCz/xXZDwRSp9GIT+Stw5pkgjviJjms+D
BoHVwV/r0paPym0HszyV2mE8WHezgFs75Hn7bKrazYJrMnmrGjk0Mpf30MfQ
WZiikouHrudwsM785FXVE+1gu0+ffsR7Am2FnPrvG07C712qjom+DKJs86/e
IFaEYm0wWHDtLgdlDavCX3AGQSPMofAA1YbLY0efFr/LguUTyxbvfM9BIfMM
5/ojRbh7cwRri+cQHon6/cmpfBxkPD4rTm7IxNq8t6JWMhNQfGtv+q3wNKwp
bVgo+X4UgjbeVhpq42JT6l5lXjwHmhb6Br67FYVnnnQfUttcCpsFhUbUMjtR
xjpXSMRwGgiHNflFJxd85c4GGNT0gsA2/bYK53H82f6tfmCNCHV6nsEigbBh
DPTPnP+8ehCU92fv99GrwN5wKxOmjxBFXVhwtMImG8UXM5he1gkg8+nEgodS
6UgdvM/XYRIONJXA02sjfTFPtKdDUGQUnEzOx+8YEyKJ/8Gdp2cFqOEKC65z
BT9RPladmdY0CNYd0gWtCcLEJorfwjkrE3LAfI+0AIMsUudf1GmUA77N0YFe
d4dQxqKv/aT6O3g4MnSt/hmDnPh3I+GjAx+lMhA3KKTCwjqBa0pWJrN5If0y
YlirFqp7Rx121ZRBV7sQ11JkGpv28RTPYSE8fbv3Y5ztANqaK0TpbuyGpp8l
RdHe/6BQ3m5tz39c2Lq5rtAmgY1b5cw5K67OwCPBnJfF7+aQdyZj43mSLfCn
SWhZWjGNzLbFhiQyCvvGitYLLphC5alIU/rsvJgqkLhivpKNOySKJZXXtEJQ
2ko49UmEEHJ68R3PSrzzI9SNVzCBZsyVafckK3Dd3KtHNt6kk9d9ix5xjrXB
2RtfzU0EB1FZYM9H9+dpoPRKIYR/A5N8BlHdHssheCzj8uwsfQytLdstLEOZ
1Bc329tKDRM4ULjfx0u6HfI/m/v2ZQiRcgXK6KlyO2ivcnhz7kwLtq3L3Joi
0QOG176+L7nGR6zMREf8RWgUQY5aZyCdBGvpMSo8htGLvbP1JmMG7Z9E5zh3
81ErRi5HBFf046Ne4fGPuX3w+dGFlPqoNuQvWyI+Z5YP2657jjzeIED20jp9
/wSPwZlGCx2ZWf6nGVlubbz+Bi8nS52bv41JmtJLfPQspqBrQH9/6+8S/NYx
R/9dJQdkV8taus0dQmeNR7YaluX4dRv/NvvKPmSKOrY+DeuFP4f8BaMu8ZEL
5/aYWu3KB5pInadDzQiGX2GulY/jwo3hKLW7tjRyJs+Riu8i4J4rJ8jTLccN
qgfVr9sMw+C9A9QJs2FUNqNP6l3pwfcXMrefleMn5udCXAruCFIHjbk6IfOZ
RHWft2Mjk0FBd/SBhHsj2Ochv4n/yRRMaOBIbAeTEO7eZeLPQ/HU3MZfW+eN
4NQ6xibp1xzYtIr9jak0y3O7jdsGOv9At9ePtl7dCdwiWpzvYFGBRks+rr/K
HMdhpuAYa+msL1y7dM+xYwqNXifEjcIYav8WTfhpLk7+BJ718BAeAL7tF66G
b23DrfoX+IwsxsBZWskseVsCfiq+xVLaOA3UCnPHwy9foueS/6IOtA9CYhS/
U7A5D5sPun6xjuSnvHofXW7T5ycFWfwCCj10StVN7I70FjoRX8zkBqXTqBu+
R8o4h0Zxwm3Tq3bbbvh8lJ9t/YaLaW3Pmn7kdkLL942r7ilw0MMkomLNejrl
pfaw8iY3FhYdXqqybkUdZG0v27ncnkEoGb9Ppwpz8eiyz3O63v6EYL1bGbS9
AyAiorE1t2sSNz4PgYsa3Sj+8vcu+6OpaGvMKOxcyQbv+tdDPfv5SNvx69Jb
FpTjoXfJiv6vxnF8oY3/nPYWaM7gL2g7Po4RLs5hZqk0Kmht3n6b5Ek8epZn
y78iFR3a/trVyP/FxPiKgGMNTCrzzXtLl/ll2Hj5ZdmJ5xNQSO1xFLlKI868
nmXVOxPwXGF+l4AUF9f4xfOLM0aho3TPzKkBGiE7dx6a8PyBiqs/+aTYsDHk
aLh4thgLzK5vWBZyQZhsXt2mX7Z31gccjtZd3MdCB/HN9M15vRBmJq5vt4tJ
/GkKorX8NOoVa9jSLJgNFsP3+9NL2ODWPnee7DxhYuj0Xe2zFRe6Cw7Gixxo
RUH9/962evFTDKkSkS752fcBU9j0TAb+1i0t2r1ClNjFX6OeyeTgpVNz5c9v
68DQZw0Hvlp1weDqvqGQ3+MoFh4SUu7PBe+8QuHgkGbcInd4QcW/Drix5Lxu
0B0akdobAs3yE8C/Onx/Ue0cUrvzCOfHphG4/GbDdrXrc8mBl6vyeq+yYTEV
uvNYNIMwms8/uKkyAsW5W2MCZKcw/sPXt5E2FfClpd9ItJ5O3PIq9IsODwFT
V0cxR1qIyNbf5fNSFaC+mw59Uw2cSy5MBqiv3EjAt7s1z+y5AJHqdjJvF2DB
u0Byd9GgKCHZ6RGhEAGuN2V3MOkz+POrqJzreQbl1lf9SJDFJG8NDh94kUun
bOYYV5861IhZnYaFyowhiAiy1v1nUoiOf2XOPWgYA0Pt/iPBiQJEmZ7+feVr
LpSc+U93KpyDyqzB2giRNBC68bf1kCsL9/5cffWWOI26eHRoM2+2v5klp0/p
CvUgc6xCPEl5GNndyYtWtrNAQEN+6aswYbKmWHN++QoGZbFZUUowUpQ0yWut
NZSKhQtqr9ZvV67HzSNRO+pKJqH+rElz+O1hXLRxbbtaBBf4P9S3cdbQyYM/
Di8PGjMo/uf9kpHQidp545sl1nNm/eL9gPiJKWz44nS6YZkwpVzIw/8ulsON
dw9NWqlfgEJqAVF7efgmhxb69N4QmF5KebOziocCDbFl4dFcqK56oSFoWoNf
spdOX9PphM3uu7fssJzl3WDhbVbzK1Aw+xg9c2sTTtzYbTFYL0g5OnyjD+8W
JISj/SPgaQTO/M07KP64D3XZHrVbVrPgdUmFYotxE7Y9SG36unUcfCunt7aK
8pPF+XP9JitFqXCTZwl1raIk9Zao6qe+aYic/vVKMZNGEm8tiA3VJLDBwVJ8
mUMLfvG6/ZU7+33eQdTO07U8tN4hdiYwjUF9+aZSlDOvF65+mSxYLtwNWSuc
n+2ebMd3jlfubA7uwPVL/WNfvOnF4hC5f/fPJsPu5shVVAgXi3/9F/tKlp9a
WxLohnn9OM86Yz9U06m0gypGSjGT6DssaRX8jwdF8d4VpxJGUbxQvU/uWDM+
W3j2iIjWOJYfW6Qr1DkJWiE/NwxxRImAF3VdMGECeqrOf7dPZWOTFF9LntgE
cKssBt+osLG9R7WJBRwgln0P9P1bZpe8fdZFmk4FKW4u21TLIHILb38rOD0M
DplBltyr/OTF+QeDNg2TUPEh9qLNdjYKWP+h80cxqK3KFq6GyoKkzcm6da9T
Dmyr1o/TmfUbJ/ngaAdmK5jm1XXtq+Gih03bOV71DFT803UxC2aQa0ff3lMa
p1GT3YX8hsfGceqki6ry9jEY0wkJmvAWJncl0uTPbm4HaVGDxOlPfMTXyEJE
40kFuEzB6SfObKw7cl+G4U6n9JpfyRffGMVunn4ofZoNbdz4pRVTbJTxHGWU
mVTgxgdHrn3Wn8C+OFGHtTo0in9Ks7xYYBBXHm+i3zVmw+/67j3VX9mYZsov
PM+tCh1POBw4k9kN5furjBnRjXg5einfYH0rpuU5eqsXVOKTver2mkUMYp6i
nL9LqxUCK91NBVXaMdTraESVbw9EPNleO+w0iaU3rqhzTachdrB/4937PIw/
vlVvXdoIehcU72xs6MBEFZfwEMEm/JB74O+655PY1n3pekpCNWadETI91zSC
TzU3+JwOa4WhmdKObb3jaHK63lStrRt2SNvoHnDvw7CSCad1Ov2Q+v7bPTeZ
fkzINrDKvdwGUXbBA98a+MmFQ+fuJz+iU+v5FL8t+MtDdc9/82LsORCzVPNd
q24PGmpLMg7uY0Pc2v82md+ZQt2wSU+mbifYRF1TySyoA55ntLQ/FINzLG+J
7q8fIJmofFuhtRt8d41kfXabwgIaQ0lOYRzSynPvSimUouPb/X6eVS0g2mB2
POnwFDJeK1/0a58CAxlXrd5fdTg4vbGkoJEN4tsTVy1O7QOJpZ8PT14RpuxO
HBJOOcdH1iQnXKkV7UEDgZFrabdmcPiRefZ5mXFY4n3Mq16CjwQPvz31CPmp
SjkHaVHOBBo+OSboO5s/hZ+2//o2ZwA3/nM3bd89BuecWVo27Hb0Xzx3qf6W
Lpwz163h6e8K3HksonXk9RD+5TN/qKk8hcnGF016u+pgzZ/qH8GhLJQ5bt2l
eOwDDBX0J9xezMHpRZVfqP4ROBfi9mJpgxg5OrB99R/HEtj/ZtDaMa0Gecv0
t49EV8PBIxwlr0t0Yufa+3G8SohimI7zlW3qQLI7LlbobiLsqnlrOxwtRNh8
b2x+M6pwWYjW2qRZH1Z4tLfkZRlBPeVSNxnzMbw+/cjpgVcfnFecc9j97wBe
vL9ikasmD5Tbv2nqTNPJm/XHPdL0BKk9a2vH5W+0YUfSVwMj+0ooP+/9hePK
IJ+bHlfsVB2f5duKn3fv04jFk4NP9LgjoN3kEyMdNobCRcuIhm0/2Ky+udxm
LxenHgY8a3o5DK5Zeko3jUWITPmKgjM+qXDt3d25dWsFyP5jUUlFSh3w6L+V
HrYDY2jxoNC7VqUJrA03ZuXNnh/zlkfjkHARnLloGpI7MoRN/Qpmb/TDMItm
eWtR9ADK540bd97qhT2RYDgk1YUHUqKLJZO5YLD5fE+JFgsr7Udyx25MgXWI
q7fP1P99RG638flxWBPGXTkRVYLVqddfBD/jQewpZakHO8uxUUI+ev4WIWrz
ArMP8+pH0D8k3kV6SwucYbc8eBAqQKx+us5/nt4LFumfVGK2T2DP6r9CX4LF
KOamigtfBIpx2wtfuWMxY0AFJ19+8cIL/kwkx5+80QtLLVFHW4tObJyflk26
9MDxoe2t220Z5JE4e4P3ThZM5Pf9XpM3g5FXVQWuSwzD3UzHP/N0uSgptNfX
KzsbS17WW5wppZFOqdfcihwOcO/biWz07sDg+ZkPz38NQQ3/m23GZ4WIuPDN
2yKTnXhmj+9r5/ujyJ7YZpu6sgdkqcI756RGcLDh40EvYw5UW1kFnAvlJ9/N
PP5llXfD3usGvnNsBYiYx4tLcksYVJiC4So76S787hkpe1axHfaInwlrPT+O
E+Qjsy6pG75puVtuCypBwaNy8zxej4JM73pmuc4nUJd9FGPvXYnj998nCQfN
8qTOwg/J4kKUEZsuJzKvCvcK2mzsejgMJzbvqrZaz8HPAVruTToCVIGUjbXW
rI/92RNX/Z9YG1S0GEQb/hjF32mqpSoxHVCstcpbwbgd2eIFyZwKLnyJqKip
kaCRu0KBcc4faJSkVlH349n8EtIOVzTZyqAkHnquKt4zhHSXIbmoakEq6+Gu
ZQVig6hTscAt/Dk/9erGxcBV7QN4892Pi9ILRuGMcsm2p7Q4XHD7fcvblxNw
0eZge8YGGjE5kC9669MQ+EhCwvg5FmaGG4YGmolSPImSX1biAkSxhL74pSWN
0vh2o/L+IAcZWtLLM+XH0Uhb5YUOJxNYpyb4Pm0YRVBNXMnnPoVjLx2aT+dW
wZ9jC/fcU5nC94vu7fyyhwNTi2jz4/KZ5FTP3b7VcycgTGeevNL9IXxS9GTP
S70x+Bl/3CNZtx/r2MkKObMG43XwzYWV1t1ofWC75qnzApQLL6rcey+D+HH4
IuWqB6D/c7+zgjaNsGV1kixuD8KUUEHjh0h+4rB+ruJf61ZQs08Lnd9KJzSP
UT7bu/zU5ig/imfNQkUzQ0+m7wR0vWl1E//LQWrfK7tctUAwyly8dceOamA1
dPyt+zTrN1abBcXKaaSr4oOCRF8etGw1reNtmUG7Fv10e0YBmCQdWmPM14Ht
+poKP793wHJT6+l49xq02TnH6tCTIlAJYezf8YCPbH11s3ZaaRzOefqdVEpu
xTOr/C8VHU8GoRMa2Co8geTs3iwtoWrQ7dpQpGHIJE5jTqId2yqhMcvQqerc
HCJ+tUO9WzMOQxXyit1oU+igJW7kw6nFBYuuKbrsZ2G63fV92/no1OG2Wr1V
+4bRccbj6/r7dWChu2/Fva9jWBx7yeaiYAKKf5hnzBc+jOuzHJt/+nWAkcsK
vznz+chj+2PRnPcsMN+5c8lCAw7aii0+FCPWBfGrH4Vo/RYlvotDf22pa4Kb
eSzXjKImrI6xKQlwoVFnsk4uars9jr86E05GJXVBuPSWsyoXZ/2MumkXFjcO
eRJ7ogOVaUTo1+vb0rFsSEyp/6FexkGTLUWV0voj4OjBV/ojj4fiyht+3Bef
gtWGKdV1YfzkTD3GxbdOwteTHo1hP6ZQNqVpXuVhBrU09bzp03N9uNI/ZX7g
WS680m3f8DJPhGTq3XqtvvAPLOrbeonLLEMxc4975/X4qW3K68Zdddn4JbHm
/u/kfLAhtvvCFo9jwRfH/oNJLIj1Gpc1kprBDpGTvtyaaciNWeibOTiIesnl
IX23GFT3zu9rSka6sGj65+XzTDaAWlKC28AUzqMxUqIGh8DL0mEn/hnFzyFK
Zjf6S8HyvPEK+9eTOF5QtktogkYJXSmaVgzjI7WD9l1Nl4bg9Ecl0X3Rc0iT
/ufgd9x2eP9Af1p21scoozCfz3Y8yM/6uTLqWwuqW/NL+Gq3QcRamR/arCkM
vfhqZfK+Dghrsb6ruX8MY9q2naa9ZYHgjqr8UyXTqLj/er+s8jjst3zumeiV
g35lynf6glvghcquS68mhIncDvGriUpDkCF+OPVAD5N4P9vre7KkH2I1N79N
yKKRd3n+Ye2ifFTl2Z1XFera0avbf+7brhj4UCwlt3x3H55qoJdcr6yGkbUx
+lNb+Qia7c3WvdIJDGUvgywNGnHUXyXqp94Do93+p4VqeJi9/uP8qnUzcHrD
p1j39A5cwgiR2jBWDoEaN9RW8uaQFzTzeUv3cuG71dtV6lQ31q3at+uyQQ3W
lrGSWc1cpHOjFEyrRmG/zAqialYCieYbn+5a0ohO+/QrzKWEiQFddko/tRQY
ovdUP70ZQfHOFbSWsUHgk3aQsc3tR/eU+zufHaxCZ2f14HnVzshfuF3k445+
+JTO2dqmxUcyTx5+tiqrDWzOVNxZ7s/DF+WNlbvn8VGJ1kW6X2gj+POZrZf2
vzGIT/x3rvFAFxJQ6R+bqIKrN4P++3G4E3My125M58bCjyP8TQZn+cmc09kP
Vz6txS6HasfDjCLo1c8dlvlMp450W/10iBjE7JM2EQ3OLEieUNkTvotGjiou
dmm1z8CcUxbq/z4JEs5Lvy2V9ZOgsl5PNHgfD9l5b9ZXTc5AR+ulYzHbu/GR
bEhAVeQQKEhz0PXTb1DPCPRlP+/AczEnW09ajOIbNdHXa3Mm4OV+DZmeBCaJ
9JQ8MhhHoyRsLw6fDmWQ39/j/gQEztbfzdpWs4KPyGy6Ipbbno9pWXcVk/I6
cFHF10BKgEGFFq1JuN7ZiefSSmvTQvvwYnR0fup2Oll39dWw1A8OhLI+mnbu
EyBr3msISr1thNQm9XCXUQYpH2VdUpEQovaXe8cq/teICoF3uX6TP+EzOe3g
dFyQeD0YiQ5vzkaTw6NhLYen8b7Mr9bmp21wUO+rt01uJ8rur8kP0GNQUr9z
5+SwZvMiY02xeU4/vH4Zevj98UmMsEsvfRI+DqW6vs9DNnHQMNec74RqDQgI
/U5yaJ1P7H69GuUo0ChFlexV1+YLk4hrrMSez99g09vqcI+lLPySuf9A9O0S
bGryttt1+RcmfbgzoRE8BBavhQ0t+md5S54jcbCkGPyMVodl/xnDbwnFN/6+
E6Ss8mw365txkd2eFH3+WgGMvN3ddyxyDM3c5cMYgjTqoMsvv0vJo5gzkdJ9
Z0cb5nOW7A6QEiC8nRv+O6RVCVeSlUsfS03hRe3gC9uqumDX4L9zGk1M4rD3
7EnloEpM+nTkX6vIMEZ0v5XOEi2FZXvObs1w5id2padsg5a0Qaogd85FkVE0
SOFbYBE3DVP2vXw/w0cwuUaOG2M+CstCT5co3uLiJuPrZ+5AKRzxk1hvosgg
4XdCRyrH2uBx9XeZ6+6DmHvtgvWlpa0wEf5fe+Hs/M7qqvL17xmHcVa8e5IC
Gy8OWTV8TI6DnbJos/R7H0qaBp2efN8NIgd0Pq/jjKGq8Ub/J8bTIDYvJ9TK
nYcXX5q5jgbkw52TlQrJC0ZRZnn8qEN5D675eqon4n4tUCu26kQ3dEPlwMbX
8vkTeCz2q8c2rR5wfmDEYLfE41jYKp0yPxaYhjQEah4fwy694HUCn3pwoOLZ
cF5YP46cFft2LYqfOhAn+kHSgUZCcx3nXmNUQLlBcNay5bPccXnRDo0bNOrw
/KbLow+nUPN+0kZd+VYokthRn8I3iGsubxAzelSH+z3+3ipfwcI3XlqssGVj
cLzZceeJPTSiZmR68HYhGxSKA8sPuuTi3VN+6h4i/RCcp/dN+9YAFl+WXS2T
2AF9l0Uwpm52vwWm8/b10ql3spLMBbX85NZN21OK+4dh/8Jtum5+paBc/EBj
i2gTaIjv4fw15CNdjPNV90XSoNR2feVxqbkk6M4L27ZjbZCixbrWkzaOUpX+
v2++YMHGowJdDQbjaLmmcb9zbzvI7pXs02ey0EEtLmDmSBO8Nb855vtFiBTG
uqx+2s5CA+Nwi/rXU6icLE/vWvcdO+s83eeEjGDDvTpzjwMT0Kmisiq9S5io
PT0sJiVNp5rZnXVmuyewMfSj6jkanZIsXPy9a7wSD57i+7i5oAo8K78uZKdO
osyNI2KGD7JQ/PKC5oOGAoR7CI6Uz/KYBYdn+mA5Hzl64XiPCa0NxkW4dxTf
9wHN/cSH5dZ/IVDOwbI/ahA16HFXKUM2lCyde7Mypwkd3jp1HV/4AzSWr/y3
UXcEP6Q4wpVRPqpqc+JgciaNOOws/VcUUYw/T0lI6V2bQbNdyfpb/EbgES/L
Wvc/QZJzWs7gpvAo2HB636yrEyFtCoE95ZJdcC/+Z96NjYP44pz/R9vVdMqN
ZfH8gefsnMxZuEd3eTvekrcvejnLQ3k7EnYvzeXBHs1dUZ+EhlBIX+ic2QUG
9V2ixDVlAz8RSJ5bbBnTD1dsrPwPdQuTg1y3c1UuTEqy/6/YevdiDNn/WDtn
xxCUpsgnuB5nkKbfgo4n7b9jkKzA51T6MLrGL0hbkVQJv4f74kSvdKAXmOW8
//MHHpm+qW217UADj6eyV6TqkROzQuP220G8fHidzIm/HPjLSnG4ZEQnSian
5/DODsHR5qkDwnYJ6KxjXGjWKkSdyU/hrGTM8vRW+fPPawfw3YvPeq9TGEQ5
gll8wiUPfj1mF3/7NoqhWY8Hty1lUi0uP0BFrB0N5tg3qn9hA+2TY4z9Yw4G
CZ3NX59cC7GJSmXNAt+xwPPgB7rKXKpaR2568noTynzN8bGVCQTnsobcuEs/
4fBo80x2A5MaCjoSntDQhxvm3r7vvIkLS0ZEXrWtppEvlx0fdtjWQjstR7r0
PBcFhmI5fl+mQIMmF9Q52otuH8LEjq5gAW38/przn0PwybeSvPBdeTC39Yjr
9NNxfGO3RMhy1zBUvF75Ssd9EleveWt8ictHuWh9727YMIlbNE9cvvSSB2xV
j23RR0vwSaztzZRuBrVa2yHb9CaNcEvyLAxn63fy/pBeRhcPyz9UnOmuY1BX
v/F3DteJkdW/zJoe/eqBaK0iiZyeUTwnF/rZcEE5dO0u5ZT6j2PZ8a11/vdG
4NDN4InmfAb5ECihz83jgLIQ9XW3RCOKn1dYaGhIUHWv5zFbU35ywf+tcwY3
F1bE/zqku7oPe/+e6NtAE6TuLMyX3ixLIzprDnVO7qNRPbHo1RJMI67qaxY0
hvbDnI1X5YUrptGJUWHWLjsNgg0rU6oXsZFsOOvzNTIbjf7LdtN1q8bPUzKs
vvxeeBYzrWnI34OeRQn+6MOgnvh8Nr2lVocb5vHHCM7279sBmV+d54dxrpPV
kIOMMDV494SLfAAf+e37RPCm4AQ8KYjwXXniH+4Nv7WkrZoFhe+uaE+n8JOc
+f/Gh53KkXbKcZHTDJMMO4lLpGg2ws/2cdfcfaP4rKnzpPz9WR/MvVTx8+gQ
Ulvakr/Hd6BybJg4myFCiHCPkI6cKPUjVWdAdEMn+j6N7d/0+h8MdA391PMc
RgXXD2ulo1tw0fKY036dfWhQdc9lZesYTmVfTM5qZJJFas838KSaZnlkycxF
iSk0UZLLrNHno/i8d6fe2jyKzix1fiGHAvjwcFjDdJiHVMWf7IX3feBG5Iqj
tcnDuFlt3/vxZSzwnnd/esyDhVHblt97cGMKJvu3L702PlvPbzU7g982QeIC
vxGNfV144OcFKb27AlTA1uITbp+acPljB/I7Iwv47528UX6DgzeavsrwNU9D
0lLqx7XXs+t70vnsqx6Cb/3Aier2XngLql/pR7rgyL0NWnnh7ah8OPPPglVd
UDT14FrAtzEUVbcqlD04CBbtDS4KD9l4q3XsJ6eRQX2RnTypo92D1OfVqmpX
RjHtRc29xAOzPvvptnpJeieWbKPvuqU9hN0vu+31vgtTATnvFGPWc9Dh+zDt
+cIuTO1YLbN3RQdaLE4W4K4sgwPLWi8Pnh9Du7G1614HzcCmhs8pZ3dMoO+W
YlmacxZQjIyTxx9+B/clJ7I2cdvQhdlBG+UMYeKef19u1v7Du6fvjWVZj2He
4tv3s+fxQHp+zeTcmg7suGA0pas/u578k8tLM7govdzYpuJYM2z05no6ewkQ
d27om4NzG0F2zb8EswscnOobuCT2uxjmnGnbsdyiCresC/tyK7ERhZa+OvQ1
kZ8YSAUn3fMYx/u3kl5dc+7DzIE8raNfWmBj5sTrtl1T2EdZ/FlXU4nqT7+v
dC5rROUd9pw/Pln4Vaz8x1QbC5WfP9RWn92fjOLXSU2KQdiGx1O0YwdBfJmN
BmcpgwSo1RlJ8/HA+oz/9sdXZ3kmwSyDUdwChX/u3VdfOoBjsUoMyWcVUFAk
uypKswKtQr5MFGsPw3y/kDZ+t0EU3Ny27/jQ7LwLKb27N4RBlr5J/20ZyoMl
+qZKqxRnUFlr+9n5U7/wFOut789fgmTA1Xdt6hSDYpsH+pS8neW9barhxi48
SHy8ceKnHD9pej71xCqVRmlYbznquICFFo8+KCYd4UKO6l+vEi8eLpK9dM95
sAScg8O4J8Sf4m/vk5oP9BkUn8wDU9UTM5ifH3vgluQExMv9J2QezUd8dNlr
BcW5sHBLeI4rjuPBD5l/IbUPOe/v/qMt7Mfx/TfeH78wDbcnHnVICooQibYr
IecTx2D7iF/HGIdG4q+fLPnPaxri0XOh50oa0S8sj7PtYIPRGjntk6ozOKyW
3RPRzqBeV28pTuIbwFP+6Sf6mmbzNk6+jhbPT1zt1B80RTaB5kXJU54tbGwz
va3bkchPed58LuW4bQyVnh4uWAtD8Hh1LjFV6cUrGbra72/x4FvCmMGH6yJE
T2j3R9Nj7Zj+0O7aZY0OXICLzzU296AhozK/9jiTBElutsqfmII9Vh1vzBU4
+G7R2nucPg7sPeh3wWZyCC29zW5/tx8G6U/l4pYPuLiAMFu1xyYg9sy+y9hB
MM1CNs7/cS+SjRXNT3fPICFC1tlrq3FV0eNIzYOj2PW3I4kZU4PLNDY+WTjL
f7S57Uc/mHtCZoZVkM+BMmhupF02lWDDq/8sWsOda0Hh0MO/Y2tG0LB7nayK
IY0Ue277T0Z0EGKfFqnp7EnGRDHWsq4LY3DiYFn1WpxE2p0m9Okdg/TIj5r6
dVyskxktocJ/Ae0Mn/iqBxUo8OBfrdfeGWAI3NPAhyzcXHfFuHtFL+goPQnL
rChBN8+KwuHVA5h8XtaOtWwOqVxnjfsT62EsxSy/z1aQLDDL1XzmVArFQ93J
3T9rMEcv+n17Bgc+qtNTXH5w8HOU44lfy1tAsSWNTw0FyaHDwxs4p/og9Nfo
o/9Od2N+QOxNbhwbTnLGNZybhzFRrWbLpqR2YC7iOOauHsanMqkVYsZjECQZ
edljHg+7DmVqOmEh7Oz/5OKqRicmP56duGDRD8YnTyznvmtHH525M+cPNYH4
iEqYuhuDRBRZGOz6Oww5v5Xb5gc3YtPvLJsL+ybgaAN3rfHREWxivtA1Ke8C
n+nCxA4/IbKfu1PDvacf2/mMXh7Rm0sWjN5ZsfDKOKxrlrD608HGI6Nv37a/
aofYzhcPmpUmMOJMpu91gREoSNYeFDo8yzdz/E4fmc8DQ/vouVd/8xGBrS5Z
mvk0qk+/89Lc2fvlUo1+MnKjsFrG5r/DQixkXuKefa9Witc0u+IvjUzgl3Xf
F6U3sNFoW7x92fNxvC1X+uPS9kmo5e/d9rmXRkyujHfu1huBI3cWB1iq8xFu
da2E3JMh2KpE83hpzCTrL+27eehVNeyqc/d8rN6HXQdMnlSszMD4Pr3rsnQa
eUPF//4hNQJblncfJ48EyIHkuif1n4YgZZwvdZc+B+Oz1GJXOnDgVENIgfjA
KPJoxRPbbwtS46pCztLVTcDc1rNCY6AE1aUf10/1VuPpv29fL1vCT9WyBUUE
85jk6GCB8kRNBR6t/LIncVE//i0OeJf9jQXhho9yNIz7kXqyob7jDgvKF+1X
Tt9BI833/VbZ/RqBr0HSavfKx/Hzpolh8ZRJaHojVliSL0wyr5bQvjGGYTh8
tfCrOBq5rdBmuG/Wr5lSwpMbZXnIGUyIVP07Cmv0Lwn/CajFnYM6866ksEGl
VDAx2K4HVwoaZi3dRqMehCwxvV1HI2L7ErSbfSvhtJGZ/8czUyh5UFFIqvM3
mgX0GS20oROLjMldj8kUJIoMRkveY5C1Hk05BWdY8KFZJOljywSe1k7+8Yuf
TomM54W532QQ8WjfOTu548BYu2a1BMVHrj342X58bBjO3QjZeOEFnchcDPhQ
YT0GaYVV2yjzSexadsDG2CAW/DtD1yTgBIrkn72S/LMTGiQuHjrSQyc6Vz1v
3l82AXeU7P90XhzHXaa/9j37OwOHB3qPKa6bwC3hnS+9Z3mq883ybZbG7Rjc
y1QbXxgDRs8vfNeQnYKPP7fLUlYDIOQVcruNSSc9Fih6k68EfmQNt8Q0t+KX
DNqU48Z8OJ2ty+Zb0YIBUi09aShEubUG2oqPNqHSPYN7q3wGQbBcdiYivRcD
fazObHXlwFLpBpMZST6ikf43kMHHT70oDvYspvHQ86pkb8plDsjEHJwXt49G
LkUpPtVdNgzX9uncePVcmMzvWSDd9JINsafFarZZMcg309652bUNuKm6utD7
6Oz8WLKV7PKnU8oqxwtXPSjGI8sC1l7hsWHhs2u7V2XQiJemill1JJNK/Hrp
4rurJZjwW2yDgiALSEu33C6jBoy03jV4feVs/oVa3qpT5SffBBnZic9ysXOA
r/TKAi6G9RxzUk3ogz/6u62sBrvwy7uBFS/8GVTLTusYLQs+oqclItg1QKMO
/hvbLDqbBxcDrq+z/zMD78eSdtbepREaI6/ZJLsB9HK339LwpxPx8VCnltJm
mJC/FKAzziT7z/eXHGqpB/tzO//2PmLjw96rAg/lhuDJErGrm5aPQnKa2RcJ
0xo4bbddz0uCn/h8O+wTPzLre45/l17Rnv1f1L6KWJbSqB3L5f6ZNAqRIzaR
JDVmCpKDGy2ZzbM+x9MdoQUMQLGc0rwO6QR86vjS5Kq3CHWihe5e1DKJ622n
lxZeF6FyTub2vGaP4wKLabnJpDJwPjfPfPopk3w+47rs8zxBqrLoQOKiljHM
PLytvn5zL+wX/3cnaPMUtumLb3oZWAg9e3a/e/mYRoR4/4ajrs6jPvTsTLCn
mrErd8e3z6cSQDnv1ZtIxgimHxjc5BQ6Dqyn/04PdI0j55GpqbPvIPyuOCt4
NX8K7dJmXDwGWoDcXlcZ0/YVzdL1tOKu1mDwP6fnf6r+oXivDZG1KcCIi6+j
jnbz8CGd0+TYzAHxd3choaEe/zQ8WpxtxYa0zTanw1eKEx0hvpjmD7P132IZ
lKvJJMyglULVizPAjqnZvaexDMMTn19rEGPD4nxB1Z1xI3hn1EHTZ9anD621
yd+qwMPDpun8vMN04sztCFaZHgTMEPW9tGISDGSS7oktEyH+ZqHMG4/GwNnw
Xf+j+c04om0IC9fSKT7fbBMTqgfj+1/N/yw7AVs2lBT+yRjF3dukZs5KNoPy
uvg72q7paJS1NVblPx6E7bnT61XHIAU89yCeBw/0Ag7wrfg5jL7HPolr2c8A
zVlre3MnC4/5ODgYHuejnnSfOl+nysEEaoD5lDsKP+4Wtysu5ifj82/k/hEf
hp6Ca3k+YiJkcI5ymdtJDgT3B0TdTuqADqs/Qdfba0Hq8o5FUdfoZIJtkkR1
cqDrgf8pvcpRlLHe3Rb8Og41bON+5L3sx77n5yLTzLvw6cO50f5OUyh2oO+u
uz2NomiKR0+smcQnvHunu/XaQa7vva3VnSF0+5uZNK9iCIxenxQ0dhAg/FcD
R895C1EpwYaW1lvZ6Jix6kCOYhd2DXpPBvDzk1DbQY+m2fdVB0ss0BovRnf5
eU4CYaNwveFT1PhKQeLt9lcMpVrAKbd2nbgPB+3UugZerMvCqy3z+kxSRjGh
JmiZvNIIxPLOfQA1fvIrPMmsL3gctoy/985cPoFx97/c3NzKAn+/9dzRgiFU
vpn8+l8VG/4HDE6NcA==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
9YZaruFXbGMyW2P8ggre3bEbhtR7sPIj9dVHwvzgvCnwxJfcYpwtIpvXZUIG
Q33V8VO93diym2X49D8SVLhvTN26ewJZkFx7o1MEIJmTrQ70+pB0ybWZ8t0C
YJc6unbEfBEJWGlaGTwRgD9fEt7uFOjFJtFo3eUzL7iz9fja355B5y6UdKt/
4ocQ0WHStephZCGt8dowjQT2zvzrZ34z9+nwOcM3VDbQ31XKdt29GS2/yjj4
WZgMz7a2LDsbN+GtPqScIns2SErIsfMybEb5URoD8kz/eSkQtUiXjMNHJwXM
HR8S4XS3sZ9u0RBOU8s3Y+wQgIKZw4Pb5Zuw4PLpCUY4K2jHay9+4+/Cy/KG
URsV2KHVRGoLV2UrLspW/FTAywF/bVJa/wxP4esJV195XqUCQ8yptVxyFcvZ
SQ3sPczsj6ffNaq9mrGTj6NwfToJxj9ev35baAoP5IUEkrW5wDPsp3OA6gR2
2Bx1WSCNA057llmbHanCkaISUb17+eHR7f/Uk9unUbzVm+ZzSjTYufQyzPFC
Bu7yIecZOXOBQ1LLz9G6QdyM5xv8QynQreZA+lHSgqRi8IwUZocCwzyvIo4e
HOcunZiLeJi+b39yX2Ixjrz1691dNyIQfgSlBOYm453HYgS8LOdwX/vCLQWn
fHT+p/oPto51vPPkoF/Wi0qU9fLLqNRtDsjUPb2MaxdxTt/O/k05PDCRL/9w
u281qh/TCH//nZnfN+yfHw7tQMXs+0QjE1fwD51lms/GCnw/+WhMWB8voC7L
UCn6NNadlLJ/so0G2ztEZbbcL8KiZvvUtL+ww0b2ZFVV3W6cYR0nae7NCvbl
77Z6jk4ijpq4v7OLfJDTzq77L20WaX79/T19Jwm2lz8L1f/cj73LzrcJN3NA
iKLZ1c/ydDSknhzA0cD0oR27D0saZGLCe+6/lBxOKPZ+whYdOYu+Kooc7nvJ
Ceu7cljMfehoIEjleT8LBQL+LO4y7ZhBI2eCxoUduYHyV0XOyXQSfwv0Cu+y
5QJoOvXJuasfW7Z3c9wMEYIb56bzafwMVJBcnX3fvAfnbAySCwywRzMMhyMz
F4kwLfrPsKZvEOuW8Y4LMvPoDe354IU+Os5fgZ7+z9wwnhTzxfhTNfLSuJ+q
gCjg+0eT6vSHBYJtPGLJzDwm0P6TuZg+jf78WjklyeSLwVrV5eaOZbR2euYT
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
2NZ8OSE23kG47m03/m+79wuuY2v4f3H2YHc=
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Background->GrayLevel[0],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{416.666666666664, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4.472140159576162, 4.529783405247981}, {-6.198863794306728, 
   3.944920817598703}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6816679919978733`*^9, 3.681668014235668*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DotPlusLayer", "[", "30", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"DotPlusLayer", "[", "3", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"{", "2", "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}], 
       "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.681668109368634*^9, 3.681668109808191*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`NetChain`PackagePrivate`grid$$ = 
        Grid[{{
           MouseAppearance[
            Annotation["", {"Inputs", "Input"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation["Input", {"Inputs", "Input"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"2"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Inputs", "Input"}, "Mouse"], 
            "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["1", 
              GrayLevel[0.5]], {"Layers", "1"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[DotPlusLayer, {"Layers", "1"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"30"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "1"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["2", 
              GrayLevel[0.5]], {"Layers", "2"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ElementwiseLayer, {"Layers", "2"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"30"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "2"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["3", 
              GrayLevel[0.5]], {"Layers", "3"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[DotPlusLayer, {"Layers", "3"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"3"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "3"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["4", 
              GrayLevel[0.5]], {"Layers", "4"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[SoftmaxLayer, {"Layers", "4"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"3"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "4"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation["", {"Outputs", "Output"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation["Output", {"Outputs", "Output"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"decoded", " ", 
               Row[{"vector", " ", 
                 Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                   Row[{"3"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                  BaseStyle -> GrayLevel[0.5]]}]}], {"Outputs", "Output"}, 
             "Mouse"], "LinkHand"]}}, Alignment -> Left, Spacings -> 1.1], 
        NeuralNetworks`NetChain`PackagePrivate`assoc$$ = Association[
        "Type" -> "Chain", "Layers" -> 
         Association[
          "1" -> Association[
            "Type" -> "DotPlus", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[2, {30, 2}], "Biases" -> 
               NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[1, {30}]]], "Parameters" -> 
             Association["Size" -> 30, "$InputSize" -> 2], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {2}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {30}]]], "2" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> Ramp, "$Dimensions" -> {30}, "$Rank" -> 1], 
             "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {30}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {30}]]], "3" -> 
           Association[
            "Type" -> "DotPlus", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[2, {3, 30}], "Biases" -> 
               NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[1, {3}]]], "Parameters" -> 
             Association["Size" -> 3, "$InputSize" -> 30], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {30}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {3}]]], "4" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association["Size" -> 3], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {3}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {3}]]]], 
         "Connections" -> {
          NetPort["Layers", "1", "Inputs", "Input"] -> 
           NetPort["Inputs", "Input"], 
           NetPort["Layers", "2", "Inputs", "Input"] -> 
           NetPort["Layers", "1", "Outputs", "Output"], 
           NetPort["Layers", "3", "Inputs", "Input"] -> 
           NetPort["Layers", "2", "Outputs", "Output"], 
           NetPort["Layers", "4", "Inputs", "Input"] -> 
           NetPort["Layers", "3", "Outputs", "Output"], 
           NetPort["Outputs", "Output"] -> 
           NetPort["Layers", "4", "Outputs", "Output"]}, "Inputs" -> 
         Association["Input" -> NeuralNetworks`TensorT[1, {2}]], "Outputs" -> 
         Association["Output" -> NeuralNetworks`DecodedType[
             NetDecoder["Class", 
              Association[
              "Parameters" -> 
               Association["Labels" -> {"a", "b", "c"}, "Dimensions" -> 3], 
               "Input" -> NeuralNetworks`TensorT[1, {3}]]], 
             NeuralNetworks`TensorT[1, {3}]]]], 
        NeuralNetworks`NetChain`PackagePrivate`opart$$, 
        NeuralNetworks`NetChain`PackagePrivate`part$$, 
        NeuralNetworks`NetChain`PackagePrivate`selected$$ = Null}, 
        DynamicBox[ToBoxes[
          Column[{
            EventHandler[
            NeuralNetworks`NetChain`PackagePrivate`grid$$, "MouseClicked" :> 
             If[
               ListQ[
               NeuralNetworks`NetChain`PackagePrivate`part$$ = 
                MouseAnnotation[]], 
               If[NeuralNetworks`NetChain`PackagePrivate`opart$$ === 
                 NeuralNetworks`NetChain`PackagePrivate`part$$, 
                 NeuralNetworks`NetChain`PackagePrivate`selected$$ = Null; 
                 NeuralNetworks`NetChain`PackagePrivate`opart$$ = Null, 
                 NeuralNetworks`NetChain`PackagePrivate`selected$$ = 
                  Part[NeuralNetworks`NetChain`PackagePrivate`assoc$$, 
                    Apply[
                    Sequence, NeuralNetworks`NetChain`PackagePrivate`part$$]]; 
                 NeuralNetworks`NetChain`PackagePrivate`opart$$ = 
                  NeuralNetworks`NetChain`PackagePrivate`part$$; Null]; 
               Null]], 
            NeuralNetworks`NetChain`PackagePrivate`fmtSelected[
            NeuralNetworks`NetChain`PackagePrivate`selected$$, 
             NeuralNetworks`NetChain`PackagePrivate`part$$]}, Spacings -> 1], 
          StandardForm],
         ImageSizeCache->{379., {67., 76.}},
         TrackedSymbols:>{NeuralNetworks`NetChain`PackagePrivate`selected$$}],
        DynamicModuleValues:>{}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.6816681191399827`*^9, 3.681668749712181*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetGraph", "[", "net", "]"}]], "Input",
 CellChangeTimes->{{3.681668122865034*^9, 3.6816681253518333`*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetGraph", 
     RowBox[{"[", 
      PanelBox[
       TagBox[
        DynamicModuleBox[{NeuralNetworks`NetGraph`PackagePrivate`selection$$ =
          4, NeuralNetworks`NetGraph`PackagePrivate`outIndex$$ = 5, 
         NeuralNetworks`NetGraph`PackagePrivate`inputs$$ = Association[
         "Input" -> NeuralNetworks`TensorT[1, {2}]], 
         NeuralNetworks`NetGraph`PackagePrivate`outputs$$ = Association[
         "Output" -> NeuralNetworks`TensorT[1, {3}]], 
         NeuralNetworks`NetGraph`PackagePrivate`labels$$ = {
         "1", "2", "3", "4", "Input", "Output"}, 
         NeuralNetworks`NetGraph`PackagePrivate`vertices$$ = Association[
         "1" -> Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {30, 2}], "Biases" -> 
              NeuralNetworks`Nullable[
                NeuralNetworks`TensorT[1, {30}]]], "Parameters" -> 
            Association["Size" -> 30, "$InputSize" -> 2], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {2}]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {30}]]], "2" -> 
          Association[
           "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Function" -> Ramp, "$Dimensions" -> {30}, "$Rank" -> 1], 
            "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {30}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {30}]]], "3" -> 
          Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {3, 30}], "Biases" -> 
              NeuralNetworks`Nullable[
                NeuralNetworks`TensorT[1, {3}]]], "Parameters" -> 
            Association["Size" -> 3, "$InputSize" -> 30], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {30}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {3}]]], "4" -> 
          Association[
           "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
            Association["Size" -> 3], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {3}]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {3}]]]], 
         NeuralNetworks`NetGraph`PackagePrivate`vports$$ = {
          NetPort["Vertices", "1"], 
          NetPort["Vertices", "2"], 
          NetPort["Vertices", "3"], 
          NetPort["Vertices", "4"], 
          NetPort["Inputs", "Input"], 
          NetPort["Outputs", "Output"]}}, 
         TagBox[GridBox[{
            {
             TemplateBox[{TagBox[
                GraphicsBox[{{
                   GrayLevel[0.7], {
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}}, {
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    2.0818995585505003`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-0.4, 
                    2.4492935982947065`*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}]}, {
                   GrayLevel[0], {
                    AbsolutePointSize[5], {{
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-4., 2.4492935982947064`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    TagBox[
                    PointBox[{-3., 1.8369701987210297`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-2., 1.2246467991473532`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    TagBox[
                    PointBox[{-1., 6.123233995736766*^-17}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-5., 3.061616997868383*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{0., 0.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}}}, {{
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{0, -5.5}, {-4., 2.4492935982947064`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{0, -5.5}, {-3., 1.8369701987210297`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{0, -5.5}, {-2., 1.2246467991473532`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-1., 6.123233995736766*^-17}], 
                    Offset[{0, -5.5}, {-1., 6.123233995736766*^-17}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-5., 3.061616997868383*^-16}], 
                    Offset[{0, -5.5}, {-5., 3.061616997868383*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {0., 0.}], 
                    Offset[{0, -5.5}, {0., 0.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, 
                   StyleBox[{
                    InsetBox[
                    FormBox["\"30\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-3.4, 
                    2.0818995585505003`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"30\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-0.4, 
                    2.4492935982947065`*^-17}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736766*^-17}]}, FontColor -> 
                    GrayLevel[0.5], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, 
                  
                  DynamicModuleBox[{
                   GeneralUtilities`Graphics`PackagePrivate`vpos$1209199 = \
{{-4., 2.4492935982947064`*^-16}, {-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}, {-5., 3.061616997868383*^-16}, {
                    0., 0.}}}, 
                   DynamicBox[
                    Typeset`ToBoxes[
                    If[
                    Not[
                    IntegerQ[
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]], {}, {
                    AbsolutePointSize[10], 
                    Opacity[0.2, Black], 
                    Point[
                    Part[
                    GeneralUtilities`Graphics`PackagePrivate`vpos$1209199, 
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]]}], 
                    StandardForm, Graphics], 
                    TrackedSymbols :> {
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$}], 
                   DynamicModuleValues :> {}]}, 
                 ImageSize -> {362., 25.68000000000002}, AspectRatio -> Full, 
                 PlotRangePadding -> 0, 
                 ImagePadding -> {{19.5, 22.5}, {15.5, 10.179999999999998`}}, 
                 ImageMargins -> {{0, 0}, {15, 15}}, 
                 BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                
                EventHandlerTag[{
                 "MouseClicked" :> (
                   NeuralNetworks`NetGraph`PackagePrivate`selection$$ = None),
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                  PassEventsUp -> True}]],FormBox[
                TemplateBox[{
                  StyleBox["DotPlusLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["ElementwiseLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["SoftmaxLayer", 
                   GrayLevel[0.35], StripOnInput -> False]}, "PointLegend", 
                 DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #3}, "RowDefault"]}, {
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #2}, "RowDefault"], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{2, 2}, {2, 2}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.35], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.23333333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.35]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.35]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.35], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.19333333333333333`, 0.19333333333333333`, 
                    0.5533333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.29, 0.29, 0.83]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.29, 0.29, 0.83]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.29, 0.29, 0.83], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.52, 0.4266666666666667, 0.6533333333333333], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.78, 0.64, 0.98]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.78, 0.64, 0.98]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.78, 0.64, 0.98], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkerSize", "\[Rule]", "12"}], ",", 
                    RowBox[{"LegendMargins", "\[Rule]", "2"}], ",", 
                    
                    RowBox[{
                    "LegendLayout", "\[Rule]", 
                    "GeneralUtilities`Graphics`PackagePrivate`legendTable"}]}]\
, "]"}]& ), Editable -> True], TraditionalForm]},
              "Legended",
              DisplayFunction->(GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> Automatic, 
                BaselinePosition -> {1, 1}]& ),
              Editable->True,
              InterpretationFunction->(RowBox[{"Legended", "[", 
                 RowBox[{#, ",", 
                   RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
            {
             DynamicBox[ToBoxes[
               If[
                IntegerQ[NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                Item[
                 NeuralNetworks`NetGraph`PackagePrivate`vportInfo[
                  Part[
                  NeuralNetworks`NetGraph`PackagePrivate`vports$$, 
                   NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                  NeuralNetworks`NetGraph`PackagePrivate`inputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`outputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`vertices$$], 
                 Alignment -> Center], 
                Item["", ItemSize -> {0, 0}]], StandardForm],
              ImageSizeCache->{263., {93., 103.}},
              
              TrackedSymbols:>{
               NeuralNetworks`NetGraph`PackagePrivate`selection$$}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         DynamicModuleValues:>{},
         Initialization:>{NetGraph}],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       BaselinePosition->(Top -> Scaled[3])], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.6816681257011237`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"{", 
   RowBox[{"0.2", ",", "0.3", ",", "0.5"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.681668156850371*^9, 3.681668157210931*^9}, {
  3.681668227666898*^9, 3.6816682492581463`*^9}}],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{{3.681668237871231*^9, 3.6816682494359283`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"RandomSample", "[", "\[IndentingNewLine]", 
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"clusters", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", "\"\<a\>\""}], "]"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"clusters", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "\[Rule]", "\"\<b\>\""}], "]"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"clusters", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "\[Rule]", "\"\<c\>\""}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.681668267631257*^9, 3.6816683162763414`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.681668319690875*^9, 3.6816683215094385`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "1.0020259075699947`"}], ",", 
    RowBox[{"-", "0.2845228630809944`"}]}], "}"}], 
  "\[Rule]", "\<\"b\"\>"}]], "Output",
 CellChangeTimes->{3.6816683218041196`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"net", ",", "data"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6816683308012133`*^9, 3.6816683621492076`*^9}, {
  3.6816687573589783`*^9, 3.681668757799384*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`NetChain`PackagePrivate`grid$$ = 
        Grid[{{
           MouseAppearance[
            Annotation["", {"Inputs", "Input"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation["Input", {"Inputs", "Input"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"2"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Inputs", "Input"}, "Mouse"], 
            "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["1", 
              GrayLevel[0.5]], {"Layers", "1"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[DotPlusLayer, {"Layers", "1"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"30"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "1"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["2", 
              GrayLevel[0.5]], {"Layers", "2"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ElementwiseLayer, {"Layers", "2"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"30"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "2"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["3", 
              GrayLevel[0.5]], {"Layers", "3"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[DotPlusLayer, {"Layers", "3"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"3"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "3"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["4", 
              GrayLevel[0.5]], {"Layers", "4"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[SoftmaxLayer, {"Layers", "4"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"3"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "4"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation["", {"Outputs", "Output"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation["Output", {"Outputs", "Output"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"decoded", " ", 
               Row[{"vector", " ", 
                 Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                   Row[{"3"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                  BaseStyle -> GrayLevel[0.5]]}]}], {"Outputs", "Output"}, 
             "Mouse"], "LinkHand"]}}, Alignment -> Left, Spacings -> 1.1], 
        NeuralNetworks`NetChain`PackagePrivate`assoc$$ = Association[
        "Type" -> "Chain", "Layers" -> 
         Association[
          "1" -> Association[
            "Type" -> "DotPlus", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[2, {30, 2}], "Biases" -> 
               NeuralNetworks`TensorT[1, {30}]], "Parameters" -> 
             Association["Size" -> 30, "$InputSize" -> 2], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {2}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {30}]]], "2" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> Ramp, "$Dimensions" -> {30}, "$Rank" -> 1], 
             "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {30}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {30}]]], "3" -> 
           Association[
            "Type" -> "DotPlus", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[2, {3, 30}], "Biases" -> 
               NeuralNetworks`TensorT[1, {3}]], "Parameters" -> 
             Association["Size" -> 3, "$InputSize" -> 30], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {30}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {3}]]], "4" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association["Size" -> 3], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {3}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {3}]]]], 
         "Connections" -> {
          NetPort["Layers", "1", "Inputs", "Input"] -> 
           NetPort["Inputs", "Input"], 
           NetPort["Layers", "2", "Inputs", "Input"] -> 
           NetPort["Layers", "1", "Outputs", "Output"], 
           NetPort["Layers", "3", "Inputs", "Input"] -> 
           NetPort["Layers", "2", "Outputs", "Output"], 
           NetPort["Layers", "4", "Inputs", "Input"] -> 
           NetPort["Layers", "3", "Outputs", "Output"], 
           NetPort["Outputs", "Output"] -> 
           NetPort["Layers", "4", "Outputs", "Output"]}, "Inputs" -> 
         Association["Input" -> NeuralNetworks`TensorT[1, {2}]], "Outputs" -> 
         Association["Output" -> NeuralNetworks`DecodedType[
             NetDecoder["Class", 
              Association[
              "Parameters" -> 
               Association["Labels" -> {"a", "b", "c"}, "Dimensions" -> 3], 
               "Input" -> NeuralNetworks`TensorT[1, {3}]]], 
             NeuralNetworks`TensorT[1, {3}]]]], 
        NeuralNetworks`NetChain`PackagePrivate`opart$$, 
        NeuralNetworks`NetChain`PackagePrivate`part$$, 
        NeuralNetworks`NetChain`PackagePrivate`selected$$ = Null}, 
        DynamicBox[ToBoxes[
          Column[{
            EventHandler[
            NeuralNetworks`NetChain`PackagePrivate`grid$$, "MouseClicked" :> 
             If[
               ListQ[
               NeuralNetworks`NetChain`PackagePrivate`part$$ = 
                MouseAnnotation[]], 
               If[NeuralNetworks`NetChain`PackagePrivate`opart$$ === 
                 NeuralNetworks`NetChain`PackagePrivate`part$$, 
                 NeuralNetworks`NetChain`PackagePrivate`selected$$ = Null; 
                 NeuralNetworks`NetChain`PackagePrivate`opart$$ = Null, 
                 NeuralNetworks`NetChain`PackagePrivate`selected$$ = 
                  Part[NeuralNetworks`NetChain`PackagePrivate`assoc$$, 
                    Apply[
                    Sequence, NeuralNetworks`NetChain`PackagePrivate`part$$]]; 
                 NeuralNetworks`NetChain`PackagePrivate`opart$$ = 
                  NeuralNetworks`NetChain`PackagePrivate`part$$; Null]; 
               Null]], 
            NeuralNetworks`NetChain`PackagePrivate`fmtSelected[
            NeuralNetworks`NetChain`PackagePrivate`selected$$, 
             NeuralNetworks`NetChain`PackagePrivate`part$$]}, Spacings -> 1], 
          StandardForm],
         ImageSizeCache->{379., {67., 76.}},
         TrackedSymbols:>{NeuralNetworks`NetChain`PackagePrivate`selected$$}],
        DynamicModuleValues:>{}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.681668355745698*^9, 3.681668422987353*^9, 
  3.681668767427192*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.5", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.5"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "3"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6816684302402763`*^9, 3.6816684440324216`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"c\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.681668445471928*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotA", "=", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"result", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Probability\>\"", ",", "\"\<a\>\""}], "}"}]}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"result", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Probability\>\"", ",", "\"\<b\>\""}], "}"}]}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"result", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Probability\>\"", ",", "\"\<c\>\""}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.681668487053437*^9, 3.6816686417253304`*^9}, {
  3.6816686952141156`*^9, 3.681668695421647*^9}, {3.681669138904768*^9, 
  3.6816691399449787`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJxsnXdAE8sTx0MRu6JYsMeuzy62Z8kdVrC3n73E3nvvsVdUsPeIvaGiYkNz
dlBUQFQEkYBIhyAoogL5XdvZ4d75T16+b9mb/ezc7uzebK7m+DkDJ9lqNBqH
8hqNHf9ZM6rPDau1NEc+eYn10VzXTV547ZDfrOJY1+ztdVN3sbiTYVakA9aN
1cvd0aV7L5pcx90W64afR/x1k8R6/pqw7tfikVw+E+v6e+teyHos1rnlu8N0
Gvkf0s3be8WS8gzWLZczSP1Y1x65lEvsKaDbNCrKyPazuJ63H5wZub1YN87Z
24iR+WBdHzeoM6m3QD3dawyH6xGugn59ZQxwRrrhWnYccEY6G14sCTgjXfPs
ThpwxvVPn/kdOCPd+NLpJ3BGurbmfStwxvYMDCnOEM5I1z/pVIkhnLE9x3zr
MoQzvu7PN62BM75uYHp34IzLD184Bjjj+sMfLATO2E7n8B3AmfAT9AfdyoId
SGff9itProt1zdNbpF22BeqpHVydtMuEdO5t/1qEA9bZua3qEm4Fynf4pylD
OCNdu3JjG+CMdGN29S7AGeu/Fw4Ezrj+tssmAGesV2i3DDhjO3v/3Q2ccXtb
1D4HnLG+4AwHnAknwR8qz2eAM9LNG9t3A/uQbuwc4QackW7Y8rIvcMb6VL+B
wBnX36n7EOCM7TmwdRRwRrqmysuJwBnX3+HYPOCMy3eMMQDnAu26vBc4I519
VfIScMb2LBr0CDgjXfum9TvgjHSuXtQX4Ex4CNf91rg3cMa6XddxwBnp+uW3
5oLdSDd4Vl8GnLEe5mMAzriejdM2Ameks+f27wDOSOc0zfcCZ6QbB1Y7CZxx
/RVMvsAZ662+PwPO2M71oR+BM+Zw/EgMcMb6YDYBOGM7h/VIUfhzptiuPlZW
4c+ibqjWYYTCn0Vd6/d0gcKfpXrapG1X+LOk76l+XOHPos7N/35B4c+irp8d
clPhz5I+Z+cjhT9L9swJfq3wZ1HXPHsWqfBnUTeOcf6m8Gep/IbjSQp/luw8
uStV4c/Sdbu0Tlf4s1TP2eIWBedY0f5ZF10UnEVdY+fYV8FZKj/w62QFZ1E3
5gxbq+As6gZ2wWEFZ6n+pXY3FJwlfXurFwrOkj6h8icFZ6n+obe+KThLeiVT
soKzVE/f7mkKzqLO5h5PV3CWyrfuaVFwlnR7b4uCs6ibb76x4PiG/DO3t9Qr
ME+Tf05ernj+IP+0n+JGFBgH5X/67RsX4vsT9FqldxXwM/kfe6bSuQLtl/8Z
pjR7xGj++8/wz7wvwBnbc2p9MnDG5cv9SAPO+Lodm1uAM+bgcNoCnHE9y99T
zkg3GlIoZ1z+6c//+LNwfePjG5WV/izohopLWin9WdDNP0b0U/qzoLNN06Yo
/Vms/5vdOqU/CzrXN/uI0p/F6/56cV/pz8J3/YHxUUp/FnTtmREpSn8W7Xn8
IV3pz6I9va5alP4s1n/hq0Xpz6I9Q378x59F+1P//MefxXrO5yk5i/1vCDWV
Uo7PYvmVh+orx2ex/qgqXRScpfL30sYox2exX8o2W6Ycn8X2ZrMHlOOzWH7Q
yAfK8Vm08+XZLwrOkj3MIyVnya9jSlmU47N43bcBSs7SdYdlKjmLOhv4V8lZ
qmdRvpKzZOcIq0UZb4h8tgTZK+MNsfzDcK0y3pDqd+ugjDdEO23aDFXGG2J5
89+FynhD5DBrziFlvCHqSUtMynhDtGeQxqyMN0R/jv1AOePrlqtnUcYbYntv
hFDOuJ6fPy3KeENs1/48izLeEPu3J+WJdcNjq9KfxfHJsDc8T6eInwXd7PVP
JWX8LOjsix2tFf4s6lzkpYHK+FnQtR17LlLGz2L9eXeU44ak9/jEKeNnQdcn
NDMr/FnSWyQr/Vlq1+x/lf4s6sYPH5X+LOmjfyn9WbKnYb7SnyUOXlalP4u6
JgZxRuO9vt3IXzrFelC082Kek3I9KNozpVYL5XpQ5Nx62wDlelCs/4tuiXI9
KNYzpPVx4Iznn9qFHyvXg2I9hYZRzkhnnXIpZ2x/bE+Lcj0o1v8jknLG9s/O
sSjXgyLniYgzvu4FxBnXn4o4o/nTvGZbpnJ/Qyx/O7A0cEa6odqmJsAZ6fq1
DQYBZ1xPk3F0fMbXHbfQCJyxftPhCXDG9aStoZyRzk0qmarc3xDtiRxCOeN6
qkRTzvi6c39TzkjX7kWc8XVvIM64/gzEGcUj+pkr0pT7dWI9Dj2KAWccv3Re
0gw4Y/136mDgjOtxu7UCOCPdHJNyEjhjewZMopyRrp11jnJGumFCdcoZX7fY
CMoZl8+NoZyxPTX/UM5IZ58izri9/ogzvu53Xi/CxZTwqlOU7T20a5ablz0n
2K/pfZPRiuWs5FOM223a35HtTJGvny3G/5MeclAP0tltbiSODZXntRRR9y0V
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
nVq+7mbfe8AZtyu481W1fF1DqRwWOON51XHmMOCMy9cYOhc44zzV7brNwBnn
5ZpPGIEzzoP1734bOON83Yb9XgNnXH/gx0/AGdvTf8tHnUq+Lju6cZBOJV9X
O6HYY51Kvq6hVdHbOpV8XS7xwHmdSr6u1nXNEeCM9Y+Ld6nl6xrHvqmlU+zX
iXYunPOvTrFfJ9bzYusAnWK/TuyXws2n6RT7dWL5LTbrdIr9OrH+1fUOKc/X
i/aUrXlVeb5ebG/W0vvK8/WiHx6IuKM8Xy/aM973ivJ8vVh/ZCFv5fl6UW9/
9IDyfL1Y/zDzNuX5etGeKu9XKs/Xi+090GOuWr4ud3F7GuS1IF3jPDtNLY9X
axlN8+Sw/u5tqlp+r+ZJpq9afq/Ro+cTuC5+3tR+4nO1/F7z5SG31PI2tfH3
nkGeEC6vrxmolvdrmJ5D99NwHu/8nxa1vF/2UyLdl0O6duUni2re78qHFmgX
0o3Nb1Ad73c1rUKvi/PKzjelOn7OFWdIUssr5pgZX6BduB+Lt0tVyys2j4pJ
V8sr1kzoEq+WV2xYM9Wimlf8un86+AP2q4FHLaDj/bTcr+mQd4XtzLGzgI7s
Mc7cmgjccHuDF8Sq5TPrl58MBA44P+pHx49q+cza84vT1PKZDQ1DzGr5zPqV
e9LV8tINRULj1Z77mCc1UX0ubE6yS4Y8EFzeY6kFdFRe3yKN5u9iDka+vMpz
W3Zi0VR4ToTtX9XNovpc6eiNZLiPcP2Dd6ZDnIPz0GrHpEF5fP9eyfsG/Y7t
L3EsCvoR73dxhz+An+PrznkQDjpu133DbehfbH9uz4uqeeNda+9Ryxs3jlnz
TjVvfOyw02p542zDM6/V8rr17jc/qZ07MLgdjwQO+Hlr5Wr+4OeYz/SO70DH
5YeuuwLc8HXfVzbCuIT9KvHCNeCG88+THnmq5bdzu/ruU8tv1z9+GaaW364N
ZU6p5rGXMV5Wy2M3t8i6qpZvoJlfLwx0nE81yZOeU8bj+Yy8x+Bv2J4WJiNw
Rrp++629avnP5qS+Oog3cB5m46gWOpX8Ye3YBhvV8oe1Ay8uUssfNszKs6jl
D5tHo3kHzxdOZ+j8gnXX8+lQD/5dkahjaWr5xuyFDYlq+caGJcdSwa/w8wvv
FnTex/Xcvpeolp+sqbEpSe0ch9m1fqrac22NzwWaB473pa96poOf4HrqrE8H
f8DjQ5Wi6dDvuPzO7zQOwfvkfY9BXlCB8cTU7B3wxM8FrK9U864Nm6IvqeVd
Gxxf+UO78L70v0++qeXJaKob48FOvG98ZPlb6Be8H17q8yPoF1z/pgxfsB+X
925xWi0PnJud6qOWB25+V/SBWh4453rxuVoeuHaQQwD0C96PfVyCg37B+vNi
t6C9uP7+bc6p5UtrXr1oBvEqvk+bfl2jlv+sH9YwSS3/mbUeSYV1N57fK7dK
UcuLZqPs7qvlRXNrTa/Abjy/DypJ87fxuD3vQopaHrVmQOOHanm2Gv8vb2A/
AcexY/LewL4EHg9Xb7ymli9taPX1vlq+rrbQ/IdqedT6jKepTA/pO4t0zfDz
aYxWqgfn32peeT2G/CWc97uwZxrkdyFdk7wwTS1PW/vyD83HQzoXkW5hVPK0
9Y2OJ6vlaXNHaqWo5Wkbt998rJanbby5I4TpKpVjcB7mrpJpavnb2jP/PlPL
4+VKz/JnckR3tmA+XNWzz9XyvY1+Mc115DvSDc7McrV8b43X7HS1fG9288xU
tXxvzZMn4Wr53gbjta9qeYba8ccS1fLA9d1mRoL/YX2m9iv4IY6vzO6pwAf7
YcKrJNgvwOsUr+spzC6xfDEW5/VdLUWfI+Py/0xJZ/JEzoVZxMEw/ESqWv65
sd71l3BdfP8ad3NwXVSeC5gUBNfF7Vrs+xqui9rFjm/7SC2Pnft16opafrg+
ZgW5fwvkq2sjflvU8tXZee731PLntZ7j4tTywcw1nqTAuIHjvZKXE8E/MR/X
f1LV8sSMpcd/BTuxPVUK+6nlyRvSVn9Sy5Nnlx56AOMhjgN1g6/A+IDzsuqE
3VXLb2cbZFM+6H43F14Rq5bfbgjySWM+Sd/xOKZ1GJCqlveuyeiWopYfq11U
JwnGPcyh66pktTx5/b6oJ2p58trI6GdwfgG1V+Nm8Id8PKTrT6feUsur59JX
N4B5EHOazi1Wy6vX/MqlcSP6/0ZzEs2/wuvo3eZYtbx6fUjiN9W8etun9Fww
5t/UkKSWV6/f3MyillevT5qYrpZXz+q6pTEzJM74ftcfNKfBfYrzJ02DvkF5
fH5nc+dk0HE+TMKyVLW8fe0cm3C1vH2u0016/6LyBtbjtVrePlesSrpa3j77
ZVqqat7+714Jann7bPU+NC8F78PUS6F5s3j+CrekqeXTarfw8ybR8XxRwZgK
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
I0IetFT6G3PEvu3OSk49lf7GVLfp1+pJ3DilvzEVy1ad3Ny6ROlvzOIDptC9
1XYr/Y2p5HHw0DD9eaW/MZ17l+/o0iBZ6W+MTdAxh/u/0pT+xlwfPLCm8xiL
0t+YQz1ur10eaFH6G1M4yqd3cpJF6W9MRsxAx9yf//E3Znv1Bq26/lVyy2Rm
9Z26uufRuspxifkQuy/6z1FGOS4xOkdzs9dJQxTcMplyNw43ZBfNVXDLZFyr
nygyu99W5bjEBNdYe7bQ5HPKcYkJD3PctsFFyS2T6RsW8WBph3QFt0zmRoBn
gwrrldwymaazR7nujVJyy2S2/B5v//WnklsmM/tUzWELc5XcMpn4GiU7euVT
buQ9WqXWFd9dLqC6cl5jzh+4VnmOZxvlvMYMia61ebvjAOBG9MWz+lTSB05X
zmtMncc/s7p7U25Ef+k52sO/2wXl/MW02vZuouMoyo3o3abElHQbSLkRff+D
tp+HelJuRP9dp7lr2FfKjeg7HfoHhORQbkTfO7N8uB3lA3pGlMOd4Valv9my
J85UrGP/o4LC32xZ23k2Xzr5t1D4my27OX76zzbjein8zZZ9Mln7u8XPacp4
iX1co45zxrztyniJXXl8sctZHTkHB/ESO9p+R7OyH54r4yU23vVgu8T5Sj+0
Zd/viel2YpLSD23ZzCNxB+YcVfqhLbtkaZGahxOUfmjLfurRo13yb6Uf2rKe
fmVy1ucr/dCWLbXB3vko4kneC6dvyNZ+064s8CT6zjJeO/u5NAaeRHeMzN/c
urY78CS6vbvXnuknZwBPov+KtetyJsUDeBI9MSxuR62REFeAXmrzzVQ28wXw
JPoZ47SjnpspT6LnPo9+0HQJ5Un0v9d2L/A4Q3kS3TUhXd8imfIk+r51uhKX
/lCeoH8vnXML8ST6t3d2B68jnuQ9iuu6zXtX73cJ4En0+2lrDM1rNgCeRF/v
cryty+2ewJPoQQt25vdqNBt4Ev1mzeiAJX3pPEL0GVXe9skbfRV4Er0Ft2pc
2LcA4El0U9f2nN8RypPoo4YEFlq9gfIk+nmX4fXtLlOeRP+R/DmjWyrlSfTJ
0a2dx/ylPInesHapIp8RT6IvW2jndh/xJO/pezZi6ga7aoWBJ9EPBNzzNXdq
CDyJfstwuvjEKn2AJ9E7HlrwpPNSOr8QfVi4k2PHZ57Ah+jJ1WxeTcmlfIj+
ObWxW68oyofofu5DI22uUj5Er+PxsnnpdMqH6CUONn/6BfEh+owmJZrbIg7k
s2fNrcEDJ8bAvo3/1GOVhP025/fBN1dN/wr7M0tD2rt41SnJrb8+ZcmMm19h
H8alfXhvYV//0GCfFg3bfIX9Fos4PpTi5m4I8ziyOhb2VSQ/L8U1H7Jsd9nu
cYr9k9JceNs22i8J8bBPUku0vzh3aeupQf+OrQDcorqlBLnxdg7b38Vz9CtY
vzMHfbbEe/J2vng12t10uDFwG1yxnkaw89vSkQeXr20H3EobnlQS7Oznd/xd
yQA34PYqUe8i2OlUfe/Y54OGAreuB8bH+80qzK3S3nd4kULHN/L5ym3JuMIZ
TuA/Ek9e97nb/MDscuA/Es+i3PMGMX9HNC4H/iPxLMo9LrU/q4uxLNyPEs9i
nHel0r9CizjB/SjxLMbFLvLzvuxSVnE/FuainRbuu5fJKvytMJdS56DzpGW9
gZvEswjXuVOO5dvI4cBN4lmUK1aq08XC+6YDN4lnUS76xw3uaJcVwGdL02dB
syJtueZb4+x6fe4MfCRudtz1Za9HNOvbRbFesOemrgobU2lBV+AjcbPnvu4f
fXzaqa7AZ4nIrRA3oMSW2D6eXYCPxK0QN29ceOwJXWfgI81TDtzFozOy3PNZ
4CNxs+Uyby4brGsyRxGf2HFbn3u1C01eprgf7biklTVs6tzaBnw+i9zsuXIr
X91+GL0JOBza3m+yu1euqW/ACqf9Lek+Q5nR2w4J+9PdO7vv+DIBeHJbRW75
JqP/lQb/i5oLHMjnzsCJjiuPzAcOEh8N96a+zcxTf+cDB4mPDbcyaeu41Uvn
A4eWIh8bztt8LNZ5yFzgINmfazLO8jzvaIX1FzNI7N8807TqqS7tfpyF9rL3
jkwW3h/qkt8hsVD7O9DeWvfKudyelWVK9PJfsdmP7iccFjn8MAV/iNlcJJfu
J5QVOfw09dY/K+G2fwO0V+KQbSobY1+kiosXtJd8fqhUbPLtSwcV7f1teuvh
7WINP6qIP7NMc31OzZ55NgDaJbX3h6nEsAtm4X2+pH8lf/5pel+8zP3ho8Oh
vS/FcSDbtHVTyr4UHzO0d0jIDau7V5wpaI7LlpRZvaG93Rc2nDw7Mt40bUOR
PPO8idDeNhVPBHnVSTIFrlix5I/zKmhvHZFbisl2PzslrdVeaK/EJ81knGNY
UP/yOUV/xZnyL/bZO6jMV2iXZGe8qf7v18HCe29Ju+5u/3DIk7/u6j5ru5a9
lATtOtO0t0Z4jtG2crGSDywp0C52wffAxu6+pvj3U+2XHKbr/THd3ubXd39s
irl839s7bSi0q3rImYN3Z70y3e4X3LRC9XnQrplNdYfquoeaKh77U6Jkqy3Q
LjeRzwdTdtnomJNpRmjX3IpXXGrz1zX2HeM3sCld10v6Y9O7i53LX76aCu1q
dGr965v8dT2fHVhawoWu62eL5UNNvdz+TN+YS/dD+o4+qJnJX/fzo9unZzjR
+bGJWE+k6efuNMvm+TR+KJE0+3CeNdr0c8Xrcisv03lT1pnEN4l36w+F/W1O
rocx6Xfcu5/YC/j0ka7LlHOt1ryudQLwkdoVykRrE15f7L4S+DSQ2sUkp774
VbHFXuBDPs+5bUv7VYbGD5L/RDKVyzpc7lmDxg8yZ2bU0rj8CkVp/CD3C1O0
dsz7zK00fqgm9SMzqEZPU53HlI/c78zPph/LfPxC+XSW/ITpsbHYoWdplM89
0d++Mwt7eUzZMqAe8NmwsO3rfD7+iN3fLzjgKzxf4PaGPJoc4ZfGRP0q9/xk
a5h3uLOSfzKt4pw9w7zouHdH8memRNqDgPo3dgAXaRz4zqyu4tPYdyPlQz4f
TP+7bPdiyke+v5iVnzNPFptN+cj3I7NnacvOocGUT2vp/mUeZecOvpVK+cj3
O5Mwco3bl2zKRx4fmE12rkuXo/2NFqPLvK7t/ofZ7VtuhfuUGsBHuk9/Mwu/
NbbZPK0t8HEVx9tfTKw1qPmfCgOBjzwuMbddLg/ve3sm8JHG7Z+MT5HGt7pn
bgM+0jz4hyk+1CXsjDflI4+fzFNjw3+7HaZ8yOcKv0DD6S2Ujzw+MyNuLx83
PprykcdzxiF2kXZ3NuUjj//MP9UaGy+gfQx5vmBOVnDqeALtY0jjsA279kO7
FkUGVgQ+Uhxiw+p6hx2+3LUl8JHGQw1b9cWyZ1MW0ucXEjcrE/7mn733K9L1
o8Qtn7H3brJmwfDtwEeeH9klNbKyAu4q+diwm92mBzjcpXzk+ZctNnJMXJN9
lA/5LPOzw9otcZSPPL8zv4oPSSyC1tdyPMB0znC+Ux6tX+T4gfE5VmTLaBS3
O4rxqgPbflyZqndn0vhT4laIrXyp5v3UcLq+lrgVYrO71vWo/4uur+W4hb3R
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
KPf5fYX9p6Gtl9J8TrMcV/P834ZNSlFcV6P5o3h+6ijXw/v5lMP3X0B56fd7
Yxmew5op9Uj+QwbTX7aTb1f0pFs+YKe8zhLsvDqbo/ZnyPGqYP/tD9R+eb0m
2Hlu+TR6Hs1Vjj/5/uoxvV+KkrPCHjNTTq6Hv06/onufQ/lt8vOv3wWe02Uw
Z2U7+XGy3/OU82CnvP4V7OyX9Zza7yrHdQLUvIfUfnkdLdi/pHFLav82OT4U
9E22SvuV9pjl97dkCfxN1fY+g/KS/lfgjJ6LZTBVZTt5+2/n3ae/6yjvV4h2
nrpM7e8mx11Cu26cUvLPFey0DI+l/jNdjt+EPMOLV+hzjUjZnizFc7qqcj28
/W/D3an9O+lzHPS8KYOZJNvJzzu3+/44DXbK+06CnXOG7aL2T5PjImFvZdFG
ar+8fyXYuabPTmr/Tjm+4vUDqf9LVvBX2mOW329mK8QPY3tkQ/6wxld+PvKj
wHMc8vzRTpg3o20C6HkTeX9SsHPN/+ZQ+z3kuEW4L7ZPpPbL+5yCnXOC+lD7
feX4h9dLZ1Sj9vup2mNmPsj18P7/Ns+b2v+BPo9Az0cyhOfWop28/YVLaYj9
JeR1pfSeaE+IZ8h9UUK039ibtkvefxb1byxtl1WuR+iX2+Vpuz7JcQuvV8yH
52WQLyrW06kVrYfoAp8IK33uE6HaLrPcLvE5To1t/SkHed9eLF/j+hfgoJXb
JcRLhSd4Q3ly3YLl6XkKntugXa00yviBTeLvl9gNebqC5R2F501t3fqCzsm6
sK4q3r01+X3mHBPKC6p4+TvkM4POt8PkYKLnFIjOj5P9tnjHgf2H1ecj+D12
vnxCy2YwXsH7AIX1yNnd9NwKea8UX75isYm0PNGF+314zecKv80WxpMT9avQ
8kQX9hOGr6Pnicj7A/nPfuvp+QV4r6BwP55vRsuT9yjy/z9h+3xanuh8+c3V
P9NzBOT9ioI9g5rT8kTn/SSr2lZanryXUMhf/VySlic6X36sXVtSvghH3hPB
98uc8QshTx50ntv2wHySx16iwHtpNSGQ/w+64P99/oCfw3sHrAXi2xx4Dw5/
XYtuHfUHkj8j5IWWXUjnnW3q8ybktwh8+rvS+YvkOfD60Otw7qOIvB/7Q/C3
aLrPXESOb204Ph5bU7cvnI+Q339qw/HxlYHqJJ/wj2A/414iCXRbuX02Gs3u
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
dZDpctH3bu51s5lMl4u+d17RGluZLhfV0+bydah75Ov5sXL8H5kuF/HgFud3
EfDM349X+OfwARXU5aL3cZ9+A6eCulzUnpOhNz6qoC4XlW+S9EangrpcVD78
6txKsnNg1J5B0U0aQruH2/M04d82svNhPJ7jerWS6XjR9y6z6tFIpuNF/Pip
O9SS6XhRPQ4VFitlOl40bl0m7CtVQR0vqv9ku1Y6wpu0npM7vibLdLwIj1x7
fSfg2QzX83vN3KUqqONF8/KgqMSzKqjjRTykFN+JVEEdLyq/Ou3gexXU8aLy
h77qclVQx4u+93z5LeUBz7w+4bn7NRuZjhc9l431dlrJdLzoe9vuiK4g0/Gi
/g5omfNXBXW8qD11poXmqqCOF33vE8/xGhXU8aL6//wTGgd45vUVPvVXPpbp
eFG/Ci9XXQp45vOAf/xUa7wK6nhRe6wHxW1XQR0vqufmsh2nVFDHi96jmzfr
3FVBHS8qP2DpsbcqqONF39th/bR0lSnPStz+aIucXyqo40X99R/R/qcK6ngR
n/WyZ6eroI4Xjc/RC3d/VkEdL96XuTNvVVDHi+qvcMs8WgV1vKidzxMibwGe
+f4u2T7vgkzHi9p/qnLrcSqo40V8Bta4vlAFdbzoe6172G9VQR0vKn9X4xSk
gjpeVP5x7Ra3VFDHi3hQDA96Afjk23PrkPdHFdTxonra15v2QQV1vKiekFn7
n6ugjheNw8MDJnIqqONF9TzSfgtTQR0v+t5F+ZPPq6COF/GZUO7PYcCnJc5T
38nvwE6Zjhd9lCzVa2U6XvThqSjRynS86KPm11KtTMeLPlq+KtPKdLz408Kg
lel48WcKKg91vOhjeUeEQx0v+thVhNoDdbzoI3NokVam40UfvQp+aGU6XvTh
m0DPr6yl+OF6Z7QyHS8uvzlVK9Pxog9NoFYr0/GiD4/2hVqZjleB73JQO6GO
F318Wliklel4Md4sXyvT8eL2nIzXynS86MPxyQGtTMeLPgL2N9TKdLw4/5fa
N0+m48XlfQ5rZTpezPPS+1qZjhd91JyZoJXpeNHHb5sUrUzHi5bhi336a2V6
3WL0XkwIzZHpddE6efH7vhkyXS6+dJ/dTivT5WJ8t7dWpstF79dJz+2ZMl0u
wtWxy77KdLnoPVIvjvwk082i9f9bVXItmW4WrVdffpzeQqabxfmdo2t2l+lm
0TrTp2rvITLdbJrBcCzw70SZbha9709Hu3jIdLPYv6zX0FUy3exnNC9Y1vOW
6WbRvlU9dP5imW42Ce1/PdbMkulm36P9Uf3F42W62ViDodndCYNlullUf7k1
23rKdLPI/vhXcSxTJZm8XzrstzV39UMbmW4Wn2uljG0s082i8hntGneV6WbR
OHEYc3CwTDeLyi/e02WSTDeLnmNhdNAYmW4WPRfbZ8edZbpZtL8OWXWvl0w3
m2gwOI1UtpfpZlF/fVLM7KXnpApB1+rW+0uW6rbJe6fHep3Sy9sVMt1sqcFw
r8LNmsK4FXWz6H2xW72pjbAOF3WziLe1NdurZLrZ7wbDr/OLHP6Xbvb41AlN
/pdutt2Ykhoy3SxajymjbcvLdLPoPZlrM1Uj9EvUzaJ+nazeo1CVaPr+sqj9
DtntrYXnJeq10HN8WnqmkUw3i9rzMWlURZluFj1HN6sJxSqom0W4+kDrPBXU
zaL2RF99nqCC+i7Ec6NfB36orvHtF3Vc+Byj879mMp0tqv/8ttgvKiOfos4W
8W9YG/ROBfVXqL83c2LjVLFGgiiOyqs3P8pQQV0usj9ex8vdUkGdEhrPIXFT
XqqgXhd9n3VOzVzG3rSd2B6q71TMk+l48fmGdirRQYnxMMuE/NdQ34vL1w26
LdP3Ivtml9fuvkzfi8snlj6R6XuRfbNN9H4j82tAfIYcqhjDzDMdh/gcb3G5
2c9lul+cx9P7SKRMz5mH9r9DFsUTu0HPdfF+xCchXqb7RR/XYtPh/QWPu/Y/
qZXpftFHgIUrma/F+KXoI9hhrpZpZPoc+Xpck/OZAabjBPOsXXI7U6YfzkLP
i1nwRaYfRuWv1nTOl+mHkf03zOiXLtMPI9hBW5wv0w9jo7yvsZYxjvMyqX1y
7OunFXSDBinO9l6kFcaVOJ+WCPNpfzCflpjOp7SdP4R+QX0y6u/imIr3ZPrk
EiGfL9QnI9ylBqof6pNx3I91+/JlunH03rk438mU3ZuXCesHqNPA+Ja0bJlO
A9kH7WCrHKgvpeuNCBO7Yazn3bFcppaJ/pPHx/88kgv1qPx7GozqgboLrNus
fTVXprvA72kLdS7Ur+J63NYP0Mru8VH7C6eezGHcjf2V1hOTvyiH+c/Ip0l7
xuzJl8W9QfUwTVLzhPWbGPcV2e2r3r0zBXtSKP1eQ4od0TuJ8WBRuZ01z6aC
90iB13v8+DHF+Xu9jztrv2Lmg3VakbBOM7XDepwX2y9uTZSwjxDjxCK7xPiW
RYDzfN5/6uSwg9dlunT0vT7pL4/LdOlonbB4f2qoTJeO+mXd3CdepktH7bGd
3ShRpkvH91wTrl2W6cn/ovm0YoJGpidH9Tv5xaXK/B3wvUPFEV8Zkj+V4Igf
bcaFVLK+ojiyt36r27wU7JIYnxbVE2O+84Ngh8X4tGidnGG3KozZbbr+wbid
RdI5md8Z6ldKHdVpYf8lxqdF/Lu0jDok09sje16lwdHrMr094s1lcO8UmX4J
rQdOfjuUItMvofnUzf1sIllXk3Uvbs/o8sm3yDqc4qiemU8nX5TpjdF7US9z
M6uCeuMMg+FEUZcx4JzHEuuxU9xzequgvhefE3ZP2wXPN3i7sbM3eY+qSnF1
3zn5DNQDo/fILXtwrkwPjNrpN9M1n2lsYp95O39ohn8+eI/4emKYPrky/XCp
YG+hfhjfa8wp+yrz+yD2FuqOyL4M6o5Q/RmT8rKhHpLaT6B3xXZJ63owF+jK
RDtpivPl574PyQV6JNEemuJG+1y8DdlzYPfKBLtnivPzjv+5NRlgflTgfSu/
XjLFed7adCufCtYVxv2m2iEOPHd+PcbbMVNcj+/fXXb9+0Cm30bj2WX/ndNQ
P4zf3xZXR6TK9HjYH+2U01fQTn4ddWj/oydg/PDvXaWzve6C8cO/dy4/Si+C
dvK44WD1EzI9Oa6nWdIFmZ4cvS9M9S+3ZXpytO6dd+P5Q5meHLVzxY8Kj8Bz
5OtnXJvdA8+Lv1/OKUq5DvrL48ULDWdkum68L5vQKkum60bPlzEcy4Xn9nje
savbOUeoP0U6rq6288+V6bQR7lBvQY5Mp42eu9vvXh+FfhVLxy0/z0L9Nmq/
3bnuj2U6ZMTD4klto2U6ZMRbzCyvhzK9N/a7tN+ZJ9N749bVLsmV6b1xHvld
C/Nkeu9CYf0J9d5ofgl/mfBCpvf+K+w7oN4btdPp46pPMr03xpObxoHxw+P+
r7d+lsUPRM9j8e9J2bJ4g9g+XLqZR85tpLi2z+Y8mZ5ci+9T6jwS9MBivFM0
36g7r30i04ej/bVb6to3Mv05rmdV+E2Z3hKPG9YxW6afxOsB5xWfZXp1hDuM
vxon06unC/sg6EeGxkmlVa05Yd6MpzjaHz3t6P1Qpj/H4+2qVb5Mf14mjH+o
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
2g8Gz6mY04vbKx5fEByjNW+UlzdPrMEOC+YSC+g/EtwF/BL4PHBL8LyK8xb5
J/HUGTGnlX8/uOQ4JS1UNQXNfenky4Pf4TvgtcHaxYaKaxb7Ja4d7Mm5c2k/
QrpTyfq2aj0To2Yi7eRDzn2e9o/on5Wcb6pW0aPsOpS0lzEx1oyNOejRiX31
iuBYoJiwBvyQ5j7XeT1YF31f/Cex7qr7vRast7xXidym4NqUNBbFJsWsp4Pn
eCPlwbn9lL7X9rm1KsW4qrl5gL7LDrljs95nkpur6bsot5JOKC23Sm4+N1cE
M3Km2aqt5Naj9dt/y6x5daD/8sz8u6ry6dycSd/u98y1BNWwfs1cA2gvLpaZ
4x6t3CtzztwOvG1uf6fvu01u/vciuJjbF2usqs4jH1K95BqO/IP8hOohqj3l
JecU0pK347yTo/ahsa1ai3iyeFHvmFcWsX9krm2oRqYakb6pvq1qQRoDGgvS
FaVv34B9Rb+P9rol66vSvOuUXBfS+NE4qp+7ZqC5dmDuWoJ82k+ZtYyjUutm
8mnybf9k5pTSSP/OzB3FAyu5efMScJ6bBy/T2MvNoZeCa+euV2nu7567Jidf
t1vuettqcPXcnHI5eOfcPHsFeJfc2qj41TPBMaIxz/MseDq4ifxTbh1fPmdw
Yn81hmO75q5draqYn6rm9TvzslbuOtbKinV+xeVWmou5a3Kad9LeFavPw+6Y
m4++Qnuam9fKn9TJrTMq1oTc/FU+58/MtSLVMbdmrgmphrIlc01IdZa/MteE
VGurm7seqbm/d+76iubU/rnrH4pB++Wufyg27ZW7ViGfr1qkagTiEvVy1zY0
Z/fMrYcqXuyTu8ap+bs8dV1S9cmBwTUpjeGTg+tWmlNHBOetfwX722GJ85Yj
g3PPv6W7BOeMf2JbBOewW4Prwqrh/oP9Lbgm+B3XPCo4R67C/dsG14u3Ua4f
XN/5Ut8uOAevQXvz4Bx5C/bX4BritxVrSBdGHalNcF6c0L91cH6tZFd1Qukj
mj+nBet4NVPnOeKKqouI118R9QFpGeJ7qr/0j9qLNJj7gjlSvdTcf3jk/Krd
Kg42oP3+YK61t/oE16FUV5SeLd1Smrb8pfymtJ67gvnzHqnr1tJ+90yd0ypv
Ex9Wfb1z5E53BvP22vS5PZjH7iZuH8ztd0+twel3SFv+KrhG9gXv6stgP/C5
8ohgrWB7+nRNnOcox+kVnFspx+odrJtVS/2OL4rv+diY9+0g/SNYZ9gudZ6k
60h77RSs+5VT10SVR4izqSb4ryaXOu5Is5X2clywliVtVrUE5UM9UtcltW6A
v0I32g8o2G8PirFYefPlZT+b8qaOwRpmKbVOIB4vriad91XsJn77d8E1028q
5vhDo57wbXDN9Gtpw6l1B9XzfwmuU2+uONdSzvWVzg2ut24Ej4/fVHHw4aJ/
i7QR5XNaAyBdQ/VsaSzbcs0+wTpnJebR4vA5uEOwXie95MRg/TNLnYcrH5f+
91RwfnFw6rxol6ifXEd7v4J9r7R9cZMjSs7ZhhTs324Fn1GwD+zCue8WXBud
HJz/yj+/Le0JvEvZGrzi0Sfsry/6XNWV1DYmtkvvl+6/ruA6kfQu6V7SfaSN
qIZ1fXAuL38+JTjHV1yYGqwJyLdLh1c9QjVu1QRX095Q/rTo51fd6vWSv2Oj
kvNf1Shv11gKMd+puHb5Jvgw8Yaic2flF6fGsa0xc4fiYsHnHlRyffwoXb/o
/F31RK2zEDcTR9PaEtXx3slcl9lA+5HYQxLXMfUeZwS/N8WvY8uuZau+eWji
GvR7Bf++wyPeXHR+pLqw3t/o+A6l22idhrSbaYlratKkLgrWNndNrXlKA5cW
Li1UNQvpM1Winild/MLg/E58VbU5zanlRa/dkY6nsfMQfa6Rr6P/Y8G5YX3w
I8E55v7KoVJzYK0veiA4D90H/GBwfrpv6pxGuc1Ounew/nBA6pq21h1Ji5P2
JA1KerfWI+k3aV1PGrVo1Tek30pHrhHzQtX95fs0HzXHVsd7jUusjco/jE28
dkFasfy41knNDM61G6ael+Ojv1VdWBrzTrk1Nelp0uLPiTmhdDCtj9H7l86p
eow4sdZhiberRtWh4JqIsOoOysGVZ9QCrw/mdeJdP2fWLNqmnhOnxngxKzif
bZpai1bNthrP06dsXVG12tnBObL0PWlRnRLrUfp++o56Z+Iu4jDSfOYE51CH
xveq9VHSMKXbqC5dk+uvDl7TIi63KlizbQN+Ffxcwc8pPU1jVeuLGsY5qNqY
6mWqQx6WO09WviyN4iXOfVB+hv5Lg/ltS/CS4LrSkalrxspD98KujHmucopS
zBObi7em5rHiXQuCa2fNwQuDNZ8W4PnButDhqdfzHJh4XZPW8Gg9idZBqUYq
3U21iuqRe6u+rvUo8tvyGWtT11u1dkI1Ka2R0zqrDVz/5YI5//vB9XFx/vdi
HFdunkferrrOh5k1I82dc6LuLT1Qdb39E6/XUmzSWr0TsfNiPqW8W7m6cvCm
tK8L5uHKKaSb/buuIbcOrrghnXBjcH4qLrEpeA2Schlpyd0Sa211IrfX2qa6
kfNrfYneU9/EvuyDzJqX5uwnmTVBzfd5meuI4nKzM9eKxOXmZ675ib8tyFxf
FKd6OXOdQHF2cea6guLawsz1J3GwRZlrDOJ10hhOSDxe52SuR4rLvZi5Tilu
OTdzbVK8cV1mXUnc5tXM9QzFwVWZ65TiJMsy1z/EQ5Zkrp2Ih7yUueYhbvl6
5pqi+N6azLVA8clXMtddxE+WZq7NiAu9lrmOoli8NnMNUvP6jcw1IfneNzNr
YeJg/YLXdCnffDfz2h1prW9l1sjEx5Sv9048Z97OrBWK432eWXeTj3o/s0Yp
3vheZs1RPPPjzFqtfOmnmfVW8cwNmfVN+eH1mbVIcciPMuub8tvfZtbUNHe+
y6ypaZ5+mVlPVN70dWY9Ub7oq8yaY5M4fvskzic3Z9YuNR+/yKwnKn/flFnr
1Hz8IbOup7n/fWbNTnP/s8w6oLjKxsz6o3yUcpTTE+vv4oxdI29slXuNkdaN
HJ57jax4l9bvnBV1Ca39kPaclK2jKR5sZr9B7vVw0o76RU4iftA697oB1U+b
5V67Jh7YIvd6XOUjWtsxtmDNs3nu9bjKLxRbzoj8c1y8l2LcwbnXL4pLq1ar
9SeKFZtiTNKaiYNyr72TnjY6Pk+/yBf6R87wRfCclVY5JnItaQA/B/vee1Pr
d6Mjt2qSe22cOGrj3GsTxUUb5l5bKZ4vnW9Q4pz3kNzr6sRRD43rrrTOsGnu
tXfiwI1yr9dUzjU0an1aG6o1Xar7TQrOe5X/at3Mj5k1esUO6QGnJdb0/w+G
qtyM
          "]], Polygon3DBox[CompressedData["
1:eJwtm3W8VkUXhc8L3jkIc5T3IooFEiaioAjYlJSKigoipVhYIDYmn4iEoiJi
d3ei0qGApEgpJhiYmNgY33rumj/O7846e068Z2b2XnvtuQ0HDukxuFqWZfWq
Z9lm+tuxyLLX9XeXkGW/VmbZlHKW7SX8VEWWlepk2UAdY/Is+1PnTlXfk4RX
yHaq8N/qO13nnlP7NV1/pGzTdK658DPqU124v47zdf1POtdLffsJnyHcqpRl
Dwj/FrPsY9k+1vVtZDtFx1jZv9S5o2XfVccotX/S/T7W+/2q/h8Jf6T+rdV3
gI4L1P9TneusvpfJ3k3toHMdZXtL567Vs37Vub5qH6bjDbV31fW/6X4HCj8q
XEv4e+HP9f4zhRsL78X1wvV1fT/dr4twC/WfKPs/ep8v1L+vzp0m217qc7ts
zXXcyreRfb3sK3R9Y9n2VZ/D1XeQ3u9v2UvC7YX3Uv9bhP9S/8/Ufx/h24T/
Ff5SeLmub6TrB6h/N/XfW/YJsm+S/XPZW+k9+8jeXMc7av+h+6+TfZ3aB6j/
iTpO0rU7yz6K7883l/0qnWsr2w7Clwt/ofut0v0WCF+hvn/q+kNl7y38M2Mv
fIjwp7r/VOG2ur6HcH3ZrxT+Ste/o+v3F35YeHP13yA8U+f/yjx/ztW5n3T8
kHm8PlF7e8ZM7fXqt1L9+xQeqzNzP38X4euEf5T9I9kbCF8l/LXwu/Rnzqjv
Hnrnm2TbkfeX/UvZV8v+pb7fPOHd9awW6jtd+GDhV2XfTHhn9R8p/IPwh+p/
lO51dO5vyLc8Xn1OF+6r+/8kvEHHqszfulPucWQ8z5T9PLV7M+f1t6HwCN37
Gz1vgex7qn9L7qXrDxM+R7id8Ak6+qr/jup/deH5OlLtA9TnLL61rt9b7af1
ftXU93edWyu8VtfvL9yE+S38vewf6P2/U/9lwvsm+zvCu+h+J+den58KT5Z9
R9n3FB6h89fLfoHOjda5ZbrfaOHOwpfoWfvLvqvw/awp2dfp+lfV3l7tPXT9
l/p7svAW6rOt+rbJ/bz7dK5CtpW6x9NqH6DzR6n/Jbp/lH1r4c7CB+vv7sLT
1Wcn9Z+l+7dVe4p+Ty77tzp3nnBd9WmgvsN0v67Cn+v8gWntD5ataZpPLXX/
u9WupvbXlR6LY2W/Ueeaq321jlHCPfl96jNIeIBwF+HB+AA9/221W6b1MwOf
J/tAneuh9puy91N7qd6vTlr7J8q+ROeW6Zq1sr+i9nZq757G9hjGVuf2UPtA
HbsJTxNuEOwL+wl/IPyB8GfRtva8t66frGfeLHx/sP9hDi4S7pp7bnYovB7r
y/4L603PP1R4st4vyN5O/fYs+Zpm6jNP/Yek+TUX31PY3i6t5xsKj8dA1oHw
bsJj1Xej7rdW999d+HrhX4TXCb9b9vxgnnRX/1tlbyZ8anr/DbK/pf77JP8+
tvDvPzDNh9eFT+d61pB+Wxvhh9Suof7f6v6vMn+FH9Xz/hWeJfsp6j9c565U
ew8dN6j9q+yfyP6t+i8VbpHiQ1PZxwn/Jvunsp9T4Hyz7KIUHyar/2469bjs
mfBg2Uuyby77YYy/7IcQ32SvEP5E+DXhHXT/psJnqf9/zHX17yB8jPDxwgvV
f0vh1/g+wo8J/6fnrxeeJdxE1+8t+37qf49wdeFvZP9C9tnCOws3l/1N/JTe
5w+du0jnLtI3qi5cS8/rJPsr6r8T80P9/tH1XwnPZ66p7z6yLxDuL/yW7FsJ
H67nrWfu514/e+rv/5jbKcZtJ3sP4fnqvwI+UHj99E++bRf9PZ/YrHN91K4j
+37CL6j/W+r/hHA7xlfn+qv9WuH5zzrA1y1Qv87Cl+q4WO/YTOcblPwOG2R7
Xv03Fy7rfE/1v0fnDhbeIPt36j+N71tyTCO21Sw8Px5Rvzf1/IPwe7K31vGh
2jVkbyL7Q7LPk72ecAfhacJvC6/S93xG+KA033PZGws/KPtc5jfxPM3Pd9Su
xfpI82WB7KN03QTZ99C53/W8bWRvr/ZU2ZfBL5j3JfMd1vdKnT9S7a/UZ7jw
turfUe3pOr9c/RfpbxfZ/9W5S2VfJdxdOOcbCW+u/jvL9rDOz1f/F4RrylZH
79FL738scbNkvvWL+l+ZO55P1HGc2hdE//4aaX7vk5tf3ES80z2f0f06CR9O
vFZ7sOynlcwfWqldqXMtZXtefZfq+TnzQvi8tKYOkv0p4S2J85X27/izXsmn
wIPgQ/i0P+EMep8TSo7hxPJz9HdgyfEQf9kht+/qnXzK+mh/i9+Fe2HH3yxW
n730zPU6LhA+v+Q5fnxuX4fPuzC3/yNeEDfgjjP0Du2Ff08xeUz076mb4tPQ
3LF9DN9f7Rd1/eFqn8j4qD1L13cU/izFD74nv+24xNmIh8TOnikGn8CR+R0v
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
IIttYg==
          "]], Polygon3DBox[CompressedData["
1:eJwt13m8TnUeB/An3HuF2xBaLDVFqcyLkWQp+1qWDBPJWMZSryHbZGSKmrLm
WrIvibELM/Yw2WUpW1L2PWOZIi202Ob97Xn++HI+7/M963PO7/zufe26Nema
LZFILFBp6qN8iUTf9ERit9BG/keeRGIze4sdYJ3YULY+M5HocEsi0SUjkSip
3pA36eujb5e+1vre0PcxG8iOsK5sBNvIXmM7WSv2Optj++r219O+TllXV/5Q
34uWV+qrqq+tvpWsPVvKyrOW7D/sBbaCVWGt2XDb/8tyfl7FPkfI76h/swKs
KhspD9Sbz3ELyef5N/a1Qb1qeYf9/Ul/Hz3b2VD2JevFxrNPWBY7xf7GxrH6
9nma9bK/Hva7Rd6lbyr7Sd+IuKfsJZWup5mqo2+B/IG+P+tbrK+cvhZxn9nf
2XbWkvVlK1g7toQ9zp5nV+Oe2tersT/Wi+1ms/Xd1DeeLWfLWUs2n5VmTdhq
1o1tYA1YV7aXLWF51Gy2kS1mjeQp+u5ltdkW1o8dZJ1ZFtvgWjq6pq7OpYzq
J5dRM/Vd0jdQ3xJ9q2zbkX3AKrM27HO2lGWqOWwDW8ael+fpK8Wasj1sPkuL
82H97X8r6y8f0vcSG6bvKNvMiqm1bD9byprFdekrwRqwz9gClq6msgH2t4Q9
K8/S9yCrr28mr+ramrqu761rJjdUZyznYtms6y5/Ydtl7DY117abbHuQrZUL
qeVsN1vLesibHKMR68YOsFWsoFrItrF17K/yR/qeYd3ZGtadbWQNWRe2n61M
Tz7j8ay/7Vz2sRXpyXch3onB7PdqRjzvth3AFtt2kb56bCS7k1Vmr+gr6Lpa
qPqubbFcWk3Xd1Fff32L9B2y7TpWOH5PtosdiXdJLhrvMNvDDrP1cpF4X9mn
7FM2R06oCf5bxnaySfJ3jjGYzWUtHfdn1te5VHMus+WpvJv197Ni6qcYCzKT
Y0OMEQn2olxYDU+NYfGcTrJdETYi9ezG8zKZpbPGbBDLz+qybfY5gB1mXdhw
lqHvD+xtVoDVY3eyv8R9Z2VZezZGZTnXAc6jv7pmX/n1tdU3M/VcxXuej7Vm
01lx1pzlZa3YNFaMNWM54nljk9htrCa7nbVhM9gD7Dn2s+PUdbx66gC7xIrG
GJh6P+I63mMPs8nsLOvD5rE72JMxXrDL1jWXS6opls+z1+N7oe8h9i47w15j
77NM1oJNZEVYY5abNWdjWSHWiP0Qz4flI7yRc/zF+ebU10TO0lfQuqf03Mqa
smHsDvY0y8X+yEakntN4L/Ow59h4Vpg9wx5n71nOwUs7xltydtUgnjN9FhM1
9N1i4Wk2huVm1dh553OQVVT72EUWGzwlj9KXS6zKbqq6bDjLmXpnrqlabHBa
8ptaSb6uarMhab8+5okn5F9UDaE/y84qxDiuarKBLAerKF9wLsfjm6WOsSvs
IjshV1PH2Y/sa3YsvnfqKLvMvmJH5crpyfsd9z2b66gvj3OMuKzq/rmh6rCh
ab++Mokn5XO2PcAqqC/YBXaG7ZXLxhyBnWOn2R65THzT2Rn2X/aZ/GjMB9hZ
dpbtl8urz9nX7H/skFxJ7WffsC/ZLvl3ahs7yU6xnXJJtZWdYHe5jk4xRjrn
x1gHdlzfJ+yhGCvZMXaCbZcfVpvZUXaS7ZAfUVvYcdYmM/ndje/vdd5WfiSe
IcvnWF/r5usbxaq5SffyD9loeYiqxPKlJ+dSWfEOqeVyNvUu22zbVuyq/GxG
cr4zVx4avfLtqfF5mFxDrZFzx/eH7Yzngm2U86r5bC+7n42RS9j+ZTaNlWPz
2BXnPIytYmXZXPYDy2IrWOWYc7DsajLbwnqr5pZ7h9vnpZi76NvOSrOG7J/y
3aqzvCg1V+lou1JsGrvA+rGFrFrM49itMT6x7eyYfW6Ri6t17ABrn5mcy8Sc
5ibvII/lPeMbFt8Vx71sux9VUcv3ZCTH/XdiLIkxVS4QY31839h37Ddy3ozU
9eRJzs9injYkvj/8ip7qjrM6vt0xHlu3Q88g9YLlN+P7re9bfd+rfPEbZSTX
Rc+Y+J3k3+pbzcbKj6pZ8reuY1B8g/RNiN8yvlG8tv6JcnE1Tj6ZmjvO0Fcs
rpmdSEte93TWleW0zWpWK+YHcp2YX8Rvrjaxr/QVYj3jedRXk73M7mWj0pNz
77hX8a28h41MfctiPj6FlWAT2WnWm82OsYp9zO5Wy2KcZg+w8enJ+W7MgWey
B9mE9OS8+BU2K+5zZvJ+3MdrOffx8vtxrzzva/Td4O3ivYrx1PpS6cnna4pc
IP6uiPGPj9a/T+6hcljeattz1jWWH4t9Wr7Mhtp2peM+wRazG2wcWx/jMNvG
7lJL2WFWiS2Sr+sby9aximwhu8bGsLWsUxw3I/kdjO9hZ7lKZvL9jve8nHUD
Yz6Y+lsj3t/ybJBcIf7WkK/adrR1a+xvh2doWOo+x72awP4P617WRA==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw9m3f8jeX/xz/nHJxzx7luzn2Q7IgQmSUlaYoG7aWhiYb23kM70lTJqiij
pVQ0SSpa2lNpqWgoDfF9PXtdv98f1+P9uq9z3de9ruv9fr3HaT3slH1OztfU
1Oxcq6amILmuWFPTXB1dk5qam0s1Nb/kamo+UN/VOr5U/XnJGWo9NPghySzU
1HyhMfenNTXjNP5X4Q81/hbh34Q/Er5f4ybo3GaSV6ndLbyx5Dlq44Wrkgdq
vgPU1ut4b8k7JP/U+Ztr3k7CB0ruXdGx8MG65nTNXxH+TfNfr/M3CF8r2U7j
tpBcnem6GpOq/2eNmSbcQPhX4UM0/23CazV/U831reRVOu9lnXeX+htJHqcx
x6oNUXtax4nkTZJrNM8ojdmD55N8Wu0ptY46v6d+/1vXvUe/5dX3ta71u/Cp
wnvyLtVOFN5d8g+104T3kvxZbaTwAMm1aqfzDiQXqPUUbiA5Qa0g/I3mfEC4
vvAvwifqvrZSK+n4PvUHydXqv1H3MlG4Fe9b/TnhFervFPxeH9L9TlR/HfV/
p/5JwkXh74XvEq4R/kq4r+buw3fROavUP1z9u0q+pNZDuL7kjppzI55L3+dd
HQ8Ubi/ZX9feVbiNcBddbxbfS2O3VX9v4Qskt1HbWrihxixT2124nWQv9XcU
LgkfpXMfFP5B5/blHL6R+udLPqN2htqzavPUzlQ7IPE73FfyEsnXeEbd/906
flX4HslXdH4f4caS7+g5v9fv9dV/FN8w5zU5Se11jZks2UH3MF14pe4hLbif
cxbr/G1Zz5KdNWYma0xjdtI5uwm3Vf82Gl9b7U7ekfr3l+yu/kHCBwj3EF6u
drDwVjy7xv6V937bRXPVk9xMYzfT/M2E9+d9aFwmvEb3fqx+m8y1JJ9Uf1v2
qeR+Oj5WeEfhL9QOEu7F90q9ZvtL/qTjE7iO5C4aP4BrCffWb48Lby35m45P
ER4kuYOO5wr3k9xJ7Yg4z57sYeGeGvOj2vHCO0uOVf9S4WGSP+j4GOEdJD/J
ex7GTS55/a4sep+NULtHx8dEXDdvOTL295PcgX2Zs544oeA1jf7YmncnvGMc
c6F+fzfxmM81/1uJz7lGcpqOn9HY9br+tNTr/CbJR/Tb5+p/Vb/X0vHlGj8O
vRI893XCixJf6wv2mo4v451L5qKeRF/uqf1QFt5N543XNTbo3C81fmbqeZhv
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
Y3BXalgyx3zJI5+Xud6rHt8xxn7x+W4Pzk2wX9aV7ccVNOaOYF/77+CcEX4S
a4saoSH4/JrvPN67+v+QfCNzbJccLrlUeOK75OiCYwus7SPVuuW99o4Lru9i
vxwbHDNh7b2cORZJvnV12c9SoznrBPutdYTfzxzHJCdI3vgtYm5F5wnJ25K/
LQb7xUWNqR08pnbF8QF8QeITKzXPEyWvjR8y+8OsDXwQaiyoB4CHb1lwnn6Y
fmuj/jYV16UQq6K+oD26AP9Hc2xRdU6lOb5D1XVd26T2zYkz34FPX3VdVN/U
Ph28HL8fLggnJOZJjoCYWEfJ/dVfFW6t6w4Orm9sRUwiOLbDGmtVdW1ZD/hI
1TVzHTVm06rrvXZRf+uqa8u2JW6Quc4v1ZhRwfWEHYSPCq4Ta1txXAvdgo6h
hq0PMRLNcQr7R/3tNaZ+1bm03fR7pWr+R10BvBnODJdrV3UusCA8PHMMgrU6
InP8gvU2KnI8uN6ZmWtG0e2nZPYtqZ04I3PtKXbnrMy1pNiF82NtZbniuiXq
l8jRX5C5PjKo//jMcQrW0rmZaxnrCreouuZvM+GTM8dlWDMnZo6DsGbaV52n
aZk65gy/PTF1TOb/an/qRp1ZL8Zn8C/JkRJvnCT8oOQ+qXNvp6eOq1N/RR3W
SZljQKztoZE3ki8jjko+6wxiLan9ZXJ/1Bx21/38pfM6CW+Nby28V3Ata8uK
9WvXgms/qLGg1oJ6DOIMcFDy1OQliRmQ05waXGtK7rte1XEc7GzdquM12Og6
Vefw0PlTgmuZ4C21q45XYstyVcdA4QBbBdemNtKYPsK14U/CNVXHHNFdxNSI
rfVT/6rMMVz0IXV1+ECsmR8zxxDRmT9ljueie//NHJdEZ27IHJdEZ2ZV13YQ
b0mrjkOhxyYH16mSu787uB5se+F9EvNv6kLvCq7L6ltx7It6M/ZLqeoYLjbu
ksw1tQ3IUQTXNrP22gbXRaNj2wT7wqyxDsHcuL5wR+x9zvuuedW5w02F2wXX
RbNW9wiu420h3C04R8y1BgbXLTevOM5LvLdZxf4qPgX5kWLVMWJ0Mnabtbdp
Yl+GmDVrr0dwHW+mc3sF1yQ3hEdlrvflPnsG1wZXhbsH1yhWhHsH1wZvLLx9
cH3mJhX7JsTvyb3vEFyv2LTiOD+xksGp66mIIX2t62wXXFfcRGP6l1wjNzBx
rv854dMS53CJ4RPLvyxzfTP3TN6ZGB2xOnKu+CXEn3vE2NNwyUtjnTf3fFfm
Ojb45MTMdWnwZGqIiVGhu6/IXDvOexifuQYOzkxcndz7xlXX4fAuG1adb0b3
9obTZK7bZs1Qr4xdY3/el7m2FX7OPiVOjp65PvIoviM1sU+qf1Ti+jd8M3L6
szPXfLM+r8xc18s+ujxzzTrfhXwx8YvjJWdmrimHE1JfSt6jse5zcuYaQTj8
g5lryvEjbstce4fOp2aaGBt6ZFrmem58kDsy19LhR0zPXL+IP3Jv5vo8/AVq
tonTjZS8OtYs8U2viXVErI1rY80S62FK5tpHeP6dmWsT8UeuylwfhX64O3Ot
IXx+9+C8z3vBfBZ9SF3zpMz1jvgpMzLX38PzyTn+f41A0euQun1qBfFjqWcY
nbl2izV8S+b6QmwZ+T5qG6ijuTVznSKckHwrsRJsOnXh+M3kbsjLPJZ33QL1
3PjF1FyS46D+E5t7U+QY2Gvqp8mn4DM0qbq2g+fCjyAfhL2mHps5T05cH48/
hd2lfpo4/G6Ja+jx1/CvqAvHZ8S/or6BGAy1/cTbWVdwDGq7iQkQf4erkC9D
5zySuUYW3UsdDHmZvRPXj+I3wfOofWQPshdvjL4M9mVq5ppa/EH+fwFP2aTq
XAn8tFnVte/4oTskztGwr+EJTavWudTEdo+xCeo9qHcnPkFtKrX+xC7Ie2E3
iTER27kh+lboRvJB2C/sGLkz6lrhP+QpiGXAu8Zm/k8CnG1M5jp4eBT/H4GT
w833Tf2fCOz7dRrzaMl69ZuIqau5OfP/LuBF1Ojj7+yYuJad+Az5p1ZxHub7
H54Pu14=
          "]], Polygon3DBox[CompressedData["
1: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
/VXjX1X/tcIfCP8mPEO4t/CH5Y4f2EuD9G6WCk/Q+VPVPzCxvcJ//1jBPgWN
5MXg9/NkYvtWFF4ofK/m+1x4XLD96Z/YH3wovFZ4sfAy4X2C9ZLBGn+zcKHk
7zE18f5jfS1FK0m9nisJfy78aOrzC7qHHyqY38Bzykr+fkMTr7eqwVpLf41f
LjxAz9dG9z5NY7/Gn6r/M/U/kvp7PpJZq0IT6EysWtnP30P976l/Q2Xvl67C
7wjfofOP09hvIr8+RPNPFT46xgfH6u85wl8RP6k9KdjfcH+zdP60YG76YuL5
nonxz6/EZjp/ovDLcEP1v6H+WcLzhV9NvF6GCXfR+LPQcWK8jj8hxuqnOVbp
fkepfTH7TOMravwi4fuEv8B/6H6nYY9ifDM5eL8N1/yzy23nsfc3FqzPTA9e
v3Bp/MnNwu14vhhvzYzr75XE6+mNYP85PfF6ez3Yf05LvJ/hy/jr9dggfIz6
j4APxXjqQH3Pl4R7EYMLvxS8fkfq/Dd1/k3CbdX/ZYx3pgSv51Hqf0v9U4P3
12jht4V7wTcLXsM11G6rYwbxmeYPOv+G3LbokYLj98eDv9/J6q+n/ruETxA+
Bi1L+Gr9XVawJrFK9/BWXP+zEu/3t+P7np14f74T1zP7F/6BzocW9HTB8Qx6
1iz4qY5z1e6A3ya+0PGX2hfqntpj71K/D+Io4ik02QFq/63v/Y7wrepfqPln
cl32p86prP43gzG/Y3/QY4fhD3RckVnnQu9qGe0jesnjBfvAlFgl9/31jusN
XRR9tEGMJ+Zq/i80/3uJ7c/5Gt9affN1P3sRv7PvCrbhP+q3G3P7+gEF6yOF
eH/zmTfyAfh7P3yK5pwT9//cxHzs3bh/5yTmY200x6sae038Xs2EX457j+/V
Obe2h83Yi7UebJ8nJuY7rwXzQ+w5fPD2YL6yIrV+cVswv1qeWq+4Prf2gcbW
kVhH6/UytdtFvoE+VqlojW7v3PYCPr8ytT7SRuMvFW4rPLHcMQv69uepY5m+
wfzu69Tx/0EaP0X4yMzx3SD1XxN97QThdpnf95dxz6DPbOdZ1d5fz9+yZL3p
MI0fp/F7l6yN4DuJR3YL1t+eTB1f4A9fEL4ktb2qHqznPZE6vmim88/Q+Y2E
RwrvHqznPZWaPz8ZzH/w1WOFV2u+0cR3qe0LOiN6I9/jPrXbab4reL7IT7/T
+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
sjDykfeC3w0aAloCOXVy69Qw1cz9fqg1GyFcN3eOCZuBBknuCf2PeJk1R70a
+iK5MzQj4tNvg7XrmjouCK5hoZaFGrZTxR/2oGYtM5+pr/m/SJw7533x3oq5
a40ejvENfJPaHDSCx6NGgVaBjcPWzYDbFB2/EMeguaC9UO+E9ofGQdwIR4Ar
1Mn9bP1ivN84cnVqIP4hVw5/zpwvXxWccyX3+n7merv61VzjgkZyDLVk1azZ
k2M/RbhGcP3S3Mz1SqzlNtF+Ts8cb92bWUMjHiOHSy73xcz1dA9lrnWj5mZx
ZtuILYJTU4+Cbsa35JvCQyfq/G5qf5a53uSTzLazS6xPqZG5DUdfGDG1UtSw
LImaIToIMRCxUKfc+QeeiWdD80D7gDPCHcmrkV+rj6aj9pDMtTTUyFErRw6a
ejw4NlwbW0dsQYxBPRd8df/M6+P44Lou6rvg9HB7cubUA8E54Z63Z85F1VT/
a4lzmtQKkpMj18lv9OG/+qT25ydmzvFTOzQPrl00/7xb/Xdmzh/yG33koMmX
j8ucm34ycy6LNcXaej9xPSHxzz06f4qOrpk5Odyc+/uogmME8mXk+Mn1s0ZY
K7XIqWfWJ9urbwm6dME1Y+jP1ItimxcUrE8SwxPLE3MSe3I/xO7VY36tdm5b
T8xB7DEi87egxpBawwcya/37Ew+xzzK3qdmjdo93flxwzMC3wKezNlmj2KVF
0b4sifaQGpOQuiajU9zP+8V4gzm65t5783WcrPZyjdm74BiCWGKJ8J4FxyTE
JsuCYwtieGL5r4JjeWJ+Yv8vg2N/YjBisS+CYzFiJmIndCq4PprQUWi4wVwD
zkGsSb0t+5WaMOJH6r8Kwv2FQ+6cwUk6r1fBfHpRcOxHTEpsujg4ViImJDb8
NDiWIoYilvo++F3AKeGWa4K5Le+Id/VdMNeEI8OVVwZrA8TcxN6rg7kznBXu
ir4F14ZzH63f1gdzYTg33Hut8CEFc2i4NPEAuUo0KeKvdcHcHM4N9/4seG+x
h9nLK4JjfWI8Yr2vg2MnODXcGk14TvQn5O6xz78krjE4De2yZH2Kd019wdJg
LgYnOyt3/Su1smjs+A9sOrad/XFCsA2pn7kGkvvBpmJbqVlCD0FjRttE4+yd
299XSp3TJT5FP0Z7x+dQP8f+w05jry/JXYO0LXGOc98Y/xF7ksO8LLc9pybl
AOHTS/ZPxIbU+Fyq/m+C+9Bw0HJYw6xlaiL/UV/l3GuHmkj0/Y3BsQWaPvEJ
3ANtiPvlvslnwcXh5M3QwXLHCmiA8P/DcscaaKzwd7gU2hOa9B6smWBtjRwD
ehuaJNwLG4WtCvF+NkU+gE3BtpCDovaAvBrcn5xMUzTQ4FrobQXXJ8IR4AoV
i66PRCNtE+NLtNML4vpBw0LL2sA9FxyjEatRr0dtIjYeWw+/QOugZnuUcDkx
fsE1utTT3J279oca3Q659RxyMti7c0v2qdQstIj1TcOD98J5meuT8WnUDOD/
8HXEqMSq7TPr1Q2DawmoKZiUO37l3Z+aOV91TuqabWp6qO2hnqpFrD/gXHzu
f7XssZ6qeu5cEz4cX06NE74JH/VAbn73ceaaC2p/+sT1hqaJtrkpOHYjhkMb
/TFYG0EjQeuDn0/JXCNAbrdRcK0GNRsjmD++bzRWtFbiGWpbuKfdcnMKfCb5
QO5vc3C9JRoqWio5+UGJcxLkJsjZD0mc8yWXT46fXP/ECq5dYP2Qa6JuAF9F
PSOxAzEg9WnoXR9krjmDLxK/kwdjT5LPgaPDxadm5u5V0QsT5xSP1fetXs01
iPiAk0qugYbHwefI/VSLnIV6Wv534KNg7o9Gi1aLvrk06rXEL5+of0sFa8Jo
w9TcU6ePDcIWUY/LWsdnd8/9/R/R2Ak6Zyfhj4NjH2IgtGH0SmKtbnF9UT/M
3qDmrCf3p6NYtA+hfrhrtBdoDGgN1IdS+wZngbtcGe0LGgVaBRygmNkfwQ3+
Vv9VBfsgfBHrjW8JJzhd7QXBsSQxJVog9avk9cjv7ZpbQ6sV/Rm2CT7Pt2HP
lYRfDq6lewCblluzhbvwPvjfCGJ8uBI12NRiH5VbO3pDxzG59bwGUf8g18Yz
Ns28Jnl21g71IrxP3ivXe72CvznffozwqoL/x+Gk3HuQ3DF7mr15ceb/gaCG
j1o++Av/u0F9MnyS+hbyO9S8jE/sb+DWrCHW0skl68+sIdYSHB+uT40btXDU
WFBrQY0OtWXYEP7X4YaCbQs5fHL52Ai0E/Ib5HTRLBvn5kvUrlO/OSraGDgH
PhDbwzMmmd8xzz44cmC+P7Xs1JNS8873wBbyPwLk8IiPyK1Ti/xYwTU81DRQ
U0S8PTHap/Yl83f2BHsDf0rshE/GN38eHAvj8/B9y3TOfQX/Twrre1bUM6bF
/U/Oj1w/NQHkAk8s+f952DP//b8K+ZfMPp13/Q0aofovSl1PQU1K/6gHULvI
b9RaUPPBWGpeqH2hxoXaPf5fgL1EPeriaMNaZ7ZR2DZylNQmUENB7pJ3grZR
nvldEeujTdeKzwhfIHeCD8eXkxMdHvUacqXkV6h9JubcL7fPOjjzHsSXocGi
xfaN/pw9eVhmm81e5f+diH155+hO6I/k7P/TkKP/wldRA0wtMHuQvQjn3yV3
DRi1YNTwUPsJR4IrdYnrkZxk66iXo++hr7CuZ0b7Sw6XXC7ri9pDcrbkuslR
ksulRgafjs+jtn49mm7Be5D/vyCHS+0GNR3kdqmho5aOnCS1htS0tY98d3Tc
f9ieq+L+pKbuxMgnqZVlj7BXqGE4PncNHrV45DypVaRGY3aMQamtwmfgO8hh
dyhZzzk/s0+Bj1CzwzqfFfUkaiqorSC/S60XNQDUApCzpBaRmhBiXPQJasNu
yV3rxp7hfVPDj1ZOjod6cGoqqZUlZ0qtJT74iMz/k4Bv/j+gv3iE
          "]], Polygon3DBox[CompressedData["
1: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
5dbUS1tjY7/R1kzla2K/xs+lPwHn8RVi
          "]], 
         Polygon3DBox[{{3901, 2381, 2100, 2101, 2382, 3902}, {3985, 2481, 
          1994, 1995, 2482, 3986}, {3893, 2373, 2085, 2086, 2374, 3894}, {
          3911, 2392, 2115, 2116, 2393, 3912}, {3798, 2225, 2344, 4686, 3656, 
          3657}, {3651, 3650, 4681, 2337, 2338, 4682}, {4645, 2248, 2071, 
          2070, 2359, 3883}, {4650, 2260, 2086, 2085, 2367, 3887}, {4642, 
          2236, 2057, 2056, 2351, 3879}}]}],
       Lighting->{{"Ambient", 
          RGBColor[
          0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
         "Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1m3XcFcXbxh94zlGf2aNn93HADkzsQMXuQEQlxC4kFJEQFARJCwS7AzGQ
ULHB7g5spcREQRFBBEQE5b2+v2veP+ZzXzs7uztnd+a+rztOk3N6tu3RsKam
5t1STU2t5OmxpqZhVlPTt76m5uSipmaiOm/Na2rm6vw8tb5qH+n8K+q/QPKp
1P9areXchH+R/FXtTuGzdJ85wrOrNTVTQk3NaB4k2Ul936ldq+M2GvO9cGvJ
zSo1NT8JT9X99y/X1HwrfBz3LRnfrfaq2jfcX21tjflScqDu85aumS78puRG
6p8h/LD6T5X8Qu0UtUrZuIf6P9dvayc8X3JMyfc5Te0NXT9N8nXJdTTXSRrb
Qnhsyf2deQ+65njJJppzoXt+xdw07pCyfy/vqKprH5UcqmuXa/wl6t9J45/R
u7hC/UPUN0X4cuHBwk8KDxEeIPy08DDhgcKThS8THiTcQde/rfvMVN+hetY7
vA+de1fPelGykeTzOjdceJjGv89c1U5SO1ftY7V7dO651P+R8H5lv8+D1Z7T
tVcxZ117V/A7Oz7zda+na1/W8ROSD0qelb51a7Un6z3mCM0xS9+O7xbS/flu
w3XuDckjJU9Te0t4hp75lNpQ3fNSPbehxr+p/vE6Pkpjpki+rbkcW/a1Y3T8
iY4/k9yMfo35RHiV7nGX5nCM5rVAa/kByQka/73kJlpXJwo/I7xY8gLd60PW
huRpao/xvSo+7qIxl2rM6cIPqv8MyTPVnmY/6FknCy/QPA8v+z7ct1bylLK/
98rc1++axtI/Xsc3F/5Nt+j831U/f5T6+uv8pbwjHe+qOfQT3li/636du5L3
J7m5+nsLn6e5TSo8Ns/dwM/qdz+i/gXC96uvWcX9t2j8Lun+N+r6iYWfy/N3
1JjZwjdrzOPqH8Z7kNyp4ud+lfl78u3bqLXT+RPK3gf36nln6vy/es83Zb53
va67U9efXfacr1dfh7Kf0UjnOgpHycZqH6tvfckXSu4fXvK1Zwn/orl9r99w
DmtL8p+q1+ldOr+Nzs9U/2Qdv6j+qyUv15hN1b9Z+o4N0jxHp2fwLJ77jt7p
C2DJE3X+pLK/x32a/4Poo8zf6uT0Hcvpu0/SuUv17CbCAySfLPk3st/2lDxP
7dNay64Jb6jndRHeQPKlks/dIrlRxWuV/hdLHjNC8iU9+xPJozKv/U/S+n9Z
8lO1k9V+0+/sKbl14bk3TPM/S9d0Y/9JdmRtSP6p7/Jv1XPppr719JvfEL5N
547XdSvYz7XWJyuF15L8Ibde3kL4x5L70X3/qH+A8C7qXyr5T9Kr9+p4lfD0
3LpzddLDPSRryv5+i9T+UHtb/V9mxi0lB5S9D1mL6IEF6Gjd54eS8SPq/0zj
fkOfSLaX/F3tHfV/reO/hWdJti37WehevtHmwv0lR6Zn89xpua9voP5z1ZYJ
f61306bs+b+kMY/reHCtdR466YSS18oaZevbK9QuK9lePK/+nurvUfa9Wktu
q9ZL+NnMuvZYyefUbhC+UfI/tZtK3o+TM9vSnpIvqN0sfGvmPbKT7vMv+4o+
1iTrSnNejh7THOfpt5yt8/fr+34oeVHJtpjzg0r+xlvpHoOxg8I/Vq0/H6z3
d8fW8y2/SO+UbzGv6t80Qs/5XMfD1D8YnZ/ZZl0k+Qv7UfIBPbd70nt8P/Yr
uuIDXd9b+HLh92ttx3k/6Ksz07r5TPdoWTZm/TymOdXruGey/7nwAyXzA/bu
z7q2h851VN/Rkl1KHn9drW04tvyekm0LNgb7hc3B9sAZuFc1rUO+4Rppz2IT
1yxbpzyZ+vm+P2Tu53uxnuEWpye9t07SJ99hqyRX5P6eH/JMHX+Q9ik26eF6
2+VvNLabrntPeCp2pDCeX7Xt/Z9tVv/czPPk9z5e72d119jeavM15hTJRVV/
25l67m9V84sbNH6HtAZf5ltn1i3omDG6pq7svd9Icv2yddx6CU/QuMZlH4P/
/xx6hPWG7vs3t/4rJ9t3bmYbhC06p/D3/1Vz6QOn0fk7Nb5VWv/sA+xqKelk
vteSknkXa5u5sb4bBHMKuBbzapTm00/33Fi4r+S62I1kd55J47nu4sK6pqXk
2sE6A+73e2Y9+Vtmm7BJmsPraQxje6f3cqHkBpIb8s7RVZlt9ULJ+/QtOkku
05o/SOOeV//Qwmu/e7L7vHvWOe//7cy26R3JoGeMU19f4et0zRl8R91vZ+w9
9kO4LphfXKwxO6q/H/up3hyRffeX3udfOtdU918ueY/OtZH8Jno/XsBe0di9
C9vPTHKfwvZk7WTH0bM7S26m67ZXf189c7qu30nHI3W/E3WfjdBtwp+rf1P2
P/xf/Zug94TPEt5KeLjw2cJbC48Q7iC8jfDVwucK7yh8rXDn3M8axe/V/fYR
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
80BiVsSu4L1wpwOJnTdy/SvxSbgxeaL9JD+LXtPv5K6dooaqVeF6SHw97kl9
OTmMgcIvR9s56hZeira71Cd8Gb3u3xP+Knqtvy88LXqtfwCvi17f7wp/F61D
qdddFB03pxbl++i8FDV1M6Lt04caMzN6j03FL4z2VcjNHZ57/7LGDsu9H/nW
7XLvNb7pCbn32tuSHXPvU+YGL0UnEBvolHufMs8/ouMU5P3nJx+shca0z61b
eFc/ROfb4Ip3B8dwpmtf3CN8Ib6+8Km59Tx7izoz9OmphWNMxHCI8R5fOA/S
Ge4fbduo/Tgtt13mXZ1O3LDkd/tatG2mNqNximESy/w0WpfxGxdG5wmocXo9
2v5RB/JT1XWepxf2KYhhnCj8VjSPeUF9b0ZzneeFf4uuuyJWuTi6Toj8Dj4s
8UdqiJ5Q/6/BtQfdo7kdtUxPRvMV6lXOjs4jkqN8OprfUNdxYbSvQi1Tn2hf
hRqnvtF+LPUV44S/Ca5duSjan6SuqXM0nyZ/2iWaE5OT7RjNNcnVdormu+RJ
L4nm0NR7PBXNq6gh6RHNO6m5uiCav1JP0i2am1Krc1p07pbca89oXktd1pRo
HkZdygTh74LrNIj5w82o0Zio/u+Dazkep7YsuFbnUeG5wfUq48lxBtftPCT8
Q3Bdx7nRtWXUjE3CXwquz5kczSOpn3lMeF5wPcn10fZ1hPAN0Tb1auEbo23t
SOHe0T4MdWKPCP8UXCfzTDQvpD7niNw2Dl19fjTXp1btvGifgXq2odF+C7U0
w6L3AP+teC6ad1Lzc1k0b+B/B0OifRvqT26Ottmj1H959J7hvxjPR3NuaoFe
iObx1B1RO02siT2CT01ekXwj/jsxVGr08B/xx6m1wZfBR6AekDgD+SXyeIOi
/TFqWjpExzjIZb8YzRepO+oa7c9QIzc42k+jNmZgtF9HbczIaB5Gzvf2aLuI
Hbw6mpPx35AR0RyO/3r0j/bTqPPpFx2XoUboumjONFxjRkXzHurtr4zmWPxv
5dpojnWV8C3RPO8a4QHRPh51R3dG2/Kb1X9HNG+4SfiKaP7Ef1tujeaF1+L3
R3NB8tRXRfNL/i9zoFp9ybbv5Oj6A+oWiI2TTySveEzaj9TdtUrrlrq4Q1M8
nJwU9avEaalhp86T/w9gKycUjks/it4IrlNaWWefhTgS/49oGe3bU3dHjJ1a
1jEpLk2+6GJ+d25fCV/tqOh4AfVI1J/jj5Arbpmbz+BXHZv2JnWD++Xmcui3
+tw+0QOs8+Q7w83JmZLnICdB/Uyfsu116+jaK3y7I6NjB9SQvJzq2+G5h0TX
0JPn4r8kQ9PvpQ6KvCG8hf/RzEp2tm3a19Q98j+mz0u2Nf9F54CpZX05uAaS
Wsj9ov1z6ruovV+Y9HmbtJeppWyf9Ax1mAdG/3eLHDdxAOr0qJck/kNuifrZ
FtH+NrWdZ0XHFqnlIC4N16Yulv9kEd8gzkFMgHqDGyVviubip2r8vtFzpS7x
6Oh4DXWe+0fHSqiNaZf0HrWjJybbQc3JmdHxUOpJiD3hc7BWiRHBe+dir6vO
I7POz4iOw1JncnzSmdSaUj9GzBmu8q7G31ZrPfNe1XFg9s6p0fFcajyogaYW
+jbJI3Pzf/jkx1XXCbCPDojObVM/3C23vwYnOS7pdupj+Z8UMTvytMTNyEGQ
i7i98H+d4H4H5PY74KX75/YvsLnULxFnpC7jbT33Sj33NN3z7+jcD/XG5B/J
Dd6mvmNy+whw3X2i43eMPyk69krdzltVc3h0fvPo/Ao10uSziG+TM+c/U+3L
rg/srXFHlcyv9o7en3zT16qup0X/nBId/6WGZ3i0v3qy8JtV+xHYGnI3xPPJ
VeylMQ+kMcfqXJOSuTR9/Ma52vuvVh0zZO+8UbW/g/1qlduHgp+fkGwcNcav
V+2DoDP/DwZ784Q=
          "]], Polygon3DBox[CompressedData["
1:eJxFm2WUJUXWRQvqPaAzCirfo3B3l8HdGWBg8MG1ce2Gxhrvxh0GG5zG3d3d
3d3d3Ru+vTm51vcjVsXJiMyXEnHvuefemmbwkDV3HrOnp+fe3p6eFn9PH+jp
Gbvq6TkP/HR/T89/wb8N6uk5EfwA+Oy6p+dT+vMx52LGzgJ/Ap4XfBH4XPDn
4AXAl4I37vb0nAT+g2ssCl6H9g/GPuTYVMzdpdPTM0G7p+cCfnw6+n9w7AbG
XgWvDD6O+T9z7vEcu5ffXxc8D+d/DJ6GueeAdy49PdeAX2D8ZsbGpG3D+R8w
/ghtbvr7cuwF5p5Be4b5q3PsKcbOBn8LHgb+GnwueFfwtVzvRa53Dsc+oz8/
51/C2CY8z8ng0dzTYuCHGZ+Lc/dh/HnwmbSnOX9zjr3N2PngfcE3c87LXO8s
8BfgXRj/kvFR4GvBO4A/Bp8H/hS8I/gT8Il1vsVYXP80xg7n92dgbBfwzuC3
aYX+dhz7iLlfgm8EvwNeg/d3APMnoL85x7ZibH/wAHgz8Jbg/cDjgzcFbwH+
X51nv5Rjs3L+1rT76A+hfc7Y97RnWxmfrZN3Por5O5V8iwO53oSMDeZ6W4Nv
pq1I/w/mzMy5pzG+OONHcuxAxk4FLwo+HLw/+AjwjOBdwUO8H/Bi4CPAB4BP
BC8AHgneG3wyeGHwoeB9waeAFwEfBt4PfAHtGO7tRX7/e+71V+7hOvqXM2cu
7v9Q5k/n8zF/R+ZuA36F8RnBq4BPr/PtDnBzMP8L8Hqs14vAM/p+mP8y4zMw
f2Xmv9Sf698PXhz83zrvpw3+H/gE15h7DXwqeCuu8TbX2pL2LmPbcr1XGZ+J
8X8zvjfj0/B7FzM+E/3DGJ+e/lDGd2L8EPC04J3BO/g+6+yFSzg2M/NP4di6
PP9pHHuMexvJ/MkY25b52w5kj7u376iy9w9mfArGtwdvDz4IPDl4O9cY+APa
cK63P8fm5fqT0U6jfzptCvr9tPu53g3gRejfyv3009+Q8+93bYLHAa8Fvsv3
w/XnB48ADwffxngN3gj8APhx8JLgo8CvgO8FTwXeAfwE+HZwB7wx+EHwPeBJ
wVuBHwO/6m/Q/6d7hrGh3NP4vM/zwdPSP5ljl3C/F4KnBz8L/oH+TrTP6P+T
Vuj388yPc63VO9lb59Gmof8g1+7SrgTPA96V+QvRX4z5rzF/wTprvwd8H/iv
xr5d2by/Nzg2cZV3dibv4gnGV2jlnr33M8C3MHY1x+Z3vdIW5/7fBa9J/z3m
XMa1b/I3wTcwf2zHOP9Oxm4CDwKvDb4bfEvzPOuA73V/givwf8D3gK8E/87v
/RN8I/gu8MSMbwF+BHwF+DfGlwffAL4U/DN4GfC14KvBf4FXBt8Cvgj8HXgJ
8FXgi7Uh4CXBV4OPrbM2N+U33qR/Ae0b8GKMX8H4JX4P8FLga8DPg79o5fnX
4nkvBH/L+OJ+A8aPA58OHsX41IyfD/4avCjjlzO+G8cmaef7fqqto41B/9+M
38b4NWAd4SrgW7Xd4BGc/wb2/iDwneCJGvv2MPiq5vuuAL4JfDd4Evcz+FHw
5eBfGV8OfL3fCvwLeFnwdeDrwb3MXw18B/gOcBe8Cfgh8Ju07/jtIznnrG5s
6Jf0v61iW0/n70uM78ex17RttDE5f1WO3874W7S1WR+bNO/3ENqG7i/a63XW
14H0r6LNx7t512/K/BvBi4K3ZHwW+nNw7GXGJnGP8Ft3cmxZ9zrj07hf+L2n
GN+ce3yE8Undc+BJmfMc+C7mLEf/fdcQ17oFvAT4Q20Y+IjGXgzm/EeZPxnn
r8DYFuDnwdOCV3Q/lNgCbcKUzJ+Ddhn952g/cy/30aamvyNznmT+fxp7MCXn
PQfekuu9wPWmY3ylgdgrf/sU2jfYwq268RXTM/4vxt+hje+35VjN3A0ZP4T+
J7zzhRkbzfXbrKcrOP8fjD/UvK/dOOdZxsfh2O/g99xjnazPzeifS5sKfCe/
eYz2mvkLMn+iTrjYr/po+stoo+gP4jd2pL807UTwOODt6S9F+6/rDXwG/eN5
zidpH3JsXfBnrskSn/Q2v/Up+AbwQ4xf1o0N05a9SHuSe/tIn8v4qc33PZh2
h9+G6x/ieqDdDl4QfBD9V7nmFb15xs3BG9G+9FlpL8mdGL+T8e+00Yy9Ar68
N3t4Q/Bjjb08yHXsfnON6P9pX2l/wVdqP/i9w+h/zJzTuL//NevpSp7hZ/qv
cmxpxlbl2G2uZeaPpP8o11iw4Qsvyk/0SX4rxkfQH8v5XP8an4l+m/ZbKz5g
E/ko9/u4e0Ub0YlP0Ha87JqrY0PEr9Deob+P+8m9yPoYye89CJ6ZsWH8/jPg
z2l7cq/7tsJv5SN703+4le/zBeMrM74O+Bjfr3yD/mO0rxl/ADxTw4+e1r7w
/A+Ar+OcJfTXjB/B73/F7x8FHpd5k7Zj8+6lfzzz52X+AfT31D5wzY/Ae/jM
dfiO3POShq96Ta+9VvO8u9MfTv98xgdxjTf7s5Z2o33L+FK+45Jv9lp/+OTu
rXBY+bQxgLGAHPrZ/qy3qavYiEu64dRy61PAzzG+GXg9xvu4xgp1+I1cfVTD
90+pw7W1+c+Dl5RvlqxJ16b+Rdt3ZMN/lmF8L8Zn4H3s18mace34DX5j7pr0
N27FnmpX3+ecrz2/lf1vTGFscRbj72tLmb81+Fjwj8y/VJ7C3wPAd/fHRmgr
DgU/BJ6yj3Xbzvedgv4enL8P/QsYrzj37ZJYyHhg05Lvf19vOIJcYR3uYV39
E2OvD8SeH9UbH6Gv+J3jhzI+1OehvxFt21be55+DwklOrMIx5Cra9IOr7EFt
/U+0veg/xXlfNbHJ/eAx27mfJ0r2887gqbj/FcBrthJ/3EF/gip76QnXNP0L
SmIFY4Y76Y/mHYym/xb977j+h/w9k+uNx/U+or8pz/eTz0//W/kyf49vZc++
S/9fJbZFvvOCvL4Ofp7+N8zv5fwRrlXw1+DtOrGV74M/GQgHW7cKB5Kbuefc
e/eU2Ep9kr7pSe5pAm2Z76GE78/Q8LVVS/ak38Zv8BL4g1a+jd9gjRIf67fZ
sWRvaI+1y+7p5bmfQX3NXu8k1n2wxDbcW7K27uXYffR7uNe6Hc5pXKcP272K
j9G36d//oz3knLPZP1NVsdVvMP50FX95Ju3f4L2YvxrzZ3Et+c7rxIx+uwvB
H9I/iXZRb2JKY8sF5Pysmz04dnN/fJR7ZP/e+K6j6B/dis/Upx6hf27Fx+qz
L+KeHuwNR5WrXqi96g3HkGssRPtoUHzqg1xvEdfwoGgGz4AX4v1c5/cB93US
U+1SYn9eauJ99+Bx4Meb/X89eG3vgWdZoBPuLIdudRILHqtvanz8cZ7byvvw
vVwsB+8NR5GrLEfr4VsdzpzxOH9ZcAd8EHhsvyX4VuaeBJ5YfgBeieuM5hoL
aa9KuIX27Zkq9uc7ju3HsT8Zf59jq8sx6A/U6c/mu+/NsQu4nxt7w0Heafje
apw/xJiA552Te9lT38z15uiL/f2R8YPlDNzPeuBFOOcrn6/O8xxcwjG+4vzF
mXOzexU8QP+H/rwb35HYmMK99hDHuvRn6SS2NMbU3v+sVtLK7/2kn+D6c/J7
7zE+CeNzdhJryz9+qaMZaA/UGPQ3azN/Lua/L+fT/oLnAL8Lnsi9DZ4b/AF4
CvAGJbGynOmHQYnRjdWNmcepEzMbO7+mPQWvCp4Z/LrrB7wGeHbfpfvbWILn
naMdGzNhJzHe1lU4o7Hfl4zPI/doZf0Z4xvrqxG06nBS17nrfYw6GoN7wT3h
+/oNvHk7a0x78jcnrsJxf+wPx5XrPgb+uT+cW+7tnul0ElMaKxozPlOHk7pu
/Ua94A/lj63YvFazPg/gHd0uR+3P+jylxIfIH77rz726R72+HNh96z2PyfU+
Z/zRVnzMK+ATWH/z0T+QOXsx92jjyFZi/vlLvrXfSj72Kv199ElVNJlhnD9l
Fa64AO2pKpqJtvRrzv2RufeXcCk5ilxFWzuFvoX2jfae+TszPrjhV8tybDW/
DePf8/1P8JvQv4Vz/+B641WJDY2R76O/RYl2tQq4twqH1T5qJ38diOaovx2P
vTO6WSuunWWZ82IVe/ySewE8hn6jk7UwmuM/y686sQ1/gX8x3u1kP87N9VoT
wF+64Us1+E/GTyrh6yOYM29f9LrHSjSg1Tj3Rf0e/b3b2c/+pr+tZnFTww/0
xevSzqU/inOG0p+GuT81/n828Oy0P3y3vudWjskH3K8z05+V9qtxQIn/mRH8
Q4ntmKmdOe7n6bnuMPpL0Qaq+Cx912tyrm7WsvHekow/UYWjy9XHYs7vzO2q
z9DeY+wy8D7dcLn1wZsP5NjCVWJa5w7tZq+rEasV7wL+qDear9rvkG5shTZB
27AveFyutwF4MPg48Dzg/cF7uF7Bs+n7wLuCd+Q3lm7W7u7goxifFbwn47uA
jwXP4fsH7wY+Bjw7eDh4GHgobY8q52zFtbbvxrboO/St23WzflxH2p7dwD81
+sgG4OHgsVrRZzYFDwP/yPjS4PW9dje+41/gjcDb2KpoduvUuefTS57RZ9mT
+S36qzNnY7ktuA1eA7wJeIdufIk2T9u3cze2WZur7d2pm/3rPtZ279iNbdQG
a4v3rsNl5bQjwIfJ2egfzLGb1A65lxN8P645vvnFfP+9XF/0x2T9Xw0eCZ4P
PBZ4/xJbpc+53DihhGuN3Q6/+3eJ7ZGD6YPlDdrCbxq+d1gJF9dGyiHcU+6t
jTj/VH6rl9+YrS/3MKpODKtWYYzxURMLqxWoGdRVYki1iWmqxJZtzv8H5+/P
+efV0STUMiepolXsVsKPr6ddQv88uR5zN6D198VmabumbP+/jfOv+Nxu9qx7
d512bM4cjS8y3n6F/ijGLwZ/LmduuNsZ9M+knVXi+9e3Tzub/ja0wnVW5Xr/
7eQ7+73VDF5ubJy2Ts3mmm5slrZLn6fv02ZoO2bxebuxYdoyfZ6+Tz6s7zq2
4UMTMnci2lyM/94fm+lz+DzndGNDtCXGV9/Tf0272AoH6FTRPPVnaqZqyb5z
370az6Wcf3Qn8dHM2j6+xQB/twBvRZuY/iS0relvQ5uswU/35n4n7Yvvlwvs
AX6h+Q1/Sw41qptv6LeUg57fTYxjrGMMbCxszGDsoIbxQX9iCmMLY0BjQWMW
Y5c/wVt0oqfcVRLfmBvp9sXfD/Z7cPw311Rf/JHarc/zVG/e/wR90WtuKfG5
+t6/5IJ9Of90tWbGWu2sMdea8VJ/OzGBscGQkthdjnxxiU3Xtvs9f6G/bUms
NoQ2dV+w2orxivHbD/zeZyX6gNqoNl5bvz3tIXUvxh5h7g7txKsfcY+7+n3p
90wQ/fuakhhxBc7/3ni3xF+ptRtzGXupoailGIMbi69TkpuYoU5+7asqevIx
dWKZv9QIBpJjNNdojnFQnRyjuUbzf+0673Qrrn1V867H7ov/UX/oZ951fOM1
GL+6xB+pIaslq0FPWceXGY8ZMz9comFrq7XZ5hfVbNVu1Wynr6Nhq2WrOU9a
RyNXK1cTn7HOM6iNq/n6bGrCasNq6jPV0bzVvtXEJ6+jAasFq6FPBz62E25z
NPiNOjk1c2tqKN/VyVduD76a8eHuTTlcO5xI/e54z+kN15EPVX3hR8ZHPw2K
nrdwO/ZBbdF84+ASfXNYJ/nIzUr2i99TfiV3Oht8fCf5zfVL9KH1OsmnLl9i
rzboJH86FLwn+Mc6+Vy1LjUC+as5YXPDfvNx68RwxnJyJOOD5TuJff1mT6ut
daIN+I3fq5M/3brE3p7C2IUD4QZyhLHraDT6h0NL4iVztuZuzVkXxtev49+n
LclvbVzHl85Ykj9bpU4+acISPXvlOvmoCUr05H/VyWcNlOSf1q3DL6Yuyact
Wid/0C7JXy3e6PFjl+j569XhE9OU5NOWqZOvKSX5hGXr5Mf6SvIty9XJ34xb
kk9Yvk6+ZryS/JacQC4yVQlXWKxOPmOsknyYORRzKeZAJtSf1cnPtEryccaf
xocLN/xsgTpr9a8q+SFzburtS3DN7Rmbv85a/7NKvmi+Omt9dJX80rx19sof
VfJ7c9bZa79UyW/MUWft/1wlPzF7nb30U5X8izmaRZt41Xh41jr3/kOVfNJs
dfJDP1bJz8xTZ+/8XiXfZQ7IXJBzJq6z576QP1TZi+5h18KXVfa2e9Z6ha+r
7GX3oLbmiyp7c0z2z0Lt+Gj96YWd+JZXm3jtSvCB7fANuY/f3Nyla8S1MH5J
LtWc6kp1vpm5SXNEfsubsU9v9iYWkB+Nau53wSpc5qpOYoW31FDkIt1oFbM3
/ErfLf83Btfen8OcndqJIQZ38k7kmnJO35Xv3NyQa8RvcW4nvsEYYZtOvpG5
KNes3663hFvLsRf2+/eFz8mP5ukLR5K7L1SFO13KNfbT/zTxj3vUvXqVPrkT
jnY9/QeqcLf/gTdu55hjvq8Nm/fnXrNGwVoFaxhWr6MJq2WqaapXqafqm9Rs
pqiyx8yduYfde3Mxvm87nFw+4J4wV+yedq/4/eSufoMrOlmz5qbdk65l9RVj
sce111X2pLlQc4DuVfesuUBrHtzL7lFzf+ZM3bvmv4yN5dh/ce/Tcr1d2uHM
8gP3jLlZ97x7yZyRuSNzBmvX0ajlUsb/7/Ynh2AuwRzAWnVyAOYCrJlY073P
9edn/jO9ibfVmqZvJ7/8WJWciLkROZP5DGtWrF2ZU/tdZ0+Z+9RGuNf274RL
3AH+tD/1LPuU5AzHNPbtJPYzBvyY8e+rxC6jG73JPWsu+M/e7GXzO9O247/e
YP50JbGWNlnbbI2OtTrW1GzYPI/agTF2TxOjb+KeaiV210aZy9Ymaru0Seay
tZnaqguYszvnj9PwSW2e62u8VmyhNsfcrzZbWzQj83ZrJ6Yz/tfGW2swZbMe
9QnmOs0x6iv0CeYarUlYudGL1CoPavSA6frCl9R7jI/l3HfTH9noB+akzE1Z
0zK4Tk7K3JQc8YBOcmLmxsxhbVGHk8h9Pq/CVTatk8+ZqaR+xfhKrU7+Ko+9
Xr4GPpv5Bw9EKzbXbv3TcvRvYHwY4+cwfshA4iTjJfVt9cozusndqXGrdV/H
/F2Yf1aVfPiN4N3A54IPHYjGrNa8TEl9z7WMD2X8zCr5MHNI6j0PlOSWzB88
3Qp/lEeaD1GLljOYJ9PmaHvGLImHreHwXSxaUh+hBqoWekaV+HRPxldhfOmS
eqE9wCuDlyqpL9pdDQ28ZEl9kJq22vb5nH84+BbwnuALwEeAbwXvBb4QfCT4
EfDh4Buq8NOHwYeBrwefNBDNa0VtT4kWtht4JfASJfVJ3r+1KIuU1C8NAS8H
XqhEX9vZmBW8YEl+bifwMq7tEj1j/W7yU2rwavH6ZPfKfCW+2j3j2pyhZC8N
lVNpu0vqa9zjrtXpS/b+E/2prbu1Sj2SObMHW9HQ1dLVz+STk7MmPy/RtNVv
xijRurXHfq+7q+TuzDedCv4P8/v6Yr+0P9ohtW9zbMaDr5fk3swBmvu6q0pu
cO46+sWvVfQQcwLmAq6pkivQpmhbvquibasHqgWrnz1aog+bi+vymx+X5BDk
l3dWyS2ogZpLVbNXG1WDVct9roo2a47O3OS1VXJ3+kx9529V9Bv3n7HBZ1X0
KDXWTdvJCai9flCiVRqjmc/6Zwl3vq+JQdTBZq2i8av1G7fIbdUYzfds2g13
NsdhrsMcqnqcupza/t+ar7azihasn9Xf6uP0dXISucnzVbRlNX79gbZT7V+N
Wv3stSratflc37/6iTqKGrD62+tVtGHtpvZTm6htfKOk/sD41zhYfmQsYUzR
6osN0zfNVmLbtFn6stlLbNm3xCBnt5IfW73EZ+o7qxI9TB+mL5u0pH7Q62kb
Zy2pB1RzU1ues0SLG7+TXIV5HWv9lq7DFQaV6F/GMNoW85jGNuZ7tO0+z0x9
0a/kU8bsxu76VH335CW+1vvR109W4mvNQavF1SW56ZNLuJnx7W3umTr1leOU
6HHqvXIL9ZI/S2KsCdup8TT22qyOvj5zST3ftnXqHf9Rojeq1ag3b9HoBeZD
1crUC9QN1MvkPsboN9PfvE493Swl9aHmS9XO1C/UMbauUx85V4neuU2d+su5
S/RRtR997daNnqLepT9TH1Enkc9pC6xhNRYzBp26nRpaY1M5i9x2ihIuY0z4
WSs1t8aK5kPv6k2Nx+Ml+oX+0BoC61KMKT9ppYbWWHPVOvWZE5XUp8oBrX+c
uIQbrlGnHnaSkvrWPtbtpb3hJ/KUe/pTj3E5x48diNak3mfNz7P072f8IMav
on/CQDRztXP1bfUAtSL1P+sdH6+S01cPvYz+Mcy/Hbw3+GLw0eAJq2iDaoSP
0H/KGmrGb69Sv/sk+ATwbVXqQe+zJhN8Jfj4xv5YK3Ad+ETwbeDh4Iuq1HNY
B2Aux/yhfG6iKrVC1i88WkUD36DhN8Yb1kxbv3ZFlVpq64itxVBPUFewDtV6
VOuRtyrRm6w1VU9UV7Ru1VoLay62K9EnrZW0RmTzEp1GvUY+tnFJ3tj8sT7d
egDzy3L1e6rkk61Bk3/IQ8xdf9PUtlmjsRbHtqtTHzxPif7uMxg7dUuezVyZ
XMr865NV7KtagTUZ1n1bB2E9hDVWakznlNQCWiOyHv0V69SzdkryD7b1m/jG
sfM6yXdM3+hb4/bFl+nTfD7rn7R92kBrsayP7m30JmuV5i3h0/pkfbP1pNbO
jGylnkgOLZf+o5X4TA1V2zB3O3zvyE70N+/hiE7uwXuxRkntTQ731qB8U7nd
7SX+2nyf9RZDmnhgpoZPmi8w12G+bvJOOIa5PG2E3ENOYa5EDinXeKc/sZg1
bduaiyypjzBf7HqWk1g7pM2Sq1ij4T52P1u7ocZnbPFeifbn/VkLsnbDKV7v
Tyyopmm86Tfeu4k//PZyyPcGZU/KLbWBw5v4QNuozTJXo+aiLdNmmdtRU9GW
qSn63f3+b9XhaK5Rv5/c7df+2H592vmd7PlfB2WPagteKak/MT45v2SPtps9
4t6VE37W1PPIFeWMnzT1C3LJFTvJL5hnsJ5EzvjFoHBEuaR72NosOeRtTb7X
XOzhJfUQ6gvmgs0hmktcu5PaQeuZ1MPMx5tbPrKknkJON6KJH+R6cjj3tJxN
bjd5X+rDXD/qufpv62/MEbzUcNY/m3oruazP4LOcV6X2YyV+b4tWNEa1RmMo
OYH5UbV66+fci8Y4rk/r61zLxrhLdmLDRjf1Xtq20xobpE3RNlbM2awdDcNc
5pBOuJs1VdZXWdOhdqmGqf74cp3aKTUOtQ5jEGtztfHGJtfQNmglR2I9rPmX
LUvqocw9q3HLz+Rpat9q+mqfK5Vo/eZDRpTUU3g/8i/3tjX/J7t/OsnluIZd
y9YHyYv1iXt24hft+/61p9ZDftXK/xCYT7BeVNttzaL7S03Ea03RnG8+R51e
TUZtZoYmX66N8f8vvIbX2q8kVyGPkE+YM9IeWx/tXvObW19pfbuxnj5V32rM
7dr+qdmvxnXGd9Z0Wdu1fifX8n9ydu0k3/FmiZ5g7dYYnfwvhM9kfac5J32F
Mb31mta36yvl/OoVO3RSu+qa83z/n0FfI2fYpxP+4P1M0+CjG59gDaO+1Rp9
a/XHaOf/I7ye97KdmnQnMeVrTb2dsaYxp/9bol5pLGoM6P+O6FOMDf1/C69l
zZn5dvmJ2rXP7LPLU+Qr+jTjY2O0kU38bew2XI2hlZyc9cfGlP7vipzNWPOR
kvjCfJv1V+aE9mi4jbkiY1RzqdZPGbuaI7GexVjF3Im1iK4Nfbz+3Ppha2u0
8dbXWg9hrelk2rAm3+K57pmrusm1WO92YsNH3b/W9nY4tnMna961r6Z+dTf/
f6Xv9pn93qfVqT10TclVjVn93xo5o7GsMbP/WyNnNJbW3x3ZvF/tt/9TY67P
GM9Y75s69W/6CH3FXTzzOa3EsOY31BzeGRQOpBYhB/plUDiS3Ehe6VrR/so/
1AuNVayZ/N1YvxOu5vq11tgaU/mNOQhzEepR6slfN/rT4XWu7f+UyYfk3P4v
jRxSLv53DNLof8YmZzZ6izkGcw1yenPtxqhyfXOh1l5b0yG/P6xOPG2uRb5p
Ds/8tnluc3tXdHPvahvW+2n/tDXGkKd1EvNaC2CMaSxsPbi1ZcZwxnLmc3v7
Em9Zy2I9vrljNeo/+2Mf5RbmtKw19PfNJRrfWIs0dye16mquvj/rpa1t9v6t
Jbd+Sf3o6CaeModkLskckLkg/+fE+hpruN9r1ru1ht6jMfWhdey1tbDy4yPq
+Fa/qd/W/yG0duDqKv9buH8dX+8acC0Ys1m7YMxtLHdAnflyArmBHH/zRm+V
+xsT+L9rxlzGCvvVWUtyJLmSNQq7g0dVqV04qZNctRz1xE7idt+9Plc+ObKO
b9Zn67tH1PHd+nx9/4F1fL8+X9+vfrlDo/+prZzVSW7aGnnr8w+uw2+1ado2
c0T+75Uc1NyR/0+mb5qp8S9ndpLrtobdev4j6/x/lhxFrnJUHV+tT9W3qs+v
3Oi16pn6e3O3ck7rto+uw3308fr6v2PqKjGtsa05KP+3S45tbsocmP9LZsxl
bswc2faN/qk+q83V9vo/Af4/gjlXNQxzdtd2o4fIRTdr1rP5C3MF5gysBfF/
EqyFNeaz3s6cgbkDcx43dZP/MJdyAO3yTvaQe8k1ZSxnjt7awWEluXtzDGog
ezR8yZyIuZHhTT7GemzrBNWI/v5fi4GsTTUiYzk1U//3z5hSLdX6BusM/AZ+
i7rOvZjjMT9gTsbcjDmjG7vJ2Zi7GdE8nzG3/5uphmEsflQnXEl95pf+1Aib
ezcGtr7OGntzqcaqauvOca6aziWdxMH6bv9HyvjF65mLWK7hX2qi6u3q62ql
+jR9m7XC1paZ81Z3Un+yNksNy/y2OTO1LfX7W3sTcxh7aKO0VdZbX8/z/R9y
JW94
          "]], Polygon3DBox[CompressedData["
1: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
          "]], Polygon3DBox[{{4111, 4110, 4788, 3114, 3115, 4789}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
         "Directional", 
          RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ksrb1EYB+DlHPfLOT4B+QCU4rj9/5gYMXEZEcqMxEwkuSR0EpLcjpnI
HHNhKuV+Oy5j+QBmnpXBu5/fu3vX2qu9d1HPYMtASghhTk0KMQ+5vLMiN4R8
NrCQrSxhN5McYBPH2MF59vEfR7iX+73vIdd4zF2e85DPPI3zeSGUeuaCutSP
s0P9SQ/hKp6D16zkDat4y2resTEjhDLz93KTXC4/xHnWmHmMa+SE/CQn+Z+1
fGYdX1jPVzbbo8b8onrTT7BLfTrvhf6dJ3ziAc+4wyOucp+z3OUwN9jLv2xn
jr1G5cb4buV+OSF3spjb3ket+wVym/zBKf1vjjKpttJC+KXfpJGwTsvDKnO4
wmwuM4tLzOQCM+K3Yno8E9Pi93dJ5Qx/cpo/2GI4kfL9b3wB1oBCKQ==
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLVlEUBuDlPRGV8hskQqBOQlCwSVATxWHm5fPSJFScq2lppk4lUgmV
FAVvea9+QYJBUVa/IBGERuof0LHPwcHiWe8+++yz2fuU9w6k+zMiYk6VZEWs
CBmczIw4KYz4Iv/WX+gP9PWeTcmjxRF39X+NzcoT8j35WM5iSl4wfi6XFUVc
sYo5xh7xsUrpO1jJXj7gAOuT9djCaXazwXoHrLZ2P2/zlE9ueYeNfMGnHGQT
h9jMl+zMjzjkK/VM/43D6rn+O1vMG+EP1ap/zTRH2cY3bOdYsmeOs9u7P1lj
LxO8w//ctec+LrGL79jMMdaxj7XsYUWyPtOqRP+Q2bzPS2dWyjMW8F9yN/zD
S/fxlbnO5a35Kd/+nMzjUbKHvIhP8jb3uck9bnCXa9zhCre5zCW1pV/kJj/w
I+e5kdwz1/mea5zhKnucw6/Mm//nGvE0R04=
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0stLVGEYB+BXZjTygllLCdN/wIR2hk2lNZkmtBRpYctg1NTKS5u2XivN
S4221YW01I26072QREREXhAJidRFG33Excvz+31853znnJny1rbHmZyIGDWF
uRGZRMS/ZESz+VIc8VqflZflQTltz1M9UxJRIn+0ltG79VJ9Xv+v5+pvuKTv
unadx9xk3qWIC2ZHruARq5i0P8UrbGIFn7CKV91vmtXOSDGfKxzMj7jNId7h
MO9yhLUcZR3f8h7f8T7fc8yk5XE+4AfWc4IPOckGTrGR2YKIT7zp7Ecs4Cp7
POMtPuN1trCcjbzMGiZYyUPveo1lZltO8CsPfZs1Dtm3LS/KN7zzgj4nb1ib
Zpm1z9YG5O+ubZGLPEe/fiLPmL8XI/r0A/byD3u4z1fc48uz34UvuMXfplv+
xS7+ZCd/8PnZWezgN7Zzk22c8U2yyfP/zim6rUz5
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{3127, 3411, 1601, 3126, 4792, 3322, 3128, 4793, 3323, 3129, 
       4794, 3324, 3130, 4795, 3325, 3131, 4796, 3326, 3132, 4797, 3327, 3133,
        4528, 4856, 3134, 4798, 3328, 3135, 4799, 3329, 3136, 4800, 3330, 
       3137, 4801, 3331, 3138, 4802, 3332, 3139, 1774, 3333, 3412}], 
      Line3DBox[{3141, 4529, 4857, 3140, 1615, 3142, 4803, 3334, 3143, 4804, 
       3335, 3144, 4805, 3336, 3145, 4806, 3337, 3146, 4807, 3338, 3147, 4530,
        4858, 3148, 4531, 4859, 3149, 4808, 3339, 3150, 4809, 3340, 3151, 
       4810, 3341, 3152, 1776, 3413, 3342, 3153, 4925, 3414, 3492, 3343, 
       3491}], Line3DBox[{3155, 4532, 4860, 3154, 4533, 4861, 3156, 1628, 
       3157, 4811, 3344, 3158, 4812, 3345, 3159, 4813, 3346, 3160, 4814, 3347,
        3161, 4534, 4862, 3162, 4535, 4863, 3163, 4536, 4864, 3164, 3416, 
       3417, 4926, 3348, 3542, 3543, 1784, 3493, 3532, 3533, 3524, 3525, 4959,
        3399, 3495, 3349, 3523, 4958, 3415, 3350, 3165}], 
      Line3DBox[{3167, 4537, 4865, 3166, 4538, 4866, 3168, 4539, 4867, 3169, 
       1640, 3170, 4815, 3351, 3171, 4816, 3352, 3172, 4817, 3353, 3173, 3423,
        3424, 4929, 3174, 3427, 3428, 4962, 3175, 3430, 3431, 4930, 3176, 
       3400, 3418, 1763, 3522, 3177, 3528, 4927, 3419, 3494, 3420, 3534, 3178,
        4928, 3421, 3496, 3422, 3179, 4931, 3434, 3435, 3180}], 
      Line3DBox[{3182, 4540, 4868, 3181, 4541, 4869, 3183, 4542, 4870, 3184, 
       4543, 4871, 3185, 1651, 3186, 4818, 3354, 3187, 4933, 3438, 3439, 3188,
        3425, 3497, 3426, 4934, 3189, 3401, 3429, 3402, 3539, 4961, 4603, 
       3190, 3529, 3432, 3498, 1794, 3535, 3191, 3433, 3499, 4872, 4592, 3192,
        4594, 4873, 3444, 3193, 4923, 3403, 3526, 3404, 3538, 3194, 4932, 
       3436, 3500, 3437, 3195}], 
      Line3DBox[{3197, 4544, 4874, 3196, 4545, 4875, 3198, 4546, 4876, 3199, 
       4547, 4877, 3200, 4548, 4878, 3201, 1815, 3449, 3202, 4924, 3405, 3440,
        3406, 3203, 3407, 3441, 3408, 4963, 3204, 3442, 3501, 1805, 3205, 
       3409, 4879, 4591, 3206, 3443, 3502, 4880, 4593, 3207, 4595, 4950, 3503,
        3445, 3208, 4596, 4951, 3504, 3446, 3209, 4935, 3447, 3505, 3448, 
       3210}], Line3DBox[{106, 1496, 107, 1497, 108, 1498, 109, 1499, 110, 
       1500, 111, 1501, 112, 1899, 353, 113, 1502, 114, 1503, 115, 1504, 116, 
       1505, 117, 1506, 118, 1507, 119, 1508, 120}], 
      Line3DBox[{3212, 4549, 4881, 3211, 4550, 4882, 3213, 4551, 4883, 3214, 
       4552, 4884, 3215, 4553, 4885, 3216, 4599, 4886, 3452, 3217, 1770, 3517,
        3410, 3218, 3540, 3541, 3527, 1824, 3219, 3530, 3544, 3531, 3506, 
       3536, 3537, 4960, 4604, 3220, 3450, 3507, 4887, 4597, 3221, 3451, 3508,
        4888, 4598, 3222, 4554, 4889, 3223, 4555, 4890, 3224, 4556, 4891, 
       3225}], Line3DBox[{3227, 4819, 3355, 3226, 4820, 3356, 3228, 4821, 
       3357, 3229, 4822, 3358, 3230, 4823, 3359, 3231, 4600, 4824, 3360, 3509,
        1829, 3518, 3361, 3232, 3453, 3519, 1683, 3510, 3454, 4825, 3362, 
       3233, 4826, 3363, 3234, 4827, 3364, 3235, 4828, 3365, 3236, 4829, 3366,
        3237, 4830, 3367, 3238}], 
      Line3DBox[{3240, 4557, 4892, 3239, 4831, 3368, 3241, 4832, 3369, 3242, 
       4833, 3370, 3243, 4834, 3371, 3244, 1833, 3372, 3511, 4952, 3455, 3520,
        3373, 3245, 3456, 4558, 4936, 3512, 3457, 1696, 3246, 4835, 3374, 
       3247, 4836, 3375, 3248, 4837, 3376, 3249, 4838, 3377, 3250, 4839, 3378,
        3251}], 
      Line3DBox[{3253, 4559, 4893, 3252, 4560, 4894, 3254, 4840, 3379, 3255, 
       4841, 3380, 3256, 4842, 3381, 3257, 4937, 3458, 3382, 3513, 4953, 3459,
        3521, 3383, 3258, 3460, 4561, 4938, 3514, 3461, 4562, 4939, 3259, 
       1709, 3260, 4843, 3384, 3261, 4844, 3385, 3262, 4845, 3386, 3263, 4846,
        3387, 3264}], 
      Line3DBox[{3266, 4563, 4895, 3265, 4564, 4896, 3267, 4565, 4897, 3268, 
       4847, 3388, 3269, 4848, 3389, 3270, 4940, 3462, 3390, 3515, 4954, 3463,
        3391, 3271, 3464, 4566, 4941, 3516, 3465, 4567, 4942, 3272, 4568, 
       4898, 3273, 1722, 3274, 4849, 3392, 3275, 4850, 3393, 3276, 4851, 3394,
        3277}], 
      Line3DBox[{3279, 4569, 4899, 3278, 4570, 4900, 3280, 4571, 4901, 3281, 
       4572, 4902, 3282, 4852, 3395, 3283, 4943, 3466, 3467, 3284, 4944, 3468,
        3469, 3285, 3470, 3471, 4955, 3286, 3472, 3473, 4945, 3287, 4573, 
       4903, 3288, 4574, 4904, 3289, 1735, 3290, 4853, 3396, 3291, 4854, 3397,
        3292}], 
      Line3DBox[{3294, 4575, 4905, 3293, 4576, 4906, 3295, 4577, 4907, 3296, 
       4578, 4908, 3297, 4579, 4909, 3298, 4946, 3474, 3475, 3299, 4947, 3476,
        3477, 3300, 3478, 3479, 4956, 3301, 3480, 3481, 4948, 3302, 4580, 
       4910, 3303, 4581, 4911, 3304, 4582, 4912, 3305, 1748, 3306, 4855, 3398,
        3307}], 
      Line3DBox[{3321, 3490, 1871, 3320, 4922, 4590, 3319, 4921, 4589, 3318, 
       4920, 4588, 3317, 4919, 4587, 3316, 4602, 4918, 3489, 3315, 4957, 3488,
        3487, 3314, 3486, 3485, 4949, 3313, 3484, 4917, 4601, 3312, 4916, 
       4586, 3311, 4915, 4585, 3310, 4914, 4584, 3309, 4913, 4583, 3308, 1862,
        3482, 3483}], 
      Line3DBox[{3546, 3845, 2134, 3545, 5045, 3751, 3547, 5046, 3752, 3548, 
       5047, 3753, 3549, 5048, 3754, 3550, 5049, 3755, 3551, 5050, 3756, 3552,
        5051, 4605, 4964, 3553, 5052, 3757, 3554, 5053, 3758, 3555, 5054, 
       3759, 3556, 5055, 3760, 3557, 5056, 3761, 3558, 4676, 5137, 3762, 
       3846}], Line3DBox[{3560, 3847, 3989, 4606, 4965, 3559, 2149, 3561, 
       5057, 3763, 3562, 5058, 3764, 3563, 5059, 3765, 3564, 5060, 3766, 3565,
        5061, 3767, 3566, 5062, 4607, 4966, 3567, 4608, 4967, 3568, 5063, 
       3768, 3569, 5064, 3769, 3570, 5065, 3770, 3571, 5066, 3771, 3572, 5067,
        3772, 3573}], 
      Line3DBox[{3585, 3780, 5075, 3584, 3779, 5074, 3583, 3778, 5073, 3582, 
       3777, 5072, 3581, 4970, 4611, 3580, 4969, 4610, 3579, 4968, 4609, 5071,
        3578, 3776, 5070, 3577, 3775, 5069, 3576, 3774, 5068, 3575, 3773, 
       5168, 3992, 3991, 3574, 2165, 3852, 3851, 3961, 4691, 5160, 3962, 3916,
        3849, 3957, 3941, 5157, 3943, 3942, 3915, 3835, 3990, 3938, 3960}], 
      Line3DBox[{3595, 3786, 5082, 3594, 3785, 5081, 3593, 3784, 5080, 3592, 
       4974, 4615, 3591, 4973, 4614, 3590, 4972, 4613, 3589, 4971, 4612, 5079,
        3588, 3783, 5078, 3587, 3782, 4003, 4002, 5077, 3586, 3781, 3858, 
       3857, 5076, 3965, 3966, 2458, 3917, 3855, 3958, 3933, 3973, 5166, 4694,
        3946, 3836, 3932, 4693, 5165, 3972, 3944, 3850, 3959, 4692, 5161, 
       3963, 3853, 3848, 3939, 3964}], 
      Line3DBox[{3609, 3789, 5086, 3608, 3788, 5085, 3607, 4982, 4618, 3606, 
       4981, 4617, 3605, 4980, 4616, 3604, 4979, 4007, 4006, 3603, 4978, 3986,
        3985, 5084, 3602, 3787, 5083, 3601, 3978, 4004, 3977, 5172, 4005, 
       3600, 3996, 3841, 3859, 2305, 3981, 3599, 3967, 4677, 5162, 3918, 3856,
        3993, 3598, 4977, 3864, 3947, 3863, 3951, 3597, 4976, 3840, 3945, 
       3839, 3949, 3596, 4690, 4975, 3838, 3854, 3837, 3950, 3860}], 
      Line3DBox[{3611, 3974, 3976, 3975, 3999, 5170, 3610, 3861, 3919, 3862, 
       4983, 3612, 3994, 3865, 3998, 5163, 4678, 3968, 3613, 3952, 3997, 3842,
        3982, 5156, 4675, 3940, 3614, 3953, 4679, 5138, 3948, 3866, 3615, 
       2327, 3868, 3616, 5164, 3869, 3870, 3617, 5158, 3843, 3987, 3844, 3988,
        5167, 3618, 4009, 3983, 4008, 3984, 4984, 3619, 4619, 4985, 3620, 
       4620, 4986, 3621, 4621, 4987, 3622, 4622, 4988, 3623, 5087, 3790, 
       3624}], Line3DBox[{3626, 4623, 4989, 3625, 4624, 4990, 3627, 4011, 
       4012, 5173, 4014, 4013, 3628, 3979, 3980, 5171, 4001, 4000, 3629, 4680,
        5139, 3920, 3867, 3630, 3995, 5169, 4695, 3921, 3970, 3971, 3969, 
       3631, 2333, 3922, 3955, 3954, 3632, 5159, 3871, 3923, 3872, 4991, 3633,
        4625, 4992, 3634, 4626, 4993, 3635, 4627, 4994, 3636, 4628, 4995, 
       3637, 4629, 4996, 3638, 4630, 4997, 3639}], 
      Line3DBox[{3643, 5088, 3791, 3641, 5089, 3792, 3645, 5090, 3793, 3647, 
       5091, 3794, 3649, 5092, 3795, 3651, 4682, 5141, 3796, 3924, 4684, 5155,
        3934, 3797, 3654, 5093, 3875, 3935, 2224, 3925, 3877, 5145, 3798, 
       3657, 5094, 3799, 3659, 5095, 3800, 3661, 5096, 3801, 3663, 5097, 3802,
        3665, 5098, 3803, 3667}], 
      Line3DBox[{3666, 5007, 4640, 3664, 5006, 4639, 3662, 5005, 4638, 3660, 
       5004, 4637, 3658, 5003, 4636, 3656, 4686, 5144, 3876, 3655, 4685, 5143,
        2341, 3653, 3874, 3956, 5142, 4683, 3652, 3873, 4010, 5140, 4681, 
       3650, 5002, 4635, 3648, 5001, 4634, 3646, 5000, 4633, 3644, 4999, 4632,
        3640, 4998, 4631, 3642}], 
      Line3DBox[{3669, 4641, 5008, 3668, 5099, 3804, 3670, 5100, 3805, 3671, 
       5101, 3806, 3672, 5102, 3807, 3673, 4687, 5146, 3808, 3926, 5103, 3878,
        3936, 3809, 3674, 5104, 3879, 4642, 5149, 3927, 3880, 2237, 3675, 
       5105, 3810, 3676, 5106, 3811, 3677, 5107, 3812, 3678, 5108, 3813, 3679,
        5109, 3814, 3680}], 
      Line3DBox[{3682, 4643, 5009, 3681, 4644, 5010, 3683, 5110, 3815, 3684, 
       5111, 3816, 3685, 5112, 3817, 3686, 5113, 3881, 3818, 3928, 5114, 3882,
        3937, 3819, 3687, 5115, 3883, 4645, 5150, 3929, 3884, 4646, 5011, 
       3688, 2250, 3689, 5116, 3820, 3690, 5117, 3821, 3691, 5118, 3822, 3692,
        5119, 3823, 3693}], 
      Line3DBox[{3695, 4647, 5012, 3694, 4648, 5013, 3696, 4649, 5014, 3697, 
       5120, 3824, 3698, 5121, 3825, 3699, 5122, 3885, 3826, 3930, 5123, 3886,
        3827, 3700, 5124, 3887, 4650, 5151, 3931, 3888, 4651, 5015, 3701, 
       4652, 5016, 3702, 2263, 3703, 5125, 3828, 3704, 5126, 3829, 3705, 5127,
        3830, 3706}], 
      Line3DBox[{3708, 4653, 5017, 3707, 4654, 5018, 3709, 4655, 5019, 3710, 
       4656, 5020, 3711, 5128, 3831, 3712, 5129, 3889, 3890, 3713, 5152, 3891,
        3892, 3714, 5130, 3893, 3894, 5021, 3715, 3895, 3896, 5022, 3716, 
       4657, 5023, 3717, 4658, 5024, 3718, 2276, 3719, 5131, 3832, 3720, 5132,
        3833, 3721}], 
      Line3DBox[{3723, 4659, 5025, 3722, 4660, 5026, 3724, 4661, 5027, 3725, 
       4662, 5028, 3726, 4663, 5029, 3727, 5133, 3897, 3898, 3728, 5153, 3899,
        3900, 3729, 5134, 3901, 3902, 5030, 3730, 3903, 3904, 5031, 3731, 
       4664, 5032, 3732, 4665, 5033, 3733, 4666, 5034, 3734, 2289, 3735, 5135,
        3834, 3736}], 
      Line3DBox[{3750, 3914, 2397, 3749, 5044, 4674, 3748, 5043, 4673, 3747, 
       5042, 4672, 3746, 5041, 4671, 3745, 4689, 5148, 3913, 3744, 5040, 3912,
        3911, 5136, 3743, 3910, 3909, 5154, 3742, 3908, 5147, 4688, 3741, 
       5039, 4670, 3740, 5038, 4669, 3739, 5037, 4668, 3738, 5036, 4667, 3737,
        5035, 3906, 3905, 3907}], 
      Line3DBox[{4016, 4314, 2714, 4015, 5249, 4218, 4017, 5250, 4219, 4018, 
       5251, 4220, 4019, 5252, 4221, 4020, 5253, 4222, 4021, 5254, 4223, 4022,
        5255, 4696, 5174, 4023, 5256, 4224, 4024, 5257, 4225, 4025, 5258, 
       4226, 4026, 5259, 4227, 4027, 5260, 4228, 4028, 4765, 5341, 4229, 
       4315}], Line3DBox[{4030, 4316, 4494, 4697, 5175, 4029, 2729, 4031, 
       5261, 4230, 4032, 5262, 4231, 4033, 5263, 4232, 4034, 5264, 4233, 4035,
        5265, 4234, 4036, 5266, 4698, 5176, 4037, 4699, 5177, 4038, 5267, 
       4235, 4039, 5268, 4236, 4040, 5269, 4237, 4041, 4766, 5342, 4317, 4238,
        4042, 5270, 4318, 4384, 4239, 4383}], 
      Line3DBox[{4051, 4246, 4319, 5276, 4440, 4245, 4388, 4302, 5275, 4442, 
       4441, 4466, 4465, 4387, 5373, 4767, 4500, 4499, 4244, 5343, 4326, 4325,
        4050, 5180, 4702, 4049, 5179, 4701, 4048, 5178, 4700, 5274, 4047, 
       4243, 5273, 4046, 4242, 5272, 4045, 4241, 5271, 4044, 4240, 5372, 4497,
        4496, 4043, 2743, 4324, 4323, 4463, 4782, 5363, 4464, 4386, 4321, 
       4453, 4431, 5357, 4433, 4432, 4385, 4301, 4495, 4425, 4462}], 
      Line3DBox[CompressedData["
1:eJwVzDsvA2AUxvHTtBKNQYkvYJE0IiISo9tkJiwaoks7sRr4EhJ7JSbiw1BE
3S81aKTa1CUkxa/Dk/95/ue872B+Y349ERFL8twbkeqLmJCkvA1EVLmc+TwT
kcAzbPBPfEa/N+/3Rzzqe1jVx/k/dw/ctnmW+9XHzG0sdt7ZHbmfsfvhRrlv
vONr3Jz+pY/gJ9a5W7t38zDXwhfuwB83fFPP8g1s8qvma34L69wOFnoiSh3K
ld0mlrz/cD9kfnW3i5d201zavCjdsiYVfoo/dbegl3EZL/hD/0zanXA1OZYV
uy75B1Q+PII=
       "]], Line3DBox[CompressedData["
1:eJwVzckugwEYheFjQ6KoVg1bV1HjCjvdWLCSSC+AO7CmicTWkIgabomGDYl5
HlKWHos33znv+YfR+trCakeSGu6KyUYpaWATTWQwueU75Sq6MFNJ7rkduRuH
aHPNcrIuP9jq7gHO+pMt99m+a5+XH+3L7p5+wS/K55574rcLyZI+9P+O/mMv
yGPowQv3y/XK4+jDrP7KD8srGMEc98a1fPdS3vevd71om8ANd8R9cCfulT7J
l/DJnXLX3JRexhd3rA/I06jgm/sDkM8v2w==
       "]], Line3DBox[CompressedData["
1:eJwVzklOgkEQhuH6lSWJSsBEd15EBY1TIgtvIOLCIXAEwGGlJ3BgI+POxCOZ
qGsTBQXFx8Wbeuurru5eKlX3KklEFPE5E7GfidjIRnzwEt/kA96ei+gglYvo
qz0M5VfqNRJ5S33Al7xr99nusj6Hb9mNOpE9ma3wOhqoYWQ+n46447dYRRFn
2MXY/M3uEb/HMfIo4xwHeDf/ce6EN3GKAi5w+f8v80dv/zqzoF/Di6wnm8gW
9et4lfVlMetedUuf8DLf5lP8kO/waf4H4HgwCQ==
       "]], 
      Line3DBox[{4103, 5285, 4252, 4101, 5286, 4253, 4105, 5287, 4254, 4107, 
       5288, 4255, 4109, 5289, 4256, 4111, 4789, 5379, 4257, 4523, 4790, 5381,
        4258, 4114, 5290, 2787, 4116, 5291, 4259, 4118, 5292, 4260, 4120, 
       5293, 4261, 4122, 5294, 4262, 4124, 5295, 4263, 4126, 5296, 4264, 
       4128}], Line3DBox[{4127, 5206, 4720, 4125, 5205, 4719, 4123, 5204, 
       4718, 4121, 5203, 4717, 4119, 5202, 4716, 4117, 5201, 4715, 4115, 5200,
        2786, 4113, 4522, 4526, 4527, 5382, 4791, 4112, 4524, 4525, 4519, 
       5378, 4788, 4110, 5199, 4714, 4108, 5198, 4713, 4106, 5197, 4712, 4104,
        5196, 4711, 4100, 5195, 4710, 4102}], 
      Line3DBox[{4130, 4721, 5207, 4129, 5297, 4265, 4131, 5298, 4266, 4132, 
       5299, 4267, 4133, 5300, 4268, 4134, 5301, 4269, 4135, 5302, 4270, 4136,
        5303, 4722, 5208, 4137, 2803, 4138, 5304, 4271, 4139, 5305, 4272, 
       4140, 5306, 4273, 4141, 5307, 4274, 4142, 5308, 4275, 4143}], 
      Line3DBox[{4145, 4723, 5209, 4144, 4724, 5210, 4146, 5309, 4276, 4147, 
       5310, 4277, 4148, 5311, 4278, 4149, 5312, 4279, 4150, 5313, 4280, 4151,
        5314, 4725, 5211, 4152, 4726, 5212, 4153, 2819, 4154, 5315, 4281, 
       4155, 5316, 4282, 4156, 5317, 4283, 4157, 5318, 4284, 4158}], 
      Line3DBox[{4160, 4727, 5213, 4159, 4728, 5214, 4161, 4729, 5215, 4162, 
       5319, 4285, 4163, 5320, 4286, 4164, 5321, 4287, 4165, 5322, 4288, 4166,
        5323, 4730, 5216, 4167, 4731, 5217, 4168, 4732, 5218, 4169, 2835, 
       4170, 5324, 4289, 4171, 5325, 4290, 4172, 5326, 4291, 4173}], 
      Line3DBox[{4175, 4733, 5219, 4174, 4734, 5220, 4176, 4735, 5221, 4177, 
       4736, 5222, 4178, 5327, 4292, 4179, 5328, 4293, 4180, 5329, 4294, 4181,
        5330, 4737, 5223, 4182, 4738, 5224, 4183, 4739, 5225, 4184, 4740, 
       5226, 4185, 2851, 4186, 5331, 4295, 4187, 5332, 4296, 4188}], 
      Line3DBox[{4190, 4741, 5227, 4189, 4742, 5228, 4191, 4743, 5229, 4192, 
       4744, 5230, 4193, 4745, 5231, 4194, 5333, 4297, 4195, 5334, 4298, 4196,
        5335, 4746, 5232, 4197, 4747, 5233, 4198, 4748, 5234, 4199, 4749, 
       5235, 4200, 4750, 5236, 4201, 2867, 4202, 5336, 4299, 4203}], 
      Line3DBox[{4217, 4382, 2971, 4216, 5248, 4761, 4215, 5247, 4760, 4214, 
       5246, 4759, 4213, 5245, 4758, 4212, 5244, 4757, 4211, 5243, 4756, 5338,
        4210, 4300, 5337, 4209, 5242, 4755, 4208, 5241, 4754, 4207, 5240, 
       4753, 4206, 5239, 4752, 4205, 5238, 4751, 4204, 5237, 4380, 4379, 
       4381}], Line3DBox[CompressedData["
1:eJwVzj0rxXEYxvGLkcFD3oBBJJ0kRiOKQZ3sZLAdBk9h5x04B3lelXgPZgYP
qyxIUqKE5PMfrq7v/b1/df/ap+fKs3VJxqW/JdlpTgZ0vRy3JXdNyTYX85M+
4ubxFn6UQ/OI+aIh6dNX3K+M4Re7k9akF/9wNV2VP36KL+Ev/taNQW6S6+E+
uQPzDV/D3dy73ueuuSru4t70HreC12RVOuWV3+U38ZIsF64x6Sj+ZDejh2Wj
+Jd35+5O4Eu7IX1m/ubXcVke+Io+5T/4BfzM3csoXpR/qh01Gw==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1412, 1602, 4792, 1413, 1615, 1439, 4861, 1627, 1451, 4866, 
       1638, 1463, 4869, 1648, 1474, 4875, 1658, 1484, 4882, 1667, 1497, 1679,
        4820, 1510, 1691, 4831, 1523, 4894, 1703, 1536, 4896, 1715, 1549, 
       4900, 1727, 1563, 4906, 1739, 1577, 4913, 1751, 1591}], 
      Line3DBox[{1414, 1603, 4793, 1415, 1616, 4803, 1440, 1628, 1452, 4867, 
       1639, 1464, 4870, 1649, 1475, 4876, 1659, 1485, 4883, 1668, 1498, 1680,
        4821, 1511, 1692, 4832, 1524, 1704, 4840, 1537, 4897, 1716, 1550, 
       4901, 1728, 1564, 4907, 1740, 1578, 4914, 1752, 1592}], 
      Line3DBox[{1416, 1604, 4794, 1417, 1617, 4804, 1441, 1629, 4811, 1453, 
       1640, 1465, 4871, 1650, 1476, 4877, 1660, 1486, 4884, 1669, 1499, 1681,
        4822, 1512, 1693, 4833, 1525, 1705, 4841, 1538, 1717, 4847, 1551, 
       4902, 1729, 1565, 4908, 1741, 1579, 4915, 1753, 1593}], 
      Line3DBox[{1418, 1605, 4795, 1419, 1618, 4805, 1442, 1630, 4812, 1454, 
       1641, 4815, 1466, 1651, 1477, 4878, 1661, 1487, 4885, 1670, 1500, 1682,
        4823, 1513, 1694, 4834, 1526, 1706, 4842, 1539, 1718, 4848, 1552, 
       1730, 4852, 1566, 4909, 1742, 1580, 4916, 1754, 1594}], 
      Line3DBox[{1420, 1606, 4796, 1421, 1619, 4806, 1443, 1631, 4813, 1455, 
       1642, 4816, 1467, 1652, 4818, 1478, 1815, 1816, 1488, 4886, 1821, 1822,
        1501, 1826, 1827, 4824, 1514, 1832, 1833, 1527, 1838, 4937, 1839, 
       1540, 1844, 4940, 1845, 1553, 1850, 4943, 1851, 1567, 1856, 4946, 1857,
        1581, 4917, 1863, 1864, 1867}], 
      Line3DBox[{1422, 1607, 4797, 1423, 1620, 4807, 1444, 1632, 4814, 1456, 
       1643, 4817, 1468, 1800, 4933, 1801, 1802, 1766, 4924, 1817, 1767, 1898,
        1770, 1823, 1771, 1899, 1828, 1882, 1829, 1900, 1834, 1884, 4952, 
       1835, 1901, 1840, 1886, 4953, 1841, 1902, 1846, 1888, 4954, 1847, 1554,
        1852, 4944, 1890, 1853, 1568, 1858, 4947, 1892, 1859, 1582, 1865, 
       4949, 1894, 1866, 1868}], 
      Line3DBox[{8, 3133, 23, 3147, 38, 3161, 53, 3173, 68, 3188, 83, 3203, 
       271, 98, 3218, 378, 113, 3232, 128, 3245, 143, 3258, 158, 3271, 173, 
       3285, 188, 3300, 203, 3314, 218}], 
      Line3DBox[{1424, 4856, 1608, 1425, 4858, 1621, 1445, 4862, 1633, 1457, 
       1789, 4929, 1644, 1469, 1790, 4934, 1803, 1653, 1479, 1768, 4963, 1930,
        1662, 1489, 1824, 1825, 1671, 1502, 1830, 1883, 1683, 1515, 1836, 
       1885, 4936, 1695, 1528, 1842, 1887, 4938, 1707, 1541, 1848, 1889, 4941,
        1719, 1555, 1854, 4955, 1891, 1731, 1569, 1860, 4956, 1893, 1743, 
       1583, 1869, 4957, 1895, 1755, 1595}], 
      Line3DBox[{1426, 1609, 4798, 1427, 4859, 1622, 1446, 4863, 1634, 1458, 
       1791, 4962, 1929, 1645, 1470, 1914, 1915, 4961, 1804, 1916, 1654, 1480,
        1805, 1913, 1922, 1663, 1490, 4960, 1924, 1925, 1923, 1672, 1503, 
       1831, 1684, 4825, 1516, 1837, 1696, 1529, 1843, 4939, 1708, 1542, 1849,
        4942, 1720, 1556, 1855, 4945, 1732, 1570, 1861, 4948, 1744, 1584, 
       4918, 1870, 1756, 1596}], 
      Line3DBox[{1428, 1610, 4799, 1429, 1623, 4808, 1447, 4864, 1635, 1459, 
       1792, 4930, 1793, 1904, 1905, 1921, 1920, 1794, 1919, 1655, 1481, 4879,
        1769, 1818, 1664, 1491, 4887, 1819, 1673, 1504, 1685, 4826, 1517, 
       1697, 4835, 1530, 1709, 1543, 4898, 1721, 1557, 4903, 1733, 1571, 4910,
        1745, 1585, 4919, 1757, 1597}], 
      Line3DBox[{1430, 1611, 4800, 1431, 1624, 4809, 1448, 1782, 1926, 1636, 
       4926, 1460, 1903, 1763, 1896, 1646, 1471, 4872, 1795, 1656, 1482, 4880,
        1806, 1665, 1492, 4888, 1820, 1674, 1505, 1686, 4827, 1518, 1698, 
       4836, 1531, 1710, 4843, 1544, 1722, 1558, 4904, 1734, 1572, 4911, 1746,
        1586, 4920, 1758, 1598}], 
      Line3DBox[{1432, 1612, 4801, 1433, 1625, 4810, 1449, 1783, 1927, 1784, 
       1928, 1876, 1917, 1785, 4927, 1897, 1786, 1472, 4873, 1807, 1808, 1879,
        4950, 1809, 1810, 1493, 4889, 1675, 1506, 1687, 4828, 1519, 1699, 
       4837, 1532, 1711, 4844, 1545, 1723, 4849, 1559, 1735, 1573, 4912, 1747,
        1587, 4921, 1759, 1599}], 
      Line3DBox[{1434, 1613, 4802, 1435, 1775, 1776, 1777, 1761, 1907, 4959, 
       1762, 1908, 1877, 1787, 4928, 1918, 1788, 1910, 1764, 4923, 1911, 1765,
        1912, 1880, 4951, 1811, 1812, 1494, 4890, 1676, 1507, 1688, 4829, 
       1520, 1700, 4838, 1533, 1712, 4845, 1546, 1724, 4850, 1560, 1736, 4853,
        1574, 1748, 1588, 4922, 1760, 1600}], 
      Line3DBox[{1436, 1773, 1774, 1437, 1778, 4925, 1779, 1875, 1780, 1906, 
       4958, 1781, 1461, 1796, 4931, 1797, 1878, 1798, 4932, 1909, 1799, 1881,
        1813, 4935, 1814, 1495, 4891, 1677, 1508, 1689, 4830, 1521, 1701, 
       4839, 1534, 1713, 4846, 1547, 1725, 4851, 1561, 1737, 4854, 1575, 1749,
        4855, 1589, 1871, 1872, 1873}], 
      Line3DBox[{1590, 1750, 1862, 1576, 1738, 4905, 1562, 1726, 4899, 1548, 
       1714, 4895, 1535, 1702, 4893, 1522, 1690, 4892, 1509, 4819, 1678, 1496,
        1666, 4881, 1483, 1657, 4874, 1473, 1647, 4868, 1462, 1637, 4865, 
       1450, 1626, 4860, 1438, 1614, 4857, 1411, 1601, 1772, 1874}], 
      Line3DBox[{1932, 2135, 5045, 1933, 2149, 1961, 2313, 2453, 5160, 2454, 
       2164, 1976, 2430, 2431, 2419, 5165, 2471, 2179, 1991, 2304, 4976, 2422,
        2429, 2190, 2003, 2320, 4983, 2491, 2200, 2014, 4990, 2209, 2025, 
       4999, 2220, 5089, 2038, 2232, 5099, 2051, 5010, 2244, 2065, 5013, 2256,
        2079, 5018, 2268, 2094, 5026, 2280, 2109, 5036, 2292, 2124}], 
      Line3DBox[{1934, 2136, 5046, 1935, 2150, 5057, 1962, 2314, 2165, 1977, 
       2303, 2420, 5166, 2472, 2473, 1992, 2321, 4977, 2462, 2463, 2464, 2466,
        2465, 2496, 5163, 2322, 2441, 2513, 2514, 2015, 2517, 5173, 2512, 
       2516, 2210, 2026, 5000, 2221, 5090, 2039, 2233, 5100, 2052, 2245, 5110,
        2066, 5014, 2257, 2080, 5019, 2269, 2095, 5027, 2281, 2110, 5037, 
       2293, 2125}], 
      Line3DBox[{1936, 2137, 5047, 1937, 2151, 5058, 1963, 2488, 2166, 5168, 
       1978, 2315, 2456, 2458, 2459, 2461, 2460, 5162, 2316, 2439, 2467, 2468,
        2469, 2434, 2479, 5156, 2307, 2423, 2494, 2495, 2016, 2503, 5171, 
       2477, 2501, 2211, 2027, 5001, 2222, 5091, 2040, 2234, 5101, 2053, 2246,
        5111, 2067, 2258, 5120, 2081, 5020, 2270, 2096, 5028, 2282, 2111, 
       5038, 2294, 2126}], 
      Line3DBox[{1938, 2138, 5048, 1939, 2152, 5059, 1964, 2167, 5068, 1979, 
       2317, 2457, 5076, 2318, 2319, 2478, 2305, 2440, 2306, 2437, 2445, 5138,
        2323, 2424, 2324, 2401, 5139, 2325, 2502, 2326, 2028, 5002, 2223, 
       5092, 2041, 2235, 5102, 2054, 2247, 5112, 2068, 2259, 5121, 2082, 2271,
        5128, 2097, 5029, 2283, 2112, 5039, 2295, 2127}], 
      Line3DBox[{1940, 2139, 5049, 1941, 2153, 5060, 1965, 2168, 5069, 1980, 
       2504, 5077, 2505, 2506, 2507, 2474, 5172, 2476, 2475, 2004, 2327, 2438,
        2328, 2449, 2402, 5169, 2492, 2497, 2329, 2511, 2330, 2515, 2510, 
       2509, 5140, 2337, 2338, 5141, 2042, 2345, 2346, 5146, 2055, 2353, 5113,
        2354, 2069, 2361, 5122, 2362, 2083, 2369, 5129, 2370, 2098, 2377, 
       5133, 2378, 2113, 5147, 2386, 2387, 2390}], 
      Line3DBox[{1942, 2140, 5050, 1943, 2154, 5061, 1966, 2169, 5070, 1981, 
       2180, 5078, 1993, 2191, 5083, 2005, 2331, 5164, 2470, 2332, 2403, 2333,
        2447, 2490, 2489, 2448, 5142, 2339, 2405, 2340, 5155, 2425, 2347, 
       2407, 5103, 2348, 2427, 2355, 2409, 5114, 2356, 2428, 2363, 2411, 5123,
        2364, 2084, 2371, 5152, 2413, 2372, 2099, 2379, 5153, 2415, 2380, 
       2114, 2388, 5154, 2417, 2389, 2391}], 
      Line3DBox[{1944, 2141, 5051, 1946, 2155, 5062, 1967, 2170, 5071, 1982, 
       2181, 5079, 1994, 2481, 5084, 2483, 2484, 2308, 5158, 2442, 2444, 2443,
        2404, 2334, 5159, 2446, 2336, 2029, 2341, 5093, 2343, 2426, 2349, 
       5104, 2351, 2056, 2357, 5115, 2359, 2070, 2365, 5124, 2367, 2085, 2373,
        5130, 2375, 2100, 2381, 5134, 2383, 2115, 2392, 5136, 2394, 2396}], 
      Line3DBox[{1948, 2143, 5052, 1949, 4967, 2157, 1969, 4969, 2172, 1984, 
       4972, 2183, 1996, 2508, 4979, 2193, 2007, 2480, 4984, 2202, 2018, 4992,
        2213, 2031, 5144, 2344, 2225, 5145, 2044, 2352, 2237, 2058, 2360, 
       5011, 2249, 2072, 2368, 5015, 2261, 2087, 2376, 5022, 2273, 2102, 2384,
        5031, 2285, 2117, 5148, 2395, 2297, 2129}], 
      Line3DBox[{1950, 2144, 5053, 1951, 2158, 5063, 1970, 4970, 2173, 1985, 
       4973, 2184, 1997, 4980, 2194, 2008, 4985, 2203, 2019, 4993, 2214, 2032,
        5003, 2226, 5094, 2045, 2238, 5105, 2059, 2250, 2073, 5016, 2262, 
       2088, 5023, 2274, 2103, 5032, 2286, 2118, 5041, 2298, 2130}], 
      Line3DBox[{1952, 2145, 5054, 1953, 2159, 5064, 1971, 2174, 5072, 1986, 
       4974, 2185, 1998, 4981, 2195, 2009, 4986, 2204, 2020, 4994, 2215, 2033,
        5004, 2227, 5095, 2046, 2239, 5106, 2060, 2251, 5116, 2074, 2263, 
       2089, 5024, 2275, 2104, 5033, 2287, 2119, 5042, 2299, 2131}], 
      Line3DBox[{1954, 2146, 5055, 1955, 2160, 5065, 1972, 2175, 5073, 1987, 
       2186, 5080, 1999, 4982, 2196, 2010, 4987, 2205, 2021, 4995, 2216, 2034,
        5005, 2228, 5096, 2047, 2240, 5107, 2061, 2252, 5117, 2075, 2264, 
       5125, 2090, 2276, 2105, 5034, 2288, 2120, 5043, 2300, 2132}], 
      Line3DBox[{1956, 2147, 5056, 1957, 2161, 5066, 1973, 2176, 5074, 1988, 
       2187, 5081, 2000, 2197, 5085, 2011, 4988, 2206, 2022, 4996, 2217, 2035,
        5006, 2229, 5097, 2048, 2241, 5108, 2062, 2253, 5118, 2076, 2265, 
       5126, 2091, 2277, 5131, 2106, 2289, 2121, 5044, 2301, 2133}], 
      Line3DBox[{1958, 2310, 2311, 5137, 1959, 2162, 5067, 1974, 2177, 5075, 
       1989, 2188, 5082, 2001, 2198, 5086, 2012, 2207, 5087, 2023, 4997, 2218,
        2036, 5007, 2230, 5098, 2049, 2242, 5109, 2063, 2254, 5119, 2077, 
       2266, 5127, 2092, 2278, 5132, 2107, 2290, 5135, 2122, 2397, 2398, 
       2399}], Line3DBox[{2123, 2291, 5035, 2385, 2108, 2279, 5025, 2093, 
       2267, 5017, 2078, 2255, 5012, 2064, 2243, 5009, 2050, 2231, 5008, 2037,
        5088, 2219, 4998, 2024, 2208, 4989, 2013, 2199, 2498, 2500, 5170, 
       2499, 2002, 2189, 2493, 2421, 4975, 2433, 2432, 1990, 2178, 2455, 5161,
        2450, 2452, 2451, 1975, 2163, 5157, 2436, 2435, 2302, 1960, 2148, 
       4965, 2312, 1931, 2134, 2309, 2400}], 
      Line3DBox[{2128, 2296, 2418, 5040, 2393, 2116, 2284, 2416, 5030, 2382, 
       2101, 2272, 2414, 5021, 2374, 2086, 2260, 5151, 2412, 2366, 2071, 2248,
        5150, 2410, 2358, 2057, 2236, 5149, 2408, 2350, 2043, 2224, 2406, 
       2342, 5143, 2030, 2212, 4991, 2335, 2017, 2201, 2485, 2487, 5167, 2486,
        2006, 2192, 4978, 2482, 1995, 2182, 4971, 1983, 2171, 4968, 1968, 
       2156, 4966, 1947, 2142, 4964, 1945}], 
      Line3DBox[{2519, 2715, 5249, 2520, 2729, 2548, 2906, 3047, 5363, 3048, 
       2742, 2561, 3009, 3010, 2990, 5370, 3077, 2754, 2574, 2888, 5183, 2995,
        3003, 2759, 2581, 2943, 5187, 3089, 2765, 2587, 5191, 2771, 2598, 
       5196, 2782, 5286, 2611, 2795, 5297, 2626, 5210, 2810, 2641, 5214, 2825,
        2656, 5220, 2840, 2671, 5228, 2855, 2686, 5238, 2870, 2701}], 
      Line3DBox[{2521, 2716, 5250, 2522, 2730, 5261, 2549, 2907, 2743, 2562, 
       2886, 2991, 5371, 3078, 3079, 2575, 2944, 5184, 3061, 3062, 3063, 3065,
        3064, 3105, 5366, 2945, 3029, 3117, 3118, 2588, 3120, 5380, 3113, 
       3119, 2772, 2599, 5197, 2783, 5287, 2612, 2796, 5298, 2627, 2811, 5309,
        2642, 5215, 2826, 2657, 5221, 2841, 2672, 5229, 2856, 2687, 5239, 
       2871, 2702}], 
      Line3DBox[{2523, 2717, 5251, 2524, 2731, 5262, 2550, 3082, 2744, 5372, 
       2563, 2915, 3051, 3053, 3054, 3056, 3055, 5365, 2916, 3031, 3066, 3067,
        3068, 3015, 3081, 5356, 2891, 2998, 3101, 3102, 2589, 3112, 5377, 
       3080, 3110, 2773, 2600, 5198, 2784, 5288, 2613, 2797, 5299, 2628, 2812,
        5310, 2643, 2827, 5319, 2658, 5222, 2842, 2673, 5230, 2857, 2688, 
       5240, 2872, 2703}], 
      Line3DBox[{2525, 2718, 5252, 2526, 2732, 5263, 2551, 2745, 5271, 2564, 
       2917, 3052, 5277, 2918, 3087, 2978, 3040, 3083, 2919, 3104, 2920, 3103,
        3020, 3030, 5339, 2892, 2999, 2893, 2988, 5347, 2958, 3111, 2959, 
       2601, 5199, 2785, 5289, 2614, 2798, 5300, 2629, 2813, 5311, 2644, 2828,
        5320, 2659, 2843, 5327, 2674, 5231, 2858, 2689, 5241, 2873, 2704}], 
      Line3DBox[{2527, 2719, 5253, 2528, 2733, 5264, 2552, 2746, 5272, 2565, 
       2921, 3057, 5278, 2922, 2979, 3032, 2923, 5361, 3019, 2924, 3021, 2960,
        3000, 2961, 3041, 2989, 5375, 3091, 3106, 2962, 3090, 2963, 3116, 
       5378, 3114, 3115, 5379, 2615, 2799, 5301, 2630, 2814, 5312, 2645, 2829,
        5321, 2660, 2844, 5328, 2675, 2859, 5333, 2690, 5242, 2874, 2705}], 
      Line3DBox[{2529, 2720, 5254, 2530, 2734, 5265, 2553, 2747, 5273, 2566, 
       2925, 5279, 2926, 2980, 3005, 3006, 5353, 2996, 2927, 2983, 2946, 5367,
        3069, 3093, 3092, 3096, 3094, 3095, 3070, 2964, 3123, 5382, 3124, 
       3125, 3122, 3121, 5381, 2616, 2800, 5302, 2631, 2815, 5313, 2646, 2830,
        5322, 2661, 2845, 5329, 2676, 2860, 5334, 2691, 2875, 5337, 2706}], 
      Line3DBox[{2531, 2721, 5255, 2533, 2735, 5266, 2554, 2748, 5274, 2567, 
       2928, 5280, 2930, 2981, 2931, 5358, 3022, 2932, 2984, 2947, 5368, 3071,
        3098, 3097, 3099, 3042, 5352, 3043, 3002, 2965, 2602, 2786, 5290, 
       2617, 2801, 5303, 2632, 2816, 5314, 2647, 2831, 5323, 2662, 2846, 5330,
        2677, 2861, 5335, 2692, 2876, 5338, 2707}], 
      Line3DBox[{2535, 2723, 5256, 2536, 5177, 2737, 2556, 5179, 2750, 2569, 
       2933, 3088, 5374, 2756, 2577, 3034, 3035, 5185, 3033, 2761, 2583, 2966,
        5189, 3001, 3016, 2767, 2591, 5369, 3075, 3076, 3074, 2775, 2604, 
       5201, 2788, 5291, 2619, 2803, 2634, 5212, 2818, 2649, 5217, 2833, 2664,
        5224, 2848, 2679, 5233, 2863, 2694, 5244, 2878, 2709}], 
      Line3DBox[{2537, 2724, 5257, 2538, 2738, 5267, 2557, 5180, 2751, 2570, 
       2934, 2935, 5355, 3013, 3014, 3060, 3059, 2936, 5186, 3058, 2762, 2584,
        5340, 2894, 2967, 2768, 2592, 5350, 2968, 2776, 2605, 5202, 2789, 
       5292, 2620, 2804, 5304, 2635, 2819, 2650, 5218, 2834, 2665, 5225, 2849,
        2680, 5234, 2864, 2695, 5245, 2879, 2710}], 
      Line3DBox[{2539, 2725, 5258, 2540, 2739, 5268, 2558, 2908, 3084, 2752, 
       5343, 2571, 3004, 2887, 2992, 2757, 2578, 5348, 2937, 2763, 2585, 5349,
        2949, 2769, 2593, 5351, 2969, 2777, 2606, 5203, 2790, 5293, 2621, 
       2805, 5305, 2636, 2820, 5315, 2651, 2835, 2666, 5226, 2850, 2681, 5235,
        2865, 2696, 5246, 2880, 2711}], 
      Line3DBox[{2541, 2726, 5259, 2542, 2740, 5269, 2559, 2909, 3085, 2910, 
       5373, 3086, 2976, 3039, 2911, 2993, 5281, 2912, 2579, 5344, 2950, 2951,
        2985, 5345, 2952, 2953, 2594, 5192, 2778, 2607, 5204, 2791, 5294, 
       2622, 2806, 5306, 2637, 2821, 5316, 2652, 2836, 5324, 2667, 2851, 2682,
        5236, 2866, 2697, 5247, 2881, 2712}], 
      Line3DBox[{2543, 2727, 5260, 2544, 2899, 2900, 5342, 2901, 2884, 3024, 
       5275, 2885, 3025, 2977, 2913, 3049, 5282, 2914, 2938, 2889, 5360, 3027,
        2890, 3028, 2986, 5346, 2954, 2955, 2595, 5193, 2779, 2608, 5205, 
       2792, 5295, 2623, 2807, 5307, 2638, 2822, 5317, 2653, 2837, 5325, 2668,
        2852, 5331, 2683, 2867, 2698, 5248, 2882, 2713}], 
      Line3DBox[{2545, 2896, 2897, 5341, 2546, 2902, 5270, 2903, 2975, 2904, 
       3023, 5276, 2905, 2572, 2939, 5283, 2940, 2982, 2941, 5359, 3026, 2942,
        2987, 2956, 5284, 2957, 2596, 5194, 2780, 2609, 5206, 2793, 5296, 
       2624, 2808, 5308, 2639, 2823, 5318, 2654, 2838, 5326, 2669, 2853, 5332,
        2684, 2868, 5336, 2699, 2971, 2972, 2973}], 
      Line3DBox[{2700, 2869, 5237, 2970, 2685, 2854, 5227, 2670, 2839, 5219, 
       2655, 2824, 5213, 2640, 2809, 5209, 2625, 2794, 5207, 2610, 5285, 2781,
        5195, 2597, 2770, 5190, 2586, 2764, 3107, 3109, 5376, 3108, 2580, 
       2758, 3100, 2994, 5182, 3012, 3011, 2573, 2753, 3050, 5364, 3044, 3046,
        3045, 2560, 2741, 5357, 3018, 3017, 2883, 2547, 2728, 5175, 2898, 
       2518, 2714, 2895, 2974}], 
      Line3DBox[{2708, 2877, 5243, 2693, 2862, 5232, 2678, 2847, 5223, 2663, 
       2832, 5216, 2648, 2817, 5211, 2633, 2802, 5208, 2618, 2787, 5200, 2603,
        2774, 3036, 3038, 5362, 3037, 2590, 2766, 3073, 3072, 5188, 2948, 
       2582, 2760, 2997, 3008, 5354, 3007, 2576, 2755, 5181, 2929, 2568, 2749,
        5178, 2555, 2736, 5176, 2534, 2722, 5174, 
       2532}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
   VertexNormals->CompressedData["
1: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
dFQFJ8Cri4vrmecmcH7YxFjOwEuH8gtlHGOWfaGSz/mJig8vVi2D/nW3Ylrk
FuCsGz8mFl+P33ILjLwZmsTwfaecq3jMrov7y180v3rF/kHX+x92N6fdNyHr
Q9h1Wr2op+YHon0E2vJn1ffkVQ3Mw67LhXwN27H43/Xn18ndL5o0Fh/voeff
fT2KhoNXsvsULe/lYHz4J6ttr23yeqydWzjdnC9nqWPX1Z/Nla2iek8F+5/b
hqLr4cABiFhn5jei72xXPdcU1mlLDvGVQIVKudgI88ReNx6IuALNe03rb9Dd
7aHVT4j0wI7qz71FbyF6XqLyFrE34p8HF2HXU3/pFWk93n5GuSVZj13fST2W
lrtIxMBDR4Ox67OHnXmz9yDx/LDm6BVLzgW4H2VeVVbEc5WO2zcUyfv+/DT7
/ozW0147Q+CDjFvgXCjQD04xki4rhXeOF79Pe+MLdDdcrXfYj7+/oRkpIVvq
mvWNu1sdVp6EQPrh9qzU0SRYuuQgDxof0uPjgcl7lhP5q/S2djI5kzM5k/cV
TtGjafVnS7Iel0yjvxGVZ7T+nnpeRjmRHLpKPu3lFL9qCu+r8uwpTtYfAK3+
QFmvUNYpb9P89+1+FweXT++XEldeDDzEHnDNuxZFWJ7CKX4HlPVR3pMBudrX
osFQeZOYdS6l5L+dafVnQOAnDAj8hNtdnrx+AbTrF4ofN8V/m558iDiRnCl2
ZFr7ckn5bJQ0KhY4jlv/qCUuB5fkXtudGVHYeP7BIipalIKvByh2MYq/0VSy
nYJyfQfZXiH3618OJP+S/47D6qGsv2nX0aZHDvNY7igFw9auUe1M3Bjadv5+
3z/X/7RyoHB0E/skKz9/sM/A+mB74py0lw/x43+petYGk1ucqhG3SD1x/cNo
+qWKpl8Ybc+ZL090Ik59A5vVDMzVq/r+uTYiHrPy28RvhkaY3C76ch9zZe5r
9Dgvj5FPGmJ4C+sXo8zV9QOY/UKXH2fjS0atVmByS0PyPrZlx946ephXmaEm
Vl5DYohhGVPOdHnTRUUUNRyOyQ3xCW/qyv1QHwTxQVGA1d/693+vX7YNr2gW
Q6U3xuPz2zxfP0S++T8ACzC58f76D/57cmOUm6Y2D1/0Ky5n6aY25Vy3pbH5
epI4xssauiW/CZMzOZP3Xk72w8OuU/zxels76fG+bu9i8u7l4xYLyQ/Rxv1W
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
Q8Rl7hyxPVidjV0Pzf4S+GZmfq/rLyLu6J0QV+CXA0Q4zOunl2XBVZae06Q8
E7Dy216/0d6wJAMmW13rd6C2EPQzUx7lsCgWbBs4akyZky34KDF0rqRhKSEn
ui+992ixk52ia0SeGG37ifQiovK9RV8i4vTGDzkPE6TJ3/fH96i756VVUww3
H3uCy+/yc/ksxMW/2993ovLT1B+pew7D7Zc1D69s2f4lkbA8vfF5/AufwrGt
PoDdc4n7aK/eN056mtPud3R1/WvI+vy2Turzp7nX7RvqRIJbdrpmsFT6giOt
ejB2XYPGrt5V7SfiieT3NPH3vBvI4rIBnCuH1P4hz59kfVixi/XhjnKi/a+e
as/f5rB1XYpd39vO9enS1nkdptDM54xyovqJ3hclMk8l5xUir2fweZJmXdNe
OXSU067vprLafg0eht+f4+HZUoU39M9nMcqJ9rkYrYfIzkDJz1nh0b75aj25
Pc872Z7/GifaD+2u+1oVPz5+d0A02DYkxsagyhEGJsfsHh9SCqIljPeZHsDn
b6OtCaE1r4sJeXe3k8mZnMmZvLfyJ+S8bym/531DCPIeEtZDVF6N9/Y4x1d5
QHaF8amnxjk9/rxEnKw/AAEa/cFbRZlnICgGD3jkdlnxpDJcP1kvhRTSXr20
q/jqekNHTs8sUMSSYaQ3D/8uU/I5ptH0uyw5b/Ww3/NWIyW8+frJ60mAVVFx
a7XzF4znF3IqpRwggYvGN7mCTfBzZGS9C9DqXecyHjm9iPAE2kGTd1+JxNfv
U25xsHgrRYGje+5wTisrBZIVrmYKTW8xuUly+2uUUvk7jf+1Lvv+p92JTWqI
sUgRqJK14fwSg+uv/mS74wIae+Nw1/nTBDJygND9JcMalPB13EKyHWfs7/m1
kYdfPUwC4uOB3CzdmetdcP0wyhTZJqcRBaT7vfoQXYL37wauJawff0YDWf38
g1/dGe930thIJcOUB5gcDlcYJU1sIgE94SrSIIM7GN8gXtDU4s8W5Sj/5qKx
B8b7+wn4TaOyp80qH2zn9sL/D7lpmuwwnBgeC47kmM3jOIq3c/LEWA0vb3cQ
Fhg82yyt79hbHveTKY1PO4HJ4bapwJhMlATMBm95nG54DOM81eK//JZ7qp3/
NR4oPDZC20oXk797wzqBlGb5k2wLRDSsrmDcctmbMzrMfsH42hzbFDRoISaf
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
dcQQ/UQqfsk6dZBlG3lwupo/C1AK3b4jBUYenZ4pp4nLk/b7eFXCtNLALx0e
WpMyce6hXCjOedVp6YA0sLMs5NDB5u/d25FOZWebv3dWZuKLzlF977q7/Uze
NzglLxGF0OYnYrR+lTAvdQvrXKhssGKvNZVfwZYH6RMUywogywVYttML/17b
W0qsuX09D76o2fPM8xVuZ5CxvH0ie3c6zLj2ca/d2SJw5Oitn8iwaKyddc7T
nW3jid/HrRvnh5wd8dH7hWLUnBY/B6GYWZbUfg5E7Wd5pzr79KwcmHnJQmZX
Yx5dfsB6jbvs11joVrrwaPrhUsL2Uzjrc5PNLf4VjfMEwnWb5Zyn5njrcb9M
7LnEUk3UZY79vfwslO98Ds33nYgfF3cOvLU3Du4dWG8TKlQKnriXrNqaHgFP
3Jfgnm0YDrfGPs5wm15KV26dbb++XtyXZBU97Pq7XaP84pl2oQ5zb0WntXsL
32PXny/gdpiZzLg8S12Ui+LOWGPXR2jLK/nU9/1+0eBKS5gMYoCI2mSXLfyp
MGlt4I3jH/D39CfvlbrMgFjoELpqqZpmKZjjWlIVJRoHRiqTnO02ukLFhx6W
q0eXgu0T397yjPYBFbNs4MsLzyFp36jEV85UccsXil1/fdERVgw1XaZZjnNT
+eIx71kdIK+5jXNDFc7Puxg5Lf3iDsu0HJX1qOJHjb1AGvTe4RmMFje9+LMW
5/0lU3LeG9yB6mUT89oTzypRPJWvSPwaVL6qGryV6v2i5W9sd+xdLZcD+Nee
1w/Z7QjXfdO0tv2cB3b1W/ZxZeB3ECUY/djCxgYmv3AdLyKJ+6ddOhXz+MEh
B/hML5bVkeq5YpLNP5ouegbnid09I1qH8wCJ8VBAzAVOW+fCPa+IKm/gQJO8
+zpWMMSCa+skqry9Wua3YWPjdeiY8ZlXrB3zw72Lo1gE0Yvw+Emh4DtU5Yk4
UT20/ED82LTlmfi8eMfPeMMT3yjC8irZqufzxPHvRkh+QP6J4HRwmU9V4vzR
LKBdf/1KrF4idFjzeGWcG/7dtOdP97Q8kAwr17nUVVGdX9bkGibMExkFo14/
ijmYXkqXy6qg6J08WyijuVhiRm3H398SUYkDSbX3gWbIoCrpdow3ynm79uZ3
IypPPjcNac9N05bfdW1Z1UP9HGBYXj0zRSwXjjgr8UD9fBS4etFw7ohDBeBh
jfGYC24ZcK3FNfbdI6Lo3pd87hPSnvecLZJz64RlNrx73W3DbT28PdvFPcsW
nXEB+mcXWVoWdlzO0+bZLDIvcwQOSfv3DSjvffNtEPmcP4VY0Jz3J8rXTDnP
RDnHROFPiqVmCOlmg9SVCbusH+PyzP8icGHk7AzIZSy/WwotpOWAljP6XCNk
nwxO13YG9uvfRpYV9z45MzmTMzmTM3nbnH/r7/l/EtmY51g7w8fNXZOzPRjP
fz14Xd7E2XJ9J396T3Edcjw4CgHkuHASi97eOTML13eGlP4YqdyF9pN/lUv7
nI8O8sXXMVdUR9yd8rLjcVEe2l20auSzgYHLlq070gvsGNMlT+uoCiLwoL93
m/57t4fs8EkxPIVd35IjeyaxufyspQ7jm9AZGLdl8an8l/2pbr+vE0P0cbvW
5kX2TfopJHB+9ZLLmegOjI/f2L+srXMl57IfaLymsmt5Vn882pvtWhICo5ac
1oKQe2zuzwZfEjBrGnO4lDMOeDXN6lc22RWuUntz7pNAKRBBb7NZXvICcK/E
Wb/LzyGSsvMLpx8JcNw1C6s+fxuU39sR7XvREUpvP8C2qwx/XiO/DXH2Bndg
Pf+2gvbYkR7fRQK+iV+DTrpHQqjtSJGlr6+nNPOmMyN+8XefEu7YS+aK0dYT
8Vs8Mpz/kJGR7P/6Pfj59erdgFU20GiUvPfSBLz+qUemZYxvug6bBPqNaY/9
526/fbcXohfhHl6zoBY7jwbLohFX/VLBqQn5m8HtJLh9sYu/xzH8uzZXlP26
Vu19sOaWyYA17ZCDsEmJqHmtLTg3RUZHoBN2le7i/CzbVKQV8TzpM195reqI
/wCT/xu8P03eefQv553vLJ/1K55IwR/zRk+1h1G++e4zhwj2DOw6v5LG3V28
xOuU5GRv4yUDvmPXPzqdCLfQ7vk89Tpke+mBvxT3ZvVct/5THOr+6PedKQXl
F6bgcUkjeDc6voijL59a6R+qut+j4PlGj41oKj4funpeXVR1PQw2pI0Qez2v
983nHeVE9u0TZL6fTj8KSMU/cbiCf0ckfGtDJtjQ/46YTX15Yc6VHPj6mLkh
+jqP0G681s3m3uDV4WADf2ZZ04IsuHj1m1yXK/nA42bWcO6aCGAn55UUKpsN
97LPWSOll0f3uTaS7cwjaOzMwxU+jndpyACmoZL+u3SJ7cbrlD6AeuGiPjvP
pKw8JPk+EX8+t+NGOmwHMrr9vku7eX4euer351IhP1cZ67E7u+7h45Ez+OIP
54wYUBNn6RnOHYVxY8GDHzRrmfpPd3Fy/EtIiXs5zUx5lMOiWHBy4KgxZU62
4J3E0LmShqVgDpmfJ3NXMqfU089YSycKiQAmh2sKA8dSxSm60spv0fBpz4/f
yD/yArIfcA/Laod/+5nW+QwuppnHclvj6MLJNHF0u0o+jHKifbS/3Z5J6o/U
PYfh39WBj65s2f4lsdvvu9L1plDI+j/n4a5a1xDpw0R6GpEeQu++vW1cEXHa
7zVR+b+ll35tjUsJB9LEpZScy1+h45wFQ9OULOpECgi/1x3VDxnlRPpkV9Xf
3ZxWnl1dvqs4kR8IbXmbD6LZ96v8seuDlg0a4Wve8/p8IoE/CaP1sGadn3xX
KBMekEiMUVBi3P/hA+fJQQpm+Ps0XerQ8x1z08Fi+Qf7k5Pek3+D4IU4d9bJ
G3C5vXwRNNdC4DO0fmca8e4iCfiQ459Srs+is46YTs5/QCHF5H48SI6PTOHZ
PRwnWUUs/tGzxPxO67Fd/VxE/kidbSeTMzmTI4g+7+1xjq/ywLIVxqeeGuf0
eHt6qp0LyfMWezvzYdFyhdY8FpBCijzazmeRaoqe+DAEPz94jIuHV5ev++0V
9Hi0zWp/y/hEoFYWWfWKoxv0W3JekfbO51PJ/cJB7pfh2zc8UHyQDLNzSpuQ
Uxlg/ZbKMSuccgnL57uJfPDclgy2OwYnWa3PAWm2e6pERLOAy1oOzUFv0uDT
JUn6j87mAzexWcVn5PD1HdnOBgj8cv/IZ8Ro+QB1CbcJ+4rA1++19UFX8e+l
1enJlW8rc0Bh1e3Bxmvw9QjX1D3HkbOZIBNRQVT4cf2Hd8/LkAM3M0C6Qb3g
AF+cH8145PQiwhNoB03efSWSvh6oSc5D3Z+ch3pQEaf6hbMh2PjUWHppQNEO
vB6+h5Omn86LA4PXqo+QGF4KBL793LnaFY/bHzbmk98cxWwgoqqmrC2WC3mn
7M6JaB7fGjo8UYkhqcDcM//aNgt/EL+vMbbKsgRI1o7kNxfG46vfOmHLre9X
ABrSD8qLNHT8fPRObd9XD+W/gx0fWMZbq+LjbUg05+nwFaGgED0ZKCxBIpQD
hU//5lcwdrMveBtRsPKDW8/r1bS8vx//S9WzNpj8v6kacYvUk4Ah5+ENgUON
MW7isWqjZgf8JQZK7rXdmRGF1VPFIipalFIKlqtvkppfYY3xmoefWC50g1+B
9pcnOhGnvgFZNQNz9Sq8H+MCnRPX2diBdyMcLzV1Q7x0Jv///N4DrfoUwz1Y
vyeIcy+pb2NcDXnOzN/dEb6Rwfzp1dk+Qq6e57Dy97e7oB5MOdPlQR/fZKGR
8zG5iWplFLQlZzPhLyY/DFWw8mwP/ATa8r+yQJAoFJ2DlZ/ZDP9lvzUivmzk
OhQ9PQiTQ8NT5Tb9AGsYzJ8ujuzOQNEFWPnVCJL3X5TzTZESFDUkYfm7EcOy
NuX8YPMMEmqP50nnkJ7xT/tVMsrV+ZvFpxKDyXOnY9v5zWUKGpvln4Dno7fv
XLzK3saF7i5z5hF1Fj9e0j1xPpn83+Bu5Dzg+/5yHvDKpcLno75HALNDfFMM
h5LAuONVm2WtCwHnl9TJCtHN7Rm+liOWN7Xb2zN0sZD8EG18HS9UsFZ15WfG
7Vfxq9nHeVkZYPMz3H1NNbD5vfuWp7pR2OAYxu94oGnFHXgfrx1qO//Upp2y
akYBdsDbYOClnD60zqqTnbski2qdMld12K91iun1lGeqVOuRfWbcZ/vSeoTR
dQHnp3HCNU5qWHkUWJfXNpe/b3605qIVnm/FfMMYgZQelIPeeZ4c1Gou1p6F
Ph6lbT1XXnmN0U8qPbxYsVUPd0CQcGp9e04X69tNNHopOx29tKu4/4R+zffF
9TTOspqKrrwv2Q8Eq5+evy6j/PzBA1Y1V1Kw+rfaLPP+rEYcb22aiqRSokw6
Vj7+zI2xn6/8vX1SRu293d0eWu5zd92Cr1sKwBbJuYNHp8SAsJsefMJTMyh+
O5+66r7kvLKgvflku7seJmfyruScNHqaMFlPu8zF6Z94Ho/zEeXgefZCdjHY
fjdg1EtXnM88MWFnQgL9uJFE+1/C5H2rwXT2H/fS5Hc+Tuc9+uJlvW3K4xAw
xI7jC7ovF5SJX1/3qAzXP4nmMfJ5B0B73oFrUgmnu3gueJmeNioXweVFNE8S
ySFawnif6YFkYLQ1IbSGKs4PkXw0+O98lEv7BhaUbR/TmFlCWJ5oH+phqtkO
PTQI+JwXnHsNzQabbr87FKxGv/2nyXJQ7eQ8r6oqeFJVUEu8xQpD/b3WIuC0
9VSImydctXQXp/xy+3Ru3d30gUst43sM8Nn6ftq9+1TxnAnmZyJOOf9NOffd
0fYweddwbpp5bAp5Hitx5zi7VToN4/xxBmlNhfg8Q7tvTuFE70VX6UW084B+
ODpjoow7KPsGK9dNiAGHD3OP47lNf1x9k3rHLgLzwes1lbzP1maDpfv9nCel
f4FjQmU8kCFFIH6Yr/ABXfz5V3hLND5UKAGmyf7WV67ifr3keE2ANl7TSNf5
0wQycsDk+0uGNSjh8n2n/5Jz0aEgcExCc0jgCeL38aNEwqSFxYWd1seI9POu
1vdW2tzSe5NQBJL111jsNsblFk+OMzKZJv4Irb2lo/ftbm4v25onXVr99zzp
ROOZ6Lna+7xdtX4hWjeR/VExPrud/ie09Y+a62w8+Xgu4fh5di5YoSVO/bzU
iBkuVPHryX7R4G/7Re+8JgT4qvLB3aoTOj/74f61SmT+gIYTjdsh5OeJJz9f
R9vDXNcwxumNW9ryROMzZwaHlteEREj+BRozW35xP6ikWTYPiuanAt4LJc/f
LC4GJ/bX+7iPT4flKbWvKs/EAcElN1fknyqgO064XjjaZZ5NAAom8yM1blPp
n63nNQDteQ0i3lm50ePyK+cvKnWOBONe31uSiZDo+nF19r4veE7MiVxViNX/
InTlc9619N+j7npfaMcVPf/8ruLjZhgnO+RkwiS2FdFPHmSCV9e0wmVKM8DU
/KjBEyPCgFfu8CcXSHlgk+L82qH1WYScUuNt8nx9n+b8ANH47K7novy/Ew4/
5lxXDwd7JtznSppCf/xcX3XwRXBGGPguoZfgOZPx8TZnpuPPiQN9sX7UL/fI
EXxPXM9su4feRc8Cukz/6ar65auNDw1EKrxLYNGv9do+9pcubAgrdj0NdexT
+6ervhZrIwhVfuFaVLMj7R/gbfo9HdXG6kHGSSB5XSiHTFbhcwlUeeTvAlVm
Hvl28A0TogUaUFFMboc4kciW/r12VOnRKws8zv8TkSG74wcUgiEbeUSbDBdj
vJB9Z3pb46H/3PAh7on494L9ko5ivzbO6QsXyxs1oYuw8kPZfTJ68n1hlT5j
TJ3vWJqZ75jJmbzP8dfzVI1WsjlA82Ev1lLnIxB/IDyNJ8wdjh+6mUeHKh/B
GIJ8BP38jq9dcdAB5u+9NMCJqh6vTeUCHgufwW/THVnEqOL/p5XpKucudYFl
BhcEF1PF/19Cjv//hSb+v/CWytAbhbbQLEVxi3An4q1N+bD70RvpeCif+Zwn
JgJfvwi452/1y3aD9nMK7F9l06/ffvqrGTsq7wG9YydIx9oRL46Ia2asiXuh
lA3e3ZTMGuKC2yVSD68IVh2TAaW01esGclKd1wUz2ZXGZACvnJ3ThnF2fD01
khz/3IEZ/5zJmRyIhs7iy+aOw65vz10mJLSEab/6V7iU0UFtcc6yP871L6KJ
JyPcxXEyDaeT1NfAYjByrc0rTe04aMd9eS+Yid9PRTjVZoLBC/gmrSH9Wy/I
I8/krf8EK76baIV7gjdJZXbXqc6NNki65f6U/g6kdL8bfd6H6w+fpKr3c4qH
ggGf/Pg3U52j1CKfoxxAc46yve2ZdVQ0L8jq6B/2FnaCc4706ic6P9je9jB5
K7+3/BqKGrJg8ke0XHvUfmX9sxxF05Kxcxm/3DCb23MsRaGZ98PbqWL8i0sj
6WnU54Oke/h8kP/yFj8ON6z9Wtmtfh1jp5U2t78Y47/cPJv5uYEt5048sXMl
LdaZvmR/sB7N2DkaqYx/+xzNy8/DwndYZ4H5amfS1kn1nB8pPd6Q+Sv+EjjU
zvhLunIbPY/KZYCKKE53nly8fBjZ3+MCjd+XXY7t1FWRceBsQonjy5H0vxe0
8Qc6+lx9hpP9cpZR4ivRnMevJp/HJ6rnBp3zHUT3vabvsnMQEuCNWHTPPBOA
hIgOQRK8m2Dn3uu7U37WcyAccD0q+ls9FVfMdw5GhGFutWgVNW/MVOAYjAjB
kzXob1yad6JVCboe/mhCxP6leaavcssxJXUougQbt/UomsTsFyZn8r/DpxpZ
1jWh5d5sPq371zdb97MxfYyyr93T7WwvrwxX8BzUPO9TiAvN/N/eei7u2VIf
h8pg9ay1YEV6Ug69rT1M3jbXrz31YTCCn+OzqIK/4i38UFohw4nwYzyz4XSb
5wrP+2xjHYyMwsqvaRrb1JX9zmh7mJzJu5N/mzpRpcLPE54cFrHpbSQJDLl2
29go3sdbbmnlp20sJXDXhlnnDQcmAbNdYOFevWioHXBEQCulBG5A82z1U8Kx
esRCPr/rH/EMrh6kaZBKta+ad3PpiUklBfD1cXfdcF/cj3HBuPAvcdxRcNtb
+ProX8inYPD0O6uUIn7Oa/CCtJNt2ecZLd/X+NrjEu+r3HxB6G6uXDHnf2f+
sX6gMN5wTijcnGAdxSdJAsI3HEOjVGKxfnQo1733hCpPxJtkjxHbRhTCMO9H
kkLXM0FI3TKd6hfucKaMnJw/Vzocq7TM7mYnzkeLf/v6486Bb3CplfPVp7Ul
IGjVMdMwqnwiYcnHUv9mPpFXXeSn4X+++kiQkS20rFOcc4SKe9UciTCNewWH
ceW5ZVbiXD3Y4MRTKSdossvQwpUqb+ACAj+N9j6XHk1eIdp8HGm/zjl+hsqk
kQ3TzuD13wb5q9Fgd3ielJR+hup5u8o/hCgv0oT+rfG339CcxzTdmvhp5yVf
yCu7flq2C35fR+mtA0env4Ka9kdMvlfSb49rF/mTTCLnObpGk+doRfrKhFtI
FJxzuYY/rB6X81q77CABto/gwjkJ38dx+H3r16xR5Vn+FZgdOcxjuYP+OI8f
xyXyuPICsLFYddqCSi8azvQzYfL/IP+v+ZOUfvn9edVpnjfscmv+Jhua/E1/
u53fM2tOFxkew64rCQomt8SJqgkVepMP9+Pz4q3Igup/eH33hG/HU+57rtj1
ZQ3TNdnzSYDzmXza6Ot4fmTv3Q8aPrThV+BceiY7qP4Sdl3q2blZV1rOd4Sb
PRY9bY7xgJFrnnE09j55zraUsawqDQHcc8OiLJZ8hv03GZaMiC8Fbn6P4gL0
I8FckLFDpsIJ1oQOnVVSWQqk18/kSw3wBDGfF8o+2W4P368qTB4ZRKV3LRS7
/vqiI6wYarpMsxznz/11zvdPfgCrazLHTqL6vi/eJ7txQdNpWOs3rX8k1Xiz
q9hTPALVgVLCysez28izTPRcytujOO9//QaUJLKS2fmt4Kg7crZN6SUgFln1
AuGMA95XJ5vOvWkDZ8VXoCMW4O/pxVMxjx8ccoDP9GJZHan0zM7mX+YNQscr
CmaCUAFLccnZidA8SWprUyoer/4mf7qn5YFkWLvOpa6Kaj+0XpSzbFP1dTDW
VEqX+r7TJAvsp9RcB3lujzWo+XFzCaNbP1+AMSR7r5NMfyom/8v8U5i1tU4J
vu48Z55veFU8rde1s6v4CJrzlxlsf/ecLy3nnrsmZ3swfk50+Lq8ibPl6Mfh
oeXr0tI0zyjGdFk+08VOdoquEXli7S1fl3UhNW5EPNw6YXexS0LX+ekR+cF2
Vf1EXDD5uWhmTCHY2CQV1DAxDs7SNjxSGojHjeouP9i3NP69o8n+vfrhk/S0
DfE8G3s+JuoI/ywB/cn5SeXI+Uk9yflJO+onfJFzqjf6mfSJlhPl0SbKX9xZ
ORBx9QUejhXsmUBjOe/F1RzZMNCMZ5eTeMfz73DmLo9hzfgMH1/LMuShstvc
J+ePsyHnj7vGt8Nn5B5c/kVLFt5OqMPHecHIM7Easl/hmWMsKzgUieUcH81X
wfcUt8ttY2ONNsz9d9dZjHJIEyets3EGiOKzEcVDI4obNnpgWM2kxPfAN7ff
fuVkKj3zUdo6A7YwYKZ2O3L/Upxfz3CfNGrgN7Cdb0zapiF4+zf4Rj+5MzUM
5LhNP3ZmCV7+SCf9rrPHRioZpjzA5Ha4wihpYrPeridcRRpkcAfjG8QLmsKb
uauj/JuLxh4YH+An4DctHm/PfpMdhhPDY4Fmjtk8jqN4eyZPjNXw8nYHYYHB
s83SmPpqR3l8ZUIuqsKLyb/fuDONPbk/y3X0Coq+r8H8ez9Ffv/lH+Ksdv7/
+o0LIUgQig7DODuC9Kg/SdO5mubmZGDtP6Nd/6s9ZTd+oijIwrjPorpf/MKT
gJ+oCivWfpaHr3qFPwy6p31xBXUWtlwPwJ/rTmv59Gn/n48i8D/PV27hX3Eu
3bZfN5MzeW/iLPvjJTKtvoJso2rDmnXdr0epHdCZ8F42Blzi+8TOOTMGvM0f
sv3imt53Lqlc/aWTl3kYaHphsDbrcCLQ4nUf/GMFbqealMRebCeZCvZLjNdx
mEc//i0tf9xPpjQ+7QQ2f942FRiT2TxvNCbLrhr+BM93IDisTD2wE/PJv5a/
IFB4bIQ2Vdx+94Z1v+L2m3xRnqpoaIjxLzGKTb59aB5eS5DXQGOdXy5qxYVx
NouiX35unjE3xaqtFDA+7HpKdGMzz7VYgpy+chbjq66InAvphXLQ76J8Bxws
/1+POtfNecdKCPIgAM9mvQiw4XrRzmdt6gNdlbfLr5vzI3SUzw08MT007BuY
W+FleiUXn+cV+FdwzF+dBXTWSNjeNen4+S8jcjy9I+1c56q63BKpnR4NFvta
L/KPpdqvJDifZcY/W8R2oRcQsUwOu/CFvjz3k9e/x2jWv+Ptdk+04k0DI3QH
RMJqfB0dTo6jq0WOo6tEzg8bTs4Pe5EmPyyj8mGU17IJ6FiNLaZrt8zek+Dx
WdcPl9OEDYvWviSWz6BRrfYdCtGlsfNEkeOQDqeJs9pVz0XLN08tq7q/zROy
HWbfwYPmAyd1tqlHnPA4hERx4G3I8S0FOxnfkig/1PQxJg+uJiPL6dWzca9I
hlZsLPSYiObxKOcDk/XzFpsuxf02P+f8sssBCxq73B/1MBhvkIgzes7uf9TR
QKk=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{372., 237.33333333333283`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-4, 4}, {-4, 4}, {0., 0.9999932050704956}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.006797443933305299, -0.6386013488006314, 3.322971879517794},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.6816687738899965`*^9, 3.6816691432190385`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"clusters", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6816688939304132`*^9, 3.6816689047552233`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.261067378210102`", ",", "0.4243500345988651`", ",", "1"}], "}"}]],\
 "Input",
 CellChangeTimes->{{3.681669099446966*^9, 3.6816690995916557`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotB", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Append", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", "clusters", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Yellow", ",", "Blue", ",", "Green"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.681668882196005*^9, 3.6816688898144064`*^9}, {
  3.681669074823737*^9, 3.6816692064902153`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 1, 0], Point3DBox[CompressedData["
1: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
6zrBKwY4//8AOvDAlg==
     "]]}, 
   {RGBColor[0, 0, 1], Point3DBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0, 1, 0], Point3DBox[CompressedData["
1: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
RwnMjO1rJKDfsCUjV+jxImrD7rwB1cDzx0LBjIFX6nFI/RshojmC+hbS0pyw
UIk7s1f2pVmDnqPOR5MUm6ewq023Vist8JmnjVNOV5SkkO1gySrDEMS3S3Lo
rzyqwLcvaKXUzQD+PHWJmZGro8ho5a0GGSP4peuQTK0gX4dPUrz6LMEA8c1e
0e97zz2MVnq+xgdWgT1yjPtY5gMGMLHa2/XJVJivrzqXXsWtQ+jYZCjdGTHg
Ax3FgNz8j1bcSb7m/fMZyMn5ZN0Y5rfwkl22tpc0nI/IW54taMldR3dduesb
PSAu8lhytEAvGZtmpTclCIO/1e9tSFzzR/AeMXepvY1Qlwbjzpk5sPeje1Gu
k4yiBOsC8wC6UetezMNyXYC+DuJyLa7K4yFFBfZ6Xk55k4Egf0ObIuckyvFj
50TR2ywwPi8ype1E1zg6qDvmy6wF9cH4bpos4+lf6JUg73WT/+Z2/eLyteV4
dnkYZaLSFLkFWD9WRhm9X+WNx4HzB4KJSsDOpx80mK78KEdVDt8t2C5R7MoL
PidPJFiRFTqfuvnk5DTIp0WeMBPl/8VPzhzpSK6B/Eq6WG8wX/gW0V1QFef4
CLyVto6I/+Q9hD45fmOuOwj97SmpT/Qqjr34qa/q2OPP0A/fq2kbf6lRi/3D
HAPFCPLUeras4P75UdRdHCjepgr15GBTSFDeVBt2lXvfuOMJdY/LgPHs5Mdu
PDVbzOVyD/j2YsDjSszHdrymlD9LPgFy1fPkPjZhK9g54agxrQvoUZSguBdo
nI05n/e1X6cDfoaYY2923glENz/34R4Z1A0ZtiO9x2ta0Rfe1dO84xBHNobr
pQxU89ji+fT+k2bQl26fVn7O59KNvvC9+eFRCX6JIlkl9iWKwvJ8i883igjm
ff0K2YgDm2jGZ4pz4e8azHdBCzZtxh3olP3ZUDMPqNssT9NnH6kFoas/6jMS
xyAfyxxm7O43DmPRRyuBb7gA55GgscdPG5dwCi8NX2sb4HNq6tsdjjRSqZw4
r+xLQcDD2afBM6HcLfimwjyjqwbUAePUbuaJzAkkp+J+4Fsw2Pm6yNd4kyUd
KfD6PX9PS8A3/WTnS95T+Of5uU5OJfD3oseL7aeLnchg9cOpUAmIy4WHVF1c
ksvYYYnsD9dV4Jv5f58uBqnUYp26te8BhZBfqT9NhzmzBpECP/OjI+sw3yUQ
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
sQXE6/8AVLoB/Q==
     "]]}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  FaceGridsStyle->Automatic,
  ImageSize->{368.02867181140743`, 212.7310875396461},
  PlotRange->{{-4.6434643341577795`, 4.484454876628922}, {-6.105541832200916, 
    4.05534835806741}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.2937236600651274`, -2.235541243413402, 1.0914151915083006`},
  ViewVertical->{0.24938439662426828`, -0.17363971974265177`, 
   2.3817754281838304`}]], "Output",
 CellChangeTimes->{{3.6816691118200865`*^9, 3.681669162649205*^9}, {
  3.681669194334722*^9, 3.68166920698112*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"plotA", ",", "plotB"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6816691434974394`*^9, 3.6816691497136335`*^9}}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxsnXdAE8sTx0MRu6JYsMeuzy62Z8kdVrC3n73E3nvvsVdUsPeIvaGiYkNz
dlBUQFQEkYBIhyAoogL5XdvZ4d75T16+b9mb/ezc7uzebK7m+DkDJ9lqNBqH
8hqNHf9ZM6rPDau1NEc+eYn10VzXTV547ZDfrOJY1+ztdVN3sbiTYVakA9aN
1cvd0aV7L5pcx90W64afR/x1k8R6/pqw7tfikVw+E+v6e+teyHos1rnlu8N0
Gvkf0s3be8WS8gzWLZczSP1Y1x65lEvsKaDbNCrKyPazuJ63H5wZub1YN87Z
24iR+WBdHzeoM6m3QD3dawyH6xGugn59ZQxwRrrhWnYccEY6G14sCTgjXfPs
ThpwxvVPn/kdOCPd+NLpJ3BGurbmfStwxvYMDCnOEM5I1z/pVIkhnLE9x3zr
MoQzvu7PN62BM75uYHp34IzLD184Bjjj+sMfLATO2E7n8B3AmfAT9AfdyoId
SGff9itProt1zdNbpF22BeqpHVydtMuEdO5t/1qEA9bZua3qEm4Fynf4pylD
OCNdu3JjG+CMdGN29S7AGeu/Fw4Ezrj+tssmAGesV2i3DDhjO3v/3Q2ccXtb
1D4HnLG+4AwHnAknwR8qz2eAM9LNG9t3A/uQbuwc4QackW7Y8rIvcMb6VL+B
wBnX36n7EOCM7TmwdRRwRrqmysuJwBnX3+HYPOCMy3eMMQDnAu26vBc4I519
VfIScMb2LBr0CDgjXfum9TvgjHSuXtQX4Ex4CNf91rg3cMa6XddxwBnp+uW3
5oLdSDd4Vl8GnLEe5mMAzriejdM2Ameks+f27wDOSOc0zfcCZ6QbB1Y7CZxx
/RVMvsAZ662+PwPO2M71oR+BM+Zw/EgMcMb6YDYBOGM7h/VIUfhzptiuPlZW
4c+ibqjWYYTCn0Vd6/d0gcKfpXrapG1X+LOk76l+XOHPos7N/35B4c+irp8d
clPhz5I+Z+cjhT9L9swJfq3wZ1HXPHsWqfBnUTeOcf6m8Gep/IbjSQp/luw8
uStV4c/Sdbu0Tlf4s1TP2eIWBedY0f5ZF10UnEVdY+fYV8FZKj/w62QFZ1E3
5gxbq+As6gZ2wWEFZ6n+pXY3FJwlfXurFwrOkj6h8icFZ6n+obe+KThLeiVT
soKzVE/f7mkKzqLO5h5PV3CWyrfuaVFwlnR7b4uCs6ibb76x4PiG/DO3t9Qr
ME+Tf05ernj+IP+0n+JGFBgH5X/67RsX4vsT9FqldxXwM/kfe6bSuQLtl/8Z
pjR7xGj++8/wz7wvwBnbc2p9MnDG5cv9SAPO+Lodm1uAM+bgcNoCnHE9y99T
zkg3GlIoZ1z+6c//+LNwfePjG5WV/izohopLWin9WdDNP0b0U/qzoLNN06Yo
/Vms/5vdOqU/CzrXN/uI0p/F6/56cV/pz8J3/YHxUUp/FnTtmREpSn8W7Xn8
IV3pz6I9va5alP4s1n/hq0Xpz6I9Q378x59F+1P//MefxXrO5yk5i/1vCDWV
Uo7PYvmVh+orx2ex/qgqXRScpfL30sYox2exX8o2W6Ycn8X2ZrMHlOOzWH7Q
yAfK8Vm08+XZLwrOkj3MIyVnya9jSlmU47N43bcBSs7SdYdlKjmLOhv4V8lZ
qmdRvpKzZOcIq0UZb4h8tgTZK+MNsfzDcK0y3pDqd+ugjDdEO23aDFXGG2J5
89+FynhD5DBrziFlvCHqSUtMynhDtGeQxqyMN0R/jv1AOePrlqtnUcYbYntv
hFDOuJ6fPy3KeENs1/48izLeEPu3J+WJdcNjq9KfxfHJsDc8T6eInwXd7PVP
JWX8LOjsix2tFf4s6lzkpYHK+FnQtR17LlLGz2L9eXeU44ak9/jEKeNnQdcn
NDMr/FnSWyQr/Vlq1+x/lf4s6sYPH5X+LOmjfyn9WbKnYb7SnyUOXlalP4u6
JgZxRuO9vt3IXzrFelC082Kek3I9KNozpVYL5XpQ5Nx62wDlelCs/4tuiXI9
KNYzpPVx4Iznn9qFHyvXg2I9hYZRzkhnnXIpZ2x/bE+Lcj0o1v8jknLG9s/O
sSjXgyLniYgzvu4FxBnXn4o4o/nTvGZbpnJ/Qyx/O7A0cEa6odqmJsAZ6fq1
DQYBZ1xPk3F0fMbXHbfQCJyxftPhCXDG9aStoZyRzk0qmarc3xDtiRxCOeN6
qkRTzvi6c39TzkjX7kWc8XVvIM64/gzEGcUj+pkr0pT7dWI9Dj2KAWccv3Re
0gw4Y/136mDgjOtxu7UCOCPdHJNyEjhjewZMopyRrp11jnJGumFCdcoZX7fY
CMoZl8+NoZyxPTX/UM5IZ58izri9/ogzvu53Xi/CxZTwqlOU7T20a5ablz0n
2K/pfZPRiuWs5FOM223a35HtTJGvny3G/5MeclAP0tltbiSODZXntRRR9y0V
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
nVq+7mbfe8AZtyu481W1fF1DqRwWOON51XHmMOCMy9cYOhc44zzV7brNwBnn
5ZpPGIEzzoP1734bOON83Yb9XgNnXH/gx0/AGdvTf8tHnUq+Lju6cZBOJV9X
O6HYY51Kvq6hVdHbOpV8XS7xwHmdSr6u1nXNEeCM9Y+Ld6nl6xrHvqmlU+zX
iXYunPOvTrFfJ9bzYusAnWK/TuyXws2n6RT7dWL5LTbrdIr9OrH+1fUOKc/X
i/aUrXlVeb5ebG/W0vvK8/WiHx6IuKM8Xy/aM973ivJ8vVh/ZCFv5fl6UW9/
9IDyfL1Y/zDzNuX5etGeKu9XKs/Xi+090GOuWr4ud3F7GuS1IF3jPDtNLY9X
axlN8+Sw/u5tqlp+r+ZJpq9afq/Ro+cTuC5+3tR+4nO1/F7z5SG31PI2tfH3
nkGeEC6vrxmolvdrmJ5D99NwHu/8nxa1vF/2UyLdl0O6duUni2re78qHFmgX
0o3Nb1Ad73c1rUKvi/PKzjelOn7OFWdIUssr5pgZX6BduB+Lt0tVyys2j4pJ
V8sr1kzoEq+WV2xYM9Wimlf8un86+AP2q4FHLaDj/bTcr+mQd4XtzLGzgI7s
Mc7cmgjccHuDF8Sq5TPrl58MBA44P+pHx49q+cza84vT1PKZDQ1DzGr5zPqV
e9LV8tINRULj1Z77mCc1UX0ubE6yS4Y8EFzeY6kFdFRe3yKN5u9iDka+vMpz
W3Zi0VR4ToTtX9XNovpc6eiNZLiPcP2Dd6ZDnIPz0GrHpEF5fP9eyfsG/Y7t
L3EsCvoR73dxhz+An+PrznkQDjpu133DbehfbH9uz4uqeeNda+9Ryxs3jlnz
TjVvfOyw02p542zDM6/V8rr17jc/qZ07MLgdjwQO+Hlr5Wr+4OeYz/SO70DH
5YeuuwLc8HXfVzbCuIT9KvHCNeCG88+THnmq5bdzu/ruU8tv1z9+GaaW364N
ZU6p5rGXMV5Wy2M3t8i6qpZvoJlfLwx0nE81yZOeU8bj+Yy8x+Bv2J4WJiNw
Rrp++629avnP5qS+Oog3cB5m46gWOpX8Ye3YBhvV8oe1Ay8uUssfNszKs6jl
D5tHo3kHzxdOZ+j8gnXX8+lQD/5dkahjaWr5xuyFDYlq+caGJcdSwa/w8wvv
FnTex/Xcvpeolp+sqbEpSe0ch9m1fqrac22NzwWaB473pa96poOf4HrqrE8H
f8DjQ5Wi6dDvuPzO7zQOwfvkfY9BXlCB8cTU7B3wxM8FrK9U864Nm6IvqeVd
Gxxf+UO78L70v0++qeXJaKob48FOvG98ZPlb6Be8H17q8yPoF1z/pgxfsB+X
925xWi0PnJud6qOWB25+V/SBWh4453rxuVoeuHaQQwD0C96PfVyCg37B+vNi
t6C9uP7+bc6p5UtrXr1oBvEqvk+bfl2jlv+sH9YwSS3/mbUeSYV1N57fK7dK
UcuLZqPs7qvlRXNrTa/Abjy/DypJ87fxuD3vQopaHrVmQOOHanm2Gv8vb2A/
AcexY/LewL4EHg9Xb7ymli9taPX1vlq+rrbQ/IdqedT6jKepTA/pO4t0zfDz
aYxWqgfn32peeT2G/CWc97uwZxrkdyFdk7wwTS1PW/vyD83HQzoXkW5hVPK0
9Y2OJ6vlaXNHaqWo5Wkbt998rJanbby5I4TpKpVjcB7mrpJpavnb2jP/PlPL
4+VKz/JnckR3tmA+XNWzz9XyvY1+Mc115DvSDc7McrV8b43X7HS1fG9288xU
tXxvzZMn4Wr53gbjta9qeYba8ccS1fLA9d1mRoL/YX2m9iv4IY6vzO6pwAf7
YcKrJNgvwOsUr+spzC6xfDEW5/VdLUWfI+Py/0xJZ/JEzoVZxMEw/ESqWv65
sd71l3BdfP8ad3NwXVSeC5gUBNfF7Vrs+xqui9rFjm/7SC2Pnft16opafrg+
ZgW5fwvkq2sjflvU8tXZee731PLntZ7j4tTywcw1nqTAuIHjvZKXE8E/MR/X
f1LV8sSMpcd/BTuxPVUK+6nlyRvSVn9Sy5Nnlx56AOMhjgN1g6/A+IDzsuqE
3VXLb2cbZFM+6H43F14Rq5bfbgjySWM+Sd/xOKZ1GJCqlveuyeiWopYfq11U
JwnGPcyh66pktTx5/b6oJ2p58trI6GdwfgG1V+Nm8Id8PKTrT6feUsur59JX
N4B5EHOazi1Wy6vX/MqlcSP6/0ZzEs2/wuvo3eZYtbx6fUjiN9W8etun9Fww
5t/UkKSWV6/f3MyillevT5qYrpZXz+q6pTEzJM74ftcfNKfBfYrzJ02DvkF5
fH5nc+dk0HE+TMKyVLW8fe0cm3C1vH2u0016/6LyBtbjtVrePlesSrpa3j77
ZVqqat7+714Jann7bPU+NC8F78PUS6F5s3j+CrekqeXTarfw8ybR8XxRwZgK
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
I0IetFT6G3PEvu3OSk49lf7GVLfp1+pJ3DilvzEVy1ad3Ny6ROlvzOIDptC9
1XYr/Y2p5HHw0DD9eaW/MZ17l+/o0iBZ6W+MTdAxh/u/0pT+xlwfPLCm8xiL
0t+YQz1ur10eaFH6G1M4yqd3cpJF6W9MRsxAx9yf//E3Znv1Bq26/lVyy2Rm
9Z26uufRuspxifkQuy/6z1FGOS4xOkdzs9dJQxTcMplyNw43ZBfNVXDLZFyr
nygyu99W5bjEBNdYe7bQ5HPKcYkJD3PctsFFyS2T6RsW8WBph3QFt0zmRoBn
gwrrldwymaazR7nujVJyy2S2/B5v//WnklsmM/tUzWELc5XcMpn4GiU7euVT
buQ9WqXWFd9dLqC6cl5jzh+4VnmOZxvlvMYMia61ebvjAOBG9MWz+lTSB05X
zmtMncc/s7p7U25Ef+k52sO/2wXl/MW02vZuouMoyo3o3abElHQbSLkRff+D
tp+HelJuRP9dp7lr2FfKjeg7HfoHhORQbkTfO7N8uB3lA3pGlMOd4Valv9my
J85UrGP/o4LC32xZ23k2Xzr5t1D4my27OX76zzbjein8zZZ9Mln7u8XPacp4
iX1co45zxrztyniJXXl8sctZHTkHB/ESO9p+R7OyH54r4yU23vVgu8T5Sj+0
Zd/viel2YpLSD23ZzCNxB+YcVfqhLbtkaZGahxOUfmjLfurRo13yb6Uf2rKe
fmVy1ucr/dCWLbXB3vko4kneC6dvyNZ+064s8CT6zjJeO/u5NAaeRHeMzN/c
urY78CS6vbvXnuknZwBPov+KtetyJsUDeBI9MSxuR62REFeAXmrzzVQ28wXw
JPoZ47SjnpspT6LnPo9+0HQJ5Un0v9d2L/A4Q3kS3TUhXd8imfIk+r51uhKX
/lCeoH8vnXML8ST6t3d2B68jnuQ9iuu6zXtX73cJ4En0+2lrDM1rNgCeRF/v
cryty+2ewJPoQQt25vdqNBt4Ev1mzeiAJX3pPEL0GVXe9skbfRV4Er0Ft2pc
2LcA4El0U9f2nN8RypPoo4YEFlq9gfIk+nmX4fXtLlOeRP+R/DmjWyrlSfTJ
0a2dx/ylPInesHapIp8RT6IvW2jndh/xJO/pezZi6ga7aoWBJ9EPBNzzNXdq
CDyJfstwuvjEKn2AJ9E7HlrwpPNSOr8QfVi4k2PHZ57Ah+jJ1WxeTcmlfIj+
ObWxW68oyofofu5DI22uUj5Er+PxsnnpdMqH6CUONn/6BfEh+owmJZrbIg7k
s2fNrcEDJ8bAvo3/1GOVhP025/fBN1dN/wr7M0tD2rt41SnJrb8+ZcmMm19h
H8alfXhvYV//0GCfFg3bfIX9Fos4PpTi5m4I8ziyOhb2VSQ/L8U1H7Jsd9nu
cYr9k9JceNs22i8J8bBPUku0vzh3aeupQf+OrQDcorqlBLnxdg7b38Vz9CtY
vzMHfbbEe/J2vng12t10uDFwG1yxnkaw89vSkQeXr20H3EobnlQS7Oznd/xd
yQA34PYqUe8i2OlUfe/Y54OGAreuB8bH+80qzK3S3nd4kULHN/L5ym3JuMIZ
TuA/Ek9e97nb/MDscuA/Es+i3PMGMX9HNC4H/iPxLMo9LrU/q4uxLNyPEs9i
nHel0r9CizjB/SjxLMbFLvLzvuxSVnE/FuainRbuu5fJKvytMJdS56DzpGW9
gZvEswjXuVOO5dvI4cBN4lmUK1aq08XC+6YDN4lnUS76xw3uaJcVwGdL02dB
syJtueZb4+x6fe4MfCRudtz1Za9HNOvbRbFesOemrgobU2lBV+AjcbPnvu4f
fXzaqa7AZ4nIrRA3oMSW2D6eXYCPxK0QN29ceOwJXWfgI81TDtzFozOy3PNZ
4CNxs+Uyby4brGsyRxGf2HFbn3u1C01eprgf7biklTVs6tzaBnw+i9zsuXIr
X91+GL0JOBza3m+yu1euqW/ACqf9Lek+Q5nR2w4J+9PdO7vv+DIBeHJbRW75
JqP/lQb/i5oLHMjnzsCJjiuPzAcOEh8N96a+zcxTf+cDB4mPDbcyaeu41Uvn
A4eWIh8bztt8LNZ5yFzgINmfazLO8jzvaIX1FzNI7N8807TqqS7tfpyF9rL3
jkwW3h/qkt8hsVD7O9DeWvfKudyelWVK9PJfsdmP7iccFjn8MAV/iNlcJJfu
J5QVOfw09dY/K+G2fwO0V+KQbSobY1+kiosXtJd8fqhUbPLtSwcV7f1teuvh
7WINP6qIP7NMc31OzZ55NgDaJbX3h6nEsAtm4X2+pH8lf/5pel+8zP3ho8Oh
vS/FcSDbtHVTyr4UHzO0d0jIDau7V5wpaI7LlpRZvaG93Rc2nDw7Mt40bUOR
PPO8idDeNhVPBHnVSTIFrlix5I/zKmhvHZFbisl2PzslrdVeaK/EJ81knGNY
UP/yOUV/xZnyL/bZO6jMV2iXZGe8qf7v18HCe29Ju+5u/3DIk7/u6j5ru5a9
lATtOtO0t0Z4jtG2crGSDywp0C52wffAxu6+pvj3U+2XHKbr/THd3ubXd39s
irl839s7bSi0q3rImYN3Z70y3e4X3LRC9XnQrplNdYfquoeaKh77U6Jkqy3Q
LjeRzwdTdtnomJNpRmjX3IpXXGrz1zX2HeM3sCld10v6Y9O7i53LX76aCu1q
dGr965v8dT2fHVhawoWu62eL5UNNvdz+TN+YS/dD+o4+qJnJX/fzo9unZzjR
+bGJWE+k6efuNMvm+TR+KJE0+3CeNdr0c8Xrcisv03lT1pnEN4l36w+F/W1O
rocx6Xfcu5/YC/j0ka7LlHOt1ryudQLwkdoVykRrE15f7L4S+DSQ2sUkp774
VbHFXuBDPs+5bUv7VYbGD5L/RDKVyzpc7lmDxg8yZ2bU0rj8CkVp/CD3C1O0
dsz7zK00fqgm9SMzqEZPU53HlI/c78zPph/LfPxC+XSW/ITpsbHYoWdplM89
0d++Mwt7eUzZMqAe8NmwsO3rfD7+iN3fLzjgKzxf4PaGPJoc4ZfGRP0q9/xk
a5h3uLOSfzKt4pw9w7zouHdH8memRNqDgPo3dgAXaRz4zqyu4tPYdyPlQz4f
TP+7bPdiyke+v5iVnzNPFptN+cj3I7NnacvOocGUT2vp/mUeZecOvpVK+cj3
O5Mwco3bl2zKRx4fmE12rkuXo/2NFqPLvK7t/ofZ7VtuhfuUGsBHuk9/Mwu/
NbbZPK0t8HEVx9tfTKw1qPmfCgOBjzwuMbddLg/ve3sm8JHG7Z+MT5HGt7pn
bgM+0jz4hyk+1CXsjDflI4+fzFNjw3+7HaZ8yOcKv0DD6S2Ujzw+MyNuLx83
PprykcdzxiF2kXZ3NuUjj//MP9UaGy+gfQx5vmBOVnDqeALtY0jjsA279kO7
FkUGVgQ+Uhxiw+p6hx2+3LUl8JHGQw1b9cWyZ1MW0ucXEjcrE/7mn733K9L1
o8Qtn7H3brJmwfDtwEeeH9klNbKyAu4q+diwm92mBzjcpXzk+ZctNnJMXJN9
lA/5LPOzw9otcZSPPL8zv4oPSSyC1tdyPMB0znC+Ux6tX+T4gfE5VmTLaBS3
O4rxqgPbflyZqndn0vhT4laIrXyp5v3UcLq+lrgVYrO71vWo/4uur+W4hb3R
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
KPf5fYX9p6Gtl9J8TrMcV/P834ZNSlFcV6P5o3h+6ijXw/v5lMP3X0B56fd7
Yxmew5op9Uj+QwbTX7aTb1f0pFs+YKe8zhLsvDqbo/ZnyPGqYP/tD9R+eb0m
2Hlu+TR6Hs1Vjj/5/uoxvV+KkrPCHjNTTq6Hv06/onufQ/lt8vOv3wWe02Uw
Z2U7+XGy3/OU82CnvP4V7OyX9Zza7yrHdQLUvIfUfnkdLdi/pHFLav82OT4U
9E22SvuV9pjl97dkCfxN1fY+g/KS/lfgjJ6LZTBVZTt5+2/n3ae/6yjvV4h2
nrpM7e8mx11Cu26cUvLPFey0DI+l/jNdjt+EPMOLV+hzjUjZnizFc7qqcj28
/W/D3an9O+lzHPS8KYOZJNvJzzu3+/44DXbK+06CnXOG7aL2T5PjImFvZdFG
ar+8fyXYuabPTmr/Tjm+4vUDqf9LVvBX2mOW329mK8QPY3tkQ/6wxld+PvKj
wHMc8vzRTpg3o20C6HkTeX9SsHPN/+ZQ+z3kuEW4L7ZPpPbL+5yCnXOC+lD7
feX4h9dLZ1Sj9vup2mNmPsj18P7/Ns+b2v+BPo9Az0cyhOfWop28/YVLaYj9
JeR1pfSeaE+IZ8h9UUK039ibtkvefxb1byxtl1WuR+iX2+Vpuz7JcQuvV8yH
52WQLyrW06kVrYfoAp8IK33uE6HaLrPcLvE5To1t/SkHed9eLF/j+hfgoJXb
JcRLhSd4Q3ly3YLl6XkKntugXa00yviBTeLvl9gNebqC5R2F501t3fqCzsm6
sK4q3r01+X3mHBPKC6p4+TvkM4POt8PkYKLnFIjOj5P9tnjHgf2H1ecj+D12
vnxCy2YwXsH7AIX1yNnd9NwKea8UX75isYm0PNGF+314zecKv80WxpMT9avQ
8kQX9hOGr6Pnicj7A/nPfuvp+QV4r6BwP55vRsuT9yjy/z9h+3xanuh8+c3V
P9NzBOT9ioI9g5rT8kTn/SSr2lZanryXUMhf/VySlic6X36sXVtSvghH3hPB
98uc8QshTx50ntv2wHySx16iwHtpNSGQ/w+64P99/oCfw3sHrAXi2xx4Dw5/
XYtuHfUHkj8j5IWWXUjnnW3q8ybktwh8+rvS+YvkOfD60Otw7qOIvB/7Q/C3
aLrPXESOb204Ph5bU7cvnI+Q339qw/HxlYHqJJ/wj2A/414iCXRbuX02Gs3u
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
dZDpctH3bu51s5lMl4u+d17RGluZLhfV0+bydah75Ov5sXL8H5kuF/HgFud3
EfDM349X+OfwARXU5aL3cZ9+A6eCulzUnpOhNz6qoC4XlW+S9EangrpcVD78
6txKsnNg1J5B0U0aQruH2/M04d82svNhPJ7jerWS6XjR9y6z6tFIpuNF/Pip
O9SS6XhRPQ4VFitlOl40bl0m7CtVQR0vqv9ku1Y6wpu0npM7vibLdLwIj1x7
fSfg2QzX83vN3KUqqONF8/KgqMSzKqjjRTykFN+JVEEdLyq/Ou3gexXU8aLy
h77qclVQx4u+93z5LeUBz7w+4bn7NRuZjhc9l431dlrJdLzoe9vuiK4g0/Gi
/g5omfNXBXW8qD11poXmqqCOF33vE8/xGhXU8aL6//wTGgd45vUVPvVXPpbp
eFG/Ci9XXQp45vOAf/xUa7wK6nhRe6wHxW1XQR0vqufmsh2nVFDHi96jmzfr
3FVBHS8qP2DpsbcqqONF39th/bR0lSnPStz+aIucXyqo40X99R/R/qcK6ngR
n/WyZ6eroI4Xjc/RC3d/VkEdL96XuTNvVVDHi+qvcMs8WgV1vKidzxMibwGe
+f4u2T7vgkzHi9p/qnLrcSqo40V8Bta4vlAFdbzoe6172G9VQR0vKn9X4xSk
gjpeVP5x7Ra3VFDHi3hQDA96Afjk23PrkPdHFdTxonra15v2QQV1vKiekFn7
n6ugjheNw8MDJnIqqONF9TzSfgtTQR0v+t5F+ZPPq6COF/GZUO7PYcCnJc5T
38nvwE6Zjhd9lCzVa2U6XvThqSjRynS86KPm11KtTMeLPlq+KtPKdLz408Kg
lel48WcKKg91vOhjeUeEQx0v+thVhNoDdbzoI3NokVam40UfvQp+aGU6XvTh
m0DPr6yl+OF6Z7QyHS8uvzlVK9Pxog9NoFYr0/GiD4/2hVqZjleB73JQO6GO
F318Wliklel4Md4sXyvT8eL2nIzXynS86MPxyQGtTMeLPgL2N9TKdLw4/5fa
N0+m48XlfQ5rZTpezPPS+1qZjhd91JyZoJXpeNHHb5sUrUzHi5bhi336a2V6
3WL0XkwIzZHpddE6efH7vhkyXS6+dJ/dTivT5WJ8t7dWpstF79dJz+2ZMl0u
wtWxy77KdLnoPVIvjvwk082i9f9bVXItmW4WrVdffpzeQqabxfmdo2t2l+lm
0TrTp2rvITLdbJrBcCzw70SZbha9709Hu3jIdLPYv6zX0FUy3exnNC9Y1vOW
6WbRvlU9dP5imW42Ce1/PdbMkulm36P9Uf3F42W62ViDodndCYNlullUf7k1
23rKdLPI/vhXcSxTJZm8XzrstzV39UMbmW4Wn2uljG0s082i8hntGneV6WbR
OHEYc3CwTDeLyi/e02WSTDeLnmNhdNAYmW4WPRfbZ8edZbpZtL8OWXWvl0w3
m2gwOI1UtpfpZlF/fVLM7KXnpApB1+rW+0uW6rbJe6fHep3Sy9sVMt1sqcFw
r8LNmsK4FXWz6H2xW72pjbAOF3WziLe1NdurZLrZ7wbDr/OLHP6Xbvb41AlN
/pdutt2Ykhoy3SxajymjbcvLdLPoPZlrM1Uj9EvUzaJ+nazeo1CVaPr+sqj9
DtntrYXnJeq10HN8WnqmkUw3i9rzMWlURZluFj1HN6sJxSqom0W4+kDrPBXU
zaL2RF99nqCC+i7Ec6NfB36orvHtF3Vc+Byj879mMp0tqv/8ttgvKiOfos4W
8W9YG/ROBfVXqL83c2LjVLFGgiiOyqs3P8pQQV0usj9ex8vdUkGdEhrPIXFT
XqqgXhd9n3VOzVzG3rSd2B6q71TMk+l48fmGdirRQYnxMMuE/NdQ34vL1w26
LdP3Ivtml9fuvkzfi8snlj6R6XuRfbNN9H4j82tAfIYcqhjDzDMdh/gcb3G5
2c9lul+cx9P7SKRMz5mH9r9DFsUTu0HPdfF+xCchXqb7RR/XYtPh/QWPu/Y/
qZXpftFHgIUrma/F+KXoI9hhrpZpZPoc+Xpck/OZAabjBPOsXXI7U6YfzkLP
i1nwRaYfRuWv1nTOl+mHkf03zOiXLtMPI9hBW5wv0w9jo7yvsZYxjvMyqX1y
7OunFXSDBinO9l6kFcaVOJ+WCPNpfzCflpjOp7SdP4R+QX0y6u/imIr3ZPrk
EiGfL9QnI9ylBqof6pNx3I91+/JlunH03rk438mU3ZuXCesHqNPA+Ja0bJlO
A9kH7WCrHKgvpeuNCBO7Yazn3bFcppaJ/pPHx/88kgv1qPx7GozqgboLrNus
fTVXprvA72kLdS7Ur+J63NYP0Mru8VH7C6eezGHcjf2V1hOTvyiH+c/Ip0l7
xuzJl8W9QfUwTVLzhPWbGPcV2e2r3r0zBXtSKP1eQ4od0TuJ8WBRuZ01z6aC
90iB13v8+DHF+Xu9jztrv2Lmg3VakbBOM7XDepwX2y9uTZSwjxDjxCK7xPiW
RYDzfN5/6uSwg9dlunT0vT7pL4/LdOlonbB4f2qoTJeO+mXd3CdepktH7bGd
3ShRpkvH91wTrl2W6cn/ovm0YoJGpidH9Tv5xaXK/B3wvUPFEV8Zkj+V4Igf
bcaFVLK+ojiyt36r27wU7JIYnxbVE2O+84Ngh8X4tGidnGG3KozZbbr+wbid
RdI5md8Z6ldKHdVpYf8lxqdF/Lu0jDok09sje16lwdHrMr094s1lcO8UmX4J
rQdOfjuUItMvofnUzf1sIllXk3Uvbs/o8sm3yDqc4qiemU8nX5TpjdF7US9z
M6uCeuMMg+FEUZcx4JzHEuuxU9xzequgvhefE3ZP2wXPN3i7sbM3eY+qSnF1
3zn5DNQDo/fILXtwrkwPjNrpN9M1n2lsYp95O39ohn8+eI/4emKYPrky/XCp
YG+hfhjfa8wp+yrz+yD2FuqOyL4M6o5Q/RmT8rKhHpLaT6B3xXZJ63owF+jK
RDtpivPl574PyQV6JNEemuJG+1y8DdlzYPfKBLtnivPzjv+5NRlgflTgfSu/
XjLFed7adCufCtYVxv2m2iEOPHd+PcbbMVNcj+/fXXb9+0Cm30bj2WX/ndNQ
P4zf3xZXR6TK9HjYH+2U01fQTn4ddWj/oydg/PDvXaWzve6C8cO/dy4/Si+C
dvK44WD1EzI9Oa6nWdIFmZ4cvS9M9S+3ZXpytO6dd+P5Q5meHLVzxY8Kj8Bz
5OtnXJvdA8+Lv1/OKUq5DvrL48ULDWdkum68L5vQKkum60bPlzEcy4Xn9nje
savbOUeoP0U6rq6288+V6bQR7lBvQY5Mp42eu9vvXh+FfhVLxy0/z0L9Nmq/
3bnuj2U6ZMTD4klto2U6ZMRbzCyvhzK9N/a7tN+ZJ9N749bVLsmV6b1xHvld
C/Nkeu9CYf0J9d5ofgl/mfBCpvf+K+w7oN4btdPp46pPMr03xpObxoHxw+P+
r7d+lsUPRM9j8e9J2bJ4g9g+XLqZR85tpLi2z+Y8mZ5ci+9T6jwS9MBivFM0
36g7r30i04ej/bVb6to3Mv05rmdV+E2Z3hKPG9YxW6afxOsB5xWfZXp1hDuM
vxon06unC/sg6EeGxkmlVa05Yd6MpzjaHz3t6P1Qpj/H4+2qVb5Mf14mjH+o
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
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
2g8Gz6mY04vbKx5fEByjNW+UlzdPrMEOC+YSC+g/EtwF/BL4PHBL8LyK8xb5
J/HUGTGnlX8/uOQ4JS1UNQXNfenky4Pf4TvgtcHaxYaKaxb7Ja4d7Mm5c2k/
QrpTyfq2aj0To2Yi7eRDzn2e9o/on5Wcb6pW0aPsOpS0lzEx1oyNOejRiX31
iuBYoJiwBvyQ5j7XeT1YF31f/Cex7qr7vRast7xXidym4NqUNBbFJsWsp4Pn
eCPlwbn9lL7X9rm1KsW4qrl5gL7LDrljs95nkpur6bsot5JOKC23Sm4+N1cE
M3Km2aqt5Naj9dt/y6x5daD/8sz8u6ry6dycSd/u98y1BNWwfs1cA2gvLpaZ
4x6t3CtzztwOvG1uf6fvu01u/vciuJjbF2usqs4jH1K95BqO/IP8hOohqj3l
JecU0pK347yTo/ahsa1ai3iyeFHvmFcWsX9krm2oRqYakb6pvq1qQRoDGgvS
FaVv34B9Rb+P9rol66vSvOuUXBfS+NE4qp+7ZqC5dmDuWoJ82k+ZtYyjUutm
8mnybf9k5pTSSP/OzB3FAyu5efMScJ6bBy/T2MvNoZeCa+euV2nu7567Jidf
t1vuettqcPXcnHI5eOfcPHsFeJfc2qj41TPBMaIxz/MseDq4ifxTbh1fPmdw
Yn81hmO75q5draqYn6rm9TvzslbuOtbKinV+xeVWmou5a3Kad9LeFavPw+6Y
m4++Qnuam9fKn9TJrTMq1oTc/FU+58/MtSLVMbdmrgmphrIlc01IdZa/MteE
VGurm7seqbm/d+76iubU/rnrH4pB++Wufyg27ZW7ViGfr1qkagTiEvVy1zY0
Z/fMrYcqXuyTu8ap+bs8dV1S9cmBwTUpjeGTg+tWmlNHBOetfwX722GJ85Yj
g3PPv6W7BOeMf2JbBOewW4Prwqrh/oP9Lbgm+B3XPCo4R67C/dsG14u3Ua4f
XN/5Ut8uOAevQXvz4Bx5C/bX4BritxVrSBdGHalNcF6c0L91cH6tZFd1Qukj
mj+nBet4NVPnOeKKqouI118R9QFpGeJ7qr/0j9qLNJj7gjlSvdTcf3jk/Krd
Kg42oP3+YK61t/oE16FUV5SeLd1Smrb8pfymtJ67gvnzHqnr1tJ+90yd0ypv
Ex9Wfb1z5E53BvP22vS5PZjH7iZuH8ztd0+twel3SFv+KrhG9gXv6stgP/C5
8ohgrWB7+nRNnOcox+kVnFspx+odrJtVS/2OL4rv+diY9+0g/SNYZ9gudZ6k
60h77RSs+5VT10SVR4izqSb4ryaXOu5Is5X2clywliVtVrUE5UM9UtcltW6A
v0I32g8o2G8PirFYefPlZT+b8qaOwRpmKbVOIB4vriad91XsJn77d8E1028q
5vhDo57wbXDN9Gtpw6l1B9XzfwmuU2+uONdSzvWVzg2ut24Ej4/fVHHw4aJ/
i7QR5XNaAyBdQ/VsaSzbcs0+wTpnJebR4vA5uEOwXie95MRg/TNLnYcrH5f+
91RwfnFw6rxol6ifXEd7v4J9r7R9cZMjSs7ZhhTs324Fn1GwD+zCue8WXBud
HJz/yj+/Le0JvEvZGrzi0Sfsry/6XNWV1DYmtkvvl+6/ruA6kfQu6V7SfaSN
qIZ1fXAuL38+JTjHV1yYGqwJyLdLh1c9QjVu1QRX095Q/rTo51fd6vWSv2Oj
kvNf1Shv11gKMd+puHb5Jvgw8Yaic2flF6fGsa0xc4fiYsHnHlRyffwoXb/o
/F31RK2zEDcTR9PaEtXx3slcl9lA+5HYQxLXMfUeZwS/N8WvY8uuZau+eWji
GvR7Bf++wyPeXHR+pLqw3t/o+A6l22idhrSbaYlratKkLgrWNndNrXlKA5cW
Li1UNQvpM1Winild/MLg/E58VbU5zanlRa/dkY6nsfMQfa6Rr6P/Y8G5YX3w
I8E55v7KoVJzYK0veiA4D90H/GBwfrpv6pxGuc1Ounew/nBA6pq21h1Ji5P2
JA1KerfWI+k3aV1PGrVo1Tek30pHrhHzQtX95fs0HzXHVsd7jUusjco/jE28
dkFasfy41knNDM61G6ael+Ojv1VdWBrzTrk1Nelp0uLPiTmhdDCtj9H7l86p
eow4sdZhiberRtWh4JqIsOoOysGVZ9QCrw/mdeJdP2fWLNqmnhOnxngxKzif
bZpai1bNthrP06dsXVG12tnBObL0PWlRnRLrUfp++o56Z+Iu4jDSfOYE51CH
xveq9VHSMKXbqC5dk+uvDl7TIi63KlizbQN+Ffxcwc8pPU1jVeuLGsY5qNqY
6mWqQx6WO09WviyN4iXOfVB+hv5Lg/ltS/CS4LrSkalrxspD98KujHmucopS
zBObi7em5rHiXQuCa2fNwQuDNZ8W4PnButDhqdfzHJh4XZPW8Gg9idZBqUYq
3U21iuqRe6u+rvUo8tvyGWtT11u1dkI1Ka2R0zqrDVz/5YI5//vB9XFx/vdi
HFdunkferrrOh5k1I82dc6LuLT1Qdb39E6/XUmzSWr0TsfNiPqW8W7m6cvCm
tK8L5uHKKaSb/buuIbcOrrghnXBjcH4qLrEpeA2Schlpyd0Sa211IrfX2qa6
kfNrfYneU9/EvuyDzJqX5uwnmTVBzfd5meuI4nKzM9eKxOXmZ675ib8tyFxf
FKd6OXOdQHF2cea6guLawsz1J3GwRZlrDOJ10hhOSDxe52SuR4rLvZi5Tilu
OTdzbVK8cV1mXUnc5tXM9QzFwVWZ65TiJMsy1z/EQ5Zkrp2Ih7yUueYhbvl6
5pqi+N6azLVA8clXMtddxE+WZq7NiAu9lrmOoli8NnMNUvP6jcw1IfneNzNr
YeJg/YLXdCnffDfz2h1prW9l1sjEx5Sv9048Z97OrBWK432eWXeTj3o/s0Yp
3vheZs1RPPPjzFqtfOmnmfVW8cwNmfVN+eH1mbVIcciPMuub8tvfZtbUNHe+
y6ypaZ5+mVlPVN70dWY9Ub7oq8yaY5M4fvskzic3Z9YuNR+/yKwnKn/flFnr
1Hz8IbOup7n/fWbNTnP/s8w6oLjKxsz6o3yUcpTTE+vv4oxdI29slXuNkdaN
HJ57jax4l9bvnBV1Ca39kPaclK2jKR5sZr9B7vVw0o76RU4iftA697oB1U+b
5V67Jh7YIvd6XOUjWtsxtmDNs3nu9bjKLxRbzoj8c1y8l2LcwbnXL4pLq1ar
9SeKFZtiTNKaiYNyr72TnjY6Pk+/yBf6R87wRfCclVY5JnItaQA/B/vee1Pr
d6Mjt2qSe22cOGrj3GsTxUUb5l5bKZ4vnW9Q4pz3kNzr6sRRD43rrrTOsGnu
tXfiwI1yr9dUzjU0an1aG6o1Xar7TQrOe5X/at3Mj5k1esUO6QGnJdb0/w+G
qtyM
           "]], Polygon3DBox[CompressedData["
1:eJwtm3W8VkUXhc8L3jkIc5T3IooFEiaioAjYlJSKigoipVhYIDYmn4iEoiJi
d3ei0qGApEgpJhiYmNgY33rumj/O7846e068Z2b2XnvtuQ0HDukxuFqWZfWq
Z9lm+tuxyLLX9XeXkGW/VmbZlHKW7SX8VEWWlepk2UAdY/Is+1PnTlXfk4RX
yHaq8N/qO13nnlP7NV1/pGzTdK658DPqU124v47zdf1POtdLffsJnyHcqpRl
Dwj/FrPsY9k+1vVtZDtFx1jZv9S5o2XfVccotX/S/T7W+/2q/h8Jf6T+rdV3
gI4L1P9TneusvpfJ3k3toHMdZXtL567Vs37Vub5qH6bjDbV31fW/6X4HCj8q
XEv4e+HP9f4zhRsL78X1wvV1fT/dr4twC/WfKPs/ep8v1L+vzp0m217qc7ts
zXXcyreRfb3sK3R9Y9n2VZ/D1XeQ3u9v2UvC7YX3Uv9bhP9S/8/Ufx/h24T/
Ff5SeLmub6TrB6h/N/XfW/YJsm+S/XPZW+k9+8jeXMc7av+h+6+TfZ3aB6j/
iTpO0rU7yz6K7883l/0qnWsr2w7Clwt/ofut0v0WCF+hvn/q+kNl7y38M2Mv
fIjwp7r/VOG2ur6HcH3ZrxT+Ste/o+v3F35YeHP13yA8U+f/yjx/ztW5n3T8
kHm8PlF7e8ZM7fXqt1L9+xQeqzNzP38X4euEf5T9I9kbCF8l/LXwu/Rnzqjv
Hnrnm2TbkfeX/UvZV8v+pb7fPOHd9awW6jtd+GDhV2XfTHhn9R8p/IPwh+p/
lO51dO5vyLc8Xn1OF+6r+/8kvEHHqszfulPucWQ8z5T9PLV7M+f1t6HwCN37
Gz1vgex7qn9L7qXrDxM+R7id8Ak6+qr/jup/deH5OlLtA9TnLL61rt9b7af1
ftXU93edWyu8VtfvL9yE+S38vewf6P2/U/9lwvsm+zvCu+h+J+den58KT5Z9
R9n3FB6h89fLfoHOjda5ZbrfaOHOwpfoWfvLvqvw/awp2dfp+lfV3l7tPXT9
l/p7svAW6rOt+rbJ/bz7dK5CtpW6x9NqH6DzR6n/Jbp/lH1r4c7CB+vv7sLT
1Wcn9Z+l+7dVe4p+Ty77tzp3nnBd9WmgvsN0v67Cn+v8gWntD5ataZpPLXX/
u9WupvbXlR6LY2W/Ueeaq321jlHCPfl96jNIeIBwF+HB+AA9/221W6b1MwOf
J/tAneuh9puy91N7qd6vTlr7J8q+ROeW6Zq1sr+i9nZq757G9hjGVuf2UPtA
HbsJTxNuEOwL+wl/IPyB8GfRtva8t66frGfeLHx/sP9hDi4S7pp7bnYovB7r
y/4L603PP1R4st4vyN5O/fYs+Zpm6jNP/Yek+TUX31PY3i6t5xsKj8dA1oHw
bsJj1Xej7rdW999d+HrhX4TXCb9b9vxgnnRX/1tlbyZ8anr/DbK/pf77JP8+
tvDvPzDNh9eFT+d61pB+Wxvhh9Suof7f6v6vMn+FH9Xz/hWeJfsp6j9c565U
ew8dN6j9q+yfyP6t+i8VbpHiQ1PZxwn/Jvunsp9T4Hyz7KIUHyar/2469bjs
mfBg2Uuyby77YYy/7IcQ32SvEP5E+DXhHXT/psJnqf9/zHX17yB8jPDxwgvV
f0vh1/g+wo8J/6fnrxeeJdxE1+8t+37qf49wdeFvZP9C9tnCOws3l/1N/JTe
5w+du0jnLtI3qi5cS8/rJPsr6r8T80P9/tH1XwnPZ66p7z6yLxDuL/yW7FsJ
H67nrWfu514/e+rv/5jbKcZtJ3sP4fnqvwI+UHj99E++bRf9PZ/YrHN91K4j
+37CL6j/W+r/hHA7xlfn+qv9WuH5zzrA1y1Qv87Cl+q4WO/YTOcblPwOG2R7
Xv03Fy7rfE/1v0fnDhbeIPt36j+N71tyTCO21Sw8Px5Rvzf1/IPwe7K31vGh
2jVkbyL7Q7LPk72ecAfhacJvC6/S93xG+KA033PZGws/KPtc5jfxPM3Pd9Su
xfpI82WB7KN03QTZ99C53/W8bWRvr/ZU2ZfBL5j3JfMd1vdKnT9S7a/UZ7jw
turfUe3pOr9c/RfpbxfZ/9W5S2VfJdxdOOcbCW+u/jvL9rDOz1f/F4RrylZH
79FL738scbNkvvWL+l+ZO55P1HGc2hdE//4aaX7vk5tf3ES80z2f0f06CR9O
vFZ7sOynlcwfWqldqXMtZXtefZfq+TnzQvi8tKYOkv0p4S2J85X27/izXsmn
wIPgQ/i0P+EMep8TSo7hxPJz9HdgyfEQf9kht+/qnXzK+mh/i9+Fe2HH3yxW
n730zPU6LhA+v+Q5fnxuX4fPuzC3/yNeEDfgjjP0Du2Ff08xeUz076mb4tPQ
3LF9DN9f7Rd1/eFqn8j4qD1L13cU/izFD74nv+24xNmIh8TOnikGn8CR+R0v
VfsN3eOckjkyXPkvPV+fLRup+05WY1KF5x4+coj6bIyOF1VxQ/3P1d9TS+Yb
xLeicCx8Utct0vXddO69zPwFHnO2jpOJ1TqawEHVf5Ls2+rdN1Z6jjBXmPOj
1S7Lvq/sz+l+S2Q/Q8+/reScgNzgt+C5zxq4Tueulf3Okjk8XH5KtP/dS7ir
8Bris+xHMGZqz4/2fy1lP0L2lTp3iWyX857CjYSvSb7hPT2/uvAOwncKz8Ff
Rvv7t/Uex8EnCvON2sI/yl5NeHvh29V/tvC+wncRAmT/qtLfne+/Z1ovR8r+
RWYuc5Du11h4BL5H179fab+D/7k383qAozG/NgXz6Sty+7bxOiI+ijhXMofh
e1+jY6xw0DEMbqVj+5J96lo9416+dxor4vvX8t9vytZU999XeGrh+fR0cD7Q
SXiF8H7Cv+v9DhB+RLim8HfCDxbmJs2FW6n/ZnBk4bv1rNcrncuNK/mdrlaf
s6N992YpnrVV/5eEt4G7V9o/dy15Dl9E7FP/bdS+SfeZIfu/wlsLjxOeLvyP
cF3h64WnCQdd00j4AeE3Kj3efKvPda5b4XnF/OqUOV94m/guXFvHS8SS6Pf/
WbaD69j/dSt5zV6sdm0d+6j9rO6/WPf/U99vYeI++5G7wqdKzhHJFTfFqrCf
jVL/KZX2Q/ijGTr3RvCaZ+3DiYervVz9hpWcn14l+9/BfJQck5wq0/23ZT2o
30zdryS8nfBE4Vnkc4W/N9/9pMS/+W38xpHkEnqfrdR/jOxT1f+y3OuBHKoq
lwrmqnBWciTWGevtlPQ+7XT/l9Wup/bPuj4WXp9P6NqFwp/pe0xJfLGZnt+w
sC8Yypjo2fNk76P2YvUvy/6HrrlZ7c117pDonJncGc3gA+E3g7kKnOU94Xrk
lPAC3XOS7v2YjrYl5zTk32gMaA1z1P99cqlgrg3n/jp6DjOXlwt/E60hoCW0
ED5ZeFDw2DLGA6M5G7GYmNw3miPCFeFcJ0ZzLrgXHK+P8Lbqv1r4DHyC8Hbk
SMKDhO9gLgtvT5zT+74M3y883oz7TsTCwmPBmDBfa6h/9dzx+mnhC4JjPxzg
/GgODhdvS4yMzmnIbdoJDxV+Cj6S5la13JoL2gs5X//oMWAs+rKGhHeo41yZ
nPnx6ByEXASOd6Pw9sLvCp+Jj4zmfHC/AaxR1qbw2xXO2a7Qs+sKL2MuCt9M
7BFeUuEcZ1x0zknuiaZzknDf4LXLGj4+mnPCPRsS84RXRM+vOeq3i65dHp1v
zmaeCE8SvkP4MeEdyWcrnJvtVHKMeJX4wW+TvT75ZXT+sDzpMfewvtW3c+71
/FV0vrsi8ekfhN9lLiZ/uSaab88T3jXpF/iDt9L8/054tfC7SR/4Xvgd4TWJ
P/8ovIa5mvJ35ihzdWXi5+QE5AbkXENkm6PjcbVfkr0B3zo6X5gl3ER4U6V9
Az7iSNn+Eh4vXE/4COE/hUew9oQ7Ch8VzAXgBJ3QjtS4r8KcvwfcKZoPnhTM
v+cKPyk8Sbgh+YiOQ/Wtnuc3yrZn4e/Nd99d59+Kzudnqn9j9X1D+Anhl4V3
El4o/ILwFOFGxI/g2Nek5Ji9Rs9srL/1hHfSvSt01Jf9Xt3/+2CNBa2FHOpc
uJvsGzNzmc/gs7LPrrAPvbCwZoR2RA44IzqGEcvQlGZGa3RodcS4WdE5Irni
g8LThZ9VO2eOCk+L5shwZXKArtExn9jPHGOukTOQO/ANu0Vz/gfT/O4czaHg
UvjQo6J96BPJ33RHHyqsZ6Fr/Rg8Xven8WH8yBEeT/6H8SYHIRchx+gSHQMf
SOuH8UWzQLuAo7wWzaHh0owpYzuzMD+GJ++cmxPBjcifrirMUeAqcKYHozU5
tDk0sXujNb4vkv+4K1pDQ0tDw7svOgclF0VDmRw9vt9UWHP7o2xNEm0SDfSl
aM4IdyTmLImOOcQeOMNi9Cu1tw6eQ8wlOBncjBxhXjSngFu8KLwoWlNFW0VD
fVH4k2j9bGmwXkWMHpXWQ5tojjwyrZdWwpE5LHyU8NXRmgixDp+Eb3o0xSO4
7R/BOQy5DBy3V4ovU5K/Jt4Uut9c4aOFh0evMXJdciDWXi00DHI0vr9wTeE5
5Hj4V+Zj4XyXvLfIrQmgDaA//aCXri28Re787jn4sI6hJXOUI9TeQvZ56n+M
+v+P+JQ7NydHH1aYI8AV4DD7R+ecU1N8IT6SU5JbkvOdGs354H5w6PbRnA3u
Bmc7iPVSdqwhBhAL2gX7o9o6d2xhTge3g9MdGM2p4dZwnLbROfW0FP9Oiebo
cHU4eLtoTjQh+Tv4BDnFcyme94yOn/PS9yY+okHMT7+feAqnezbxgeNTPHom
xSfiDxxrYvKvh8akAVdY474nmqPMVnu+rttNv29ttF6yOFjPZM4QSy8PnkuM
KbHwsuCxZgyIlVcGj83eIeWeJet/zBFi7RXBcwefVkO2LXP7OmLqObKPCP6+
xOxzha8NjuXEEObSecGxBU5BfkmeCddgTjE+w4LnGnMGvQDdgLkERzhb9muC
uQP66deZcz5yv48rzPW2Fh4VnHOQe8BB0X/XVVgLhv+MCfYR3O+mYN+B3kt+
hCZ6Vu4xZu2cFTz2zDnG8szgucicY62cHTwX70m//+bgsSEmsFaGpFhxt/BZ
wjcG1wPuTd9nfLAv+0Tvd2Fmfjk22OeRP90a7Avxebz/xGBf+LDwRcK3B+v7
D0Vff1uwXo7PGyx8S7AvhKPhO4YGczfmIHPx/GDudlPqPzKYW+Ej8BVnBHNV
OGZr1l4w94STtmEthKxqkcJJWzEewVyVGEGs6B4c++FYcInTg7lXl9x8pyWa
TO5YRH7/S2a9iTnP3O8TzMVY2+RH3+NfguMw8fjHzDkTMYhY1DOYi8A54MrH
B3MROAXc88RgrgEHJXafFsxNyXeoH+GjLs6tL5Cv7oe/yl07OUDtA3Uckzt2
oH3vILxbbr2Rehoa7rcV5rBjiEXB3BZOuhX6T26uCicdIvt1wVwVzn6x8PXB
XJ4cgVxkdXDuAIe/RPiGYG4Ph0dvQ3eD2+Nz8D1dgnObDfr7Db5PfXrkzpOX
CO9dsqbwUYVzd/hNo9yc+lLhccFcmxwHfQ6djtwHHRg9GA2tp9qPpPe9I7h+
hV6G/oyG1DtpHvvl1izQQtDQ0dIfEF4QrUmim6GfoVWimaOdo/lTW6GmiKY2
PjPfocaDzoTeRG0WzWXv3BoLWsyEYN0W/fbVwhoyWjL68sCUz+BryDF/LFsD
o1ZDfjQmxZ96uX0gvrBD+s3k02gHaOrogOiB5NdojGjpxCu0R+Lf18H6J1o5
GgY6GXoZ2sYDwZow/OU5+Ehw3Yf6z/joeMSYVUvxHo0GrYb60zXRmja6H/of
taKPout/i4LrMR2Et8isJcNPn4nmNsxN+PDR0bHxh8Tn0Ey659aT0VKowaCT
o5dTm6GGSw1wEz6gcE3vn+A1Tq0PTQhdAH0Aregu9ZnL84Lrh2gYG4P1J7SN
ddF6z5Lg+gI+Hd/eS+d+KnuOMddOF/6tbM4EV54WzKXgOHCr14O5Dzk63Gxh
cO7eMLjWRr0UfYMcHK62IDg3h7PBtacHc7lGwVpIU/WfG8zx4N4zgrnfo2m9
3Rlcn0d/XZ9Zk0HfhOtQD/knc72tdu54iIbUK/fcoN5STUfN3DEe7nBhcOzH
P8BV7w6uP7GGWcun6dyvZXNIuOqrwdzy+Wi97qHg+jg5xATh54NzC3IGuOuL
wbkEOQD1rSeCcwNyiFuYe8G5BRz4BuGngrkxOQjc9IXg3ARODld/JZirw9mp
jz0ZzOWfiol7B9enmNNV3Dy43v9CdP324eD9AnDq64QfDebacOCRwo8Ec+Mn
Y+IywfW3p2Pi7sH1LWIm+sCwzLEUzQ3tDU3pgOg1w9ppH8ydyUmL4JyPXJUc
j/yJfAq+Ts6+RXD+QS5PjhiDc1xyx6MKa2FbavxGRB+04QjdC/N/8jPmKHOV
NcpaLUrmr2gE5DfMWeZu18JaIDUual3k7HWD8wdyeXLq/yqsIZBrk+OSzzEG
jAU5axac35HLojH8XOEYg/aApkAtkzFn7MkX2XvBmDP2lxfmFnCEicy9wlyI
Gvmt0T4IX0SMuiL5V3QL9ItrhJ+Nrk0S44YXzomJHWjArxTW2OBf25VcvyQf
JzZSI6NW1qxw7YN7cK9Whe9NDY5a3CGFc280aGphU6NrN9RwrhVuXbgWwDls
l+uoVXLMoZ5zfmHtGc0QrX5stFZETZ56xgWFc5GyjuuifT6+nxoT+iqcmXyO
fA0uPYGYIFvD3PrY6GhtjRoe+jDz49jMNcyhhfVC8j18Dr4HTYW9EWgyaC3U
FP4L5lDUGqi/UVsYlfI1NNNrc+ulaKnUCNDZ0ZBXJr0ObnuLjtVqH1q4dsV+
hDd1v1WFbZfRJzr+omPwTa8rnFNWV98OwbnmosLaKjULahdo0HDlq0quX3AP
7gXHZn8ANY+v4GWZv+8gnbuyZI0PrW8k/LNk7Z98EH2bWsi49HuogVPvoWbH
Xhw0L/YioWGhhaFxUTuenVn7QoNCf0VPRZvqUrgWxZ4U9hrVLbzXhhoHtSb2
t6CvrsBHFq7JU5tHQ2MvFpoZtQZybrQ0aujU0tHg2HtFPIQjUXP5q+w9Juw1
QRNjbwp7JtBz0W/ZP4OGRi2amIa2huZGPg5/QYsjp2cvCvk5uT56MPownA5u
R8xmLwUaFbGcmEjtHU2RWIkGiLZPjRBtEA2PvT7zM2t75HTsVUGDI9eDj6Pd
/KzjBOZK4VppMx39ovc4UXNDo2LvE/WcipJjGPXqhWXnd2imdRN3wlcx3tTn
X5C9RmbNHH5ZmXstsCbQnTeWHcuJfdS3fym7lkJdkPrtS2XXU9AE4ePnFY6N
xyZ/+mHZvhifie9E02O/GrEZre+jsrU+fCa+84OyfTs+HF/+cdm+lDXMWn5P
+LHMPh3f/n7Zvp2YQGz4uWwuiEZH/vpy2fyZHJ78YavcvgEfgY7+YtlaAZoB
+cycsvM7NBLyZ+ovcEM4AvrGbNmPyKyZkM++Xnb+i4ZTpeWUnY+hwVRpMWXn
Y2gE5N+byh6fmOqFk4QbZNZIyV+2y+3L4AvU2+GuxJ6TM+vgcFt8Hz4Q3Rw/
hj8jJyY/rp/b15MDkAvgz8lnyGvQxtgPgS/Hp5NbU59h/1rX9M2Id3DfL4K5
6u9lc+eqZ9dx/ZS5yJxEV+yd9NE2aX5uVdgfMCeZm3BsuDY5WP/EN6lbU78+
KfH5f4P3mBE/zyxcm2DP0yXJH8HF+GYL1T69MHel5oa/vTB6rsHJhiQ9dwNr
Scdx6FGFc0tyTPhqax3fZs6h0IeWFM5NqbEvLeyP+C38JrRf9vRRtxqQ/Bv8
l7yU/LRnuj9cGE0VbXVA4d/GHonT4BaF+x6i6x8unEOQS+BTRyb/zl6tYcn/
w8+z3O8wKPELvg01HGo5S8qeu4w9+dyisrk1a5X8cqXw7Zk5B9xjcdlrmblO
frm0bK4F5yJ/Zb8Avp5vyn5A9kCxb4H9C+ztWlU2d4GjwFVWl81V4DBwGXI+
1u/k4FzwlMJ7J3ln8gn2aLFXa2Hyn9S8D8vtA6iFv10214HjwHXICR8QfiY4
Vzy5cK7HGDPWa8q2w/ngfsuER2fmTHCni6NrsVem+UL9mm/N/l/qxexZ+DW4
Zkx8oZ44PLNGPTPxGbgIexRm81t0v/4lawTEHzR3tMfjgrV48j10JfQl9t6h
2aM1Hhus5ZO/U4vsGqwlojnWEj48WItE86sp3C1YC0QjRMvvF6wdkv+iO6A/
zEp8CW7AHpc5hfkevw3NAO2APUtNc9dM4GdolGj3/YO1Szgd3O7EpMeTU5Nb
o0mhTaHxw717BGv/7FnpmDunYi8LmjO1iQHBWjR7Uj4N3q/CXhX2x7FWBqV6
CXs+jsytUbAXhP2A7O1AIyL+MceYa+zpm1A4phBbyMeolaP5Fvy+YC14dXQ+
yJ6/cTLcX3iv0vvMgej5wtpjj8yThfNX9hq30HF3Yf/SObNGiVbJNVyLJnRf
4RhHrCPfez7xT2Ilmjja+Dnqf1jJmsnZhXNscm32uGxM/IW5xZ6yxwuvf2I1
e5weKRzziH3kp+MLrwd0G/SbO4U/j9Zn2SM0sXBNB5dwTHCt57bC2i196ItG
HYlNwdo1NRlqDUcH12rQFNAWyGHRduGUzB/2vI4WvrFwbs035dveXPjd2FPA
Xqc7Cr8be5jWp3yD2ISGNCnxb2oDaLpou+RsFaz/4FwOTQdthz2XYwpr8DJl
nYK1eWpSaPEnBNeq0JzYO12VQ0bv+WS/yojkn9Ew0DKq9uAV1l/Yl8UeJjA5
98aUP5GLk7OSL6E3kcuSg/6S8ilyU/gy3JgYSm5APOBZ1FyovVCjqPq/g+Da
BTkve+XJ0cmFqbFRK+gdXHtD80L7Ys/o9YU1IrQi9pCNLLwHsHXuPXzkQ+xR
bJG7Rkm+hCbB/w5U5dTROTh7RcnRyc3RQ6kV9Aqu1bEH7ZDc/9PAeKEhbEr5
IdoC+6OJpVenej0aMnuvqzSH6BycvaY3ZM7N0ZzZW16V40fXWJAAOwfXXv4P
IIttYg==
           "]], Polygon3DBox[CompressedData["
1:eJwt13m8TnUeB/An3HuF2xBaLDVFqcyLkWQp+1qWDBPJWMZSryHbZGSKmrLm
WrIvibELM/Yw2WUpW1L2PWOZIi202Ob97Xn++HI+7/M963PO7/zufe26Nema
LZFILFBp6qN8iUTf9ERit9BG/keeRGIze4sdYJ3YULY+M5HocEsi0SUjkSip
3pA36eujb5e+1vre0PcxG8iOsK5sBNvIXmM7WSv2Optj++r219O+TllXV/5Q
34uWV+qrqq+tvpWsPVvKyrOW7D/sBbaCVWGt2XDb/8tyfl7FPkfI76h/swKs
KhspD9Sbz3ELyef5N/a1Qb1qeYf9/Ul/Hz3b2VD2JevFxrNPWBY7xf7GxrH6
9nma9bK/Hva7Rd6lbyr7Sd+IuKfsJZWup5mqo2+B/IG+P+tbrK+cvhZxn9nf
2XbWkvVlK1g7toQ9zp5nV+Oe2tersT/Wi+1ms/Xd1DeeLWfLWUs2n5VmTdhq
1o1tYA1YV7aXLWF51Gy2kS1mjeQp+u5ltdkW1o8dZJ1ZFtvgWjq6pq7OpYzq
J5dRM/Vd0jdQ3xJ9q2zbkX3AKrM27HO2lGWqOWwDW8ael+fpK8Wasj1sPkuL
82H97X8r6y8f0vcSG6bvKNvMiqm1bD9byprFdekrwRqwz9gClq6msgH2t4Q9
K8/S9yCrr28mr+ramrqu761rJjdUZyznYtms6y5/Ydtl7DY117abbHuQrZUL
qeVsN1vLesibHKMR68YOsFWsoFrItrF17K/yR/qeYd3ZGtadbWQNWRe2n61M
Tz7j8ay/7Vz2sRXpyXch3onB7PdqRjzvth3AFtt2kb56bCS7k1Vmr+gr6Lpa
qPqubbFcWk3Xd1Fff32L9B2y7TpWOH5PtosdiXdJLhrvMNvDDrP1cpF4X9mn
7FM2R06oCf5bxnaySfJ3jjGYzWUtHfdn1te5VHMus+WpvJv197Ni6qcYCzKT
Y0OMEQn2olxYDU+NYfGcTrJdETYi9ezG8zKZpbPGbBDLz+qybfY5gB1mXdhw
lqHvD+xtVoDVY3eyv8R9Z2VZezZGZTnXAc6jv7pmX/n1tdU3M/VcxXuej7Vm
01lx1pzlZa3YNFaMNWM54nljk9htrCa7nbVhM9gD7Dn2s+PUdbx66gC7xIrG
GJh6P+I63mMPs8nsLOvD5rE72JMxXrDL1jWXS6opls+z1+N7oe8h9i47w15j
77NM1oJNZEVYY5abNWdjWSHWiP0Qz4flI7yRc/zF+ebU10TO0lfQuqf03Mqa
smHsDvY0y8X+yEakntN4L/Ow59h4Vpg9wx5n71nOwUs7xltydtUgnjN9FhM1
9N1i4Wk2huVm1dh553OQVVT72EUWGzwlj9KXS6zKbqq6bDjLmXpnrqlabHBa
8ptaSb6uarMhab8+5okn5F9UDaE/y84qxDiuarKBLAerKF9wLsfjm6WOsSvs
IjshV1PH2Y/sa3YsvnfqKLvMvmJH5crpyfsd9z2b66gvj3OMuKzq/rmh6rCh
ab++Mokn5XO2PcAqqC/YBXaG7ZXLxhyBnWOn2R65THzT2Rn2X/aZ/GjMB9hZ
dpbtl8urz9nX7H/skFxJ7WffsC/ZLvl3ahs7yU6xnXJJtZWdYHe5jk4xRjrn
x1gHdlzfJ+yhGCvZMXaCbZcfVpvZUXaS7ZAfUVvYcdYmM/ndje/vdd5WfiSe
IcvnWF/r5usbxaq5SffyD9loeYiqxPKlJ+dSWfEOqeVyNvUu22zbVuyq/GxG
cr4zVx4avfLtqfF5mFxDrZFzx/eH7Yzngm2U86r5bC+7n42RS9j+ZTaNlWPz
2BXnPIytYmXZXPYDy2IrWOWYc7DsajLbwnqr5pZ7h9vnpZi76NvOSrOG7J/y
3aqzvCg1V+lou1JsGrvA+rGFrFrM49itMT6x7eyYfW6Ri6t17ABrn5mcy8Sc
5ibvII/lPeMbFt8Vx71sux9VUcv3ZCTH/XdiLIkxVS4QY31839h37Ddy3ozU
9eRJzs9injYkvj/8ip7qjrM6vt0xHlu3Q88g9YLlN+P7re9bfd+rfPEbZSTX
Rc+Y+J3k3+pbzcbKj6pZ8reuY1B8g/RNiN8yvlG8tv6JcnE1Tj6ZmjvO0Fcs
rpmdSEte93TWleW0zWpWK+YHcp2YX8Rvrjaxr/QVYj3jedRXk73M7mWj0pNz
77hX8a28h41MfctiPj6FlWAT2WnWm82OsYp9zO5Wy2KcZg+w8enJ+W7MgWey
B9mE9OS8+BU2K+5zZvJ+3MdrOffx8vtxrzzva/Td4O3ivYrx1PpS6cnna4pc
IP6uiPGPj9a/T+6hcljeattz1jWWH4t9Wr7Mhtp2peM+wRazG2wcWx/jMNvG
7lJL2WFWiS2Sr+sby9aximwhu8bGsLWsUxw3I/kdjO9hZ7lKZvL9jve8nHUD
Yz6Y+lsj3t/ybJBcIf7WkK/adrR1a+xvh2doWOo+x72awP4P617WRA==
           "]]}],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw9m3f8jeX/xz/nHJxzx7luzn2Q7IgQmSUlaYoG7aWhiYb23kM70lTJqiij
pVQ0SSpa2lNpqWgoDfF9PXtdv98f1+P9uq9z3de9ruv9fr3HaT3slH1OztfU
1Oxcq6amILmuWFPTXB1dk5qam0s1Nb/kamo+UN/VOr5U/XnJGWo9NPghySzU
1HyhMfenNTXjNP5X4Q81/hbh34Q/Er5f4ybo3GaSV6ndLbyx5Dlq44Wrkgdq
vgPU1ut4b8k7JP/U+Ztr3k7CB0ruXdGx8MG65nTNXxH+TfNfr/M3CF8r2U7j
tpBcnem6GpOq/2eNmSbcQPhX4UM0/23CazV/U831reRVOu9lnXeX+htJHqcx
x6oNUXtax4nkTZJrNM8ojdmD55N8Wu0ptY46v6d+/1vXvUe/5dX3ta71u/Cp
wnvyLtVOFN5d8g+104T3kvxZbaTwAMm1aqfzDiQXqPUUbiA5Qa0g/I3mfEC4
vvAvwifqvrZSK+n4PvUHydXqv1H3MlG4Fe9b/TnhFervFPxeH9L9TlR/HfV/
p/5JwkXh74XvEq4R/kq4r+buw3fROavUP1z9u0q+pNZDuL7kjppzI55L3+dd
HQ8Ubi/ZX9feVbiNcBddbxbfS2O3VX9v4Qskt1HbWrihxixT2124nWQv9XcU
LgkfpXMfFP5B5/blHL6R+udLPqN2htqzavPUzlQ7IPE73FfyEsnXeEbd/906
flX4HslXdH4f4caS7+g5v9fv9dV/FN8w5zU5Se11jZks2UH3MF14pe4hLbif
cxbr/G1Zz5KdNWYma0xjdtI5uwm3Vf82Gl9b7U7ekfr3l+yu/kHCBwj3EF6u
drDwVjy7xv6V937bRXPVk9xMYzfT/M2E9+d9aFwmvEb3fqx+m8y1JJ9Uf1v2
qeR+Oj5WeEfhL9QOEu7F90q9ZvtL/qTjE7iO5C4aP4BrCffWb48Lby35m45P
ER4kuYOO5wr3k9xJ7Yg4z57sYeGeGvOj2vHCO0uOVf9S4WGSP+j4GOEdJD/J
ex7GTS55/a4sep+NULtHx8dEXDdvOTL295PcgX2Zs544oeA1jf7YmncnvGMc
c6F+fzfxmM81/1uJz7lGcpqOn9HY9br+tNTr/CbJR/Tb5+p/Vb/X0vHlGj8O
vRI893XCixJf6wv2mo4v451L5qKeRF/uqf1QFt5N543XNTbo3C81fmbqeZhv
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
Y3BXalgyx3zJI5+Xud6rHt8xxn7x+W4Pzk2wX9aV7ccVNOaOYF/77+CcEX4S
a4saoSH4/JrvPN67+v+QfCNzbJccLrlUeOK75OiCYwus7SPVuuW99o4Lru9i
vxwbHDNh7b2cORZJvnV12c9SoznrBPutdYTfzxzHJCdI3vgtYm5F5wnJ25K/
LQb7xUWNqR08pnbF8QF8QeITKzXPEyWvjR8y+8OsDXwQaiyoB4CHb1lwnn6Y
fmuj/jYV16UQq6K+oD26AP9Hc2xRdU6lOb5D1XVd26T2zYkz34FPX3VdVN/U
Ph28HL8fLggnJOZJjoCYWEfJ/dVfFW6t6w4Orm9sRUwiOLbDGmtVdW1ZD/hI
1TVzHTVm06rrvXZRf+uqa8u2JW6Quc4v1ZhRwfWEHYSPCq4Ta1txXAvdgo6h
hq0PMRLNcQr7R/3tNaZ+1bm03fR7pWr+R10BvBnODJdrV3UusCA8PHMMgrU6
InP8gvU2KnI8uN6ZmWtG0e2nZPYtqZ04I3PtKXbnrMy1pNiF82NtZbniuiXq
l8jRX5C5PjKo//jMcQrW0rmZaxnrCreouuZvM+GTM8dlWDMnZo6DsGbaV52n
aZk65gy/PTF1TOb/an/qRp1ZL8Zn8C/JkRJvnCT8oOQ+qXNvp6eOq1N/RR3W
SZljQKztoZE3ki8jjko+6wxiLan9ZXJ/1Bx21/38pfM6CW+Nby28V3Ata8uK
9WvXgms/qLGg1oJ6DOIMcFDy1OQliRmQ05waXGtK7rte1XEc7GzdquM12Og6
Vefw0PlTgmuZ4C21q45XYstyVcdA4QBbBdemNtKYPsK14U/CNVXHHNFdxNSI
rfVT/6rMMVz0IXV1+ECsmR8zxxDRmT9ljueie//NHJdEZ27IHJdEZ2ZV13YQ
b0mrjkOhxyYH16mSu787uB5se+F9EvNv6kLvCq7L6ltx7It6M/ZLqeoYLjbu
ksw1tQ3IUQTXNrP22gbXRaNj2wT7wqyxDsHcuL5wR+x9zvuuedW5w02F2wXX
RbNW9wiu420h3C04R8y1BgbXLTevOM5LvLdZxf4qPgX5kWLVMWJ0Mnabtbdp
Yl+GmDVrr0dwHW+mc3sF1yQ3hEdlrvflPnsG1wZXhbsH1yhWhHsH1wZvLLx9
cH3mJhX7JsTvyb3vEFyv2LTiOD+xksGp66mIIX2t62wXXFfcRGP6l1wjNzBx
rv854dMS53CJ4RPLvyxzfTP3TN6ZGB2xOnKu+CXEn3vE2NNwyUtjnTf3fFfm
Ojb45MTMdWnwZGqIiVGhu6/IXDvOexifuQYOzkxcndz7xlXX4fAuG1adb0b3
9obTZK7bZs1Qr4xdY3/el7m2FX7OPiVOjp65PvIoviM1sU+qf1Ti+jd8M3L6
szPXfLM+r8xc18s+ujxzzTrfhXwx8YvjJWdmrimHE1JfSt6jse5zcuYaQTj8
g5lryvEjbstce4fOp2aaGBt6ZFrmem58kDsy19LhR0zPXL+IP3Jv5vo8/AVq
tonTjZS8OtYs8U2viXVErI1rY80S62FK5tpHeP6dmWsT8UeuylwfhX64O3Ot
IXx+9+C8z3vBfBZ9SF3zpMz1jvgpMzLX38PzyTn+f41A0euQun1qBfFjqWcY
nbl2izV8S+b6QmwZ+T5qG6ijuTVznSKckHwrsRJsOnXh+M3kbsjLPJZ33QL1
3PjF1FyS46D+E5t7U+QY2Gvqp8mn4DM0qbq2g+fCjyAfhL2mHps5T05cH48/
hd2lfpo4/G6Ja+jx1/CvqAvHZ8S/or6BGAy1/cTbWVdwDGq7iQkQf4erkC9D
5zySuUYW3UsdDHmZvRPXj+I3wfOofWQPshdvjL4M9mVq5ppa/EH+fwFP2aTq
XAn8tFnVte/4oTskztGwr+EJTavWudTEdo+xCeo9qHcnPkFtKrX+xC7Ie2E3
iTER27kh+lboRvJB2C/sGLkz6lrhP+QpiGXAu8Zm/k8CnG1M5jp4eBT/H4GT
w833Tf2fCOz7dRrzaMl69ZuIqau5OfP/LuBF1Ojj7+yYuJad+Az5p1ZxHub7
H54Pu14=
           "]], Polygon3DBox[CompressedData["
1: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
/VXjX1X/tcIfCP8mPEO4t/CH5Y4f2EuD9G6WCk/Q+VPVPzCxvcJ//1jBPgWN
5MXg9/NkYvtWFF4ofK/m+1x4XLD96Z/YH3wovFZ4sfAy4X2C9ZLBGn+zcKHk
7zE18f5jfS1FK0m9nisJfy78aOrzC7qHHyqY38Bzykr+fkMTr7eqwVpLf41f
LjxAz9dG9z5NY7/Gn6r/M/U/kvp7PpJZq0IT6EysWtnP30P976l/Q2Xvl67C
7wjfofOP09hvIr8+RPNPFT46xgfH6u85wl8RP6k9KdjfcH+zdP60YG76YuL5
nonxz6/EZjp/ovDLcEP1v6H+WcLzhV9NvF6GCXfR+LPQcWK8jj8hxuqnOVbp
fkepfTH7TOMravwi4fuEv8B/6H6nYY9ifDM5eL8N1/yzy23nsfc3FqzPTA9e
v3Bp/MnNwu14vhhvzYzr75XE6+mNYP85PfF6ez3Yf05LvJ/hy/jr9dggfIz6
j4APxXjqQH3Pl4R7EYMLvxS8fkfq/Dd1/k3CbdX/ZYx3pgSv51Hqf0v9U4P3
12jht4V7wTcLXsM11G6rYwbxmeYPOv+G3LbokYLj98eDv9/J6q+n/ruETxA+
Bi1L+Gr9XVawJrFK9/BWXP+zEu/3t+P7np14f74T1zP7F/6BzocW9HTB8Qx6
1iz4qY5z1e6A3ya+0PGX2hfqntpj71K/D+Io4ik02QFq/63v/Y7wrepfqPln
cl32p86prP43gzG/Y3/QY4fhD3RckVnnQu9qGe0jesnjBfvAlFgl9/31jusN
XRR9tEGMJ+Zq/i80/3uJ7c/5Gt9affN1P3sRv7PvCrbhP+q3G3P7+gEF6yOF
eH/zmTfyAfh7P3yK5pwT9//cxHzs3bh/5yTmY200x6sae038Xs2EX457j+/V
Obe2h83Yi7UebJ8nJuY7rwXzQ+w5fPD2YL6yIrV+cVswv1qeWq+4Prf2gcbW
kVhH6/UytdtFvoE+VqlojW7v3PYCPr8ytT7SRuMvFW4rPLHcMQv69uepY5m+
wfzu69Tx/0EaP0X4yMzx3SD1XxN97QThdpnf95dxz6DPbOdZ1d5fz9+yZL3p
MI0fp/F7l6yN4DuJR3YL1t+eTB1f4A9fEL4ktb2qHqznPZE6vmim88/Q+Y2E
RwrvHqznPZWaPz8ZzH/w1WOFV2u+0cR3qe0LOiN6I9/jPrXbab4reL7IT7/T
+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
sjDykfeC3w0aAloCOXVy69Qw1cz9fqg1GyFcN3eOCZuBBknuCf2PeJk1R70a
+iK5MzQj4tNvg7XrmjouCK5hoZaFGrZTxR/2oGYtM5+pr/m/SJw7533x3oq5
a40ejvENfJPaHDSCx6NGgVaBjcPWzYDbFB2/EMeguaC9UO+E9ofGQdwIR4Ar
1Mn9bP1ivN84cnVqIP4hVw5/zpwvXxWccyX3+n7merv61VzjgkZyDLVk1azZ
k2M/RbhGcP3S3Mz1SqzlNtF+Ts8cb92bWUMjHiOHSy73xcz1dA9lrnWj5mZx
ZtuILYJTU4+Cbsa35JvCQyfq/G5qf5a53uSTzLazS6xPqZG5DUdfGDG1UtSw
LImaIToIMRCxUKfc+QeeiWdD80D7gDPCHcmrkV+rj6aj9pDMtTTUyFErRw6a
ejw4NlwbW0dsQYxBPRd8df/M6+P44Lou6rvg9HB7cubUA8E54Z63Z85F1VT/
a4lzmtQKkpMj18lv9OG/+qT25ydmzvFTOzQPrl00/7xb/Xdmzh/yG33koMmX
j8ucm34ycy6LNcXaej9xPSHxzz06f4qOrpk5Odyc+/uogmME8mXk+Mn1s0ZY
K7XIqWfWJ9urbwm6dME1Y+jP1ItimxcUrE8SwxPLE3MSe3I/xO7VY36tdm5b
T8xB7DEi87egxpBawwcya/37Ew+xzzK3qdmjdo93flxwzMC3wKezNlmj2KVF
0b4sifaQGpOQuiajU9zP+8V4gzm65t5783WcrPZyjdm74BiCWGKJ8J4FxyTE
JsuCYwtieGL5r4JjeWJ+Yv8vg2N/YjBisS+CYzFiJmIndCq4PprQUWi4wVwD
zkGsSb0t+5WaMOJH6r8Kwv2FQ+6cwUk6r1fBfHpRcOxHTEpsujg4ViImJDb8
NDiWIoYilvo++F3AKeGWa4K5Le+Id/VdMNeEI8OVVwZrA8TcxN6rg7kznBXu
ir4F14ZzH63f1gdzYTg33Hut8CEFc2i4NPEAuUo0KeKvdcHcHM4N9/4seG+x
h9nLK4JjfWI8Yr2vg2MnODXcGk14TvQn5O6xz78krjE4De2yZH2Kd019wdJg
LgYnOyt3/Su1smjs+A9sOrad/XFCsA2pn7kGkvvBpmJbqVlCD0FjRttE4+yd
299XSp3TJT5FP0Z7x+dQP8f+w05jry/JXYO0LXGOc98Y/xF7ksO8LLc9pybl
AOHTS/ZPxIbU+Fyq/m+C+9Bw0HJYw6xlaiL/UV/l3GuHmkj0/Y3BsQWaPvEJ
3ANtiPvlvslnwcXh5M3QwXLHCmiA8P/DcscaaKzwd7gU2hOa9B6smWBtjRwD
ehuaJNwLG4WtCvF+NkU+gE3BtpCDovaAvBrcn5xMUzTQ4FrobQXXJ8IR4AoV
i66PRCNtE+NLtNML4vpBw0LL2sA9FxyjEatRr0dtIjYeWw+/QOugZnuUcDkx
fsE1utTT3J279oca3Q659RxyMti7c0v2qdQstIj1TcOD98J5meuT8WnUDOD/
8HXEqMSq7TPr1Q2DawmoKZiUO37l3Z+aOV91TuqabWp6qO2hnqpFrD/gXHzu
f7XssZ6qeu5cEz4cX06NE74JH/VAbn73ceaaC2p/+sT1hqaJtrkpOHYjhkMb
/TFYG0EjQeuDn0/JXCNAbrdRcK0GNRsjmD++bzRWtFbiGWpbuKfdcnMKfCb5
QO5vc3C9JRoqWio5+UGJcxLkJsjZD0mc8yWXT46fXP/ECq5dYP2Qa6JuAF9F
PSOxAzEg9WnoXR9krjmDLxK/kwdjT5LPgaPDxadm5u5V0QsT5xSP1fetXs01
iPiAk0qugYbHwefI/VSLnIV6Wv534KNg7o9Gi1aLvrk06rXEL5+of0sFa8Jo
w9TcU6ePDcIWUY/LWsdnd8/9/R/R2Ak6Zyfhj4NjH2IgtGH0SmKtbnF9UT/M
3qDmrCf3p6NYtA+hfrhrtBdoDGgN1IdS+wZngbtcGe0LGgVaBRygmNkfwQ3+
Vv9VBfsgfBHrjW8JJzhd7QXBsSQxJVog9avk9cjv7ZpbQ6sV/Rm2CT7Pt2HP
lYRfDq6lewCblluzhbvwPvjfCGJ8uBI12NRiH5VbO3pDxzG59bwGUf8g18Yz
Ns28Jnl21g71IrxP3ivXe72CvznffozwqoL/x+Gk3HuQ3DF7mr15ceb/gaCG
j1o++Av/u0F9MnyS+hbyO9S8jE/sb+DWrCHW0skl68+sIdYSHB+uT40btXDU
WFBrQY0OtWXYEP7X4YaCbQs5fHL52Ai0E/Ib5HTRLBvn5kvUrlO/OSraGDgH
PhDbwzMmmd8xzz44cmC+P7Xs1JNS8873wBbyPwLk8IiPyK1Ti/xYwTU81DRQ
U0S8PTHap/Yl83f2BHsDf0rshE/GN38eHAvj8/B9y3TOfQX/Twrre1bUM6bF
/U/Oj1w/NQHkAk8s+f952DP//b8K+ZfMPp13/Q0aofovSl1PQU1K/6gHULvI
b9RaUPPBWGpeqH2hxoXaPf5fgL1EPeriaMNaZ7ZR2DZylNQmUENB7pJ3grZR
nvldEeujTdeKzwhfIHeCD8eXkxMdHvUacqXkV6h9JubcL7fPOjjzHsSXocGi
xfaN/pw9eVhmm81e5f+diH155+hO6I/k7P/TkKP/wldRA0wtMHuQvQjn3yV3
DRi1YNTwUPsJR4IrdYnrkZxk66iXo++hr7CuZ0b7Sw6XXC7ri9pDcrbkuslR
ksulRgafjs+jtn49mm7Be5D/vyCHS+0GNR3kdqmho5aOnCS1htS0tY98d3Tc
f9ieq+L+pKbuxMgnqZVlj7BXqGE4PncNHrV45DypVaRGY3aMQamtwmfgO8hh
dyhZzzk/s0+Bj1CzwzqfFfUkaiqorSC/S60XNQDUApCzpBaRmhBiXPQJasNu
yV3rxp7hfVPDj1ZOjod6cGoqqZUlZ0qtJT74iMz/k4Bv/j+gv3iE
           "]], Polygon3DBox[CompressedData["
1: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
5dbUS1tjY7/R1kzla2K/xs+lPwHn8RVi
           "]], 
          Polygon3DBox[{{3901, 2381, 2100, 2101, 2382, 3902}, {3985, 2481, 
           1994, 1995, 2482, 3986}, {3893, 2373, 2085, 2086, 2374, 3894}, {
           3911, 2392, 2115, 2116, 2393, 3912}, {3798, 2225, 2344, 4686, 3656,
            3657}, {3651, 3650, 4681, 2337, 2338, 4682}, {4645, 2248, 2071, 
           2070, 2359, 3883}, {4650, 2260, 2086, 2085, 2367, 3887}, {4642, 
           2236, 2057, 2056, 2351, 3879}}]}],
        Lighting->{{"Ambient", 
           RGBColor[
           0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
          "Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1m3XcFcXbxh94zlGf2aNn93HADkzsQMXuQEQlxC4kFJEQFARJCwS7AzGQ
ULHB7g5spcREQRFBBEQE5b2+v2veP+ZzXzs7uztnd+a+rztOk3N6tu3RsKam
5t1STU2t5OmxpqZhVlPTt76m5uSipmaiOm/Na2rm6vw8tb5qH+n8K+q/QPKp
1P9areXchH+R/FXtTuGzdJ85wrOrNTVTQk3NaB4k2Ul936ldq+M2GvO9cGvJ
zSo1NT8JT9X99y/X1HwrfBz3LRnfrfaq2jfcX21tjflScqDu85aumS78puRG
6p8h/LD6T5X8Qu0UtUrZuIf6P9dvayc8X3JMyfc5Te0NXT9N8nXJdTTXSRrb
Qnhsyf2deQ+65njJJppzoXt+xdw07pCyfy/vqKprH5UcqmuXa/wl6t9J45/R
u7hC/UPUN0X4cuHBwk8KDxEeIPy08DDhgcKThS8THiTcQde/rfvMVN+hetY7
vA+de1fPelGykeTzOjdceJjGv89c1U5SO1ftY7V7dO651P+R8H5lv8+D1Z7T
tVcxZ117V/A7Oz7zda+na1/W8ROSD0qelb51a7Un6z3mCM0xS9+O7xbS/flu
w3XuDckjJU9Te0t4hp75lNpQ3fNSPbehxr+p/vE6Pkpjpki+rbkcW/a1Y3T8
iY4/k9yMfo35RHiV7nGX5nCM5rVAa/kByQka/73kJlpXJwo/I7xY8gLd60PW
huRpao/xvSo+7qIxl2rM6cIPqv8MyTPVnmY/6FknCy/QPA8v+z7ct1bylLK/
98rc1++axtI/Xsc3F/5Nt+j831U/f5T6+uv8pbwjHe+qOfQT3li/636du5L3
J7m5+nsLn6e5TSo8Ns/dwM/qdz+i/gXC96uvWcX9t2j8Lun+N+r6iYWfy/N3
1JjZwjdrzOPqH8Z7kNyp4ud+lfl78u3bqLXT+RPK3gf36nln6vy/es83Zb53
va67U9efXfacr1dfh7Kf0UjnOgpHycZqH6tvfckXSu4fXvK1Zwn/orl9r99w
DmtL8p+q1+ldOr+Nzs9U/2Qdv6j+qyUv15hN1b9Z+o4N0jxHp2fwLJ77jt7p
C2DJE3X+pLK/x32a/4Poo8zf6uT0Hcvpu0/SuUv17CbCAySfLPk3st/2lDxP
7dNay64Jb6jndRHeQPKlks/dIrlRxWuV/hdLHjNC8iU9+xPJozKv/U/S+n9Z
8lO1k9V+0+/sKbl14bk3TPM/S9d0Y/9JdmRtSP6p7/Jv1XPppr719JvfEL5N
547XdSvYz7XWJyuF15L8Ibde3kL4x5L70X3/qH+A8C7qXyr5T9Kr9+p4lfD0
3LpzddLDPSRryv5+i9T+UHtb/V9mxi0lB5S9D1mL6IEF6Gjd54eS8SPq/0zj
fkOfSLaX/F3tHfV/reO/hWdJti37WehevtHmwv0lR6Zn89xpua9voP5z1ZYJ
f61306bs+b+kMY/reHCtdR466YSS18oaZevbK9QuK9lePK/+nurvUfa9Wktu
q9ZL+NnMuvZYyefUbhC+UfI/tZtK3o+TM9vSnpIvqN0sfGvmPbKT7vMv+4o+
1iTrSnNejh7THOfpt5yt8/fr+34oeVHJtpjzg0r+xlvpHoOxg8I/Vq0/H6z3
d8fW8y2/SO+UbzGv6t80Qs/5XMfD1D8YnZ/ZZl0k+Qv7UfIBPbd70nt8P/Yr
uuIDXd9b+HLh92ttx3k/6Ksz07r5TPdoWTZm/TymOdXruGey/7nwAyXzA/bu
z7q2h851VN/Rkl1KHn9drW04tvyekm0LNgb7hc3B9sAZuFc1rUO+4Rppz2IT
1yxbpzyZ+vm+P2Tu53uxnuEWpye9t07SJ99hqyRX5P6eH/JMHX+Q9ik26eF6
2+VvNLabrntPeCp2pDCeX7Xt/Z9tVv/czPPk9z5e72d119jeavM15hTJRVV/
25l67m9V84sbNH6HtAZf5ltn1i3omDG6pq7svd9Icv2yddx6CU/QuMZlH4P/
/xx6hPWG7vs3t/4rJ9t3bmYbhC06p/D3/1Vz6QOn0fk7Nb5VWv/sA+xqKelk
vteSknkXa5u5sb4bBHMKuBbzapTm00/33Fi4r+S62I1kd55J47nu4sK6pqXk
2sE6A+73e2Y9+Vtmm7BJmsPraQxje6f3cqHkBpIb8s7RVZlt9ULJ+/QtOkku
05o/SOOeV//Qwmu/e7L7vHvWOe//7cy26R3JoGeMU19f4et0zRl8R91vZ+w9
9kO4LphfXKwxO6q/H/up3hyRffeX3udfOtdU918ueY/OtZH8Jno/XsBe0di9
C9vPTHKfwvZk7WTH0bM7S26m67ZXf189c7qu30nHI3W/E3WfjdBtwp+rf1P2
P/xf/Zug94TPEt5KeLjw2cJbC48Q7iC8jfDVwucK7yh8rXDn3M8axe/V/fYR
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
80BiVsSu4L1wpwOJnTdy/SvxSbgxeaL9JD+LXtPv5K6dooaqVeF6SHw97kl9
OTmMgcIvR9s56hZeira71Cd8Gb3u3xP+Knqtvy88LXqtfwCvi17f7wp/F61D
qdddFB03pxbl++i8FDV1M6Lt04caMzN6j03FL4z2VcjNHZ57/7LGDsu9H/nW
7XLvNb7pCbn32tuSHXPvU+YGL0UnEBvolHufMs8/ouMU5P3nJx+shca0z61b
eFc/ROfb4Ip3B8dwpmtf3CN8Ib6+8Km59Tx7izoz9OmphWNMxHCI8R5fOA/S
Ge4fbduo/Tgtt13mXZ1O3LDkd/tatG2mNqNximESy/w0WpfxGxdG5wmocXo9
2v5RB/JT1XWepxf2KYhhnCj8VjSPeUF9b0ZzneeFf4uuuyJWuTi6Toj8Dj4s
8UdqiJ5Q/6/BtQfdo7kdtUxPRvMV6lXOjs4jkqN8OprfUNdxYbSvQi1Tn2hf
hRqnvtF+LPUV44S/Ca5duSjan6SuqXM0nyZ/2iWaE5OT7RjNNcnVdormu+RJ
L4nm0NR7PBXNq6gh6RHNO6m5uiCav1JP0i2am1Krc1p07pbca89oXktd1pRo
HkZdygTh74LrNIj5w82o0Zio/u+Dazkep7YsuFbnUeG5wfUq48lxBtftPCT8
Q3Bdx7nRtWXUjE3CXwquz5kczSOpn3lMeF5wPcn10fZ1hPAN0Tb1auEbo23t
SOHe0T4MdWKPCP8UXCfzTDQvpD7niNw2Dl19fjTXp1btvGifgXq2odF+C7U0
w6L3AP+teC6ad1Lzc1k0b+B/B0OifRvqT26Ottmj1H959J7hvxjPR3NuaoFe
iObx1B1RO02siT2CT01ekXwj/jsxVGr08B/xx6m1wZfBR6AekDgD+SXyeIOi
/TFqWjpExzjIZb8YzRepO+oa7c9QIzc42k+jNmZgtF9HbczIaB5Gzvf2aLuI
Hbw6mpPx35AR0RyO/3r0j/bTqPPpFx2XoUboumjONFxjRkXzHurtr4zmWPxv
5dpojnWV8C3RPO8a4QHRPh51R3dG2/Kb1X9HNG+4SfiKaP7Ef1tujeaF1+L3
R3NB8tRXRfNL/i9zoFp9ybbv5Oj6A+oWiI2TTySveEzaj9TdtUrrlrq4Q1M8
nJwU9avEaalhp86T/w9gKycUjks/it4IrlNaWWefhTgS/49oGe3bU3dHjJ1a
1jEpLk2+6GJ+d25fCV/tqOh4AfVI1J/jj5Arbpmbz+BXHZv2JnWD++Xmcui3
+tw+0QOs8+Q7w83JmZLnICdB/Uyfsu116+jaK3y7I6NjB9SQvJzq2+G5h0TX
0JPn4r8kQ9PvpQ6KvCG8hf/RzEp2tm3a19Q98j+mz0u2Nf9F54CpZX05uAaS
Wsj9ov1z6ruovV+Y9HmbtJeppWyf9Ax1mAdG/3eLHDdxAOr0qJck/kNuifrZ
FtH+NrWdZ0XHFqnlIC4N16Yulv9kEd8gzkFMgHqDGyVviubip2r8vtFzpS7x
6Oh4DXWe+0fHSqiNaZf0HrWjJybbQc3JmdHxUOpJiD3hc7BWiRHBe+dir6vO
I7POz4iOw1JncnzSmdSaUj9GzBmu8q7G31ZrPfNe1XFg9s6p0fFcajyogaYW
+jbJI3Pzf/jkx1XXCbCPDojObVM/3C23vwYnOS7pdupj+Z8UMTvytMTNyEGQ
i7i98H+d4H4H5PY74KX75/YvsLnULxFnpC7jbT33Sj33NN3z7+jcD/XG5B/J
Dd6mvmNy+whw3X2i43eMPyk69krdzltVc3h0fvPo/Ao10uSziG+TM+c/U+3L
rg/srXFHlcyv9o7en3zT16qup0X/nBId/6WGZ3i0v3qy8JtV+xHYGnI3xPPJ
VeylMQ+kMcfqXJOSuTR9/Ma52vuvVh0zZO+8UbW/g/1qlduHgp+fkGwcNcav
V+2DoDP/DwZ784Q=
           "]], Polygon3DBox[CompressedData["
1:eJxFm2WUJUXWRQvqPaAzCirfo3B3l8HdGWBg8MG1ce2Gxhrvxh0GG5zG3d3d
3d3d3Ru+vTm51vcjVsXJiMyXEnHvuefemmbwkDV3HrOnp+fe3p6eFn9PH+jp
Gbvq6TkP/HR/T89/wb8N6uk5EfwA+Oy6p+dT+vMx52LGzgJ/Ap4XfBH4XPDn
4AXAl4I37vb0nAT+g2ssCl6H9g/GPuTYVMzdpdPTM0G7p+cCfnw6+n9w7AbG
XgWvDD6O+T9z7vEcu5ffXxc8D+d/DJ6GueeAdy49PdeAX2D8ZsbGpG3D+R8w
/ghtbvr7cuwF5p5Be4b5q3PsKcbOBn8LHgb+GnwueFfwtVzvRa53Dsc+oz8/
51/C2CY8z8ng0dzTYuCHGZ+Lc/dh/HnwmbSnOX9zjr3N2PngfcE3c87LXO8s
8BfgXRj/kvFR4GvBO4A/Bp8H/hS8I/gT8Il1vsVYXP80xg7n92dgbBfwzuC3
aYX+dhz7iLlfgm8EvwNeg/d3APMnoL85x7ZibH/wAHgz8Jbg/cDjgzcFbwH+
X51nv5Rjs3L+1rT76A+hfc7Y97RnWxmfrZN3Por5O5V8iwO53oSMDeZ6W4Nv
pq1I/w/mzMy5pzG+OONHcuxAxk4FLwo+HLw/+AjwjOBdwUO8H/Bi4CPAB4BP
BC8AHgneG3wyeGHwoeB9waeAFwEfBt4PfAHtGO7tRX7/e+71V+7hOvqXM2cu
7v9Q5k/n8zF/R+ZuA36F8RnBq4BPr/PtDnBzMP8L8Hqs14vAM/p+mP8y4zMw
f2Xmv9Sf698PXhz83zrvpw3+H/gE15h7DXwqeCuu8TbX2pL2LmPbcr1XGZ+J
8X8zvjfj0/B7FzM+E/3DGJ+e/lDGd2L8EPC04J3BO/g+6+yFSzg2M/NP4di6
PP9pHHuMexvJ/MkY25b52w5kj7u376iy9w9mfArGtwdvDz4IPDl4O9cY+APa
cK63P8fm5fqT0U6jfzptCvr9tPu53g3gRejfyv3009+Q8+93bYLHAa8Fvsv3
w/XnB48ADwffxngN3gj8APhx8JLgo8CvgO8FTwXeAfwE+HZwB7wx+EHwPeBJ
wVuBHwO/6m/Q/6d7hrGh3NP4vM/zwdPSP5ljl3C/F4KnBz8L/oH+TrTP6P+T
Vuj388yPc63VO9lb59Gmof8g1+7SrgTPA96V+QvRX4z5rzF/wTprvwd8H/iv
xr5d2by/Nzg2cZV3dibv4gnGV2jlnr33M8C3MHY1x+Z3vdIW5/7fBa9J/z3m
XMa1b/I3wTcwf2zHOP9Oxm4CDwKvDb4bfEvzPOuA73V/givwf8D3gK8E/87v
/RN8I/gu8MSMbwF+BHwF+DfGlwffAL4U/DN4GfC14KvBf4FXBt8Cvgj8HXgJ
8FXgi7Uh4CXBV4OPrbM2N+U33qR/Ae0b8GKMX8H4JX4P8FLga8DPg79o5fnX
4nkvBH/L+OJ+A8aPA58OHsX41IyfD/4avCjjlzO+G8cmaef7fqqto41B/9+M
38b4NWAd4SrgW7Xd4BGc/wb2/iDwneCJGvv2MPiq5vuuAL4JfDd4Evcz+FHw
5eBfGV8OfL3fCvwLeFnwdeDrwb3MXw18B/gOcBe8Cfgh8Ju07/jtIznnrG5s
6Jf0v61iW0/n70uM78ex17RttDE5f1WO3874W7S1WR+bNO/3ENqG7i/a63XW
14H0r6LNx7t512/K/BvBi4K3ZHwW+nNw7GXGJnGP8Ft3cmxZ9zrj07hf+L2n
GN+ce3yE8Undc+BJmfMc+C7mLEf/fdcQ17oFvAT4Q20Y+IjGXgzm/EeZPxnn
r8DYFuDnwdOCV3Q/lNgCbcKUzJ+Ddhn952g/cy/30aamvyNznmT+fxp7MCXn
PQfekuu9wPWmY3ylgdgrf/sU2jfYwq268RXTM/4vxt+hje+35VjN3A0ZP4T+
J7zzhRkbzfXbrKcrOP8fjD/UvK/dOOdZxsfh2O/g99xjnazPzeifS5sKfCe/
eYz2mvkLMn+iTrjYr/po+stoo+gP4jd2pL807UTwOODt6S9F+6/rDXwG/eN5
zidpH3JsXfBnrskSn/Q2v/Up+AbwQ4xf1o0N05a9SHuSe/tIn8v4qc33PZh2
h9+G6x/ieqDdDl4QfBD9V7nmFb15xs3BG9G+9FlpL8mdGL+T8e+00Yy9Ar68
N3t4Q/Bjjb08yHXsfnON6P9pX2l/wVdqP/i9w+h/zJzTuL//NevpSp7hZ/qv
cmxpxlbl2G2uZeaPpP8o11iw4Qsvyk/0SX4rxkfQH8v5XP8an4l+m/ZbKz5g
E/ko9/u4e0Ub0YlP0Ha87JqrY0PEr9Deob+P+8m9yPoYye89CJ6ZsWH8/jPg
z2l7cq/7tsJv5SN703+4le/zBeMrM74O+Bjfr3yD/mO0rxl/ADxTw4+e1r7w
/A+Ar+OcJfTXjB/B73/F7x8FHpd5k7Zj8+6lfzzz52X+AfT31D5wzY/Ae/jM
dfiO3POShq96Ta+9VvO8u9MfTv98xgdxjTf7s5Z2o33L+FK+45Jv9lp/+OTu
rXBY+bQxgLGAHPrZ/qy3qavYiEu64dRy61PAzzG+GXg9xvu4xgp1+I1cfVTD
90+pw7W1+c+Dl5RvlqxJ16b+Rdt3ZMN/lmF8L8Zn4H3s18mace34DX5j7pr0
N27FnmpX3+ecrz2/lf1vTGFscRbj72tLmb81+Fjwj8y/VJ7C3wPAd/fHRmgr
DgU/BJ6yj3Xbzvedgv4enL8P/QsYrzj37ZJYyHhg05Lvf19vOIJcYR3uYV39
E2OvD8SeH9UbH6Gv+J3jhzI+1OehvxFt21be55+DwklOrMIx5Cra9IOr7EFt
/U+0veg/xXlfNbHJ/eAx27mfJ0r2887gqbj/FcBrthJ/3EF/gip76QnXNP0L
SmIFY4Y76Y/mHYym/xb977j+h/w9k+uNx/U+or8pz/eTz0//W/kyf49vZc++
S/9fJbZFvvOCvL4Ofp7+N8zv5fwRrlXw1+DtOrGV74M/GQgHW7cKB5Kbuefc
e/eU2Ep9kr7pSe5pAm2Z76GE78/Q8LVVS/ak38Zv8BL4g1a+jd9gjRIf67fZ
sWRvaI+1y+7p5bmfQX3NXu8k1n2wxDbcW7K27uXYffR7uNe6Hc5pXKcP272K
j9G36d//oz3knLPZP1NVsdVvMP50FX95Ju3f4L2YvxrzZ3Et+c7rxIx+uwvB
H9I/iXZRb2JKY8sF5Pysmz04dnN/fJR7ZP/e+K6j6B/dis/Upx6hf27Fx+qz
L+KeHuwNR5WrXqi96g3HkGssRPtoUHzqg1xvEdfwoGgGz4AX4v1c5/cB93US
U+1SYn9eauJ99+Bx4Meb/X89eG3vgWdZoBPuLIdudRILHqtvanz8cZ7byvvw
vVwsB+8NR5GrLEfr4VsdzpzxOH9ZcAd8EHhsvyX4VuaeBJ5YfgBeieuM5hoL
aa9KuIX27Zkq9uc7ju3HsT8Zf59jq8sx6A/U6c/mu+/NsQu4nxt7w0Heafje
apw/xJiA552Te9lT38z15uiL/f2R8YPlDNzPeuBFOOcrn6/O8xxcwjG+4vzF
mXOzexU8QP+H/rwb35HYmMK99hDHuvRn6SS2NMbU3v+sVtLK7/2kn+D6c/J7
7zE+CeNzdhJryz9+qaMZaA/UGPQ3azN/Lua/L+fT/oLnAL8Lnsi9DZ4b/AF4
CvAGJbGynOmHQYnRjdWNmcepEzMbO7+mPQWvCp4Z/LrrB7wGeHbfpfvbWILn
naMdGzNhJzHe1lU4o7Hfl4zPI/doZf0Z4xvrqxG06nBS17nrfYw6GoN7wT3h
+/oNvHk7a0x78jcnrsJxf+wPx5XrPgb+uT+cW+7tnul0ElMaKxozPlOHk7pu
/Ua94A/lj63YvFazPg/gHd0uR+3P+jylxIfIH77rz726R72+HNh96z2PyfU+
Z/zRVnzMK+ATWH/z0T+QOXsx92jjyFZi/vlLvrXfSj72Kv199ElVNJlhnD9l
Fa64AO2pKpqJtvRrzv2RufeXcCk5ilxFWzuFvoX2jfae+TszPrjhV8tybDW/
DePf8/1P8JvQv4Vz/+B641WJDY2R76O/RYl2tQq4twqH1T5qJ38diOaovx2P
vTO6WSuunWWZ82IVe/ySewE8hn6jk7UwmuM/y686sQ1/gX8x3u1kP87N9VoT
wF+64Us1+E/GTyrh6yOYM29f9LrHSjSg1Tj3Rf0e/b3b2c/+pr+tZnFTww/0
xevSzqU/inOG0p+GuT81/n828Oy0P3y3vudWjskH3K8z05+V9qtxQIn/mRH8
Q4ntmKmdOe7n6bnuMPpL0Qaq+Cx912tyrm7WsvHekow/UYWjy9XHYs7vzO2q
z9DeY+wy8D7dcLn1wZsP5NjCVWJa5w7tZq+rEasV7wL+qDear9rvkG5shTZB
27AveFyutwF4MPg48Dzg/cF7uF7Bs+n7wLuCd+Q3lm7W7u7goxifFbwn47uA
jwXP4fsH7wY+Bjw7eDh4GHgobY8q52zFtbbvxrboO/St23WzflxH2p7dwD81
+sgG4OHgsVrRZzYFDwP/yPjS4PW9dje+41/gjcDb2KpoduvUuefTS57RZ9mT
+S36qzNnY7ktuA1eA7wJeIdufIk2T9u3cze2WZur7d2pm/3rPtZ279iNbdQG
a4v3rsNl5bQjwIfJ2egfzLGb1A65lxN8P645vvnFfP+9XF/0x2T9Xw0eCZ4P
PBZ4/xJbpc+53DihhGuN3Q6/+3eJ7ZGD6YPlDdrCbxq+d1gJF9dGyiHcU+6t
jTj/VH6rl9+YrS/3MKpODKtWYYzxURMLqxWoGdRVYki1iWmqxJZtzv8H5+/P
+efV0STUMiepolXsVsKPr6ddQv88uR5zN6D198VmabumbP+/jfOv+Nxu9qx7
d512bM4cjS8y3n6F/ijGLwZ/LmduuNsZ9M+knVXi+9e3Tzub/ja0wnVW5Xr/
7eQ7+73VDF5ubJy2Ts3mmm5slrZLn6fv02ZoO2bxebuxYdoyfZ6+Tz6s7zq2
4UMTMnci2lyM/94fm+lz+DzndGNDtCXGV9/Tf0272AoH6FTRPPVnaqZqyb5z
370az6Wcf3Qn8dHM2j6+xQB/twBvRZuY/iS0relvQ5uswU/35n4n7Yvvlwvs
AX6h+Q1/Sw41qptv6LeUg57fTYxjrGMMbCxszGDsoIbxQX9iCmMLY0BjQWMW
Y5c/wVt0oqfcVRLfmBvp9sXfD/Z7cPw311Rf/JHarc/zVG/e/wR90WtuKfG5
+t6/5IJ9Of90tWbGWu2sMdea8VJ/OzGBscGQkthdjnxxiU3Xtvs9f6G/bUms
NoQ2dV+w2orxivHbD/zeZyX6gNqoNl5bvz3tIXUvxh5h7g7txKsfcY+7+n3p
90wQ/fuakhhxBc7/3ni3xF+ptRtzGXupoailGIMbi69TkpuYoU5+7asqevIx
dWKZv9QIBpJjNNdojnFQnRyjuUbzf+0673Qrrn1V867H7ov/UX/oZ951fOM1
GL+6xB+pIaslq0FPWceXGY8ZMz9comFrq7XZ5hfVbNVu1Wynr6Nhq2WrOU9a
RyNXK1cTn7HOM6iNq/n6bGrCasNq6jPV0bzVvtXEJ6+jAasFq6FPBz62E25z
NPiNOjk1c2tqKN/VyVduD76a8eHuTTlcO5xI/e54z+kN15EPVX3hR8ZHPw2K
nrdwO/ZBbdF84+ASfXNYJ/nIzUr2i99TfiV3Oht8fCf5zfVL9KH1OsmnLl9i
rzboJH86FLwn+Mc6+Vy1LjUC+as5YXPDfvNx68RwxnJyJOOD5TuJff1mT6ut
daIN+I3fq5M/3brE3p7C2IUD4QZyhLHraDT6h0NL4iVztuZuzVkXxtev49+n
LclvbVzHl85Ykj9bpU4+acISPXvlOvmoCUr05H/VyWcNlOSf1q3DL6Yuyact
Wid/0C7JXy3e6PFjl+j569XhE9OU5NOWqZOvKSX5hGXr5Mf6SvIty9XJ34xb
kk9Yvk6+ZryS/JacQC4yVQlXWKxOPmOsknyYORRzKeZAJtSf1cnPtEryccaf
xocLN/xsgTpr9a8q+SFzburtS3DN7Rmbv85a/7NKvmi+Omt9dJX80rx19sof
VfJ7c9bZa79UyW/MUWft/1wlPzF7nb30U5X8izmaRZt41Xh41jr3/kOVfNJs
dfJDP1bJz8xTZ+/8XiXfZQ7IXJBzJq6z576QP1TZi+5h18KXVfa2e9Z6ha+r
7GX3oLbmiyp7c0z2z0Lt+Gj96YWd+JZXm3jtSvCB7fANuY/f3Nyla8S1MH5J
LtWc6kp1vpm5SXNEfsubsU9v9iYWkB+Nau53wSpc5qpOYoW31FDkIt1oFbM3
/ErfLf83Btfen8OcndqJIQZ38k7kmnJO35Xv3NyQa8RvcW4nvsEYYZtOvpG5
KNes3663hFvLsRf2+/eFz8mP5ukLR5K7L1SFO13KNfbT/zTxj3vUvXqVPrkT
jnY9/QeqcLf/gTdu55hjvq8Nm/fnXrNGwVoFaxhWr6MJq2WqaapXqafqm9Rs
pqiyx8yduYfde3Mxvm87nFw+4J4wV+yedq/4/eSufoMrOlmz5qbdk65l9RVj
sce111X2pLlQc4DuVfesuUBrHtzL7lFzf+ZM3bvmv4yN5dh/ce/Tcr1d2uHM
8gP3jLlZ97x7yZyRuSNzBmvX0ajlUsb/7/Ynh2AuwRzAWnVyAOYCrJlY073P
9edn/jO9ibfVmqZvJ7/8WJWciLkROZP5DGtWrF2ZU/tdZ0+Z+9RGuNf274RL
3AH+tD/1LPuU5AzHNPbtJPYzBvyY8e+rxC6jG73JPWsu+M/e7GXzO9O247/e
YP50JbGWNlnbbI2OtTrW1GzYPI/agTF2TxOjb+KeaiV210aZy9Ymaru0Seay
tZnaqguYszvnj9PwSW2e62u8VmyhNsfcrzZbWzQj83ZrJ6Yz/tfGW2swZbMe
9QnmOs0x6iv0CeYarUlYudGL1CoPavSA6frCl9R7jI/l3HfTH9noB+akzE1Z
0zK4Tk7K3JQc8YBOcmLmxsxhbVGHk8h9Pq/CVTatk8+ZqaR+xfhKrU7+Ko+9
Xr4GPpv5Bw9EKzbXbv3TcvRvYHwY4+cwfshA4iTjJfVt9cozusndqXGrdV/H
/F2Yf1aVfPiN4N3A54IPHYjGrNa8TEl9z7WMD2X8zCr5MHNI6j0PlOSWzB88
3Qp/lEeaD1GLljOYJ9PmaHvGLImHreHwXSxaUh+hBqoWekaV+HRPxldhfOmS
eqE9wCuDlyqpL9pdDQ28ZEl9kJq22vb5nH84+BbwnuALwEeAbwXvBb4QfCT4
EfDh4Buq8NOHwYeBrwefNBDNa0VtT4kWtht4JfASJfVJ3r+1KIuU1C8NAS8H
XqhEX9vZmBW8YEl+bifwMq7tEj1j/W7yU2rwavH6ZPfKfCW+2j3j2pyhZC8N
lVNpu0vqa9zjrtXpS/b+E/2prbu1Sj2SObMHW9HQ1dLVz+STk7MmPy/RtNVv
xijRurXHfq+7q+TuzDedCv4P8/v6Yr+0P9ohtW9zbMaDr5fk3swBmvu6q0pu
cO46+sWvVfQQcwLmAq6pkivQpmhbvquibasHqgWrnz1aog+bi+vymx+X5BDk
l3dWyS2ogZpLVbNXG1WDVct9roo2a47O3OS1VXJ3+kx9529V9Bv3n7HBZ1X0
KDXWTdvJCai9flCiVRqjmc/6Zwl3vq+JQdTBZq2i8av1G7fIbdUYzfds2g13
NsdhrsMcqnqcupza/t+ar7azihasn9Xf6uP0dXISucnzVbRlNX79gbZT7V+N
Wv3stSratflc37/6iTqKGrD62+tVtGHtpvZTm6htfKOk/sD41zhYfmQsYUzR
6osN0zfNVmLbtFn6stlLbNm3xCBnt5IfW73EZ+o7qxI9TB+mL5u0pH7Q62kb
Zy2pB1RzU1ues0SLG7+TXIV5HWv9lq7DFQaV6F/GMNoW85jGNuZ7tO0+z0x9
0a/kU8bsxu76VH335CW+1vvR109W4mvNQavF1SW56ZNLuJnx7W3umTr1leOU
6HHqvXIL9ZI/S2KsCdup8TT22qyOvj5zST3ftnXqHf9Rojeq1ag3b9HoBeZD
1crUC9QN1MvkPsboN9PfvE493Swl9aHmS9XO1C/UMbauUx85V4neuU2d+su5
S/RRtR997daNnqLepT9TH1Enkc9pC6xhNRYzBp26nRpaY1M5i9x2ihIuY0z4
WSs1t8aK5kPv6k2Nx+Ml+oX+0BoC61KMKT9ppYbWWHPVOvWZE5XUp8oBrX+c
uIQbrlGnHnaSkvrWPtbtpb3hJ/KUe/pTj3E5x48diNak3mfNz7P072f8IMav
on/CQDRztXP1bfUAtSL1P+sdH6+S01cPvYz+Mcy/Hbw3+GLw0eAJq2iDaoSP
0H/KGmrGb69Sv/sk+ATwbVXqQe+zJhN8Jfj4xv5YK3Ad+ETwbeDh4Iuq1HNY
B2Aux/yhfG6iKrVC1i88WkUD36DhN8Yb1kxbv3ZFlVpq64itxVBPUFewDtV6
VOuRtyrRm6w1VU9UV7Ru1VoLay62K9EnrZW0RmTzEp1GvUY+tnFJ3tj8sT7d
egDzy3L1e6rkk61Bk3/IQ8xdf9PUtlmjsRbHtqtTHzxPif7uMxg7dUuezVyZ
XMr865NV7KtagTUZ1n1bB2E9hDVWakznlNQCWiOyHv0V69SzdkryD7b1m/jG
sfM6yXdM3+hb4/bFl+nTfD7rn7R92kBrsayP7m30JmuV5i3h0/pkfbP1pNbO
jGylnkgOLZf+o5X4TA1V2zB3O3zvyE70N+/hiE7uwXuxRkntTQ731qB8U7nd
7SX+2nyf9RZDmnhgpoZPmi8w12G+bvJOOIa5PG2E3ENOYa5EDinXeKc/sZg1
bduaiyypjzBf7HqWk1g7pM2Sq1ij4T52P1u7ocZnbPFeifbn/VkLsnbDKV7v
Tyyopmm86Tfeu4k//PZyyPcGZU/KLbWBw5v4QNuozTJXo+aiLdNmmdtRU9GW
qSn63f3+b9XhaK5Rv5/c7df+2H592vmd7PlfB2WPagteKak/MT45v2SPtps9
4t6VE37W1PPIFeWMnzT1C3LJFTvJL5hnsJ5EzvjFoHBEuaR72NosOeRtTb7X
XOzhJfUQ6gvmgs0hmktcu5PaQeuZ1MPMx5tbPrKknkJON6KJH+R6cjj3tJxN
bjd5X+rDXD/qufpv62/MEbzUcNY/m3oruazP4LOcV6X2YyV+b4tWNEa1RmMo
OYH5UbV66+fci8Y4rk/r61zLxrhLdmLDRjf1Xtq20xobpE3RNlbM2awdDcNc
5pBOuJs1VdZXWdOhdqmGqf74cp3aKTUOtQ5jEGtztfHGJtfQNmglR2I9rPmX
LUvqocw9q3HLz+Rpat9q+mqfK5Vo/eZDRpTUU3g/8i/3tjX/J7t/OsnluIZd
y9YHyYv1iXt24hft+/61p9ZDftXK/xCYT7BeVNttzaL7S03Ea03RnG8+R51e
TUZtZoYmX66N8f8vvIbX2q8kVyGPkE+YM9IeWx/tXvObW19pfbuxnj5V32rM
7dr+qdmvxnXGd9Z0Wdu1fifX8n9ydu0k3/FmiZ5g7dYYnfwvhM9kfac5J32F
Mb31mta36yvl/OoVO3RSu+qa83z/n0FfI2fYpxP+4P1M0+CjG59gDaO+1Rp9
a/XHaOf/I7ye97KdmnQnMeVrTb2dsaYxp/9bol5pLGoM6P+O6FOMDf1/C69l
zZn5dvmJ2rXP7LPLU+Qr+jTjY2O0kU38bew2XI2hlZyc9cfGlP7vipzNWPOR
kvjCfJv1V+aE9mi4jbkiY1RzqdZPGbuaI7GexVjF3Im1iK4Nfbz+3Ppha2u0
8dbXWg9hrelk2rAm3+K57pmrusm1WO92YsNH3b/W9nY4tnMna961r6Z+dTf/
f6Xv9pn93qfVqT10TclVjVn93xo5o7GsMbP/WyNnNJbW3x3ZvF/tt/9TY67P
GM9Y75s69W/6CH3FXTzzOa3EsOY31BzeGRQOpBYhB/plUDiS3Ehe6VrR/so/
1AuNVayZ/N1YvxOu5vq11tgaU/mNOQhzEepR6slfN/rT4XWu7f+UyYfk3P4v
jRxSLv53DNLof8YmZzZ6izkGcw1yenPtxqhyfXOh1l5b0yG/P6xOPG2uRb5p
Ds/8tnluc3tXdHPvahvW+2n/tDXGkKd1EvNaC2CMaSxsPbi1ZcZwxnLmc3v7
Em9Zy2I9vrljNeo/+2Mf5RbmtKw19PfNJRrfWIs0dye16mquvj/rpa1t9v6t
Jbd+Sf3o6CaeModkLskckLkg/+fE+hpruN9r1ru1ht6jMfWhdey1tbDy4yPq
+Fa/qd/W/yG0duDqKv9buH8dX+8acC0Ys1m7YMxtLHdAnflyArmBHH/zRm+V
+xsT+L9rxlzGCvvVWUtyJLmSNQq7g0dVqV04qZNctRz1xE7idt+9Plc+ObKO
b9Zn67tH1PHd+nx9/4F1fL8+X9+vfrlDo/+prZzVSW7aGnnr8w+uw2+1ado2
c0T+75Uc1NyR/0+mb5qp8S9ndpLrtobdev4j6/x/lhxFrnJUHV+tT9W3qs+v
3Oi16pn6e3O3ck7rto+uw3308fr6v2PqKjGtsa05KP+3S45tbsocmP9LZsxl
bswc2faN/qk+q83V9vo/Af4/gjlXNQxzdtd2o4fIRTdr1rP5C3MF5gysBfF/
EqyFNeaz3s6cgbkDcx43dZP/MJdyAO3yTvaQe8k1ZSxnjt7awWEluXtzDGog
ezR8yZyIuZHhTT7GemzrBNWI/v5fi4GsTTUiYzk1U//3z5hSLdX6BusM/AZ+
i7rOvZjjMT9gTsbcjDmjG7vJ2Zi7GdE8nzG3/5uphmEsflQnXEl95pf+1Aib
ezcGtr7OGntzqcaqauvOca6aziWdxMH6bv9HyvjF65mLWK7hX2qi6u3q62ql
+jR9m7XC1paZ81Z3Un+yNksNy/y2OTO1LfX7W3sTcxh7aKO0VdZbX8/z/R9y
JW94
           "]], Polygon3DBox[CompressedData["
1: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
           "]], Polygon3DBox[{{4111, 4110, 4788, 3114, 3115, 4789}}]}],
        Lighting->{{"Ambient", 
           RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
          "Directional", 
           RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ksrb1EYB+DlHPfLOT4B+QCU4rj9/5gYMXEZEcqMxEwkuSR0EpLcjpnI
HHNhKuV+Oy5j+QBmnpXBu5/fu3vX2qu9d1HPYMtASghhTk0KMQ+5vLMiN4R8
NrCQrSxhN5McYBPH2MF59vEfR7iX+73vIdd4zF2e85DPPI3zeSGUeuaCutSP
s0P9SQ/hKp6D16zkDat4y2resTEjhDLz93KTXC4/xHnWmHmMa+SE/CQn+Z+1
fGYdX1jPVzbbo8b8onrTT7BLfTrvhf6dJ3ziAc+4wyOucp+z3OUwN9jLv2xn
jr1G5cb4buV+OSF3spjb3ket+wVym/zBKf1vjjKpttJC+KXfpJGwTsvDKnO4
wmwuM4tLzOQCM+K3Yno8E9Pi93dJ5Qx/cpo/2GI4kfL9b3wB1oBCKQ==
        "]]}, 
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLVlEUBuDlPRGV8hskQqBOQlCwSVATxWHm5fPSJFScq2lppk4lUgmV
FAVvea9+QYJBUVa/IBGERuof0LHPwcHiWe8+++yz2fuU9w6k+zMiYk6VZEWs
CBmczIw4KYz4Iv/WX+gP9PWeTcmjxRF39X+NzcoT8j35WM5iSl4wfi6XFUVc
sYo5xh7xsUrpO1jJXj7gAOuT9djCaXazwXoHrLZ2P2/zlE9ueYeNfMGnHGQT
h9jMl+zMjzjkK/VM/43D6rn+O1vMG+EP1ap/zTRH2cY3bOdYsmeOs9u7P1lj
LxO8w//ctec+LrGL79jMMdaxj7XsYUWyPtOqRP+Q2bzPS2dWyjMW8F9yN/zD
S/fxlbnO5a35Kd/+nMzjUbKHvIhP8jb3uck9bnCXa9zhCre5zCW1pV/kJj/w
I+e5kdwz1/mea5zhKnucw6/Mm//nGvE0R04=
        "]]}, 
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0stLVGEYB+BXZjTygllLCdN/wIR2hk2lNZkmtBRpYctg1NTKS5u2XivN
S4221YW01I26072QREREXhAJidRFG33Excvz+31853znnJny1rbHmZyIGDWF
uRGZRMS/ZESz+VIc8VqflZflQTltz1M9UxJRIn+0ltG79VJ9Xv+v5+pvuKTv
unadx9xk3qWIC2ZHruARq5i0P8UrbGIFn7CKV91vmtXOSDGfKxzMj7jNId7h
MO9yhLUcZR3f8h7f8T7fc8yk5XE+4AfWc4IPOckGTrGR2YKIT7zp7Ecs4Cp7
POMtPuN1trCcjbzMGiZYyUPveo1lZltO8CsPfZs1Dtm3LS/KN7zzgj4nb1ib
Zpm1z9YG5O+ubZGLPEe/fiLPmL8XI/r0A/byD3u4z1fc48uz34UvuMXfplv+
xS7+ZCd/8PnZWezgN7Zzk22c8U2yyfP/zim6rUz5
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{3127, 3411, 1601, 3126, 4792, 3322, 3128, 4793, 3323, 3129, 
        4794, 3324, 3130, 4795, 3325, 3131, 4796, 3326, 3132, 4797, 3327, 
        3133, 4528, 4856, 3134, 4798, 3328, 3135, 4799, 3329, 3136, 4800, 
        3330, 3137, 4801, 3331, 3138, 4802, 3332, 3139, 1774, 3333, 3412}], 
       Line3DBox[{3141, 4529, 4857, 3140, 1615, 3142, 4803, 3334, 3143, 4804, 
        3335, 3144, 4805, 3336, 3145, 4806, 3337, 3146, 4807, 3338, 3147, 
        4530, 4858, 3148, 4531, 4859, 3149, 4808, 3339, 3150, 4809, 3340, 
        3151, 4810, 3341, 3152, 1776, 3413, 3342, 3153, 4925, 3414, 3492, 
        3343, 3491}], 
       Line3DBox[{3155, 4532, 4860, 3154, 4533, 4861, 3156, 1628, 3157, 4811, 
        3344, 3158, 4812, 3345, 3159, 4813, 3346, 3160, 4814, 3347, 3161, 
        4534, 4862, 3162, 4535, 4863, 3163, 4536, 4864, 3164, 3416, 3417, 
        4926, 3348, 3542, 3543, 1784, 3493, 3532, 3533, 3524, 3525, 4959, 
        3399, 3495, 3349, 3523, 4958, 3415, 3350, 3165}], 
       Line3DBox[{3167, 4537, 4865, 3166, 4538, 4866, 3168, 4539, 4867, 3169, 
        1640, 3170, 4815, 3351, 3171, 4816, 3352, 3172, 4817, 3353, 3173, 
        3423, 3424, 4929, 3174, 3427, 3428, 4962, 3175, 3430, 3431, 4930, 
        3176, 3400, 3418, 1763, 3522, 3177, 3528, 4927, 3419, 3494, 3420, 
        3534, 3178, 4928, 3421, 3496, 3422, 3179, 4931, 3434, 3435, 3180}], 
       Line3DBox[{3182, 4540, 4868, 3181, 4541, 4869, 3183, 4542, 4870, 3184, 
        4543, 4871, 3185, 1651, 3186, 4818, 3354, 3187, 4933, 3438, 3439, 
        3188, 3425, 3497, 3426, 4934, 3189, 3401, 3429, 3402, 3539, 4961, 
        4603, 3190, 3529, 3432, 3498, 1794, 3535, 3191, 3433, 3499, 4872, 
        4592, 3192, 4594, 4873, 3444, 3193, 4923, 3403, 3526, 3404, 3538, 
        3194, 4932, 3436, 3500, 3437, 3195}], 
       Line3DBox[{3197, 4544, 4874, 3196, 4545, 4875, 3198, 4546, 4876, 3199, 
        4547, 4877, 3200, 4548, 4878, 3201, 1815, 3449, 3202, 4924, 3405, 
        3440, 3406, 3203, 3407, 3441, 3408, 4963, 3204, 3442, 3501, 1805, 
        3205, 3409, 4879, 4591, 3206, 3443, 3502, 4880, 4593, 3207, 4595, 
        4950, 3503, 3445, 3208, 4596, 4951, 3504, 3446, 3209, 4935, 3447, 
        3505, 3448, 3210}], 
       Line3DBox[{106, 1496, 107, 1497, 108, 1498, 109, 1499, 110, 1500, 111, 
        1501, 112, 1899, 353, 113, 1502, 114, 1503, 115, 1504, 116, 1505, 117,
         1506, 118, 1507, 119, 1508, 120}], 
       Line3DBox[{3212, 4549, 4881, 3211, 4550, 4882, 3213, 4551, 4883, 3214, 
        4552, 4884, 3215, 4553, 4885, 3216, 4599, 4886, 3452, 3217, 1770, 
        3517, 3410, 3218, 3540, 3541, 3527, 1824, 3219, 3530, 3544, 3531, 
        3506, 3536, 3537, 4960, 4604, 3220, 3450, 3507, 4887, 4597, 3221, 
        3451, 3508, 4888, 4598, 3222, 4554, 4889, 3223, 4555, 4890, 3224, 
        4556, 4891, 3225}], 
       Line3DBox[{3227, 4819, 3355, 3226, 4820, 3356, 3228, 4821, 3357, 3229, 
        4822, 3358, 3230, 4823, 3359, 3231, 4600, 4824, 3360, 3509, 1829, 
        3518, 3361, 3232, 3453, 3519, 1683, 3510, 3454, 4825, 3362, 3233, 
        4826, 3363, 3234, 4827, 3364, 3235, 4828, 3365, 3236, 4829, 3366, 
        3237, 4830, 3367, 3238}], 
       Line3DBox[{3240, 4557, 4892, 3239, 4831, 3368, 3241, 4832, 3369, 3242, 
        4833, 3370, 3243, 4834, 3371, 3244, 1833, 3372, 3511, 4952, 3455, 
        3520, 3373, 3245, 3456, 4558, 4936, 3512, 3457, 1696, 3246, 4835, 
        3374, 3247, 4836, 3375, 3248, 4837, 3376, 3249, 4838, 3377, 3250, 
        4839, 3378, 3251}], 
       Line3DBox[{3253, 4559, 4893, 3252, 4560, 4894, 3254, 4840, 3379, 3255, 
        4841, 3380, 3256, 4842, 3381, 3257, 4937, 3458, 3382, 3513, 4953, 
        3459, 3521, 3383, 3258, 3460, 4561, 4938, 3514, 3461, 4562, 4939, 
        3259, 1709, 3260, 4843, 3384, 3261, 4844, 3385, 3262, 4845, 3386, 
        3263, 4846, 3387, 3264}], 
       Line3DBox[{3266, 4563, 4895, 3265, 4564, 4896, 3267, 4565, 4897, 3268, 
        4847, 3388, 3269, 4848, 3389, 3270, 4940, 3462, 3390, 3515, 4954, 
        3463, 3391, 3271, 3464, 4566, 4941, 3516, 3465, 4567, 4942, 3272, 
        4568, 4898, 3273, 1722, 3274, 4849, 3392, 3275, 4850, 3393, 3276, 
        4851, 3394, 3277}], 
       Line3DBox[{3279, 4569, 4899, 3278, 4570, 4900, 3280, 4571, 4901, 3281, 
        4572, 4902, 3282, 4852, 3395, 3283, 4943, 3466, 3467, 3284, 4944, 
        3468, 3469, 3285, 3470, 3471, 4955, 3286, 3472, 3473, 4945, 3287, 
        4573, 4903, 3288, 4574, 4904, 3289, 1735, 3290, 4853, 3396, 3291, 
        4854, 3397, 3292}], 
       Line3DBox[{3294, 4575, 4905, 3293, 4576, 4906, 3295, 4577, 4907, 3296, 
        4578, 4908, 3297, 4579, 4909, 3298, 4946, 3474, 3475, 3299, 4947, 
        3476, 3477, 3300, 3478, 3479, 4956, 3301, 3480, 3481, 4948, 3302, 
        4580, 4910, 3303, 4581, 4911, 3304, 4582, 4912, 3305, 1748, 3306, 
        4855, 3398, 3307}], 
       Line3DBox[{3321, 3490, 1871, 3320, 4922, 4590, 3319, 4921, 4589, 3318, 
        4920, 4588, 3317, 4919, 4587, 3316, 4602, 4918, 3489, 3315, 4957, 
        3488, 3487, 3314, 3486, 3485, 4949, 3313, 3484, 4917, 4601, 3312, 
        4916, 4586, 3311, 4915, 4585, 3310, 4914, 4584, 3309, 4913, 4583, 
        3308, 1862, 3482, 3483}], 
       Line3DBox[{3546, 3845, 2134, 3545, 5045, 3751, 3547, 5046, 3752, 3548, 
        5047, 3753, 3549, 5048, 3754, 3550, 5049, 3755, 3551, 5050, 3756, 
        3552, 5051, 4605, 4964, 3553, 5052, 3757, 3554, 5053, 3758, 3555, 
        5054, 3759, 3556, 5055, 3760, 3557, 5056, 3761, 3558, 4676, 5137, 
        3762, 3846}], 
       Line3DBox[{3560, 3847, 3989, 4606, 4965, 3559, 2149, 3561, 5057, 3763, 
        3562, 5058, 3764, 3563, 5059, 3765, 3564, 5060, 3766, 3565, 5061, 
        3767, 3566, 5062, 4607, 4966, 3567, 4608, 4967, 3568, 5063, 3768, 
        3569, 5064, 3769, 3570, 5065, 3770, 3571, 5066, 3771, 3572, 5067, 
        3772, 3573}], 
       Line3DBox[{3585, 3780, 5075, 3584, 3779, 5074, 3583, 3778, 5073, 3582, 
        3777, 5072, 3581, 4970, 4611, 3580, 4969, 4610, 3579, 4968, 4609, 
        5071, 3578, 3776, 5070, 3577, 3775, 5069, 3576, 3774, 5068, 3575, 
        3773, 5168, 3992, 3991, 3574, 2165, 3852, 3851, 3961, 4691, 5160, 
        3962, 3916, 3849, 3957, 3941, 5157, 3943, 3942, 3915, 3835, 3990, 
        3938, 3960}], 
       Line3DBox[{3595, 3786, 5082, 3594, 3785, 5081, 3593, 3784, 5080, 3592, 
        4974, 4615, 3591, 4973, 4614, 3590, 4972, 4613, 3589, 4971, 4612, 
        5079, 3588, 3783, 5078, 3587, 3782, 4003, 4002, 5077, 3586, 3781, 
        3858, 3857, 5076, 3965, 3966, 2458, 3917, 3855, 3958, 3933, 3973, 
        5166, 4694, 3946, 3836, 3932, 4693, 5165, 3972, 3944, 3850, 3959, 
        4692, 5161, 3963, 3853, 3848, 3939, 3964}], 
       Line3DBox[{3609, 3789, 5086, 3608, 3788, 5085, 3607, 4982, 4618, 3606, 
        4981, 4617, 3605, 4980, 4616, 3604, 4979, 4007, 4006, 3603, 4978, 
        3986, 3985, 5084, 3602, 3787, 5083, 3601, 3978, 4004, 3977, 5172, 
        4005, 3600, 3996, 3841, 3859, 2305, 3981, 3599, 3967, 4677, 5162, 
        3918, 3856, 3993, 3598, 4977, 3864, 3947, 3863, 3951, 3597, 4976, 
        3840, 3945, 3839, 3949, 3596, 4690, 4975, 3838, 3854, 3837, 3950, 
        3860}], Line3DBox[{3611, 3974, 3976, 3975, 3999, 5170, 3610, 3861, 
        3919, 3862, 4983, 3612, 3994, 3865, 3998, 5163, 4678, 3968, 3613, 
        3952, 3997, 3842, 3982, 5156, 4675, 3940, 3614, 3953, 4679, 5138, 
        3948, 3866, 3615, 2327, 3868, 3616, 5164, 3869, 3870, 3617, 5158, 
        3843, 3987, 3844, 3988, 5167, 3618, 4009, 3983, 4008, 3984, 4984, 
        3619, 4619, 4985, 3620, 4620, 4986, 3621, 4621, 4987, 3622, 4622, 
        4988, 3623, 5087, 3790, 3624}], 
       Line3DBox[{3626, 4623, 4989, 3625, 4624, 4990, 3627, 4011, 4012, 5173, 
        4014, 4013, 3628, 3979, 3980, 5171, 4001, 4000, 3629, 4680, 5139, 
        3920, 3867, 3630, 3995, 5169, 4695, 3921, 3970, 3971, 3969, 3631, 
        2333, 3922, 3955, 3954, 3632, 5159, 3871, 3923, 3872, 4991, 3633, 
        4625, 4992, 3634, 4626, 4993, 3635, 4627, 4994, 3636, 4628, 4995, 
        3637, 4629, 4996, 3638, 4630, 4997, 3639}], 
       Line3DBox[{3643, 5088, 3791, 3641, 5089, 3792, 3645, 5090, 3793, 3647, 
        5091, 3794, 3649, 5092, 3795, 3651, 4682, 5141, 3796, 3924, 4684, 
        5155, 3934, 3797, 3654, 5093, 3875, 3935, 2224, 3925, 3877, 5145, 
        3798, 3657, 5094, 3799, 3659, 5095, 3800, 3661, 5096, 3801, 3663, 
        5097, 3802, 3665, 5098, 3803, 3667}], 
       Line3DBox[{3666, 5007, 4640, 3664, 5006, 4639, 3662, 5005, 4638, 3660, 
        5004, 4637, 3658, 5003, 4636, 3656, 4686, 5144, 3876, 3655, 4685, 
        5143, 2341, 3653, 3874, 3956, 5142, 4683, 3652, 3873, 4010, 5140, 
        4681, 3650, 5002, 4635, 3648, 5001, 4634, 3646, 5000, 4633, 3644, 
        4999, 4632, 3640, 4998, 4631, 3642}], 
       Line3DBox[{3669, 4641, 5008, 3668, 5099, 3804, 3670, 5100, 3805, 3671, 
        5101, 3806, 3672, 5102, 3807, 3673, 4687, 5146, 3808, 3926, 5103, 
        3878, 3936, 3809, 3674, 5104, 3879, 4642, 5149, 3927, 3880, 2237, 
        3675, 5105, 3810, 3676, 5106, 3811, 3677, 5107, 3812, 3678, 5108, 
        3813, 3679, 5109, 3814, 3680}], 
       Line3DBox[{3682, 4643, 5009, 3681, 4644, 5010, 3683, 5110, 3815, 3684, 
        5111, 3816, 3685, 5112, 3817, 3686, 5113, 3881, 3818, 3928, 5114, 
        3882, 3937, 3819, 3687, 5115, 3883, 4645, 5150, 3929, 3884, 4646, 
        5011, 3688, 2250, 3689, 5116, 3820, 3690, 5117, 3821, 3691, 5118, 
        3822, 3692, 5119, 3823, 3693}], 
       Line3DBox[{3695, 4647, 5012, 3694, 4648, 5013, 3696, 4649, 5014, 3697, 
        5120, 3824, 3698, 5121, 3825, 3699, 5122, 3885, 3826, 3930, 5123, 
        3886, 3827, 3700, 5124, 3887, 4650, 5151, 3931, 3888, 4651, 5015, 
        3701, 4652, 5016, 3702, 2263, 3703, 5125, 3828, 3704, 5126, 3829, 
        3705, 5127, 3830, 3706}], 
       Line3DBox[{3708, 4653, 5017, 3707, 4654, 5018, 3709, 4655, 5019, 3710, 
        4656, 5020, 3711, 5128, 3831, 3712, 5129, 3889, 3890, 3713, 5152, 
        3891, 3892, 3714, 5130, 3893, 3894, 5021, 3715, 3895, 3896, 5022, 
        3716, 4657, 5023, 3717, 4658, 5024, 3718, 2276, 3719, 5131, 3832, 
        3720, 5132, 3833, 3721}], 
       Line3DBox[{3723, 4659, 5025, 3722, 4660, 5026, 3724, 4661, 5027, 3725, 
        4662, 5028, 3726, 4663, 5029, 3727, 5133, 3897, 3898, 3728, 5153, 
        3899, 3900, 3729, 5134, 3901, 3902, 5030, 3730, 3903, 3904, 5031, 
        3731, 4664, 5032, 3732, 4665, 5033, 3733, 4666, 5034, 3734, 2289, 
        3735, 5135, 3834, 3736}], 
       Line3DBox[{3750, 3914, 2397, 3749, 5044, 4674, 3748, 5043, 4673, 3747, 
        5042, 4672, 3746, 5041, 4671, 3745, 4689, 5148, 3913, 3744, 5040, 
        3912, 3911, 5136, 3743, 3910, 3909, 5154, 3742, 3908, 5147, 4688, 
        3741, 5039, 4670, 3740, 5038, 4669, 3739, 5037, 4668, 3738, 5036, 
        4667, 3737, 5035, 3906, 3905, 3907}], 
       Line3DBox[{4016, 4314, 2714, 4015, 5249, 4218, 4017, 5250, 4219, 4018, 
        5251, 4220, 4019, 5252, 4221, 4020, 5253, 4222, 4021, 5254, 4223, 
        4022, 5255, 4696, 5174, 4023, 5256, 4224, 4024, 5257, 4225, 4025, 
        5258, 4226, 4026, 5259, 4227, 4027, 5260, 4228, 4028, 4765, 5341, 
        4229, 4315}], 
       Line3DBox[{4030, 4316, 4494, 4697, 5175, 4029, 2729, 4031, 5261, 4230, 
        4032, 5262, 4231, 4033, 5263, 4232, 4034, 5264, 4233, 4035, 5265, 
        4234, 4036, 5266, 4698, 5176, 4037, 4699, 5177, 4038, 5267, 4235, 
        4039, 5268, 4236, 4040, 5269, 4237, 4041, 4766, 5342, 4317, 4238, 
        4042, 5270, 4318, 4384, 4239, 4383}], 
       Line3DBox[{4051, 4246, 4319, 5276, 4440, 4245, 4388, 4302, 5275, 4442, 
        4441, 4466, 4465, 4387, 5373, 4767, 4500, 4499, 4244, 5343, 4326, 
        4325, 4050, 5180, 4702, 4049, 5179, 4701, 4048, 5178, 4700, 5274, 
        4047, 4243, 5273, 4046, 4242, 5272, 4045, 4241, 5271, 4044, 4240, 
        5372, 4497, 4496, 4043, 2743, 4324, 4323, 4463, 4782, 5363, 4464, 
        4386, 4321, 4453, 4431, 5357, 4433, 4432, 4385, 4301, 4495, 4425, 
        4462}], Line3DBox[CompressedData["
1:eJwVzDsvA2AUxvHTtBKNQYkvYJE0IiISo9tkJiwaoks7sRr4EhJ7JSbiw1BE
3S81aKTa1CUkxa/Dk/95/ue872B+Y349ERFL8twbkeqLmJCkvA1EVLmc+TwT
kcAzbPBPfEa/N+/3Rzzqe1jVx/k/dw/ctnmW+9XHzG0sdt7ZHbmfsfvhRrlv
vONr3Jz+pY/gJ9a5W7t38zDXwhfuwB83fFPP8g1s8qvma34L69wOFnoiSh3K
ld0mlrz/cD9kfnW3i5d201zavCjdsiYVfoo/dbegl3EZL/hD/0zanXA1OZYV
uy75B1Q+PII=
        "]], Line3DBox[CompressedData["
1:eJwVzckugwEYheFjQ6KoVg1bV1HjCjvdWLCSSC+AO7CmicTWkIgabomGDYl5
HlKWHos33znv+YfR+trCakeSGu6KyUYpaWATTWQwueU75Sq6MFNJ7rkduRuH
aHPNcrIuP9jq7gHO+pMt99m+a5+XH+3L7p5+wS/K55574rcLyZI+9P+O/mMv
yGPowQv3y/XK4+jDrP7KD8srGMEc98a1fPdS3vevd71om8ANd8R9cCfulT7J
l/DJnXLX3JRexhd3rA/I06jgm/sDkM8v2w==
        "]], Line3DBox[CompressedData["
1:eJwVzklOgkEQhuH6lSWJSsBEd15EBY1TIgtvIOLCIXAEwGGlJ3BgI+POxCOZ
qGsTBQXFx8Wbeuurru5eKlX3KklEFPE5E7GfidjIRnzwEt/kA96ei+gglYvo
qz0M5VfqNRJ5S33Al7xr99nusj6Hb9mNOpE9ma3wOhqoYWQ+n46447dYRRFn
2MXY/M3uEb/HMfIo4xwHeDf/ce6EN3GKAi5w+f8v80dv/zqzoF/Di6wnm8gW
9et4lfVlMetedUuf8DLf5lP8kO/waf4H4HgwCQ==
        "]], 
       Line3DBox[{4103, 5285, 4252, 4101, 5286, 4253, 4105, 5287, 4254, 4107, 
        5288, 4255, 4109, 5289, 4256, 4111, 4789, 5379, 4257, 4523, 4790, 
        5381, 4258, 4114, 5290, 2787, 4116, 5291, 4259, 4118, 5292, 4260, 
        4120, 5293, 4261, 4122, 5294, 4262, 4124, 5295, 4263, 4126, 5296, 
        4264, 4128}], 
       Line3DBox[{4127, 5206, 4720, 4125, 5205, 4719, 4123, 5204, 4718, 4121, 
        5203, 4717, 4119, 5202, 4716, 4117, 5201, 4715, 4115, 5200, 2786, 
        4113, 4522, 4526, 4527, 5382, 4791, 4112, 4524, 4525, 4519, 5378, 
        4788, 4110, 5199, 4714, 4108, 5198, 4713, 4106, 5197, 4712, 4104, 
        5196, 4711, 4100, 5195, 4710, 4102}], 
       Line3DBox[{4130, 4721, 5207, 4129, 5297, 4265, 4131, 5298, 4266, 4132, 
        5299, 4267, 4133, 5300, 4268, 4134, 5301, 4269, 4135, 5302, 4270, 
        4136, 5303, 4722, 5208, 4137, 2803, 4138, 5304, 4271, 4139, 5305, 
        4272, 4140, 5306, 4273, 4141, 5307, 4274, 4142, 5308, 4275, 4143}], 
       Line3DBox[{4145, 4723, 5209, 4144, 4724, 5210, 4146, 5309, 4276, 4147, 
        5310, 4277, 4148, 5311, 4278, 4149, 5312, 4279, 4150, 5313, 4280, 
        4151, 5314, 4725, 5211, 4152, 4726, 5212, 4153, 2819, 4154, 5315, 
        4281, 4155, 5316, 4282, 4156, 5317, 4283, 4157, 5318, 4284, 4158}], 
       Line3DBox[{4160, 4727, 5213, 4159, 4728, 5214, 4161, 4729, 5215, 4162, 
        5319, 4285, 4163, 5320, 4286, 4164, 5321, 4287, 4165, 5322, 4288, 
        4166, 5323, 4730, 5216, 4167, 4731, 5217, 4168, 4732, 5218, 4169, 
        2835, 4170, 5324, 4289, 4171, 5325, 4290, 4172, 5326, 4291, 4173}], 
       Line3DBox[{4175, 4733, 5219, 4174, 4734, 5220, 4176, 4735, 5221, 4177, 
        4736, 5222, 4178, 5327, 4292, 4179, 5328, 4293, 4180, 5329, 4294, 
        4181, 5330, 4737, 5223, 4182, 4738, 5224, 4183, 4739, 5225, 4184, 
        4740, 5226, 4185, 2851, 4186, 5331, 4295, 4187, 5332, 4296, 4188}], 
       Line3DBox[{4190, 4741, 5227, 4189, 4742, 5228, 4191, 4743, 5229, 4192, 
        4744, 5230, 4193, 4745, 5231, 4194, 5333, 4297, 4195, 5334, 4298, 
        4196, 5335, 4746, 5232, 4197, 4747, 5233, 4198, 4748, 5234, 4199, 
        4749, 5235, 4200, 4750, 5236, 4201, 2867, 4202, 5336, 4299, 4203}], 
       Line3DBox[{4217, 4382, 2971, 4216, 5248, 4761, 4215, 5247, 4760, 4214, 
        5246, 4759, 4213, 5245, 4758, 4212, 5244, 4757, 4211, 5243, 4756, 
        5338, 4210, 4300, 5337, 4209, 5242, 4755, 4208, 5241, 4754, 4207, 
        5240, 4753, 4206, 5239, 4752, 4205, 5238, 4751, 4204, 5237, 4380, 
        4379, 4381}], Line3DBox[CompressedData["
1:eJwVzj0rxXEYxvGLkcFD3oBBJJ0kRiOKQZ3sZLAdBk9h5x04B3lelXgPZgYP
qyxIUqKE5PMfrq7v/b1/df/ap+fKs3VJxqW/JdlpTgZ0vRy3JXdNyTYX85M+
4ubxFn6UQ/OI+aIh6dNX3K+M4Re7k9akF/9wNV2VP36KL+Ev/taNQW6S6+E+
uQPzDV/D3dy73ueuuSru4t70HreC12RVOuWV3+U38ZIsF64x6Sj+ZDejh2Wj
+Jd35+5O4Eu7IX1m/ubXcVke+Io+5T/4BfzM3csoXpR/qh01Gw==
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1412, 1602, 4792, 1413, 1615, 1439, 4861, 1627, 1451, 4866, 
        1638, 1463, 4869, 1648, 1474, 4875, 1658, 1484, 4882, 1667, 1497, 
        1679, 4820, 1510, 1691, 4831, 1523, 4894, 1703, 1536, 4896, 1715, 
        1549, 4900, 1727, 1563, 4906, 1739, 1577, 4913, 1751, 1591}], 
       Line3DBox[{1414, 1603, 4793, 1415, 1616, 4803, 1440, 1628, 1452, 4867, 
        1639, 1464, 4870, 1649, 1475, 4876, 1659, 1485, 4883, 1668, 1498, 
        1680, 4821, 1511, 1692, 4832, 1524, 1704, 4840, 1537, 4897, 1716, 
        1550, 4901, 1728, 1564, 4907, 1740, 1578, 4914, 1752, 1592}], 
       Line3DBox[{1416, 1604, 4794, 1417, 1617, 4804, 1441, 1629, 4811, 1453, 
        1640, 1465, 4871, 1650, 1476, 4877, 1660, 1486, 4884, 1669, 1499, 
        1681, 4822, 1512, 1693, 4833, 1525, 1705, 4841, 1538, 1717, 4847, 
        1551, 4902, 1729, 1565, 4908, 1741, 1579, 4915, 1753, 1593}], 
       Line3DBox[{1418, 1605, 4795, 1419, 1618, 4805, 1442, 1630, 4812, 1454, 
        1641, 4815, 1466, 1651, 1477, 4878, 1661, 1487, 4885, 1670, 1500, 
        1682, 4823, 1513, 1694, 4834, 1526, 1706, 4842, 1539, 1718, 4848, 
        1552, 1730, 4852, 1566, 4909, 1742, 1580, 4916, 1754, 1594}], 
       Line3DBox[{1420, 1606, 4796, 1421, 1619, 4806, 1443, 1631, 4813, 1455, 
        1642, 4816, 1467, 1652, 4818, 1478, 1815, 1816, 1488, 4886, 1821, 
        1822, 1501, 1826, 1827, 4824, 1514, 1832, 1833, 1527, 1838, 4937, 
        1839, 1540, 1844, 4940, 1845, 1553, 1850, 4943, 1851, 1567, 1856, 
        4946, 1857, 1581, 4917, 1863, 1864, 1867}], 
       Line3DBox[{1422, 1607, 4797, 1423, 1620, 4807, 1444, 1632, 4814, 1456, 
        1643, 4817, 1468, 1800, 4933, 1801, 1802, 1766, 4924, 1817, 1767, 
        1898, 1770, 1823, 1771, 1899, 1828, 1882, 1829, 1900, 1834, 1884, 
        4952, 1835, 1901, 1840, 1886, 4953, 1841, 1902, 1846, 1888, 4954, 
        1847, 1554, 1852, 4944, 1890, 1853, 1568, 1858, 4947, 1892, 1859, 
        1582, 1865, 4949, 1894, 1866, 1868}], 
       Line3DBox[{8, 3133, 23, 3147, 38, 3161, 53, 3173, 68, 3188, 83, 3203, 
        271, 98, 3218, 378, 113, 3232, 128, 3245, 143, 3258, 158, 3271, 173, 
        3285, 188, 3300, 203, 3314, 218}], 
       Line3DBox[{1424, 4856, 1608, 1425, 4858, 1621, 1445, 4862, 1633, 1457, 
        1789, 4929, 1644, 1469, 1790, 4934, 1803, 1653, 1479, 1768, 4963, 
        1930, 1662, 1489, 1824, 1825, 1671, 1502, 1830, 1883, 1683, 1515, 
        1836, 1885, 4936, 1695, 1528, 1842, 1887, 4938, 1707, 1541, 1848, 
        1889, 4941, 1719, 1555, 1854, 4955, 1891, 1731, 1569, 1860, 4956, 
        1893, 1743, 1583, 1869, 4957, 1895, 1755, 1595}], 
       Line3DBox[{1426, 1609, 4798, 1427, 4859, 1622, 1446, 4863, 1634, 1458, 
        1791, 4962, 1929, 1645, 1470, 1914, 1915, 4961, 1804, 1916, 1654, 
        1480, 1805, 1913, 1922, 1663, 1490, 4960, 1924, 1925, 1923, 1672, 
        1503, 1831, 1684, 4825, 1516, 1837, 1696, 1529, 1843, 4939, 1708, 
        1542, 1849, 4942, 1720, 1556, 1855, 4945, 1732, 1570, 1861, 4948, 
        1744, 1584, 4918, 1870, 1756, 1596}], 
       Line3DBox[{1428, 1610, 4799, 1429, 1623, 4808, 1447, 4864, 1635, 1459, 
        1792, 4930, 1793, 1904, 1905, 1921, 1920, 1794, 1919, 1655, 1481, 
        4879, 1769, 1818, 1664, 1491, 4887, 1819, 1673, 1504, 1685, 4826, 
        1517, 1697, 4835, 1530, 1709, 1543, 4898, 1721, 1557, 4903, 1733, 
        1571, 4910, 1745, 1585, 4919, 1757, 1597}], 
       Line3DBox[{1430, 1611, 4800, 1431, 1624, 4809, 1448, 1782, 1926, 1636, 
        4926, 1460, 1903, 1763, 1896, 1646, 1471, 4872, 1795, 1656, 1482, 
        4880, 1806, 1665, 1492, 4888, 1820, 1674, 1505, 1686, 4827, 1518, 
        1698, 4836, 1531, 1710, 4843, 1544, 1722, 1558, 4904, 1734, 1572, 
        4911, 1746, 1586, 4920, 1758, 1598}], 
       Line3DBox[{1432, 1612, 4801, 1433, 1625, 4810, 1449, 1783, 1927, 1784, 
        1928, 1876, 1917, 1785, 4927, 1897, 1786, 1472, 4873, 1807, 1808, 
        1879, 4950, 1809, 1810, 1493, 4889, 1675, 1506, 1687, 4828, 1519, 
        1699, 4837, 1532, 1711, 4844, 1545, 1723, 4849, 1559, 1735, 1573, 
        4912, 1747, 1587, 4921, 1759, 1599}], 
       Line3DBox[{1434, 1613, 4802, 1435, 1775, 1776, 1777, 1761, 1907, 4959, 
        1762, 1908, 1877, 1787, 4928, 1918, 1788, 1910, 1764, 4923, 1911, 
        1765, 1912, 1880, 4951, 1811, 1812, 1494, 4890, 1676, 1507, 1688, 
        4829, 1520, 1700, 4838, 1533, 1712, 4845, 1546, 1724, 4850, 1560, 
        1736, 4853, 1574, 1748, 1588, 4922, 1760, 1600}], 
       Line3DBox[{1436, 1773, 1774, 1437, 1778, 4925, 1779, 1875, 1780, 1906, 
        4958, 1781, 1461, 1796, 4931, 1797, 1878, 1798, 4932, 1909, 1799, 
        1881, 1813, 4935, 1814, 1495, 4891, 1677, 1508, 1689, 4830, 1521, 
        1701, 4839, 1534, 1713, 4846, 1547, 1725, 4851, 1561, 1737, 4854, 
        1575, 1749, 4855, 1589, 1871, 1872, 1873}], 
       Line3DBox[{1590, 1750, 1862, 1576, 1738, 4905, 1562, 1726, 4899, 1548, 
        1714, 4895, 1535, 1702, 4893, 1522, 1690, 4892, 1509, 4819, 1678, 
        1496, 1666, 4881, 1483, 1657, 4874, 1473, 1647, 4868, 1462, 1637, 
        4865, 1450, 1626, 4860, 1438, 1614, 4857, 1411, 1601, 1772, 1874}], 
       Line3DBox[{1932, 2135, 5045, 1933, 2149, 1961, 2313, 2453, 5160, 2454, 
        2164, 1976, 2430, 2431, 2419, 5165, 2471, 2179, 1991, 2304, 4976, 
        2422, 2429, 2190, 2003, 2320, 4983, 2491, 2200, 2014, 4990, 2209, 
        2025, 4999, 2220, 5089, 2038, 2232, 5099, 2051, 5010, 2244, 2065, 
        5013, 2256, 2079, 5018, 2268, 2094, 5026, 2280, 2109, 5036, 2292, 
        2124}], Line3DBox[{1934, 2136, 5046, 1935, 2150, 5057, 1962, 2314, 
        2165, 1977, 2303, 2420, 5166, 2472, 2473, 1992, 2321, 4977, 2462, 
        2463, 2464, 2466, 2465, 2496, 5163, 2322, 2441, 2513, 2514, 2015, 
        2517, 5173, 2512, 2516, 2210, 2026, 5000, 2221, 5090, 2039, 2233, 
        5100, 2052, 2245, 5110, 2066, 5014, 2257, 2080, 5019, 2269, 2095, 
        5027, 2281, 2110, 5037, 2293, 2125}], 
       Line3DBox[{1936, 2137, 5047, 1937, 2151, 5058, 1963, 2488, 2166, 5168, 
        1978, 2315, 2456, 2458, 2459, 2461, 2460, 5162, 2316, 2439, 2467, 
        2468, 2469, 2434, 2479, 5156, 2307, 2423, 2494, 2495, 2016, 2503, 
        5171, 2477, 2501, 2211, 2027, 5001, 2222, 5091, 2040, 2234, 5101, 
        2053, 2246, 5111, 2067, 2258, 5120, 2081, 5020, 2270, 2096, 5028, 
        2282, 2111, 5038, 2294, 2126}], 
       Line3DBox[{1938, 2138, 5048, 1939, 2152, 5059, 1964, 2167, 5068, 1979, 
        2317, 2457, 5076, 2318, 2319, 2478, 2305, 2440, 2306, 2437, 2445, 
        5138, 2323, 2424, 2324, 2401, 5139, 2325, 2502, 2326, 2028, 5002, 
        2223, 5092, 2041, 2235, 5102, 2054, 2247, 5112, 2068, 2259, 5121, 
        2082, 2271, 5128, 2097, 5029, 2283, 2112, 5039, 2295, 2127}], 
       Line3DBox[{1940, 2139, 5049, 1941, 2153, 5060, 1965, 2168, 5069, 1980, 
        2504, 5077, 2505, 2506, 2507, 2474, 5172, 2476, 2475, 2004, 2327, 
        2438, 2328, 2449, 2402, 5169, 2492, 2497, 2329, 2511, 2330, 2515, 
        2510, 2509, 5140, 2337, 2338, 5141, 2042, 2345, 2346, 5146, 2055, 
        2353, 5113, 2354, 2069, 2361, 5122, 2362, 2083, 2369, 5129, 2370, 
        2098, 2377, 5133, 2378, 2113, 5147, 2386, 2387, 2390}], 
       Line3DBox[{1942, 2140, 5050, 1943, 2154, 5061, 1966, 2169, 5070, 1981, 
        2180, 5078, 1993, 2191, 5083, 2005, 2331, 5164, 2470, 2332, 2403, 
        2333, 2447, 2490, 2489, 2448, 5142, 2339, 2405, 2340, 5155, 2425, 
        2347, 2407, 5103, 2348, 2427, 2355, 2409, 5114, 2356, 2428, 2363, 
        2411, 5123, 2364, 2084, 2371, 5152, 2413, 2372, 2099, 2379, 5153, 
        2415, 2380, 2114, 2388, 5154, 2417, 2389, 2391}], 
       Line3DBox[{1944, 2141, 5051, 1946, 2155, 5062, 1967, 2170, 5071, 1982, 
        2181, 5079, 1994, 2481, 5084, 2483, 2484, 2308, 5158, 2442, 2444, 
        2443, 2404, 2334, 5159, 2446, 2336, 2029, 2341, 5093, 2343, 2426, 
        2349, 5104, 2351, 2056, 2357, 5115, 2359, 2070, 2365, 5124, 2367, 
        2085, 2373, 5130, 2375, 2100, 2381, 5134, 2383, 2115, 2392, 5136, 
        2394, 2396}], 
       Line3DBox[{1948, 2143, 5052, 1949, 4967, 2157, 1969, 4969, 2172, 1984, 
        4972, 2183, 1996, 2508, 4979, 2193, 2007, 2480, 4984, 2202, 2018, 
        4992, 2213, 2031, 5144, 2344, 2225, 5145, 2044, 2352, 2237, 2058, 
        2360, 5011, 2249, 2072, 2368, 5015, 2261, 2087, 2376, 5022, 2273, 
        2102, 2384, 5031, 2285, 2117, 5148, 2395, 2297, 2129}], 
       Line3DBox[{1950, 2144, 5053, 1951, 2158, 5063, 1970, 4970, 2173, 1985, 
        4973, 2184, 1997, 4980, 2194, 2008, 4985, 2203, 2019, 4993, 2214, 
        2032, 5003, 2226, 5094, 2045, 2238, 5105, 2059, 2250, 2073, 5016, 
        2262, 2088, 5023, 2274, 2103, 5032, 2286, 2118, 5041, 2298, 2130}], 
       Line3DBox[{1952, 2145, 5054, 1953, 2159, 5064, 1971, 2174, 5072, 1986, 
        4974, 2185, 1998, 4981, 2195, 2009, 4986, 2204, 2020, 4994, 2215, 
        2033, 5004, 2227, 5095, 2046, 2239, 5106, 2060, 2251, 5116, 2074, 
        2263, 2089, 5024, 2275, 2104, 5033, 2287, 2119, 5042, 2299, 2131}], 
       Line3DBox[{1954, 2146, 5055, 1955, 2160, 5065, 1972, 2175, 5073, 1987, 
        2186, 5080, 1999, 4982, 2196, 2010, 4987, 2205, 2021, 4995, 2216, 
        2034, 5005, 2228, 5096, 2047, 2240, 5107, 2061, 2252, 5117, 2075, 
        2264, 5125, 2090, 2276, 2105, 5034, 2288, 2120, 5043, 2300, 2132}], 
       Line3DBox[{1956, 2147, 5056, 1957, 2161, 5066, 1973, 2176, 5074, 1988, 
        2187, 5081, 2000, 2197, 5085, 2011, 4988, 2206, 2022, 4996, 2217, 
        2035, 5006, 2229, 5097, 2048, 2241, 5108, 2062, 2253, 5118, 2076, 
        2265, 5126, 2091, 2277, 5131, 2106, 2289, 2121, 5044, 2301, 2133}], 
       Line3DBox[{1958, 2310, 2311, 5137, 1959, 2162, 5067, 1974, 2177, 5075, 
        1989, 2188, 5082, 2001, 2198, 5086, 2012, 2207, 5087, 2023, 4997, 
        2218, 2036, 5007, 2230, 5098, 2049, 2242, 5109, 2063, 2254, 5119, 
        2077, 2266, 5127, 2092, 2278, 5132, 2107, 2290, 5135, 2122, 2397, 
        2398, 2399}], 
       Line3DBox[{2123, 2291, 5035, 2385, 2108, 2279, 5025, 2093, 2267, 5017, 
        2078, 2255, 5012, 2064, 2243, 5009, 2050, 2231, 5008, 2037, 5088, 
        2219, 4998, 2024, 2208, 4989, 2013, 2199, 2498, 2500, 5170, 2499, 
        2002, 2189, 2493, 2421, 4975, 2433, 2432, 1990, 2178, 2455, 5161, 
        2450, 2452, 2451, 1975, 2163, 5157, 2436, 2435, 2302, 1960, 2148, 
        4965, 2312, 1931, 2134, 2309, 2400}], 
       Line3DBox[{2128, 2296, 2418, 5040, 2393, 2116, 2284, 2416, 5030, 2382, 
        2101, 2272, 2414, 5021, 2374, 2086, 2260, 5151, 2412, 2366, 2071, 
        2248, 5150, 2410, 2358, 2057, 2236, 5149, 2408, 2350, 2043, 2224, 
        2406, 2342, 5143, 2030, 2212, 4991, 2335, 2017, 2201, 2485, 2487, 
        5167, 2486, 2006, 2192, 4978, 2482, 1995, 2182, 4971, 1983, 2171, 
        4968, 1968, 2156, 4966, 1947, 2142, 4964, 1945}], 
       Line3DBox[{2519, 2715, 5249, 2520, 2729, 2548, 2906, 3047, 5363, 3048, 
        2742, 2561, 3009, 3010, 2990, 5370, 3077, 2754, 2574, 2888, 5183, 
        2995, 3003, 2759, 2581, 2943, 5187, 3089, 2765, 2587, 5191, 2771, 
        2598, 5196, 2782, 5286, 2611, 2795, 5297, 2626, 5210, 2810, 2641, 
        5214, 2825, 2656, 5220, 2840, 2671, 5228, 2855, 2686, 5238, 2870, 
        2701}], Line3DBox[{2521, 2716, 5250, 2522, 2730, 5261, 2549, 2907, 
        2743, 2562, 2886, 2991, 5371, 3078, 3079, 2575, 2944, 5184, 3061, 
        3062, 3063, 3065, 3064, 3105, 5366, 2945, 3029, 3117, 3118, 2588, 
        3120, 5380, 3113, 3119, 2772, 2599, 5197, 2783, 5287, 2612, 2796, 
        5298, 2627, 2811, 5309, 2642, 5215, 2826, 2657, 5221, 2841, 2672, 
        5229, 2856, 2687, 5239, 2871, 2702}], 
       Line3DBox[{2523, 2717, 5251, 2524, 2731, 5262, 2550, 3082, 2744, 5372, 
        2563, 2915, 3051, 3053, 3054, 3056, 3055, 5365, 2916, 3031, 3066, 
        3067, 3068, 3015, 3081, 5356, 2891, 2998, 3101, 3102, 2589, 3112, 
        5377, 3080, 3110, 2773, 2600, 5198, 2784, 5288, 2613, 2797, 5299, 
        2628, 2812, 5310, 2643, 2827, 5319, 2658, 5222, 2842, 2673, 5230, 
        2857, 2688, 5240, 2872, 2703}], 
       Line3DBox[{2525, 2718, 5252, 2526, 2732, 5263, 2551, 2745, 5271, 2564, 
        2917, 3052, 5277, 2918, 3087, 2978, 3040, 3083, 2919, 3104, 2920, 
        3103, 3020, 3030, 5339, 2892, 2999, 2893, 2988, 5347, 2958, 3111, 
        2959, 2601, 5199, 2785, 5289, 2614, 2798, 5300, 2629, 2813, 5311, 
        2644, 2828, 5320, 2659, 2843, 5327, 2674, 5231, 2858, 2689, 5241, 
        2873, 2704}], 
       Line3DBox[{2527, 2719, 5253, 2528, 2733, 5264, 2552, 2746, 5272, 2565, 
        2921, 3057, 5278, 2922, 2979, 3032, 2923, 5361, 3019, 2924, 3021, 
        2960, 3000, 2961, 3041, 2989, 5375, 3091, 3106, 2962, 3090, 2963, 
        3116, 5378, 3114, 3115, 5379, 2615, 2799, 5301, 2630, 2814, 5312, 
        2645, 2829, 5321, 2660, 2844, 5328, 2675, 2859, 5333, 2690, 5242, 
        2874, 2705}], 
       Line3DBox[{2529, 2720, 5254, 2530, 2734, 5265, 2553, 2747, 5273, 2566, 
        2925, 5279, 2926, 2980, 3005, 3006, 5353, 2996, 2927, 2983, 2946, 
        5367, 3069, 3093, 3092, 3096, 3094, 3095, 3070, 2964, 3123, 5382, 
        3124, 3125, 3122, 3121, 5381, 2616, 2800, 5302, 2631, 2815, 5313, 
        2646, 2830, 5322, 2661, 2845, 5329, 2676, 2860, 5334, 2691, 2875, 
        5337, 2706}], 
       Line3DBox[{2531, 2721, 5255, 2533, 2735, 5266, 2554, 2748, 5274, 2567, 
        2928, 5280, 2930, 2981, 2931, 5358, 3022, 2932, 2984, 2947, 5368, 
        3071, 3098, 3097, 3099, 3042, 5352, 3043, 3002, 2965, 2602, 2786, 
        5290, 2617, 2801, 5303, 2632, 2816, 5314, 2647, 2831, 5323, 2662, 
        2846, 5330, 2677, 2861, 5335, 2692, 2876, 5338, 2707}], 
       Line3DBox[{2535, 2723, 5256, 2536, 5177, 2737, 2556, 5179, 2750, 2569, 
        2933, 3088, 5374, 2756, 2577, 3034, 3035, 5185, 3033, 2761, 2583, 
        2966, 5189, 3001, 3016, 2767, 2591, 5369, 3075, 3076, 3074, 2775, 
        2604, 5201, 2788, 5291, 2619, 2803, 2634, 5212, 2818, 2649, 5217, 
        2833, 2664, 5224, 2848, 2679, 5233, 2863, 2694, 5244, 2878, 2709}], 
       Line3DBox[{2537, 2724, 5257, 2538, 2738, 5267, 2557, 5180, 2751, 2570, 
        2934, 2935, 5355, 3013, 3014, 3060, 3059, 2936, 5186, 3058, 2762, 
        2584, 5340, 2894, 2967, 2768, 2592, 5350, 2968, 2776, 2605, 5202, 
        2789, 5292, 2620, 2804, 5304, 2635, 2819, 2650, 5218, 2834, 2665, 
        5225, 2849, 2680, 5234, 2864, 2695, 5245, 2879, 2710}], 
       Line3DBox[{2539, 2725, 5258, 2540, 2739, 5268, 2558, 2908, 3084, 2752, 
        5343, 2571, 3004, 2887, 2992, 2757, 2578, 5348, 2937, 2763, 2585, 
        5349, 2949, 2769, 2593, 5351, 2969, 2777, 2606, 5203, 2790, 5293, 
        2621, 2805, 5305, 2636, 2820, 5315, 2651, 2835, 2666, 5226, 2850, 
        2681, 5235, 2865, 2696, 5246, 2880, 2711}], 
       Line3DBox[{2541, 2726, 5259, 2542, 2740, 5269, 2559, 2909, 3085, 2910, 
        5373, 3086, 2976, 3039, 2911, 2993, 5281, 2912, 2579, 5344, 2950, 
        2951, 2985, 5345, 2952, 2953, 2594, 5192, 2778, 2607, 5204, 2791, 
        5294, 2622, 2806, 5306, 2637, 2821, 5316, 2652, 2836, 5324, 2667, 
        2851, 2682, 5236, 2866, 2697, 5247, 2881, 2712}], 
       Line3DBox[{2543, 2727, 5260, 2544, 2899, 2900, 5342, 2901, 2884, 3024, 
        5275, 2885, 3025, 2977, 2913, 3049, 5282, 2914, 2938, 2889, 5360, 
        3027, 2890, 3028, 2986, 5346, 2954, 2955, 2595, 5193, 2779, 2608, 
        5205, 2792, 5295, 2623, 2807, 5307, 2638, 2822, 5317, 2653, 2837, 
        5325, 2668, 2852, 5331, 2683, 2867, 2698, 5248, 2882, 2713}], 
       Line3DBox[{2545, 2896, 2897, 5341, 2546, 2902, 5270, 2903, 2975, 2904, 
        3023, 5276, 2905, 2572, 2939, 5283, 2940, 2982, 2941, 5359, 3026, 
        2942, 2987, 2956, 5284, 2957, 2596, 5194, 2780, 2609, 5206, 2793, 
        5296, 2624, 2808, 5308, 2639, 2823, 5318, 2654, 2838, 5326, 2669, 
        2853, 5332, 2684, 2868, 5336, 2699, 2971, 2972, 2973}], 
       Line3DBox[{2700, 2869, 5237, 2970, 2685, 2854, 5227, 2670, 2839, 5219, 
        2655, 2824, 5213, 2640, 2809, 5209, 2625, 2794, 5207, 2610, 5285, 
        2781, 5195, 2597, 2770, 5190, 2586, 2764, 3107, 3109, 5376, 3108, 
        2580, 2758, 3100, 2994, 5182, 3012, 3011, 2573, 2753, 3050, 5364, 
        3044, 3046, 3045, 2560, 2741, 5357, 3018, 3017, 2883, 2547, 2728, 
        5175, 2898, 2518, 2714, 2895, 2974}], 
       Line3DBox[{2708, 2877, 5243, 2693, 2862, 5232, 2678, 2847, 5223, 2663, 
        2832, 5216, 2648, 2817, 5211, 2633, 2802, 5208, 2618, 2787, 5200, 
        2603, 2774, 3036, 3038, 5362, 3037, 2590, 2766, 3073, 3072, 5188, 
        2948, 2582, 2760, 2997, 3008, 5354, 3007, 2576, 2755, 5181, 2929, 
        2568, 2749, 5178, 2555, 2736, 5176, 2534, 2722, 5174, 
        2532}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
    VertexNormals->CompressedData["
1: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
dFQFJ8Cri4vrmecmcH7YxFjOwEuH8gtlHGOWfaGSz/mJig8vVi2D/nW3Ylrk
FuCsGz8mFl+P33ILjLwZmsTwfaecq3jMrov7y180v3rF/kHX+x92N6fdNyHr
Q9h1Wr2op+YHon0E2vJn1ffkVQ3Mw67LhXwN27H43/Xn18ndL5o0Fh/voeff
fT2KhoNXsvsULe/lYHz4J6ttr23yeqydWzjdnC9nqWPX1Z/Nla2iek8F+5/b
hqLr4cABiFhn5jei72xXPdcU1mlLDvGVQIVKudgI88ReNx6IuALNe03rb9Dd
7aHVT4j0wI7qz71FbyF6XqLyFrE34p8HF2HXU3/pFWk93n5GuSVZj13fST2W
lrtIxMBDR4Ox67OHnXmz9yDx/LDm6BVLzgW4H2VeVVbEc5WO2zcUyfv+/DT7
/ozW0147Q+CDjFvgXCjQD04xki4rhXeOF79Pe+MLdDdcrXfYj7+/oRkpIVvq
mvWNu1sdVp6EQPrh9qzU0SRYuuQgDxof0uPjgcl7lhP5q/S2djI5kzM5k/cV
TtGjafVnS7Iel0yjvxGVZ7T+nnpeRjmRHLpKPu3lFL9qCu+r8uwpTtYfAK3+
QFmvUNYpb9P89+1+FweXT++XEldeDDzEHnDNuxZFWJ7CKX4HlPVR3pMBudrX
osFQeZOYdS6l5L+dafVnQOAnDAj8hNtdnrx+AbTrF4ofN8V/m558iDiRnCl2
ZFr7ckn5bJQ0KhY4jlv/qCUuB5fkXtudGVHYeP7BIipalIKvByh2MYq/0VSy
nYJyfQfZXiH3618OJP+S/47D6qGsv2nX0aZHDvNY7igFw9auUe1M3Bjadv5+
3z/X/7RyoHB0E/skKz9/sM/A+mB74py0lw/x43+petYGk1ucqhG3SD1x/cNo
+qWKpl8Ybc+ZL090Ik59A5vVDMzVq/r+uTYiHrPy28RvhkaY3C76ch9zZe5r
9Dgvj5FPGmJ4C+sXo8zV9QOY/UKXH2fjS0atVmByS0PyPrZlx946ephXmaEm
Vl5DYohhGVPOdHnTRUUUNRyOyQ3xCW/qyv1QHwTxQVGA1d/693+vX7YNr2gW
Q6U3xuPz2zxfP0S++T8ACzC58f76D/57cmOUm6Y2D1/0Ky5n6aY25Vy3pbH5
epI4xssauiW/CZMzOZP3Xk72w8OuU/zxels76fG+bu9i8u7l4xYLyQ/Rxv1W
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
Q8Rl7hyxPVidjV0Pzf4S+GZmfq/rLyLu6J0QV+CXA0Q4zOunl2XBVZae06Q8
E7Dy216/0d6wJAMmW13rd6C2EPQzUx7lsCgWbBs4akyZky34KDF0rqRhKSEn
ui+992ixk52ia0SeGG37ifQiovK9RV8i4vTGDzkPE6TJ3/fH96i756VVUww3
H3uCy+/yc/ksxMW/2993ovLT1B+pew7D7Zc1D69s2f4lkbA8vfF5/AufwrGt
PoDdc4n7aK/eN056mtPud3R1/WvI+vy2Turzp7nX7RvqRIJbdrpmsFT6giOt
ejB2XYPGrt5V7SfiieT3NPH3vBvI4rIBnCuH1P4hz59kfVixi/XhjnKi/a+e
as/f5rB1XYpd39vO9enS1nkdptDM54xyovqJ3hclMk8l5xUir2fweZJmXdNe
OXSU067vprLafg0eht+f4+HZUoU39M9nMcqJ9rkYrYfIzkDJz1nh0b75aj25
Pc872Z7/GifaD+2u+1oVPz5+d0A02DYkxsagyhEGJsfsHh9SCqIljPeZHsDn
b6OtCaE1r4sJeXe3k8mZnMmZvLfyJ+S8bym/531DCPIeEtZDVF6N9/Y4x1d5
QHaF8amnxjk9/rxEnKw/AAEa/cFbRZlnICgGD3jkdlnxpDJcP1kvhRTSXr20
q/jqekNHTs8sUMSSYaQ3D/8uU/I5ptH0uyw5b/Ww3/NWIyW8+frJ60mAVVFx
a7XzF4znF3IqpRwggYvGN7mCTfBzZGS9C9DqXecyHjm9iPAE2kGTd1+JxNfv
U25xsHgrRYGje+5wTisrBZIVrmYKTW8xuUly+2uUUvk7jf+1Lvv+p92JTWqI
sUgRqJK14fwSg+uv/mS74wIae+Nw1/nTBDJygND9JcMalPB13EKyHWfs7/m1
kYdfPUwC4uOB3CzdmetdcP0wyhTZJqcRBaT7vfoQXYL37wauJawff0YDWf38
g1/dGe930thIJcOUB5gcDlcYJU1sIgE94SrSIIM7GN8gXtDU4s8W5Sj/5qKx
B8b7+wn4TaOyp80qH2zn9sL/D7lpmuwwnBgeC47kmM3jOIq3c/LEWA0vb3cQ
Fhg82yyt79hbHveTKY1PO4HJ4bapwJhMlATMBm95nG54DOM81eK//JZ7qp3/
NR4oPDZC20oXk797wzqBlGb5k2wLRDSsrmDcctmbMzrMfsH42hzbFDRoISaf
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
dcQQ/UQqfsk6dZBlG3lwupo/C1AK3b4jBUYenZ4pp4nLk/b7eFXCtNLALx0e
WpMyce6hXCjOedVp6YA0sLMs5NDB5u/d25FOZWebv3dWZuKLzlF977q7/Uze
NzglLxGF0OYnYrR+lTAvdQvrXKhssGKvNZVfwZYH6RMUywogywVYttML/17b
W0qsuX09D76o2fPM8xVuZ5CxvH0ie3c6zLj2ca/d2SJw5Oitn8iwaKyddc7T
nW3jid/HrRvnh5wd8dH7hWLUnBY/B6GYWZbUfg5E7Wd5pzr79KwcmHnJQmZX
Yx5dfsB6jbvs11joVrrwaPrhUsL2Uzjrc5PNLf4VjfMEwnWb5Zyn5njrcb9M
7LnEUk3UZY79vfwslO98Ds33nYgfF3cOvLU3Du4dWG8TKlQKnriXrNqaHgFP
3Jfgnm0YDrfGPs5wm15KV26dbb++XtyXZBU97Pq7XaP84pl2oQ5zb0WntXsL
32PXny/gdpiZzLg8S12Ui+LOWGPXR2jLK/nU9/1+0eBKS5gMYoCI2mSXLfyp
MGlt4I3jH/D39CfvlbrMgFjoELpqqZpmKZjjWlIVJRoHRiqTnO02ukLFhx6W
q0eXgu0T397yjPYBFbNs4MsLzyFp36jEV85UccsXil1/fdERVgw1XaZZjnNT
+eIx71kdIK+5jXNDFc7Puxg5Lf3iDsu0HJX1qOJHjb1AGvTe4RmMFje9+LMW
5/0lU3LeG9yB6mUT89oTzypRPJWvSPwaVL6qGryV6v2i5W9sd+xdLZcD+Nee
1w/Z7QjXfdO0tv2cB3b1W/ZxZeB3ECUY/djCxgYmv3AdLyKJ+6ddOhXz+MEh
B/hML5bVkeq5YpLNP5ouegbnid09I1qH8wCJ8VBAzAVOW+fCPa+IKm/gQJO8
+zpWMMSCa+skqry9Wua3YWPjdeiY8ZlXrB3zw72Lo1gE0Yvw+Emh4DtU5Yk4
UT20/ED82LTlmfi8eMfPeMMT3yjC8irZqufzxPHvRkh+QP6J4HRwmU9V4vzR
LKBdf/1KrF4idFjzeGWcG/7dtOdP97Q8kAwr17nUVVGdX9bkGibMExkFo14/
ijmYXkqXy6qg6J08WyijuVhiRm3H398SUYkDSbX3gWbIoCrpdow3ynm79uZ3
IypPPjcNac9N05bfdW1Z1UP9HGBYXj0zRSwXjjgr8UD9fBS4etFw7ohDBeBh
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
kkLXM0FI3TKd6hfucKaMnJw/Vzocq7TM7mYnzkeLf/v6486Bb3CplfPVp7Ul
IGjVMdMwqnwiYcnHUv9mPpFXXeSn4X+++kiQkS20rFOcc4SKe9UciTCNewWH
ceW5ZVbiXD3Y4MRTKSdossvQwpUqb+ACAj+N9j6XHk1eIdp8HGm/zjl+hsqk
kQ3TzuD13wb5q9Fgd3ielJR+hup5u8o/hCgv0oT+rfG339CcxzTdmvhp5yVf
yCu7flq2C35fR+mtA0env4Ka9kdMvlfSb49rF/mTTCLnObpGk+doRfrKhFtI
FJxzuYY/rB6X81q77CABto/gwjkJ38dx+H3r16xR5Vn+FZgdOcxjuYP+OI8f
xyXyuPICsLFYddqCSi8azvQzYfL/IP+v+ZOUfvn9edVpnjfscmv+Jhua/E1/
u53fM2tOFxkew64rCQomt8SJqgkVepMP9+Pz4q3Igup/eH33hG/HU+57rtj1
ZQ3TNdnzSYDzmXza6Ot4fmTv3Q8aPrThV+BceiY7qP4Sdl3q2blZV1rOd4Sb
PRY9bY7xgJFrnnE09j55zraUsawqDQHcc8OiLJZ8hv03GZaMiC8Fbn6P4gL0
I8FckLFDpsIJ1oQOnVVSWQqk18/kSw3wBDGfF8o+2W4P368qTB4ZRKV3LRS7
/vqiI6wYarpMsxznz/11zvdPfgCrazLHTqL6vi/eJ7txQdNpWOs3rX8k1Xiz
q9hTPALVgVLCysez28izTPRcytujOO9//QaUJLKS2fmt4Kg7crZN6SUgFln1
AuGMA95XJ5vOvWkDZ8VXoCMW4O/pxVMxjx8ccoDP9GJZHan0zM7mX+YNQscr
CmaCUAFLccnZidA8SWprUyoer/4mf7qn5YFkWLvOpa6Kaj+0XpSzbFP1dTDW
VEqX+r7TJAvsp9RcB3lujzWo+XFzCaNbP1+AMSR7r5NMfyom/8v8U5i1tU4J
vu48Z55veFU8rde1s6v4CJrzlxlsf/ecLy3nnrsmZ3swfk50+Lq8ibPl6Mfh
oeXr0tI0zyjGdFk+08VOdoquEXli7S1fl3UhNW5EPNw6YXexS0LX+ekR+cF2
Vf1EXDD5uWhmTCHY2CQV1DAxDs7SNjxSGojHjeouP9i3NP69o8n+vfrhk/S0
DfE8G3s+JuoI/ywB/cn5SeXI+Uk9yflJO+onfJFzqjf6mfSJlhPl0SbKX9xZ
ORBx9QUejhXsmUBjOe/F1RzZMNCMZ5eTeMfz73DmLo9hzfgMH1/LMuShstvc
J+ePsyHnj7vGt8Nn5B5c/kVLFt5OqMPHecHIM7Easl/hmWMsKzgUieUcH81X
wfcUt8ttY2ONNsz9d9dZjHJIEyets3EGiOKzEcVDI4obNnpgWM2kxPfAN7ff
fuVkKj3zUdo6A7YwYKZ2O3L/Upxfz3CfNGrgN7Cdb0zapiF4+zf4Rj+5MzUM
5LhNP3ZmCV7+SCf9rrPHRioZpjzA5Ha4wihpYrPeridcRRpkcAfjG8QLmsKb
uauj/JuLxh4YH+An4DctHm/PfpMdhhPDY4Fmjtk8jqN4eyZPjNXw8nYHYYHB
s83SmPpqR3l8ZUIuqsKLyb/fuDONPbk/y3X0Coq+r8H8ez9Ffv/lH+Ksdv7/
+o0LIUgQig7DODuC9Kg/SdO5mubmZGDtP6Nd/6s9ZTd+oijIwrjPorpf/MKT
gJ+oCivWfpaHr3qFPwy6p31xBXUWtlwPwJ/rTmv59Gn/n48i8D/PV27hX3Eu
3bZfN5MzeW/iLPvjJTKtvoJso2rDmnXdr0epHdCZ8F42Blzi+8TOOTMGvM0f
sv3imt53Lqlc/aWTl3kYaHphsDbrcCLQ4nUf/GMFbqealMRebCeZCvZLjNdx
mEc//i0tf9xPpjQ+7QQ2f942FRiT2TxvNCbLrhr+BM93IDisTD2wE/PJv5a/
IFB4bIQ2Vdx+94Z1v+L2m3xRnqpoaIjxLzGKTb59aB5eS5DXQGOdXy5qxYVx
NouiX35unjE3xaqtFDA+7HpKdGMzz7VYgpy+chbjq66InAvphXLQ76J8Bxws
/1+POtfNecdKCPIgAM9mvQiw4XrRzmdt6gNdlbfLr5vzI3SUzw08MT007BuY
W+FleiUXn+cV+FdwzF+dBXTWSNjeNen4+S8jcjy9I+1c56q63BKpnR4NFvta
L/KPpdqvJDifZcY/W8R2oRcQsUwOu/CFvjz3k9e/x2jWv+Ptdk+04k0DI3QH
RMJqfB0dTo6jq0WOo6tEzg8bTs4Pe5EmPyyj8mGU17IJ6FiNLaZrt8zek+Dx
WdcPl9OEDYvWviSWz6BRrfYdCtGlsfNEkeOQDqeJs9pVz0XLN08tq7q/zROy
HWbfwYPmAyd1tqlHnPA4hERx4G3I8S0FOxnfkig/1PQxJg+uJiPL6dWzca9I
hlZsLPSYiObxKOcDk/XzFpsuxf02P+f8sssBCxq73B/1MBhvkIgzes7uf9TR
QKk=
     "]], {
    {RGBColor[1, 1, 0], Point3DBox[CompressedData["
1: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
6zrBKwY4//8AOvDAlg==
      "]]}, 
    {RGBColor[0, 0, 1], Point3DBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0, 1, 0], Point3DBox[CompressedData["
1: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
RwnMjO1rJKDfsCUjV+jxImrD7rwB1cDzx0LBjIFX6nFI/RshojmC+hbS0pyw
UIk7s1f2pVmDnqPOR5MUm6ewq023Vist8JmnjVNOV5SkkO1gySrDEMS3S3Lo
rzyqwLcvaKXUzQD+PHWJmZGro8ho5a0GGSP4peuQTK0gX4dPUrz6LMEA8c1e
0e97zz2MVnq+xgdWgT1yjPtY5gMGMLHa2/XJVJivrzqXXsWtQ+jYZCjdGTHg
Ax3FgNz8j1bcSb7m/fMZyMn5ZN0Y5rfwkl22tpc0nI/IW54taMldR3dduesb
PSAu8lhytEAvGZtmpTclCIO/1e9tSFzzR/AeMXepvY1Qlwbjzpk5sPeje1Gu
k4yiBOsC8wC6UetezMNyXYC+DuJyLa7K4yFFBfZ6Xk55k4Egf0ObIuckyvFj
50TR2ywwPi8ype1E1zg6qDvmy6wF9cH4bpos4+lf6JUg73WT/+Z2/eLyteV4
dnkYZaLSFLkFWD9WRhm9X+WNx4HzB4KJSsDOpx80mK78KEdVDt8t2C5R7MoL
PidPJFiRFTqfuvnk5DTIp0WeMBPl/8VPzhzpSK6B/Eq6WG8wX/gW0V1QFef4
CLyVto6I/+Q9hD45fmOuOwj97SmpT/Qqjr34qa/q2OPP0A/fq2kbf6lRi/3D
HAPFCPLUeras4P75UdRdHCjepgr15GBTSFDeVBt2lXvfuOMJdY/LgPHs5Mdu
PDVbzOVyD/j2YsDjSszHdrymlD9LPgFy1fPkPjZhK9g54agxrQvoUZSguBdo
nI05n/e1X6cDfoaYY2923glENz/34R4Z1A0ZtiO9x2ta0Rfe1dO84xBHNobr
pQxU89ji+fT+k2bQl26fVn7O59KNvvC9+eFRCX6JIlkl9iWKwvJ8i883igjm
ff0K2YgDm2jGZ4pz4e8azHdBCzZtxh3olP3ZUDMPqNssT9NnH6kFoas/6jMS
xyAfyxxm7O43DmPRRyuBb7gA55GgscdPG5dwCi8NX2sb4HNq6tsdjjRSqZw4
r+xLQcDD2afBM6HcLfimwjyjqwbUAePUbuaJzAkkp+J+4Fsw2Pm6yNd4kyUd
KfD6PX9PS8A3/WTnS95T+Of5uU5OJfD3oseL7aeLnchg9cOpUAmIy4WHVF1c
ksvYYYnsD9dV4Jv5f58uBqnUYp26te8BhZBfqT9NhzmzBpECP/OjI+sw3yUQ
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
sQXE6/8AVLoB/Q==
      "]]}}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{754.6666666666663, Automatic},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-4, 4}, {-4, 4}, {0., 0.9999932050704956}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.257008132103736, -2.167275066291468, 1.2879569397495236`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.6816692136266975`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (August 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 98, 1, 150, "Title"],
Cell[CellGroupData[{
Cell[703, 27, 138, 1, 58, "Subsubsection"],
Cell[844, 30, 318, 8, 45, "Input"],
Cell[CellGroupData[{
Cell[1187, 42, 150, 3, 45, "Input"],
Cell[1340, 47, 449, 10, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1826, 62, 182, 4, 45, "Input"],
Cell[2011, 68, 706, 17, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2754, 90, 1072, 30, 249, "Input"],
Cell[3829, 122, 2253, 44, 271, "Output"],
Cell[6085, 168, 687, 12, 35, "Message"],
Cell[6775, 182, 719, 12, 35, "Message"],
Cell[7497, 196, 661, 12, 35, "Message"],
Cell[8161, 210, 358, 7, 35, "Message"],
Cell[8522, 219, 814, 14, 65, "Message"],
Cell[9339, 235, 818, 14, 65, "Message"],
Cell[10160, 251, 837, 14, 65, "Message"],
Cell[11000, 267, 347, 7, 35, "Message"],
Cell[11350, 276, 689, 12, 65, "Message"],
Cell[12042, 290, 721, 12, 65, "Message"],
Cell[12766, 304, 659, 12, 65, "Message"],
Cell[13428, 318, 358, 7, 35, "Message"],
Cell[13789, 327, 815, 14, 123, "Message"],
Cell[14607, 343, 815, 14, 123, "Message"],
Cell[15425, 359, 836, 14, 123, "Message"],
Cell[16264, 375, 348, 7, 35, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16649, 387, 210, 6, 45, "Input"],
Cell[16862, 395, 23361, 317, 141, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40260, 717, 943, 21, 278, "Input"],
Cell[41206, 740, 8540, 176, 198, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49783, 921, 129, 2, 45, "Input"],
Cell[49915, 925, 28394, 587, 400, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78346, 1517, 134, 2, 45, "Input"],
Cell[78483, 1521, 145, 3, 45, "Output"]
}, Open  ]],
Cell[78643, 1527, 887, 22, 191, "Input"],
Cell[CellGroupData[{
Cell[79555, 1553, 186, 4, 45, "Input"],
Cell[79744, 1559, 992, 28, 276, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80773, 1592, 161, 3, 45, "Input"],
Cell[80937, 1597, 8430, 174, 198, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89404, 1776, 128, 2, 45, "Input"],
Cell[89535, 1780, 102, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89674, 1786, 319, 7, 45, "Input"],
Cell[89996, 1795, 8454, 174, 198, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98487, 1974, 210, 6, 45, "Input"],
Cell[98700, 1982, 23361, 317, 141, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122098, 2304, 129, 2, 45, "Input"],
Cell[122230, 2308, 80, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122347, 2314, 147, 3, 45, "Input"],
Cell[122497, 2319, 78, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122612, 2325, 229, 6, 45, "Input"],
Cell[122844, 2333, 114, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122995, 2339, 896, 25, 191, "Input"],
Cell[123894, 2366, 48954, 819, 497, "Output"],
Cell[172851, 3187, 23406, 318, 189, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196294, 3510, 218, 5, 45, "Input"],
Cell[196515, 3517, 228, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196780, 3527, 939, 20, 278, "Input"],
Cell[197722, 3549, 81417, 1637, 873, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[279188, 5192, 107, 1, 72, "Subsection"],
Cell[279298, 5195, 368, 10, 45, "Input"],
Cell[CellGroupData[{
Cell[279691, 5209, 233, 7, 45, "Input"],
Cell[279927, 5218, 957, 26, 276, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280921, 5249, 718, 20, 45, "Input"],
Cell[281642, 5271, 168025, 2765, 566, "Output"]
}, Open  ]],
Cell[449682, 8039, 561, 18, 45, "Input"],
Cell[CellGroupData[{
Cell[450268, 8061, 202, 4, 45, "Input"],
Cell[450473, 8067, 64648, 1074, 409, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[515158, 9146, 949, 21, 278, "Input"],
Cell[516110, 9169, 8282, 170, 198, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[524429, 9344, 131, 2, 45, "Input"],
Cell[524563, 9348, 28396, 587, 400, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[552996, 9940, 238, 5, 45, "Input"],
Cell[553237, 9947, 98, 1, 45, "Output"]
}, Open  ]],
Cell[553350, 9951, 832, 21, 191, "Input"],
Cell[CellGroupData[{
Cell[554207, 9976, 148, 3, 45, "Input"],
Cell[554358, 9981, 234, 7, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[554629, 9993, 239, 5, 45, "Input"],
Cell[554871, 10000, 8219, 169, 198, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563127, 10174, 383, 12, 45, "Input"],
Cell[563513, 10188, 149, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563699, 10196, 1256, 35, 162, "Input"],
Cell[564958, 10233, 195634, 3161, 378, "Output"]
}, Open  ]],
Cell[760607, 13397, 178, 4, 45, "Input"],
Cell[760788, 13403, 187, 4, 45, InheritFromParent],
Cell[CellGroupData[{
Cell[761000, 13411, 547, 15, 45, "Input"],
Cell[761550, 13428, 66751, 1105, 341, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[828338, 14538, 182, 4, 45, "Input"],
Cell[828523, 14544, 262212, 4260, 757, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

