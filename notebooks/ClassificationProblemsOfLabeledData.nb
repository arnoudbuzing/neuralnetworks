(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    516451,      10852]
NotebookOptionsPosition[    513011,      10735]
NotebookOutlinePosition[    513383,      10751]
CellTagsIndexPosition[    513340,      10748]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Neural Networks", "Title",
 CellChangeTimes->{{3.6805340369401255`*^9, 3.6805340397721033`*^9}, 
   3.6805342179092436`*^9, {3.6805363714444547`*^9, 3.6805363715004406`*^9}}],

Cell["Use a GPU for training, when available:", "Text",
 CellChangeTimes->{{3.680534931845997*^9, 3.680534941341607*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"NetTrain", ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.680450832737338*^9, 3.680450847613676*^9}, 
   3.680534057604774*^9}],

Cell[CellGroupData[{

Cell["Balance Scale Example", "Subsection",
 CellChangeTimes->{{3.680613401819129*^9, 3.6806134087234077`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CatenateLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"DotPlusLayer", "[", "10", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ElementwiseLayer", "[", "Tanh", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"DotPlusLayer", "[", "3", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<leftweight\>\"", "]"}], ",", 
         RowBox[{"NetPort", "[", "\"\<leftdistance\>\"", "]"}], ",", 
         RowBox[{"NetPort", "[", "\"\<rightweight\>\"", "]"}], ",", 
         RowBox[{"NetPort", "[", "\"\<rightdistance\>\"", "]"}]}], "}"}], 
       "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
      RowBox[{"1", "\[Rule]", 
       RowBox[{"2", "\[Rule]", 
        RowBox[{"3", "\[Rule]", 
         RowBox[{"4", "\[Rule]", 
          RowBox[{"5", "\[Rule]", 
           RowBox[{"NetPort", "[", "\"\<balance\>\"", "]"}]}]}]}]}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<leftweight\>\"", "\[Rule]", " ", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
        "\"\<UnitVector\>\""}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<leftdistance\>\"", "\[Rule]", " ", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
        "\"\<UnitVector\>\""}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<rightweight\>\"", "\[Rule]", " ", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
        "\"\<UnitVector\>\""}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<rightdistance\>\"", "\[Rule]", " ", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
        "\"\<UnitVector\>\""}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<balance\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<L\>\"", ",", "\"\<B\>\"", ",", "\"\<R\>\""}], "}"}]}], 
       "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.680613543524987*^9, 3.6806136648060446`*^9}, {
  3.6806137310064044`*^9, 3.680613742013811*^9}, {3.680614069797959*^9, 
  3.680614081782035*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetGraph", 
     RowBox[{"[", 
      PanelBox[
       TagBox[
        DynamicModuleBox[{NeuralNetworks`NetGraph`PackagePrivate`selection$$ =
          None, NeuralNetworks`NetGraph`PackagePrivate`outIndex$$ = 9, 
         NeuralNetworks`NetGraph`PackagePrivate`inputs$$ = Association[
         "leftweight" -> NeuralNetworks`EncodedType[
            NetEncoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {1, 2, 3, 4, 5}, "OutputForm" -> "UnitVector", 
                "Count" -> 5], "Output" -> NeuralNetworks`TensorT[1, {5}]]], 
            NeuralNetworks`TensorT[1, {5}]], "leftdistance" -> 
          NeuralNetworks`EncodedType[
            NetEncoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {1, 2, 3, 4, 5}, "OutputForm" -> "UnitVector", 
                "Count" -> 5], "Output" -> NeuralNetworks`TensorT[1, {5}]]], 
            NeuralNetworks`TensorT[1, {5}]], "rightweight" -> 
          NeuralNetworks`EncodedType[
            NetEncoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {1, 2, 3, 4, 5}, "OutputForm" -> "UnitVector", 
                "Count" -> 5], "Output" -> NeuralNetworks`TensorT[1, {5}]]], 
            NeuralNetworks`TensorT[1, {5}]], "rightdistance" -> 
          NeuralNetworks`EncodedType[
            NetEncoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {1, 2, 3, 4, 5}, "OutputForm" -> "UnitVector", 
                "Count" -> 5], "Output" -> NeuralNetworks`TensorT[1, {5}]]], 
            NeuralNetworks`TensorT[1, {5}]]], 
         NeuralNetworks`NetGraph`PackagePrivate`outputs$$ = Association[
         "balance" -> NeuralNetworks`DecodedType[
            NetDecoder["Class", 
             Association[
             "Parameters" -> 
              Association["Labels" -> {"L", "B", "R"}, "Dimensions" -> 3], 
              "Input" -> NeuralNetworks`TensorT[1, {3}]]], 
            NeuralNetworks`TensorT[1, {3}]]], 
         NeuralNetworks`NetGraph`PackagePrivate`labels$$ = {
         "leftweight", "1", "leftdistance", "rightweight", "rightdistance", 
          "2", "3", "4", "5", "balance"}, 
         NeuralNetworks`NetGraph`PackagePrivate`vertices$$ = Association[
         "1" -> Association[
           "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
            Association["$InputCount" -> 4, "$Rank" -> 1], "Inputs" -> 
            Association["Input" -> {
                NeuralNetworks`TensorT[1, {5}], 
                NeuralNetworks`TensorT[1, {5}], 
                NeuralNetworks`TensorT[1, {5}], 
                NeuralNetworks`TensorT[1, {5}]}], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {20}]]], "2" -> 
          Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {10, 20}], "Biases" -> 
              NeuralNetworks`Nullable[
                NeuralNetworks`TensorT[1, {10}]]], "Parameters" -> 
            Association["Size" -> 10, "$InputSize" -> 20], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {20}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {10}]]], "3" -> 
          Association[
           "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Function" -> Tanh, "$Dimensions" -> {10}, "$Rank" -> 1], 
            "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {10}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {10}]]], "4" -> 
          Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {3, 10}], "Biases" -> 
              NeuralNetworks`Nullable[
                NeuralNetworks`TensorT[1, {3}]]], "Parameters" -> 
            Association["Size" -> 3, "$InputSize" -> 10], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {10}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {3}]]], "5" -> 
          Association[
           "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
            Association["Size" -> 3], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {3}]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {3}]]]], 
         NeuralNetworks`NetGraph`PackagePrivate`vports$$ = {
          NetPort["Inputs", "leftweight"], 
          NetPort["Vertices", "1"], 
          NetPort["Inputs", "leftdistance"], 
          NetPort["Inputs", "rightweight"], 
          NetPort["Inputs", "rightdistance"], 
          NetPort["Vertices", "2"], 
          NetPort["Vertices", "3"], 
          NetPort["Vertices", "4"], 
          NetPort["Vertices", "5"], 
          NetPort["Outputs", "balance"]}}, 
         TagBox[GridBox[{
            {
             TemplateBox[{TagBox[
                GraphicsBox[{{
                   GrayLevel[0.7], {
                    
                    LineBox[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-6., 1.0000000000000004`}, {-5., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-6., 2.0000000000000004`}, {-5., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-6., 3.0000000000000004`}, {-5., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-5., 2.0000000000000004`}, {-4., 
                    2.0000000000000004`}}], 
                    LineBox[{{-4., 2.0000000000000004`}, {-3., 2.}}], 
                    LineBox[{{-3., 2.}, {-1.9999999999999998`, 2.}}], 
                    
                    LineBox[{{-1.9999999999999998`, 2.}, {-0.9999999999999999,
                     2.}}], 
                    
                    LineBox[{{-0.9999999999999999, 2.}, {
                    1.2246467991473532`*^-16, 2.}}]}}, {
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.417705098312485, 
                    1.1645898033750317`}, {-0.25, 0}, 
                    Offset[8], {1., 2.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    1.6000000000000003`}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    2.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    2.4000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    2.}, {-0.25, 0}, 
                    Offset[8], {1., -4.440892098500626*^-16}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-2.4, 
                    2.}, {-0.25, 0}, 
                    Offset[8], {1.0000000000000002`, 0.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    2.}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999999, 0.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 2.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                   GrayLevel[0], {
                    AbsolutePointSize[5], {{
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-6., 3.6739403974420594`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.9, 0., 0.], 
                    TagBox[
                    PointBox[{-5., 2.0000000000000004`}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-6., 1.0000000000000004`}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-6., 2.0000000000000004`}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-6., 3.0000000000000004`}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-4., 2.0000000000000004`}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    TagBox[
                    PointBox[{-3., 2.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-1.9999999999999998`, 2.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    TagBox[
                    PointBox[{-0.9999999999999999, 2.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{1.2246467991473532`*^-16, 2.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}}}, {{
                    InsetBox[
                    FormBox["\"leftweight\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 3.6739403974420594`*^-16}], 
                    Offset[{0, -5.5}, {-6., 3.6739403974420594`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-5., 2.0000000000000004`}], 
                    Offset[{0, -5.5}, {-5., 2.0000000000000004`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"leftdistance\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 1.0000000000000004`}], 
                    Offset[{0, -5.5}, {-6., 1.0000000000000004`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"rightweight\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 2.0000000000000004`}], 
                    Offset[{0, -5.5}, {-6., 2.0000000000000004`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"rightdistance\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 3.0000000000000004`}], 
                    Offset[{0, -5.5}, {-6., 3.0000000000000004`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-4., 2.0000000000000004`}], 
                    Offset[{0, -5.5}, {-4., 2.0000000000000004`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-3., 2.}], 
                    Offset[{0, -5.5}, {-3., 2.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-1.9999999999999998`, 2.}], 
                    Offset[{0, -5.5}, {-1.9999999999999998`, 2.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-0.9999999999999999, 2.}], 
                    Offset[{0, -5.5}, {-0.9999999999999999, 2.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"balance\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {1.2246467991473532`*^-16, 2.}], 
                    Offset[{0, -5.5}, {1.2246467991473532`*^-16, 2.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, 
                   StyleBox[{
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{-4.919349550499537, 
                    2.4596747752497685`}, {-5.417705098312485, 
                    1.1645898033750317`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.4472135954999579,
                     0.8944271909999159}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.889087296526011}, {-5.4, 
                    1.6000000000000003`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071067811865475,
                     0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-5.4, 2.0000000000000004`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{3.889087296526011, 3.889087296526011}, {-5.4, 
                    2.4000000000000004`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"20\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, 2.0000000000000004`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    Offset[{2.4424906541753444`*^-15, 5.5}, {-3.4, 2.}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -4.440892098500626*^-16}], 
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-2.4, 2.}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, 2.}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 2.}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {1., 0.}]}, 
                    FontColor -> GrayLevel[0.5], FontSize -> 8, FontWeight -> 
                    "Thin", StripOnInput -> False]}, 
                  
                  DynamicModuleBox[{
                   GeneralUtilities`Graphics`PackagePrivate`vpos$30434 = \
{{-6., 3.6739403974420594`*^-16}, {-5., 2.0000000000000004`}, {-6., 
                    1.0000000000000004`}, {-6., 2.0000000000000004`}, {-6., 
                    3.0000000000000004`}, {-4., 2.0000000000000004`}, {-3., 
                    2.}, {-1.9999999999999998`, 2.}, {-0.9999999999999999, 
                    2.}, {1.2246467991473532`*^-16, 2.}}}, 
                   DynamicBox[
                    Typeset`ToBoxes[
                    If[
                    Not[
                    IntegerQ[
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]], {}, {
                    AbsolutePointSize[10], 
                    Opacity[0.2, Black], 
                    Point[
                    Part[
                    GeneralUtilities`Graphics`PackagePrivate`vpos$30434, 
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]]}], 
                    StandardForm, Graphics], 
                    TrackedSymbols :> {
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$}], 
                   DynamicModuleValues :> {}]}, ImageSize -> {453., 212.5}, 
                 AspectRatio -> Full, PlotRangePadding -> 0, 
                 ImagePadding -> {{43.5, 25.5}, {15.5, 5}}, 
                 ImageMargins -> {{0, 0}, {15, 15}}, 
                 BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                
                EventHandlerTag[{
                 "MouseClicked" :> (
                   NeuralNetworks`NetGraph`PackagePrivate`selection$$ = None),
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                  PassEventsUp -> True}]],FormBox[
                TemplateBox[{
                  StyleBox["CatenateLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["DotPlusLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["ElementwiseLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["SoftmaxLayer", 
                   GrayLevel[0.35], StripOnInput -> False]}, "PointLegend", 
                 DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0., 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0., 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #3}, "RowDefault"]}, {
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #2}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #4}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{2, 2}, {2, 2}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6000000000000001, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9, 0., 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0., 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.35], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.23333333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "GrayLevel[0.35]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.35]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.35], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.19333333333333333`, 0.19333333333333333`, 
                    0.5533333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.29, 0.29, 0.83]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.29, 0.29, 0.83]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.29, 0.29, 0.83], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.52, 0.4266666666666667, 0.6533333333333333], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.78, 0.64, 0.98]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.78, 0.64, 0.98]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.78, 0.64, 0.98], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                    RowBox[{"LegendMarkerSize", "\[Rule]", "12"}], ",", 
                    RowBox[{"LegendMargins", "\[Rule]", "2"}], ",", 
                    
                    RowBox[{
                    "LegendLayout", "\[Rule]", 
                    "GeneralUtilities`Graphics`PackagePrivate`legendTable"}]}]\
, "]"}]& ), Editable -> True], TraditionalForm]},
              "Legended",
              DisplayFunction->(GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> Automatic, 
                BaselinePosition -> {1, 1}]& ),
              Editable->True,
              InterpretationFunction->(RowBox[{"Legended", "[", 
                 RowBox[{#, ",", 
                   RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
            {
             DynamicBox[ToBoxes[
               If[
                IntegerQ[NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                Item[
                 NeuralNetworks`NetGraph`PackagePrivate`vportInfo[
                  Part[
                  NeuralNetworks`NetGraph`PackagePrivate`vports$$, 
                   NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                  NeuralNetworks`NetGraph`PackagePrivate`inputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`outputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`vertices$$], 
                 Alignment -> Center], 
                Item["", ItemSize -> {0, 0}]], StandardForm],
              ImageSizeCache->{0., {0., 9.}},
              
              TrackedSymbols:>{
               NeuralNetworks`NetGraph`PackagePrivate`selection$$}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         DynamicModuleValues:>{},
         Initialization:>{NetGraph}],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       BaselinePosition->(Top -> Scaled[3])], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{{3.6806136443963966`*^9, 3.680613667502428*^9}, 
   3.680613742834254*^9, 3.680614082904196*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rawdata", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<http://archive.ics.uci.edu/ml/machine-learning-databases/balance-\
scale/balance-scale.data\>\"", ",", "\"\<CSV\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6806136725846643`*^9, 3.6806137024770823`*^9}, 
   3.680613751485178*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"training", "=", 
  RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<balance\>\"", ",", "\"\<leftweight\>\"", ",", 
          "\"\<leftdistance\>\"", ",", "\"\<rightweight\>\"", ",", 
          "\"\<rightdistance\>\""}], "}"}], "\[Rule]", "#"}], "]"}], "&"}], 
     ",", "\[IndentingNewLine]", "rawdata"}], "]"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6806137582437963`*^9, 3.6806137813095446`*^9}, {
  3.6806138270774655`*^9, 3.6806138749421835`*^9}, {3.6806139992455583`*^9, 
  3.680614040061264*^9}, {3.680614087717579*^9, 3.6806140893895707`*^9}, {
  3.6806142611492376`*^9, 3.680614261821227*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 625, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "balance", "leftweight", "leftdistance", "rightweight", 
            "rightdistance"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration["B", "L", "R"]], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer]}], 625], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "balance"} -> 1, {All, "leftweight"} -> 
           1, {All, "leftdistance"} -> 1, {All, "rightweight"} -> 
           1, {All, "rightdistance"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "balance" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
              "leftweight" -> TypeSystem`PackageScope`AtomShape[34], 
              "leftdistance" -> TypeSystem`PackageScope`AtomShape[34], 
              "rightweight" -> TypeSystem`PackageScope`AtomShape[34], 
              "rightdistance" -> TypeSystem`PackageScope`AtomShape[34]]]], 
           20, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1540097608], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "balance", "leftweight", "leftdistance", "rightweight", 
            "rightdistance"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration["B", "L", "R"]], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer]}], 625], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1540097608]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"balance\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"balance\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 41410012][{
                    All, "balance"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[All, "balance"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"leftweight\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"leftweight\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 41410012][{
                    All, "leftweight"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[All, "leftweight"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"leftdistance\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"leftdistance\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 41410012][{
                    All, "leftdistance"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[All, "leftdistance"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"rightweight\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"rightweight\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 41410012][{
                    All, "rightweight"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[All, "rightweight"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"rightdistance\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"rightdistance\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 41410012][{
                    All, "rightdistance"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[All, "rightdistance"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[1, 
                   Key["balance"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[1, 
                   Key["leftweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[1, 
                   Key["leftdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[1, 
                   Key["rightweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[1, 
                   Key["rightdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[2, 
                   Key["balance"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[2, 
                   Key["leftweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[2, 
                   Key["leftdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[2, 
                   Key["rightweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[2, 
                   Key["rightdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[3, 
                   Key["balance"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[3, 
                   Key["leftweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[3, 
                   Key["leftdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[3, 
                   Key["rightweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[3, 
                   Key["rightdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[4, 
                   Key["balance"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[4, 
                   Key["leftweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[4, 
                   Key["leftdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[4, 
                   Key["rightweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[4, 
                   Key["rightdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[5, 
                   Key["balance"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[5, 
                   Key["leftweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[5, 
                   Key["leftdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[5, 
                   Key["rightweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[5, 
                   Key["rightdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[6, 
                   Key["balance"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[6, 
                   Key["leftweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[6, 
                   Key["leftdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[6, 
                   Key["rightweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[6, 
                   Key["rightdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[7, 
                   Key["balance"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[7, 
                   Key["leftweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[7, 
                   Key["leftdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[7, 
                   Key["rightweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[7, 
                   Key["rightdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[8, 
                   Key["balance"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[8, 
                   Key["leftweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[8, 
                   Key["leftdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[8, 
                   Key["rightweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[8, 
                   Key["rightdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[9, 
                   Key["balance"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[9, 
                   Key["leftweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[9, 
                   Key["leftdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[9, 
                   Key["rightweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[9, 
                   Key["rightdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[10, 
                   Key["balance"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[10, 
                   Key["leftweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[10, 
                   Key["leftdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[10, 
                   Key["rightweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[10, 
                   Key["rightdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[11, 
                   Key["balance"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[11, 
                   Key["leftweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[11, 
                   Key["leftdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[11, 
                   Key["rightweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[11, 
                   Key["rightdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[12, 
                   Key["balance"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[12, 
                   Key["leftweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[12, 
                   Key["leftdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[12, 
                   Key["rightweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[12, 
                   Key["rightdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[13, 
                   Key["balance"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[13, 
                   Key["leftweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[13, 
                   Key["leftdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[13, 
                   Key["rightweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[13, 
                   Key["rightdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[14, 
                   Key["balance"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[14, 
                   Key["leftweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[14, 
                   Key["leftdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[14, 
                   Key["rightweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[14, 
                   Key["rightdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[15, 
                   Key["balance"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[15, 
                   Key["leftweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[15, 
                   Key["leftdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[15, 
                   Key["rightweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[15, 
                   Key["rightdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[16, 
                   Key["balance"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[16, 
                   Key["leftweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[16, 
                   Key["leftdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[16, 
                   Key["rightweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[16, 
                   Key["rightdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[17, 
                   Key["balance"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[17, 
                   Key["leftweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[17, 
                   Key["leftdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[17, 
                   Key["rightweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[17, 
                   Key["rightdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[18, 
                   Key["balance"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[18, 
                   Key["leftweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[18, 
                   Key["leftdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[18, 
                   Key["rightweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[18, 
                   Key["rightdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[19, 
                   Key["balance"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[19, 
                   Key["leftweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[19, 
                   Key["leftdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[19, 
                   Key["rightweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[19, 
                   Key["rightdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["R", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[20, 
                   Key["balance"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[20, 
                   Key["leftweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[20, 
                   Key["leftdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[20, 
                   Key["rightweight"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
                  GeneralUtilities`Slice[20, 
                   Key["rightdistance"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Grid[{{
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    625 (-20), {1, 625 - -20 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 625 - -20 + 1}])}]], 
                    Spacer[{5, 1}], 
                    Style[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    625, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], BaselinePosition -> Baseline], 
                    Spacer[{5, 1}], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 625 - 20 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    625 20, {1, 625 - 20 + 1}])}]]}}, 
                   Alignment -> {Center, Bottom}], 
                  Grid[{{
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    625 (-20), {1, 625 - -20 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 625 - -20 + 1}])}]], 
                    Spacer[{5, 1}], 
                    Style[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    625, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], BaselinePosition -> Baseline], 
                    Spacer[{5, 1}], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 625 - 20 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    625 20, {1, 625 - 20 + 1}])}]]}}, 
                   Alignment -> {Center, Bottom}]]], Background -> 
                GrayLevel[0.98], Alignment -> {Center, 
                  Scaled[1]}, BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 41410012}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 41410012}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 41410012}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 41410012}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 41410012}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 41410012][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 41410012]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[41410012][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           "", Blank[] :> ""}], TrackedSymbols :> {}], FrameStyle -> None, 
        ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
        ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]], DynamicModuleValues :> {}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
    DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.6806138698009195`*^9, 3.6806138752765574`*^9}, 
   3.6806140412292695`*^9, 3.6806140898386655`*^9, 3.6806142628138046`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"net", ",", "training"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6806140552713737`*^9, 3.680614060309222*^9}, {
  3.6806142650693083`*^9, 3.6806142676212454`*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetGraph", 
     RowBox[{"[", 
      PanelBox[
       TagBox[
        DynamicModuleBox[{NeuralNetworks`NetGraph`PackagePrivate`selection$$ =
          None, NeuralNetworks`NetGraph`PackagePrivate`outIndex$$ = 9, 
         NeuralNetworks`NetGraph`PackagePrivate`inputs$$ = Association[
         "leftweight" -> NeuralNetworks`EncodedType[
            NetEncoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {1, 2, 3, 4, 5}, "OutputForm" -> "UnitVector", 
                "Count" -> 5], "Output" -> NeuralNetworks`TensorT[1, {5}]]], 
            NeuralNetworks`TensorT[1, {5}]], "leftdistance" -> 
          NeuralNetworks`EncodedType[
            NetEncoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {1, 2, 3, 4, 5}, "OutputForm" -> "UnitVector", 
                "Count" -> 5], "Output" -> NeuralNetworks`TensorT[1, {5}]]], 
            NeuralNetworks`TensorT[1, {5}]], "rightweight" -> 
          NeuralNetworks`EncodedType[
            NetEncoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {1, 2, 3, 4, 5}, "OutputForm" -> "UnitVector", 
                "Count" -> 5], "Output" -> NeuralNetworks`TensorT[1, {5}]]], 
            NeuralNetworks`TensorT[1, {5}]], "rightdistance" -> 
          NeuralNetworks`EncodedType[
            NetEncoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {1, 2, 3, 4, 5}, "OutputForm" -> "UnitVector", 
                "Count" -> 5], "Output" -> NeuralNetworks`TensorT[1, {5}]]], 
            NeuralNetworks`TensorT[1, {5}]]], 
         NeuralNetworks`NetGraph`PackagePrivate`outputs$$ = Association[
         "balance" -> NeuralNetworks`DecodedType[
            NetDecoder["Class", 
             Association[
             "Parameters" -> 
              Association["Labels" -> {"L", "B", "R"}, "Dimensions" -> 3], 
              "Input" -> NeuralNetworks`TensorT[1, {3}]]], 
            NeuralNetworks`TensorT[1, {3}]]], 
         NeuralNetworks`NetGraph`PackagePrivate`labels$$ = {
         "leftweight", "1", "leftdistance", "rightweight", "rightdistance", 
          "2", "3", "4", "5", "balance"}, 
         NeuralNetworks`NetGraph`PackagePrivate`vertices$$ = Association[
         "1" -> Association[
           "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
            Association["$InputCount" -> 4, "$Rank" -> 1], "Inputs" -> 
            Association["Input" -> {
                NeuralNetworks`TensorT[1, {5}], 
                NeuralNetworks`TensorT[1, {5}], 
                NeuralNetworks`TensorT[1, {5}], 
                NeuralNetworks`TensorT[1, {5}]}], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {20}]]], "2" -> 
          Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {10, 20}], "Biases" -> 
              NeuralNetworks`TensorT[1, {10}]], "Parameters" -> 
            Association["Size" -> 10, "$InputSize" -> 20], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {20}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {10}]]], "3" -> 
          Association[
           "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Function" -> Tanh, "$Dimensions" -> {10}, "$Rank" -> 1], 
            "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {10}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {10}]]], "4" -> 
          Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {3, 10}], "Biases" -> 
              NeuralNetworks`TensorT[1, {3}]], "Parameters" -> 
            Association["Size" -> 3, "$InputSize" -> 10], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {10}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {3}]]], "5" -> 
          Association[
           "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
            Association["Size" -> 3], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {3}]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {3}]]]], 
         NeuralNetworks`NetGraph`PackagePrivate`vports$$ = {
          NetPort["Inputs", "leftweight"], 
          NetPort["Vertices", "1"], 
          NetPort["Inputs", "leftdistance"], 
          NetPort["Inputs", "rightweight"], 
          NetPort["Inputs", "rightdistance"], 
          NetPort["Vertices", "2"], 
          NetPort["Vertices", "3"], 
          NetPort["Vertices", "4"], 
          NetPort["Vertices", "5"], 
          NetPort["Outputs", "balance"]}}, 
         TagBox[GridBox[{
            {
             TemplateBox[{TagBox[
                GraphicsBox[{{
                   GrayLevel[0.7], {
                    
                    LineBox[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-6., 1.0000000000000004`}, {-5., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-6., 2.0000000000000004`}, {-5., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-6., 3.0000000000000004`}, {-5., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-5., 2.0000000000000004`}, {-4., 
                    2.0000000000000004`}}], 
                    LineBox[{{-4., 2.0000000000000004`}, {-3., 2.}}], 
                    LineBox[{{-3., 2.}, {-1.9999999999999998`, 2.}}], 
                    
                    LineBox[{{-1.9999999999999998`, 2.}, {-0.9999999999999999,
                     2.}}], 
                    
                    LineBox[{{-0.9999999999999999, 2.}, {
                    1.2246467991473532`*^-16, 2.}}]}}, {
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.417705098312485, 
                    1.1645898033750317`}, {-0.25, 0}, 
                    Offset[8], {1., 2.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    1.6000000000000003`}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    2.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    2.4000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    2.}, {-0.25, 0}, 
                    Offset[8], {1., -4.440892098500626*^-16}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-2.4, 
                    2.}, {-0.25, 0}, 
                    Offset[8], {1.0000000000000002`, 0.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    2.}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999999, 0.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 2.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                   GrayLevel[0], {
                    AbsolutePointSize[5], {{
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-6., 3.6739403974420594`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.9, 0., 0.], 
                    TagBox[
                    PointBox[{-5., 2.0000000000000004`}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-6., 1.0000000000000004`}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-6., 2.0000000000000004`}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-6., 3.0000000000000004`}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-4., 2.0000000000000004`}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    TagBox[
                    PointBox[{-3., 2.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-1.9999999999999998`, 2.}], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    TagBox[
                    PointBox[{-0.9999999999999999, 2.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{1.2246467991473532`*^-16, 2.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}}}, {{
                    InsetBox[
                    FormBox["\"leftweight\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 3.6739403974420594`*^-16}], 
                    Offset[{0, -5.5}, {-6., 3.6739403974420594`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-5., 2.0000000000000004`}], 
                    Offset[{0, -5.5}, {-5., 2.0000000000000004`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"leftdistance\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 1.0000000000000004`}], 
                    Offset[{0, -5.5}, {-6., 1.0000000000000004`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"rightweight\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 2.0000000000000004`}], 
                    Offset[{0, -5.5}, {-6., 2.0000000000000004`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"rightdistance\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 3.0000000000000004`}], 
                    Offset[{0, -5.5}, {-6., 3.0000000000000004`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-4., 2.0000000000000004`}], 
                    Offset[{0, -5.5}, {-4., 2.0000000000000004`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-3., 2.}], 
                    Offset[{0, -5.5}, {-3., 2.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-1.9999999999999998`, 2.}], 
                    Offset[{0, -5.5}, {-1.9999999999999998`, 2.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-0.9999999999999999, 2.}], 
                    Offset[{0, -5.5}, {-0.9999999999999999, 2.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"balance\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {1.2246467991473532`*^-16, 2.}], 
                    Offset[{0, -5.5}, {1.2246467991473532`*^-16, 2.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, 
                   StyleBox[{
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{-4.919349550499537, 
                    2.4596747752497685`}, {-5.417705098312485, 
                    1.1645898033750317`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.4472135954999579,
                     0.8944271909999159}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.889087296526011}, {-5.4, 
                    1.6000000000000003`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071067811865475,
                     0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-5.4, 2.0000000000000004`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{3.889087296526011, 3.889087296526011}, {-5.4, 
                    2.4000000000000004`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"20\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, 2.0000000000000004`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    Offset[{2.4424906541753444`*^-15, 5.5}, {-3.4, 2.}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -4.440892098500626*^-16}], 
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-2.4, 2.}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, 2.}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 2.}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {1., 0.}]}, 
                    FontColor -> GrayLevel[0.5], FontSize -> 8, FontWeight -> 
                    "Thin", StripOnInput -> False]}, 
                  
                  DynamicModuleBox[{
                   GeneralUtilities`Graphics`PackagePrivate`vpos$37796 = \
{{-6., 3.6739403974420594`*^-16}, {-5., 2.0000000000000004`}, {-6., 
                    1.0000000000000004`}, {-6., 2.0000000000000004`}, {-6., 
                    3.0000000000000004`}, {-4., 2.0000000000000004`}, {-3., 
                    2.}, {-1.9999999999999998`, 2.}, {-0.9999999999999999, 
                    2.}, {1.2246467991473532`*^-16, 2.}}}, 
                   DynamicBox[
                    Typeset`ToBoxes[
                    If[
                    Not[
                    IntegerQ[
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]], {}, {
                    AbsolutePointSize[10], 
                    Opacity[0.2, Black], 
                    Point[
                    Part[
                    GeneralUtilities`Graphics`PackagePrivate`vpos$37796, 
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]]}], 
                    StandardForm, Graphics], 
                    TrackedSymbols :> {
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$}], 
                   DynamicModuleValues :> {}]}, ImageSize -> {453., 212.5}, 
                 AspectRatio -> Full, PlotRangePadding -> 0, 
                 ImagePadding -> {{43.5, 25.5}, {15.5, 5}}, 
                 ImageMargins -> {{0, 0}, {15, 15}}, 
                 BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                
                EventHandlerTag[{
                 "MouseClicked" :> (
                   NeuralNetworks`NetGraph`PackagePrivate`selection$$ = None),
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                  PassEventsUp -> True}]],FormBox[
                TemplateBox[{
                  StyleBox["CatenateLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["DotPlusLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["ElementwiseLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["SoftmaxLayer", 
                   GrayLevel[0.35], StripOnInput -> False]}, "PointLegend", 
                 DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0., 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0., 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #3}, "RowDefault"]}, {
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #2}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #4}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{2, 2}, {2, 2}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6000000000000001, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9, 0., 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0., 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.35], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.23333333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "GrayLevel[0.35]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.35]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.35], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.19333333333333333`, 0.19333333333333333`, 
                    0.5533333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.29, 0.29, 0.83]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.29, 0.29, 0.83]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.29, 0.29, 0.83], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.52, 0.4266666666666667, 0.6533333333333333], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.78, 0.64, 0.98]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.78, 0.64, 0.98]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.78, 0.64, 0.98], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                    RowBox[{"LegendMarkerSize", "\[Rule]", "12"}], ",", 
                    RowBox[{"LegendMargins", "\[Rule]", "2"}], ",", 
                    
                    RowBox[{
                    "LegendLayout", "\[Rule]", 
                    "GeneralUtilities`Graphics`PackagePrivate`legendTable"}]}]\
, "]"}]& ), Editable -> True], TraditionalForm]},
              "Legended",
              DisplayFunction->(GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> Automatic, 
                BaselinePosition -> {1, 1}]& ),
              Editable->True,
              InterpretationFunction->(RowBox[{"Legended", "[", 
                 RowBox[{#, ",", 
                   RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
            {
             DynamicBox[ToBoxes[
               If[
                IntegerQ[NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                Item[
                 NeuralNetworks`NetGraph`PackagePrivate`vportInfo[
                  Part[
                  NeuralNetworks`NetGraph`PackagePrivate`vports$$, 
                   NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                  NeuralNetworks`NetGraph`PackagePrivate`inputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`outputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`vertices$$], 
                 Alignment -> Center], 
                Item["", ItemSize -> {0, 0}]], StandardForm],
              ImageSizeCache->{0., {0., 9.}},
              
              TrackedSymbols:>{
               NeuralNetworks`NetGraph`PackagePrivate`selection$$}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         DynamicModuleValues:>{},
         Initialization:>{NetGraph}],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       BaselinePosition->(Top -> Scaled[3])], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.6806140609461913`*^9, 3.680614100000877*^9, 
  3.680614281117546*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<leftweight\>\"", "\[Rule]", "1"}], ",", 
    RowBox[{"\"\<leftdistance\>\"", "\[Rule]", "1"}], ",", 
    RowBox[{"\"\<rightweight\>\"", "\[Rule]", "1"}], ",", 
    RowBox[{"\"\<rightdistance\>\"", "\[Rule]", "1"}]}], "|>"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.680614103793681*^9, 3.680614164821579*^9}}],

Cell[BoxData["\<\"B\"\>"], "Output",
 CellChangeTimes->{{3.6806141171313524`*^9, 3.6806141304222655`*^9}, 
   3.680614165186064*^9, 3.6806142811986246`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<leftweight\>\"", "\[Rule]", "2"}], ",", 
    RowBox[{"\"\<leftdistance\>\"", "\[Rule]", "1"}], ",", 
    RowBox[{"\"\<rightweight\>\"", "\[Rule]", "1"}], ",", 
    RowBox[{"\"\<rightdistance\>\"", "\[Rule]", "1"}]}], "|>"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.680614103793681*^9, 3.6806141876452007`*^9}}],

Cell[BoxData["\<\"L\"\>"], "Output",
 CellChangeTimes->{3.6806141880657787`*^9, 3.680614281253848*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<leftweight\>\"", "\[Rule]", "2"}], ",", 
    RowBox[{"\"\<leftdistance\>\"", "\[Rule]", "1"}], ",", 
    RowBox[{"\"\<rightweight\>\"", "\[Rule]", "1"}], ",", 
    RowBox[{"\"\<rightdistance\>\"", "\[Rule]", "1"}]}], "|>"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.680614103793681*^9, 3.6806141897027483`*^9}}],

Cell[BoxData["\<\"L\"\>"], "Output",
 CellChangeTimes->{3.6806142813129063`*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "leftweight", ",", "leftdistance", ",", "rightweight", ",", 
         "rightdistance"}], "}"}], "=", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}], ",", "4"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"balance", "=", 
       RowBox[{
        RowBox[{"rightweight", "*", "rightdistance"}], "-", 
        RowBox[{"leftweight", "*", "leftdistance"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"balance", "=", 
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"balance", "<", "0"}], ",", "\"\<L\>\"", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"balance", "\[Equal]", "0"}], ",", "\"\<B\>\"", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"balance", ">", "0"}], ",", "\"\<R\>\""}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "leftweight", ",", "leftdistance", ",", "rightweight", ",", 
         "rightdistance"}], "}"}], "\[Rule]", "balance"}]}], ",", 
     "\[IndentingNewLine]", "1000"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.680614295770361*^9, 3.680614310165547*^9}, {
  3.6806143661169186`*^9, 3.6806145427100973`*^9}, {3.6806149489669895`*^9, 
  3.6806149945190086`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"measurements", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"result", ",", "test"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.680614196988826*^9, 3.6806142053413477`*^9}, {
  3.68061423895757*^9, 3.680614249277238*^9}, {3.6806145542686834`*^9, 
  3.6806145548131695`*^9}, {3.6806149212001543`*^9, 3.6806149295113044`*^9}, {
  3.6806149883349514`*^9, 3.6806149887029576`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Net\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1000", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Net\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1000", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1.`", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.680614205623473*^9, 3.680614555890898*^9, 3.680614929941876*^9, {
   3.680614983692901*^9, 3.680614995623316*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"measurements", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6806150113146152`*^9, 3.6806150217666326`*^9}}],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{1., 1., 1.}, {1., 1., 1.}, {1., 0.42, 0.}}, {{1., 1., 1.}, {
   0.9238222584596802, 0.8305882880499982, 0.5667303344980754}, {1., 1., 
   1.}}, {{0.9292121600138579, 0.49031881489382356`, 0.003524328493642363}, {
   1., 1., 1.}, {1., 1., 1.}}}, {{0, 0}, {3, 3}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["459", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "459", "\" examples of \"", "\"L\"", "\" correctly classified\""},
             "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{459, " examples of ", "L", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"B\"", "\" misclassified as \"", 
             "\"L\""}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "B", " misclassified as ", "L"}], 
         Row[{"Row fraction = ", 0.}], 
         Row[{"Column fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"R\"", "\" misclassified as \"", 
             "\"L\""}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "R", " misclassified as ", "L"}], 
         Row[{"Row fraction = ", 0.}], 
         Row[{"Column fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"L\"", "\" misclassified as \"", 
             "\"B\""}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "L", " misclassified as ", "B"}], 
         Row[{"Row fraction = ", 0.}], 
         Row[{"Column fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["80", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "80", "\" examples of \"", "\"B\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{80, " examples of ", "B", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"R\"", "\" misclassified as \"", 
             "\"B\""}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "R", " misclassified as ", "B"}], 
         Row[{"Row fraction = ", 0.}], 
         Row[{"Column fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"L\"", "\" misclassified as \"", 
             "\"R\""}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "L", " misclassified as ", "R"}], 
         Row[{"Row fraction = ", 0.}], 
         Row[{"Column fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"B\"", "\" misclassified as \"", 
             "\"R\""}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "B", " misclassified as ", "R"}], 
         Row[{"Row fraction = ", 0.}], 
         Row[{"Column fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["461", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "461", "\" examples of \"", "\"R\"", "\" correctly classified\""},
             "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{461, " examples of ", "R", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 1.}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "459", "\" example\"", "\"s\"", "\" of class \"", "\"L\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{459, " example", "s", " of class ", "L"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "80", "\" example\"", "\"s\"", "\" of class \"", "\"B\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{80, " example", "s", " of class ", "B"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "461", "\" example\"", "\"s\"", "\" of class \"", "\"R\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{461, " example", "s", " of class ", "R"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "459", "\" example\"", "\"s\"", "\" classified as \"", "\"L\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{459, " example", "s", " classified as ", "L"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "80", "\" example\"", "\"s\"", "\" classified as \"", "\"B\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{80, " example", "s", " classified as ", "B"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "461", "\" example\"", "\"s\"", "\" classified as \"", "\"R\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{461, " example", "s", " classified as ", "R"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{2.5, 
       FormBox[
        RotationBox["\"L\"", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"B\"", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["\"R\"", BoxRotation -> 0.], TraditionalForm]}}, {{2.5, 
       FormBox["459", TraditionalForm]}, {1.5, 
       FormBox["80", TraditionalForm]}, {0.5, 
       FormBox["461", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["459", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["80", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["461", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"L\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"B\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"R\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.680615022219241*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Car Evaluation Example", "Subsection",
 CellChangeTimes->{{3.680613401819129*^9, 3.6806134087234077`*^9}, {
  3.6806154741012545`*^9, 3.680615478309287*^9}}],

Cell["Source of the data set:", "Text",
 CellChangeTimes->{{3.6806224416088943`*^9, 3.680622447345289*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  "\"\<http://archive.ics.uci.edu/ml/datasets/Car+Evaluation\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6806224509427824`*^9, 3.680622455987091*^9}}],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{
    False->"\<\"http://archive.ics.uci.edu/ml/datasets/Car+Evaluation\"\>", 
    True->
    StyleBox["\<\"http://archive.ics.uci.edu/ml/datasets/Car+Evaluation\"\>", 
     "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaseStyle->{"Hyperlink"},
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["http://archive.ics.uci.edu/ml/datasets/Car+Evaluation"], None},
   ButtonNote->"http://archive.ics.uci.edu/ml/datasets/Car+Evaluation"],
  Annotation[#, "http://archive.ics.uci.edu/ml/datasets/Car+Evaluation", 
   "Hyperlink"]& ]], "Output",
 CellChangeTimes->{3.6806224564240203`*^9}]
}, {2}]],

Cell["Import the data as a .csv (comma separated file):", "Text",
 CellChangeTimes->{{3.680619679039888*^9, 3.6806197041433287`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rawdata", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<http://archive.ics.uci.edu/ml/machine-learning-databases/car/car.\
data\>\"", ",", "\"\<CSV\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6806136725846643`*^9, 3.6806137024770823`*^9}, 
   3.680613751485178*^9, {3.6806191704588356`*^9, 3.680619174977191*^9}}],

Cell["The number of rows in the data is 1728:", "Text",
 CellChangeTimes->{{3.6806224192170954`*^9, 3.680622432808896*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "rawdata", "]"}]], "Input",
 CellChangeTimes->{{3.6806222716489944`*^9, 3.680622274675767*^9}}],

Cell[BoxData["1728"], "Output",
 CellChangeTimes->{3.680622274971487*^9}]
}, Open  ]],

Cell["\<\
RandomSample lets you examine a few rows of data. Grid lets you format the \
data as a table. View a random sample of the data:\
\>", "Text",
 CellChangeTimes->{{3.680622372041975*^9, 3.6806224108253837`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomSample", "[", 
   RowBox[{"rawdata", ",", "10"}], "]"}], "//", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"#", ",", 
     RowBox[{"Frame", "\[Rule]", "All"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.680619178971398*^9, 3.68061918268182*^9}, {
  3.680619790765955*^9, 3.6806197991024604`*^9}, {3.6806223022838573`*^9, 
  3.6806223400684724`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"high\"\>", "\<\"low\"\>", "4", 
     "2", "\<\"small\"\>", "\<\"low\"\>", "\<\"unacceptable\"\>"},
    {"\<\"high\"\>", "\<\"low\"\>", 
     "2", "\<\"more\"\>", "\<\"big\"\>", "\<\"high\"\>", "\<\"acceptable\"\>"},
    {"\<\"high\"\>", "\<\"very high\"\>", "\<\"5 or more\"\>", 
     "2", "\<\"small\"\>", "\<\"low\"\>", "\<\"unacceptable\"\>"},
    {"\<\"very high\"\>", "\<\"very high\"\>", "\<\"5 or more\"\>", 
     "4", "\<\"medium\"\>", "\<\"high\"\>", "\<\"unacceptable\"\>"},
    {"\<\"medium\"\>", "\<\"very high\"\>", "3", 
     "2", "\<\"medium\"\>", "\<\"medium\"\>", "\<\"unacceptable\"\>"},
    {"\<\"low\"\>", "\<\"low\"\>", "3", 
     "2", "\<\"big\"\>", "\<\"low\"\>", "\<\"unacceptable\"\>"},
    {"\<\"low\"\>", "\<\"low\"\>", 
     "3", "\<\"more\"\>", "\<\"medium\"\>", "\<\"low\"\>", \
"\<\"unacceptable\"\>"},
    {"\<\"low\"\>", "\<\"low\"\>", "\<\"5 or more\"\>", 
     "4", "\<\"small\"\>", "\<\"low\"\>", "\<\"unacceptable\"\>"},
    {"\<\"medium\"\>", "\<\"very high\"\>", "\<\"5 or more\"\>", 
     "4", "\<\"small\"\>", "\<\"medium\"\>", "\<\"unacceptable\"\>"},
    {"\<\"high\"\>", "\<\"low\"\>", "\<\"5 or more\"\>", "\<\"more\"\>", \
"\<\"medium\"\>", "\<\"high\"\>", "\<\"acceptable\"\>"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.680619182941951*^9, 3.6806198005662365`*^9, 3.680620421340863*^9, {
   3.6806223038027525`*^9, 3.680622340538807*^9}}]
}, Open  ]],

Cell["\<\
Translate short abbreviated names to longer more descriptive names:\
\>", "Text",
 CellChangeTimes->{{3.6806198123977118`*^9, 3.6806198340690413`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rawdata", "=", 
   RowBox[{"rawdata", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<vhigh\>\"", "\[Rule]", "\"\<very high\>\""}], ",", 
      RowBox[{"\"\<med\>\"", "\[Rule]", "\"\<medium\>\""}], ",", 
      RowBox[{"\"\<5more\>\"", "\[Rule]", "\"\<5 or more\>\""}], ",", 
      RowBox[{"\"\<unacc\>\"", "\[Rule]", "\"\<unacceptable\>\""}], ",", 
      RowBox[{"\"\<acc\>\"", "\[Rule]", "\"\<acceptable\>\""}], ",", 
      RowBox[{"\"\<vgood\>\"", "\[Rule]", "\"\<very good\>\""}]}], "}"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6806198363714004`*^9, 3.6806199179968796`*^9}, {
  3.680621249593855*^9, 3.6806212539465294`*^9}}],

Cell["\<\
Create the training data set. The goal is to determine if a car purchase is \
acceptable or not depending on the asking price, the maintenance, the number \
of doors, the number of passengers, the size of the boot, and the overall \
safety status of the car.\
\>", "Text",
 CellChangeTimes->{{3.6806199298595004`*^9, 3.680620028522133*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomSample", "[", 
   RowBox[{"rawdata", ",", "5"}], "]"}], "//", "Column"}]], "Input",
 CellChangeTimes->{{3.6806204781353135`*^9, 3.6806204909561357`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"\<\"low\"\>", ",", "\<\"high\"\>", ",", "\<\"5 or more\"\>", 
       ",", "4", ",", "\<\"medium\"\>", ",", "\<\"high\"\>", 
       ",", "\<\"very good\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"high\"\>", ",", "\<\"medium\"\>", ",", "3", 
       ",", "\<\"more\"\>", ",", "\<\"big\"\>", ",", "\<\"medium\"\>", 
       ",", "\<\"acceptable\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"very high\"\>", ",", "\<\"high\"\>", ",", "4", 
       ",", "\<\"more\"\>", ",", "\<\"small\"\>", ",", "\<\"high\"\>", 
       ",", "\<\"unacceptable\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"high\"\>", ",", "\<\"high\"\>", ",", "3", ",", "2", 
       ",", "\<\"big\"\>", ",", "\<\"medium\"\>", 
       ",", "\<\"unacceptable\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"medium\"\>", ",", "\<\"medium\"\>", ",", "3", ",", "4", 
       ",", "\<\"big\"\>", ",", "\<\"high\"\>", ",", "\<\"very good\"\>"}], 
      "}"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.680620492744133*^9, 3.680621256087346*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"training", "=", 
  RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<buying_price\>\"", ",", "\"\<maintenance\>\"", ",", 
          "\"\<doors\>\"", ",", "\"\<persons\>\"", ",", "\"\<lug_boot\>\"", 
          ",", "\"\<safety\>\"", ",", "\"\<acceptability\>\""}], "}"}], 
        "\[Rule]", "#"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
     "rawdata"}], "]"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6806137582437963`*^9, 3.6806137813095446`*^9}, {
  3.6806138270774655`*^9, 3.6806138749421835`*^9}, {3.6806139992455583`*^9, 
  3.680614040061264*^9}, {3.680614087717579*^9, 3.6806140893895707`*^9}, {
  3.6806142611492376`*^9, 3.680614261821227*^9}, {3.6806192142250767`*^9, 
  3.680619272265278*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 1728, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "buying_price", "maintenance", "doors", "persons", "lug_boot", 
            "safety", "acceptability"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
            TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Atom[
             TypeSystem`Enumeration["big", "medium", "small"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["high", "low", "medium"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "acceptable", "good", "unacceptable", "very good"]]}], 1728], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "buying_price"} -> 1, {All, "maintenance"} -> 
           1, {All, "doors"} -> 1, {All, "persons"} -> 1, {All, "lug_boot"} -> 
           1, {All, "safety"} -> 1, {All, "acceptability"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "buying_price" -> TypeSystem`PackageScope`AtomShape[86.4], 
              "maintenance" -> TypeSystem`PackageScope`AtomShape[86.4], 
              "doors" -> TypeSystem`PackageScope`UnknownShape, "persons" -> 
              TypeSystem`PackageScope`UnknownShape, "lug_boot" -> 
              TypeSystem`PackageScope`AtomShape[57.60000000000001], "safety" -> 
              TypeSystem`PackageScope`AtomShape[57.60000000000001], 
              "acceptability" -> 
              TypeSystem`PackageScope`AtomShape[115.20000000000002`]]]], 
           20, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[798288706], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{
           "buying_price", "maintenance", "doors", "persons", "lug_boot", 
            "safety", "acceptability"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
            TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Atom[
             TypeSystem`Enumeration["big", "medium", "small"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["high", "low", "medium"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "acceptable", "good", "unacceptable", "very good"]]}], 1728], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[798288706]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"buying_price\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"buying_price\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1665128374][{All, "buying_price"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[All, "buying_price"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"maintenance\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"maintenance\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1665128374][{All, "maintenance"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[All, "maintenance"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"doors\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"doors\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1665128374][{All, "doors"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[All, "doors"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"persons\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"persons\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1665128374][{All, "persons"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[All, "persons"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"lug_boot\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"lug_boot\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1665128374][{All, "lug_boot"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[All, "lug_boot"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"safety\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"safety\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1665128374][{All, "safety"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[All, "safety"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"acceptability\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"acceptability\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1665128374][{All, "acceptability"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[All, "acceptability"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[1, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[1, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[1, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[1, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["small", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[1, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[1, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[1, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[2, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[2, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[2, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[2, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["small", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[2, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[2, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[2, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[3, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[3, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[3, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[3, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["small", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[3, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[3, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[3, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[4, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[4, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[4, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[4, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[4, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[4, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[4, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[5, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[5, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[5, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[5, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[5, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[5, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[5, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[6, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[6, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[6, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[6, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[6, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[6, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[6, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[7, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[7, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[7, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[7, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["big", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[7, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[7, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[7, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[8, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[8, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[8, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[8, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["big", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[8, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[8, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[8, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[9, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[9, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[9, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[9, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["big", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[9, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[9, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[9, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[10, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[10, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[10, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[10, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["small", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[10, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[10, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[10, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[11, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[11, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[11, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[11, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["small", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[11, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[11, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[11, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[12, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[12, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[12, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[12, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["small", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[12, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[12, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[12, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[13, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[13, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[13, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[13, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[13, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[13, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[13, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[14, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[14, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[14, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[14, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[14, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[14, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[14, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[15, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[15, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[15, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[15, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[15, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[15, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[15, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[16, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[16, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[16, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[16, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["big", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[16, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[16, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[16, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[17, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[17, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[17, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[17, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["big", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[17, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[17, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[17, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[18, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[18, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[18, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[18, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["big", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[18, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[18, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[18, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[19, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[19, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[19, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["more", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[19, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["small", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[19, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[19, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[19, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[20, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[20, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[20, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["more", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[20, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["small", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[20, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[20, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
                  GeneralUtilities`Slice[20, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Grid[{{
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    1728 (-20), {1, 1728 - -20 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 1728 - -20 + 1}])}]], 
                    Spacer[{5, 1}], 
                    Style[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1728, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], BaselinePosition -> Baseline], 
                    Spacer[{5, 1}], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 1728 - 20 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    1728 20, {1, 1728 - 20 + 1}])}]]}}, 
                   Alignment -> {Center, Bottom}], 
                  Grid[{{
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    1728 (-20), {1, 1728 - -20 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 1728 - -20 + 1}])}]], 
                    Spacer[{5, 1}], 
                    Style[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1728, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], BaselinePosition -> Baseline], 
                    Spacer[{5, 1}], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 1728 - 20 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    1728 20, {1, 1728 - 20 + 1}])}]]}}, 
                   Alignment -> {Center, Bottom}]]], Background -> 
                GrayLevel[0.98], Alignment -> {Center, 
                  Scaled[1]}, BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1665128374},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1665128374},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1665128374},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1665128374},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1665128374},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1665128374][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1665128374]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1665128374][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           "", Blank[] :> ""}], TrackedSymbols :> {}], FrameStyle -> None, 
        ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
        ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]], DynamicModuleValues :> {}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
    DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.6806138698009195`*^9, 3.6806138752765574`*^9}, 
   3.6806140412292695`*^9, 3.6806140898386655`*^9, 3.6806142628138046`*^9, 
   3.680619275707555*^9, 3.6806199230963917`*^9, 3.680620032732826*^9, 
   3.680620712923789*^9, 3.680621257953676*^9, 3.680621315788416*^9}]
}, Open  ]],

Cell["\<\
Now model the neural network with a the NetGraph function, which defines the \
layers and their relationships:\
\>", "Text",
 CellChangeTimes->{{3.6806200412737207`*^9, 3.6806200451536756`*^9}, {
  3.680620076305523*^9, 3.680620106113201*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CatenateLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"DotPlusLayer", "[", "10", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ElementwiseLayer", "[", "Tanh", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"DotPlusLayer", "[", "4", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<buying_price\>\"", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"NetPort", "[", "\"\<maintenance\>\"", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"NetPort", "[", "\"\<doors\>\"", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"NetPort", "[", "\"\<persons\>\"", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"NetPort", "[", "\"\<lug_boot\>\"", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"NetPort", "[", "\"\<safety\>\"", "]"}]}], 
        "\[IndentingNewLine]", "}"}], "\[Rule]", "1"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"1", "\[Rule]", 
       RowBox[{"2", "\[Rule]", 
        RowBox[{"3", "\[Rule]", 
         RowBox[{"4", "\[Rule]", 
          RowBox[{"5", "\[Rule]", 
           RowBox[{"NetPort", "[", "\"\<acceptability\>\"", "]"}]}]}]}]}]}]}],
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<buying_price\>\"", "\[Rule]", " ", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<very high\>\"", ",", "\"\<high\>\"", ",", "\"\<medium\>\"", 
          ",", "\"\<low\>\""}], "}"}], ",", "\"\<UnitVector\>\""}], "}"}], 
      "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<maintenance\>\"", "\[Rule]", " ", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<very high\>\"", ",", "\"\<high\>\"", ",", "\"\<medium\>\"", 
          ",", "\"\<low\>\""}], "}"}], ",", "\"\<UnitVector\>\""}], "}"}], 
      "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<doors\>\"", "\[Rule]", " ", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4", ",", "\"\<5 or more\>\""}], "}"}], 
        ",", "\"\<UnitVector\>\""}], "}"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<persons\>\"", "\[Rule]", " ", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4", ",", "\"\<more\>\""}], "}"}], ",", 
        "\"\<UnitVector\>\""}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<lug_boot\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<small\>\"", ",", "\"\<medium\>\"", ",", "\"\<big\>\""}],
          "}"}], ",", "\"\<UnitVector\>\""}], "}"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<safety\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<low\>\"", ",", "\"\<medium\>\"", ",", "\"\<high\>\""}], 
         "}"}], ",", "\"\<UnitVector\>\""}], "}"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<acceptability\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<unacceptable\>\"", ",", "\"\<acceptable\>\"", ",", 
          "\"\<good\>\"", ",", "\"\<very good\>\""}], "}"}]}], "}"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.680613543524987*^9, 3.6806136648060446`*^9}, {
   3.6806137310064044`*^9, 3.680613742013811*^9}, {3.680614069797959*^9, 
   3.680614081782035*^9}, {3.6806193140645075`*^9, 3.6806196182827835`*^9}, {
   3.6806201109704666`*^9, 3.6806201273699207`*^9}, {3.680620733802631*^9, 
   3.680620735065695*^9}, 3.6806208261450467`*^9, {3.680621276226721*^9, 
   3.68062128583464*^9}, {3.680621357393442*^9, 3.680621357624998*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetGraph", 
     RowBox[{"[", 
      PanelBox[
       TagBox[
        DynamicModuleBox[{NeuralNetworks`NetGraph`PackagePrivate`selection$$ =
          None, NeuralNetworks`NetGraph`PackagePrivate`outIndex$$ = 11, 
         NeuralNetworks`NetGraph`PackagePrivate`inputs$$ = Association[
         "buying_price" -> NeuralNetworks`EncodedType[
            NetEncoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {"very high", "high", "medium", "low"}, 
                "OutputForm" -> "UnitVector", "Count" -> 4], "Output" -> 
              NeuralNetworks`TensorT[1, {4}]]], 
            NeuralNetworks`TensorT[1, {4}]], "maintenance" -> 
          NeuralNetworks`EncodedType[
            NetEncoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {"very high", "high", "medium", "low"}, 
                "OutputForm" -> "UnitVector", "Count" -> 4], "Output" -> 
              NeuralNetworks`TensorT[1, {4}]]], 
            NeuralNetworks`TensorT[1, {4}]], "doors" -> 
          NeuralNetworks`EncodedType[
            NetEncoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {2, 3, 4, "5 or more"}, "OutputForm" -> 
                "UnitVector", "Count" -> 4], "Output" -> 
              NeuralNetworks`TensorT[1, {4}]]], 
            NeuralNetworks`TensorT[1, {4}]], "persons" -> 
          NeuralNetworks`EncodedType[
            NetEncoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {2, 4, "more"}, "OutputForm" -> "UnitVector", 
                "Count" -> 3], "Output" -> NeuralNetworks`TensorT[1, {3}]]], 
            NeuralNetworks`TensorT[1, {3}]], "lug_boot" -> 
          NeuralNetworks`EncodedType[
            NetEncoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {"small", "medium", "big"}, "OutputForm" -> 
                "UnitVector", "Count" -> 3], "Output" -> 
              NeuralNetworks`TensorT[1, {3}]]], 
            NeuralNetworks`TensorT[1, {3}]], "safety" -> 
          NeuralNetworks`EncodedType[
            NetEncoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {"low", "medium", "high"}, "OutputForm" -> 
                "UnitVector", "Count" -> 3], "Output" -> 
              NeuralNetworks`TensorT[1, {3}]]], 
            NeuralNetworks`TensorT[1, {3}]]], 
         NeuralNetworks`NetGraph`PackagePrivate`outputs$$ = Association[
         "acceptability" -> NeuralNetworks`DecodedType[
            NetDecoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {
                 "unacceptable", "acceptable", "good", "very good"}, 
                "Dimensions" -> 4], "Input" -> 
              NeuralNetworks`TensorT[1, {4}]]], 
            NeuralNetworks`TensorT[1, {4}]]], 
         NeuralNetworks`NetGraph`PackagePrivate`labels$$ = {
         "buying_price", "1", "maintenance", "doors", "persons", "lug_boot", 
          "safety", "2", "3", "4", "5", "acceptability"}, 
         NeuralNetworks`NetGraph`PackagePrivate`vertices$$ = Association[
         "1" -> Association[
           "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
            Association["$InputCount" -> 6, "$Rank" -> 1], "Inputs" -> 
            Association["Input" -> {
                NeuralNetworks`TensorT[1, {4}], 
                NeuralNetworks`TensorT[1, {4}], 
                NeuralNetworks`TensorT[1, {4}], 
                NeuralNetworks`TensorT[1, {3}], 
                NeuralNetworks`TensorT[1, {3}], 
                NeuralNetworks`TensorT[1, {3}]}], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {21}]]], "2" -> 
          Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {10, 21}], "Biases" -> 
              NeuralNetworks`Nullable[
                NeuralNetworks`TensorT[1, {10}]]], "Parameters" -> 
            Association["Size" -> 10, "$InputSize" -> 21], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {21}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {10}]]], "3" -> 
          Association[
           "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Function" -> Tanh, "$Dimensions" -> {10}, "$Rank" -> 1], 
            "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {10}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {10}]]], "4" -> 
          Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {4, 10}], "Biases" -> 
              NeuralNetworks`Nullable[
                NeuralNetworks`TensorT[1, {4}]]], "Parameters" -> 
            Association["Size" -> 4, "$InputSize" -> 10], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {10}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {4}]]], "5" -> 
          Association[
           "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
            Association["Size" -> 4], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {4}]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {4}]]]], 
         NeuralNetworks`NetGraph`PackagePrivate`vports$$ = {
          NetPort["Inputs", "buying_price"], 
          NetPort["Vertices", "1"], 
          NetPort["Inputs", "maintenance"], 
          NetPort["Inputs", "doors"], 
          NetPort["Inputs", "persons"], 
          NetPort["Inputs", "lug_boot"], 
          NetPort["Inputs", "safety"], 
          NetPort["Vertices", "2"], 
          NetPort["Vertices", "3"], 
          NetPort["Vertices", "4"], 
          NetPort["Vertices", "5"], 
          NetPort["Outputs", "acceptability"]}}, 
         TagBox[GridBox[{
            {
             TemplateBox[{TagBox[
                GraphicsBox[{{
                   GrayLevel[0.7], {
                    
                    LineBox[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.0000000000000004`}}], 
                    
                    LineBox[{{-6., 1.0000000000000004`}, {-5., 
                    3.0000000000000004`}}], 
                    
                    LineBox[{{-6., 2.0000000000000004`}, {-5., 
                    3.0000000000000004`}}], 
                    
                    LineBox[{{-6., 3.0000000000000004`}, {-5., 
                    3.0000000000000004`}}], 
                    LineBox[{{-6., 4.}, {-5., 3.0000000000000004`}}], 
                    LineBox[{{-6., 5.}, {-5., 3.0000000000000004`}}], 
                    
                    LineBox[{{-5., 3.0000000000000004`}, {-4., 
                    3.0000000000000004`}}], 
                    LineBox[{{-4., 3.0000000000000004`}, {-3., 3.}}], 
                    LineBox[{{-3., 3.}, {-1.9999999999999998`, 3.}}], 
                    
                    LineBox[{{-1.9999999999999998`, 3.}, {-0.9999999999999998,
                     3.}}], 
                    
                    LineBox[{{-0.9999999999999998, 3.}, {
                    1.8369701987210297`*^-16, 3.}}]}}, {
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.487170824512628, 
                    1.538487526462115}, {-0.25, 0}, 
                    Offset[8], {1., 3.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.417705098312485, 
                    2.1645898033750317`}, {-0.25, 0}, 
                    Offset[8], {1., 2.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    2.6000000000000005`}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    3.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    3.4000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., -0.9999999999999996}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.417705098312485, 
                    3.8354101966249687`}, {-0.25, 0}, 
                    Offset[8], {1., -1.9999999999999996`}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    3.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    3.}, {-0.25, 0}, 
                    Offset[8], {1., -4.440892098500626*^-16}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-2.4, 
                    3.}, {-0.25, 0}, 
                    Offset[8], {1.0000000000000002`, 0.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    3.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999998, 3.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                   GrayLevel[0], {
                    AbsolutePointSize[5], {{
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-6., 3.6739403974420594`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.9, 0., 0.], 
                    TagBox[
                    PointBox[{-5., 3.0000000000000004`}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-6., 1.0000000000000004`}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-6., 2.0000000000000004`}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-6., 3.0000000000000004`}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-6., 4.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-6., 5.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-4., 3.0000000000000004`}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    TagBox[
                    PointBox[{-3., 3.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-1.9999999999999998`, 3.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    TagBox[
                    PointBox[{-0.9999999999999998, 3.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{1.8369701987210297`*^-16, 3.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}}}, {{
                    InsetBox[
                    FormBox["\"buying_price\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 3.6739403974420594`*^-16}], 
                    Offset[{0, -5.5}, {-6., 3.6739403974420594`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-5., 3.0000000000000004`}], 
                    Offset[{0, -5.5}, {-5., 3.0000000000000004`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"maintenance\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 1.0000000000000004`}], 
                    Offset[{0, -5.5}, {-6., 1.0000000000000004`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"doors\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 2.0000000000000004`}], 
                    Offset[{0, -5.5}, {-6., 2.0000000000000004`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"persons\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 3.0000000000000004`}], 
                    Offset[{0, -5.5}, {-6., 3.0000000000000004`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"lug_boot\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 4.}], 
                    Offset[{0, -5.5}, {-6., 4.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"safety\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 5.}], 
                    Offset[{0, -5.5}, {-6., 5.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-4., 3.0000000000000004`}], 
                    Offset[{0, -5.5}, {-4., 3.0000000000000004`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-3., 3.}], 
                    Offset[{0, -5.5}, {-3., 3.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-1.9999999999999998`, 3.}], 
                    Offset[{0, -5.5}, {-1.9999999999999998`, 3.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-0.9999999999999998, 3.}], 
                    Offset[{0, -5.5}, {-0.9999999999999998, 3.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"acceptability\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {1.8369701987210297`*^-16, 3.}], 
                    Offset[{0, -5.5}, {1.8369701987210297`*^-16, 3.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, 
                   StyleBox[{
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-5.217758139277826, 
                    1.7392527130926088`}, {-5.487170824512628, 
                    1.538487526462115}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.31622776601683794`, 0.9486832980505138}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-4.919349550499537, 
                    2.4596747752497685`}, {-5.417705098312485, 
                    2.1645898033750317`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.4472135954999579,
                     0.8944271909999159}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.889087296526011}, {-5.4, 
                    2.6000000000000005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071067811865475,
                     0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-5.4, 3.0000000000000004`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{3.8890872965260104`, 3.889087296526012}, {-5.4, 
                    3.4000000000000004`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067811865477, -0.7071067811865474}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{4.919349550499536, 
                    2.459674775249769}, {-5.417705098312485, 
                    3.8354101966249687`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.447213595499958, -0.8944271909999157}], 
                    InsetBox[
                    FormBox["\"21\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, 3.0000000000000004`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    Offset[{2.4424906541753444`*^-15, 5.5}, {-3.4, 3.}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -4.440892098500626*^-16}], 
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-2.4, 3.}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, 3.}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999998, 3.}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {1., 0.}]}, 
                    FontColor -> GrayLevel[0.5], FontSize -> 8, FontWeight -> 
                    "Thin", StripOnInput -> False]}, 
                  
                  DynamicModuleBox[{
                   GeneralUtilities`Graphics`PackagePrivate`vpos$148683 = \
{{-6., 3.6739403974420594`*^-16}, {-5., 3.0000000000000004`}, {-6., 
                    1.0000000000000004`}, {-6., 2.0000000000000004`}, {-6., 
                    3.0000000000000004`}, {-6., 4.}, {-6., 5.}, {-4., 
                    3.0000000000000004`}, {-3., 3.}, {-1.9999999999999998`, 
                    3.}, {-0.9999999999999998, 3.}, {1.8369701987210297`*^-16,
                     3.}}}, 
                   DynamicBox[
                    Typeset`ToBoxes[
                    If[
                    Not[
                    IntegerQ[
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]], {}, {
                    AbsolutePointSize[10], 
                    Opacity[0.2, Black], 
                    Point[
                    Part[
                    GeneralUtilities`Graphics`PackagePrivate`vpos$148683, 
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]]}], 
                    StandardForm, Graphics], 
                    TrackedSymbols :> {
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$}], 
                   DynamicModuleValues :> {}]}, ImageSize -> {468., 340.5}, 
                 AspectRatio -> Full, PlotRangePadding -> 0, 
                 ImagePadding -> {{40.5, 43.5}, {15.5, 5}}, 
                 ImageMargins -> {{0, 0}, {15, 15}}, 
                 BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                
                EventHandlerTag[{
                 "MouseClicked" :> (
                   NeuralNetworks`NetGraph`PackagePrivate`selection$$ = None),
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                  PassEventsUp -> True}]],FormBox[
                TemplateBox[{
                  StyleBox["CatenateLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["DotPlusLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["ElementwiseLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["SoftmaxLayer", 
                   GrayLevel[0.35], StripOnInput -> False]}, "PointLegend", 
                 DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0., 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0., 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #3}, "RowDefault"]}, {
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #2}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #4}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{2, 2}, {2, 2}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6000000000000001, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9, 0., 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0., 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.35], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.23333333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "GrayLevel[0.35]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.35]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.35], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.19333333333333333`, 0.19333333333333333`, 
                    0.5533333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.29, 0.29, 0.83]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.29, 0.29, 0.83]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.29, 0.29, 0.83], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.52, 0.4266666666666667, 0.6533333333333333], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.78, 0.64, 0.98]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.78, 0.64, 0.98]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.78, 0.64, 0.98], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                    RowBox[{"LegendMarkerSize", "\[Rule]", "12"}], ",", 
                    RowBox[{"LegendMargins", "\[Rule]", "2"}], ",", 
                    
                    RowBox[{
                    "LegendLayout", "\[Rule]", 
                    "GeneralUtilities`Graphics`PackagePrivate`legendTable"}]}]\
, "]"}]& ), Editable -> True], TraditionalForm]},
              "Legended",
              DisplayFunction->(GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> Automatic, 
                BaselinePosition -> {1, 1}]& ),
              Editable->True,
              InterpretationFunction->(RowBox[{"Legended", "[", 
                 RowBox[{#, ",", 
                   RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
            {
             DynamicBox[ToBoxes[
               If[
                IntegerQ[NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                Item[
                 NeuralNetworks`NetGraph`PackagePrivate`vportInfo[
                  Part[
                  NeuralNetworks`NetGraph`PackagePrivate`vports$$, 
                   NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                  NeuralNetworks`NetGraph`PackagePrivate`inputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`outputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`vertices$$], 
                 Alignment -> Center], 
                Item["", ItemSize -> {0, 0}]], StandardForm],
              ImageSizeCache->{0., {0., 9.}},
              
              TrackedSymbols:>{
               NeuralNetworks`NetGraph`PackagePrivate`selection$$}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         DynamicModuleValues:>{},
         Initialization:>{NetGraph}],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       BaselinePosition->(Top -> Scaled[3])], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{{3.6806136443963966`*^9, 3.680613667502428*^9}, 
   3.680613742834254*^9, 3.680614082904196*^9, 3.680620746334489*^9, 
   3.680620827432658*^9, 3.680621260928881*^9, 3.680621317420062*^9, 
   3.68062135906106*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"net", ",", "training"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6806140552713737`*^9, 3.680614060309222*^9}, {
  3.6806142650693083`*^9, 3.6806142676212454`*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetGraph", 
     RowBox[{"[", 
      PanelBox[
       TagBox[
        DynamicModuleBox[{NeuralNetworks`NetGraph`PackagePrivate`selection$$ =
          None, NeuralNetworks`NetGraph`PackagePrivate`outIndex$$ = 11, 
         NeuralNetworks`NetGraph`PackagePrivate`inputs$$ = Association[
         "buying_price" -> NeuralNetworks`EncodedType[
            NetEncoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {"very high", "high", "medium", "low"}, 
                "OutputForm" -> "UnitVector", "Count" -> 4], "Output" -> 
              NeuralNetworks`TensorT[1, {4}]]], 
            NeuralNetworks`TensorT[1, {4}]], "maintenance" -> 
          NeuralNetworks`EncodedType[
            NetEncoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {"very high", "high", "medium", "low"}, 
                "OutputForm" -> "UnitVector", "Count" -> 4], "Output" -> 
              NeuralNetworks`TensorT[1, {4}]]], 
            NeuralNetworks`TensorT[1, {4}]], "doors" -> 
          NeuralNetworks`EncodedType[
            NetEncoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {2, 3, 4, "5 or more"}, "OutputForm" -> 
                "UnitVector", "Count" -> 4], "Output" -> 
              NeuralNetworks`TensorT[1, {4}]]], 
            NeuralNetworks`TensorT[1, {4}]], "persons" -> 
          NeuralNetworks`EncodedType[
            NetEncoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {2, 4, "more"}, "OutputForm" -> "UnitVector", 
                "Count" -> 3], "Output" -> NeuralNetworks`TensorT[1, {3}]]], 
            NeuralNetworks`TensorT[1, {3}]], "lug_boot" -> 
          NeuralNetworks`EncodedType[
            NetEncoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {"small", "medium", "big"}, "OutputForm" -> 
                "UnitVector", "Count" -> 3], "Output" -> 
              NeuralNetworks`TensorT[1, {3}]]], 
            NeuralNetworks`TensorT[1, {3}]], "safety" -> 
          NeuralNetworks`EncodedType[
            NetEncoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {"low", "medium", "high"}, "OutputForm" -> 
                "UnitVector", "Count" -> 3], "Output" -> 
              NeuralNetworks`TensorT[1, {3}]]], 
            NeuralNetworks`TensorT[1, {3}]]], 
         NeuralNetworks`NetGraph`PackagePrivate`outputs$$ = Association[
         "acceptability" -> NeuralNetworks`DecodedType[
            NetDecoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {
                 "unacceptable", "acceptable", "good", "very good"}, 
                "Dimensions" -> 4], "Input" -> 
              NeuralNetworks`TensorT[1, {4}]]], 
            NeuralNetworks`TensorT[1, {4}]]], 
         NeuralNetworks`NetGraph`PackagePrivate`labels$$ = {
         "buying_price", "1", "maintenance", "doors", "persons", "lug_boot", 
          "safety", "2", "3", "4", "5", "acceptability"}, 
         NeuralNetworks`NetGraph`PackagePrivate`vertices$$ = Association[
         "1" -> Association[
           "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
            Association["$InputCount" -> 6, "$Rank" -> 1], "Inputs" -> 
            Association["Input" -> {
                NeuralNetworks`TensorT[1, {4}], 
                NeuralNetworks`TensorT[1, {4}], 
                NeuralNetworks`TensorT[1, {4}], 
                NeuralNetworks`TensorT[1, {3}], 
                NeuralNetworks`TensorT[1, {3}], 
                NeuralNetworks`TensorT[1, {3}]}], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {21}]]], "2" -> 
          Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {10, 21}], "Biases" -> 
              NeuralNetworks`TensorT[1, {10}]], "Parameters" -> 
            Association["Size" -> 10, "$InputSize" -> 21], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {21}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {10}]]], "3" -> 
          Association[
           "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Function" -> Tanh, "$Dimensions" -> {10}, "$Rank" -> 1], 
            "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {10}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {10}]]], "4" -> 
          Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {4, 10}], "Biases" -> 
              NeuralNetworks`TensorT[1, {4}]], "Parameters" -> 
            Association["Size" -> 4, "$InputSize" -> 10], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {10}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {4}]]], "5" -> 
          Association[
           "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
            Association["Size" -> 4], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {4}]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {4}]]]], 
         NeuralNetworks`NetGraph`PackagePrivate`vports$$ = {
          NetPort["Inputs", "buying_price"], 
          NetPort["Vertices", "1"], 
          NetPort["Inputs", "maintenance"], 
          NetPort["Inputs", "doors"], 
          NetPort["Inputs", "persons"], 
          NetPort["Inputs", "lug_boot"], 
          NetPort["Inputs", "safety"], 
          NetPort["Vertices", "2"], 
          NetPort["Vertices", "3"], 
          NetPort["Vertices", "4"], 
          NetPort["Vertices", "5"], 
          NetPort["Outputs", "acceptability"]}}, 
         TagBox[GridBox[{
            {
             TemplateBox[{TagBox[
                GraphicsBox[{{
                   GrayLevel[0.7], {
                    
                    LineBox[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.0000000000000004`}}], 
                    
                    LineBox[{{-6., 1.0000000000000004`}, {-5., 
                    3.0000000000000004`}}], 
                    
                    LineBox[{{-6., 2.0000000000000004`}, {-5., 
                    3.0000000000000004`}}], 
                    
                    LineBox[{{-6., 3.0000000000000004`}, {-5., 
                    3.0000000000000004`}}], 
                    LineBox[{{-6., 4.}, {-5., 3.0000000000000004`}}], 
                    LineBox[{{-6., 5.}, {-5., 3.0000000000000004`}}], 
                    
                    LineBox[{{-5., 3.0000000000000004`}, {-4., 
                    3.0000000000000004`}}], 
                    LineBox[{{-4., 3.0000000000000004`}, {-3., 3.}}], 
                    LineBox[{{-3., 3.}, {-1.9999999999999998`, 3.}}], 
                    
                    LineBox[{{-1.9999999999999998`, 3.}, {-0.9999999999999998,
                     3.}}], 
                    
                    LineBox[{{-0.9999999999999998, 3.}, {
                    1.8369701987210297`*^-16, 3.}}]}}, {
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.487170824512628, 
                    1.538487526462115}, {-0.25, 0}, 
                    Offset[8], {1., 3.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.417705098312485, 
                    2.1645898033750317`}, {-0.25, 0}, 
                    Offset[8], {1., 2.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    2.6000000000000005`}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    3.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    3.4000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., -0.9999999999999996}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.417705098312485, 
                    3.8354101966249687`}, {-0.25, 0}, 
                    Offset[8], {1., -1.9999999999999996`}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    3.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    3.}, {-0.25, 0}, 
                    Offset[8], {1., -4.440892098500626*^-16}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-2.4, 
                    3.}, {-0.25, 0}, 
                    Offset[8], {1.0000000000000002`, 0.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    3.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999998, 3.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                   GrayLevel[0], {
                    AbsolutePointSize[5], {{
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-6., 3.6739403974420594`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.9, 0., 0.], 
                    TagBox[
                    PointBox[{-5., 3.0000000000000004`}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-6., 1.0000000000000004`}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-6., 2.0000000000000004`}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-6., 3.0000000000000004`}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-6., 4.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-6., 5.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-4., 3.0000000000000004`}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    TagBox[
                    PointBox[{-3., 3.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-1.9999999999999998`, 3.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    TagBox[
                    PointBox[{-0.9999999999999998, 3.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{1.8369701987210297`*^-16, 3.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}}}, {{
                    InsetBox[
                    FormBox["\"buying_price\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 3.6739403974420594`*^-16}], 
                    Offset[{0, -5.5}, {-6., 3.6739403974420594`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-5., 3.0000000000000004`}], 
                    Offset[{0, -5.5}, {-5., 3.0000000000000004`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"maintenance\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 1.0000000000000004`}], 
                    Offset[{0, -5.5}, {-6., 1.0000000000000004`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"doors\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 2.0000000000000004`}], 
                    Offset[{0, -5.5}, {-6., 2.0000000000000004`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"persons\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 3.0000000000000004`}], 
                    Offset[{0, -5.5}, {-6., 3.0000000000000004`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"lug_boot\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 4.}], 
                    Offset[{0, -5.5}, {-6., 4.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"safety\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 5.}], 
                    Offset[{0, -5.5}, {-6., 5.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-4., 3.0000000000000004`}], 
                    Offset[{0, -5.5}, {-4., 3.0000000000000004`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-3., 3.}], 
                    Offset[{0, -5.5}, {-3., 3.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-1.9999999999999998`, 3.}], 
                    Offset[{0, -5.5}, {-1.9999999999999998`, 3.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-0.9999999999999998, 3.}], 
                    Offset[{0, -5.5}, {-0.9999999999999998, 3.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"acceptability\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {1.8369701987210297`*^-16, 3.}], 
                    Offset[{0, -5.5}, {1.8369701987210297`*^-16, 3.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, 
                   StyleBox[{
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-5.217758139277826, 
                    1.7392527130926088`}, {-5.487170824512628, 
                    1.538487526462115}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.31622776601683794`, 0.9486832980505138}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-4.919349550499537, 
                    2.4596747752497685`}, {-5.417705098312485, 
                    2.1645898033750317`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.4472135954999579,
                     0.8944271909999159}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.889087296526011}, {-5.4, 
                    2.6000000000000005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071067811865475,
                     0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-5.4, 3.0000000000000004`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{3.8890872965260104`, 3.889087296526012}, {-5.4, 
                    3.4000000000000004`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067811865477, -0.7071067811865474}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{4.919349550499536, 
                    2.459674775249769}, {-5.417705098312485, 
                    3.8354101966249687`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.447213595499958, -0.8944271909999157}], 
                    InsetBox[
                    FormBox["\"21\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, 3.0000000000000004`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    Offset[{2.4424906541753444`*^-15, 5.5}, {-3.4, 3.}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -4.440892098500626*^-16}], 
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-2.4, 3.}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, 3.}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999998, 3.}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {1., 0.}]}, 
                    FontColor -> GrayLevel[0.5], FontSize -> 8, FontWeight -> 
                    "Thin", StripOnInput -> False]}, 
                  
                  DynamicModuleBox[{
                   GeneralUtilities`Graphics`PackagePrivate`vpos$152754 = \
{{-6., 3.6739403974420594`*^-16}, {-5., 3.0000000000000004`}, {-6., 
                    1.0000000000000004`}, {-6., 2.0000000000000004`}, {-6., 
                    3.0000000000000004`}, {-6., 4.}, {-6., 5.}, {-4., 
                    3.0000000000000004`}, {-3., 3.}, {-1.9999999999999998`, 
                    3.}, {-0.9999999999999998, 3.}, {1.8369701987210297`*^-16,
                     3.}}}, 
                   DynamicBox[
                    Typeset`ToBoxes[
                    If[
                    Not[
                    IntegerQ[
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]], {}, {
                    AbsolutePointSize[10], 
                    Opacity[0.2, Black], 
                    Point[
                    Part[
                    GeneralUtilities`Graphics`PackagePrivate`vpos$152754, 
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]]}], 
                    StandardForm, Graphics], 
                    TrackedSymbols :> {
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$}], 
                   DynamicModuleValues :> {}]}, ImageSize -> {468., 340.5}, 
                 AspectRatio -> Full, PlotRangePadding -> 0, 
                 ImagePadding -> {{40.5, 43.5}, {15.5, 5}}, 
                 ImageMargins -> {{0, 0}, {15, 15}}, 
                 BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                
                EventHandlerTag[{
                 "MouseClicked" :> (
                   NeuralNetworks`NetGraph`PackagePrivate`selection$$ = None),
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                  PassEventsUp -> True}]],FormBox[
                TemplateBox[{
                  StyleBox["CatenateLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["DotPlusLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["ElementwiseLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["SoftmaxLayer", 
                   GrayLevel[0.35], StripOnInput -> False]}, "PointLegend", 
                 DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0., 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0., 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #3}, "RowDefault"]}, {
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #2}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #4}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{2, 2}, {2, 2}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6000000000000001, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9, 0., 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0., 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.35], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.23333333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "GrayLevel[0.35]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.35]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.35], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.19333333333333333`, 0.19333333333333333`, 
                    0.5533333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.29, 0.29, 0.83]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.29, 0.29, 0.83]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.29, 0.29, 0.83], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.52, 0.4266666666666667, 0.6533333333333333], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.78, 0.64, 0.98]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.78, 0.64, 0.98]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.78, 0.64, 0.98], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                    RowBox[{"LegendMarkerSize", "\[Rule]", "12"}], ",", 
                    RowBox[{"LegendMargins", "\[Rule]", "2"}], ",", 
                    
                    RowBox[{
                    "LegendLayout", "\[Rule]", 
                    "GeneralUtilities`Graphics`PackagePrivate`legendTable"}]}]\
, "]"}]& ), Editable -> True], TraditionalForm]},
              "Legended",
              DisplayFunction->(GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> Automatic, 
                BaselinePosition -> {1, 1}]& ),
              Editable->True,
              InterpretationFunction->(RowBox[{"Legended", "[", 
                 RowBox[{#, ",", 
                   RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
            {
             DynamicBox[ToBoxes[
               If[
                IntegerQ[NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                Item[
                 NeuralNetworks`NetGraph`PackagePrivate`vportInfo[
                  Part[
                  NeuralNetworks`NetGraph`PackagePrivate`vports$$, 
                   NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                  NeuralNetworks`NetGraph`PackagePrivate`inputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`outputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`vertices$$], 
                 Alignment -> Center], 
                Item["", ItemSize -> {0, 0}]], StandardForm],
              ImageSizeCache->{0., {0., 9.}},
              
              TrackedSymbols:>{
               NeuralNetworks`NetGraph`PackagePrivate`selection$$}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         DynamicModuleValues:>{},
         Initialization:>{NetGraph}],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       BaselinePosition->(Top -> Scaled[3])], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{
  3.6806140609461913`*^9, 3.680614100000877*^9, 3.680614281117546*^9, 
   3.680621222026688*^9, 3.6806212635063825`*^9, 3.6806213194861636`*^9, {
   3.680621378657948*^9, 3.6806214175877495`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"training", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.6806214918001404`*^9, 3.6806214985263157`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "buying_price", "maintenance", "doors", "persons", "lug_boot", 
            "safety", "acceptability"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
            TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Atom[
             TypeSystem`Enumeration["big", "medium", "small"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["high", "low", "medium"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "acceptable", "good", "unacceptable", "very good"]]}], 1], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "buying_price"} -> 1, {All, "maintenance"} -> 
           1, {All, "doors"} -> 1, {All, "persons"} -> 1, {All, "lug_boot"} -> 
           1, {All, "safety"} -> 1, {All, "acceptability"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "buying_price" -> TypeSystem`PackageScope`AtomShape[86.4], 
              "maintenance" -> TypeSystem`PackageScope`AtomShape[86.4], 
              "doors" -> TypeSystem`PackageScope`UnknownShape, "persons" -> 
              TypeSystem`PackageScope`UnknownShape, "lug_boot" -> 
              TypeSystem`PackageScope`AtomShape[57.60000000000001], "safety" -> 
              TypeSystem`PackageScope`AtomShape[57.60000000000001], 
              "acceptability" -> 
              TypeSystem`PackageScope`AtomShape[115.20000000000002`]]]], 
           1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1230219736], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "buying_price", "maintenance", "doors", "persons", "lug_boot", 
            "safety", "acceptability"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
            TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Atom[
             TypeSystem`Enumeration["big", "medium", "small"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["high", "low", "medium"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "acceptable", "good", "unacceptable", "very good"]]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1230219736]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"buying_price\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"buying_price\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1213084952][{All, "buying_price"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1213084952][
                  GeneralUtilities`Slice[All, "buying_price"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"maintenance\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"maintenance\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1213084952][{All, "maintenance"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1213084952][
                  GeneralUtilities`Slice[All, "maintenance"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"doors\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"doors\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1213084952][{All, "doors"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1213084952][
                  GeneralUtilities`Slice[All, "doors"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"persons\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"persons\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1213084952][{All, "persons"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1213084952][
                  GeneralUtilities`Slice[All, "persons"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"lug_boot\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"lug_boot\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1213084952][{All, "lug_boot"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1213084952][
                  GeneralUtilities`Slice[All, "lug_boot"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"safety\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"safety\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1213084952][{All, "safety"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1213084952][
                  GeneralUtilities`Slice[All, "safety"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"acceptability\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"acceptability\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1213084952][{All, "acceptability"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1213084952][
                  GeneralUtilities`Slice[All, "acceptability"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1213084952][
                  GeneralUtilities`Slice[1, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1213084952][
                  GeneralUtilities`Slice[1, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1213084952][
                  GeneralUtilities`Slice[1, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1213084952][
                  GeneralUtilities`Slice[1, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["small", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1213084952][
                  GeneralUtilities`Slice[1, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1213084952][
                  GeneralUtilities`Slice[1, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1213084952][
                  GeneralUtilities`Slice[1, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1213084952][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1213084952]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1213084952][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1213084952][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           "", Blank[] :> ""}], TrackedSymbols :> {}], FrameStyle -> None, 
        ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
        ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]], DynamicModuleValues :> {}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
    DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.6806214988801003`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "[", 
  RowBox[{"<|", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<buying_price\>\"", "\[Rule]", "\"\<low\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<maintenance\>\"", "\[Rule]", "\"\<high\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<doors\>\"", "\[Rule]", "4"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<persons\>\"", "\[Rule]", "4"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<lug_boot\>\"", "\[Rule]", "\"\<big\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<safety\>\"", "\[Rule]", "\"\<high\>\""}]}], 
   "\[IndentingNewLine]", "|>"}], "]"}]], "Input",
 CellChangeTimes->{{3.680614103793681*^9, 3.680614164821579*^9}, {
  3.6806214148717327`*^9, 3.680621522670143*^9}, {3.6806215533184605`*^9, 
  3.680621578054147*^9}}],

Cell[BoxData["\<\"very good\"\>"], "Output",
 CellChangeTimes->{{3.6806141171313524`*^9, 3.6806141304222655`*^9}, 
   3.680614165186064*^9, 3.6806142811986246`*^9, 3.680621523861619*^9, {
   3.680621556946191*^9, 3.6806215787726994`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomChoice", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<very high\>\"", ",", "\"\<high\>\"", ",", "\"\<medium\>\"", ",", 
    "\"\<low\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.680621651748798*^9, 3.680621655356308*^9}}],

Cell[BoxData["\<\"very high\"\>"], "Output",
 CellChangeTimes->{{3.680621647199403*^9, 3.6806216557790565`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "random", "]"}]], "Input",
 CellChangeTimes->{{3.6806218138909645`*^9, 3.680621816409857*^9}}],

Cell[BoxData[
 RowBox[{"random", ":=", 
  RowBox[{"<|", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<buying_price\>\"", "\[Rule]", 
     RowBox[{"RandomChoice", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<very high\>\"", ",", "\"\<high\>\"", ",", "\"\<medium\>\"", ",", 
        "\"\<low\>\""}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<maintenance\>\"", "\[Rule]", " ", 
     RowBox[{"RandomChoice", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<very high\>\"", ",", "\"\<high\>\"", ",", "\"\<medium\>\"", ",", 
        "\"\<low\>\""}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<doors\>\"", "\[Rule]", 
     RowBox[{"RandomChoice", "[", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "4", ",", "\"\<5 or more\>\""}], "}"}], 
      "]"}]}], " ", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<persons\>\"", "\[Rule]", 
     RowBox[{"RandomChoice", "[", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4", ",", "\"\<more\>\""}], "}"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<lug_boot\>\"", "\[Rule]", 
     RowBox[{"RandomChoice", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<small\>\"", ",", "\"\<medium\>\"", ",", "\"\<big\>\""}], 
       "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<safety\>\"", "\[Rule]", 
     RowBox[{"RandomChoice", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<low\>\"", ",", "\"\<medium\>\"", ",", "\"\<high\>\""}], 
       "}"}], "]"}]}]}], "\[IndentingNewLine]", "|>"}]}]], "Input",
 CellChangeTimes->{{3.6806216359569435`*^9, 3.6806217365954204`*^9}, {
   3.6806217979630985`*^9, 3.6806218192188134`*^9}, 3.680621959160779*^9, {
   3.6806220044641333`*^9, 3.6806220046398*^9}}],

Cell[CellGroupData[{

Cell[BoxData["random"], "Input",
 CellChangeTimes->{{3.6806218204018188`*^9, 3.680621820857978*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"buying_price\"\>", "\[Rule]", "\<\"high\"\>"}], ",", 
   RowBox[{"\<\"maintenance\"\>", "\[Rule]", "\<\"high\"\>"}], ",", 
   RowBox[{"\<\"doors\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"persons\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"lug_boot\"\>", "\[Rule]", "\<\"small\"\>"}], ",", 
   RowBox[{"\<\"safety\"\>", "\[Rule]", "\<\"low\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.680621821239852*^9, 3.680621824504798*^9}, 
   3.680621962789651*^9, {3.6806220075253882`*^9, 3.680622009068616*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"r", "=", "random"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AssociateTo", "[", 
      RowBox[{"r", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<acceptability\>\"", "\[Rule]", 
         RowBox[{"result", "[", "r", "]"}]}], "}"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", "25"}], "]"}], "//", "Dataset"}]], "Input",
 CellChangeTimes->{{3.6806218426605597`*^9, 3.6806218528223085`*^9}, {
  3.6806219037769423`*^9, 3.6806219495140395`*^9}, {3.6806219859687977`*^9, 
  3.6806220462068195`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 25, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "buying_price", "maintenance", "doors", "persons", "lug_boot", 
            "safety", "acceptability"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
            TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Atom[
             TypeSystem`Enumeration["big", "medium", "small"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["high", "low", "medium"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["acceptable", "good", "unacceptable"]]}], 
          25], "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "buying_price"} -> 1, {All, "maintenance"} -> 
           1, {All, "doors"} -> 1, {All, "persons"} -> 1, {All, "lug_boot"} -> 
           1, {All, "safety"} -> 1, {All, "acceptability"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "buying_price" -> TypeSystem`PackageScope`AtomShape[86.4], 
              "maintenance" -> TypeSystem`PackageScope`AtomShape[86.4], 
              "doors" -> TypeSystem`PackageScope`UnknownShape, "persons" -> 
              TypeSystem`PackageScope`UnknownShape, "lug_boot" -> 
              TypeSystem`PackageScope`AtomShape[57.60000000000001], "safety" -> 
              TypeSystem`PackageScope`AtomShape[57.60000000000001], 
              "acceptability" -> 
              TypeSystem`PackageScope`AtomShape[115.20000000000002`]]]], 
           20, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[207316300], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "buying_price", "maintenance", "doors", "persons", "lug_boot", 
            "safety", "acceptability"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
            TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Atom[
             TypeSystem`Enumeration["big", "medium", "small"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["high", "low", "medium"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["acceptable", "good", "unacceptable"]]}], 
          25], "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[207316300]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"buying_price\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"buying_price\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 865108010][{
                    All, "buying_price"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[All, "buying_price"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"maintenance\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"maintenance\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 865108010][{
                    All, "maintenance"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[All, "maintenance"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"doors\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"doors\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 865108010][{
                    All, "doors"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[All, "doors"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"persons\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"persons\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 865108010][{
                    All, "persons"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[All, "persons"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"lug_boot\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"lug_boot\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 865108010][{
                    All, "lug_boot"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[All, "lug_boot"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"safety\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"safety\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 865108010][{
                    All, "safety"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[All, "safety"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"acceptability\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"acceptability\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 865108010][{
                    All, "acceptability"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[All, "acceptability"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[1, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[1, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[1, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[1, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[1, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[1, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[1, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[2, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[2, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[2, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["more", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[2, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["small", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[2, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[2, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[2, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[3, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[3, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[3, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["more", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[3, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["small", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[3, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[3, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[3, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[4, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[4, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["5 or more", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[4, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[4, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["small", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[4, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[4, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["acceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[4, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[5, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[5, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[5, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[5, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["small", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[5, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[5, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[5, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[6, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[6, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[6, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[6, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["small", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[6, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[6, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[6, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[7, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[7, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[7, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["more", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[7, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["small", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[7, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[7, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[7, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[8, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[8, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[8, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[8, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["big", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[8, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[8, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[8, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[9, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[9, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[9, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[9, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[9, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[9, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[9, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[10, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[10, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[10, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["more", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[10, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["small", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[10, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[10, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[10, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[11, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[11, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["5 or more", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[11, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[11, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[11, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[11, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["acceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[11, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[12, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[12, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[12, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[12, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[12, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[12, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[12, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[13, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[13, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[13, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[13, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[13, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[13, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["good", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[13, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[14, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[14, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[14, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[14, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["small", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[14, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[14, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[14, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[15, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[15, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["5 or more", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[15, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["more", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[15, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["small", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[15, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[15, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["acceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[15, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[16, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[16, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[16, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[16, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[16, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[16, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[16, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[17, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[17, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["5 or more", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[17, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[17, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[17, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[17, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[17, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[18, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["very high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[18, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[18, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["more", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[18, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["big", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[18, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[18, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[18, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[19, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["high", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[19, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[19, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[19, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[19, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[19, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[19, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[20, 
                   Key["buying_price"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["low", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[20, 
                   Key["maintenance"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[20, 
                   Key["doors"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[20, 
                   Key["persons"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["small", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[20, 
                   Key["lug_boot"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["medium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[20, 
                   Key["safety"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unacceptable", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
                  GeneralUtilities`Slice[20, 
                   Key["acceptability"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Grid[{{
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    25 (-20), {1, 25 - -20 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 25 - -20 + 1}])}]], 
                    Spacer[{5, 1}], 
                    Style[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    25, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], BaselinePosition -> Baseline], 
                    Spacer[{5, 1}], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 25 - 20 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    25 20, {1, 25 - 20 + 1}])}]]}}, 
                   Alignment -> {Center, Bottom}], 
                  Grid[{{
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    25 (-20), {1, 25 - -20 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 25 - -20 + 1}])}]], 
                    Spacer[{5, 1}], 
                    Style[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    25, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], BaselinePosition -> Baseline], 
                    Spacer[{5, 1}], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 25 - 20 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    25 20, {1, 25 - 20 + 1}])}]]}}, 
                   Alignment -> {Center, Bottom}]]], Background -> 
                GrayLevel[0.98], Alignment -> {Center, 
                  Scaled[1]}, BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 865108010}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 865108010}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 865108010}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 865108010}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 865108010}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 865108010][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 865108010]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[865108010][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           "", Blank[] :> ""}], TrackedSymbols :> {}], FrameStyle -> None, 
        ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
        ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]], DynamicModuleValues :> {}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
    DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.6806219278206663`*^9, 3.680621964163515*^9}, {
  3.680622029177515*^9, 3.680622046728487*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{921, 1028},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 180, 2, 150, "Title"],
Cell[763, 26, 121, 1, 45, "Text"],
Cell[887, 29, 259, 7, 45, "Input"],
Cell[CellGroupData[{
Cell[1171, 40, 111, 1, 72, "Subsection"],
Cell[CellGroupData[{
Cell[1307, 45, 3019, 66, 481, "Input"],
Cell[4329, 113, 40444, 836, 502, "Output"]
}, Closed]],
Cell[44788, 952, 341, 8, 45, "Input"],
Cell[CellGroupData[{
Cell[45154, 964, 839, 18, 162, "Input"],
Cell[45996, 984, 77914, 1605, 839, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[123947, 2594, 243, 5, 45, "Input"],
Cell[124193, 2601, 40314, 833, 502, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[164544, 3439, 395, 9, 45, "Input"],
Cell[164942, 3450, 156, 2, 45, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[165135, 3457, 397, 9, 45, "Input"],
Cell[165535, 3468, 102, 1, 45, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[165674, 3474, 397, 9, 45, "Input"],
Cell[166074, 3485, 80, 1, 45, "Output"]
}, Closed]],
Cell[166169, 3489, 1521, 38, 307, "Input"],
Cell[CellGroupData[{
Cell[167715, 3531, 413, 7, 45, "Input"],
Cell[168131, 3540, 6791, 138, 101, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[174959, 3683, 161, 2, 45, "Input"],
Cell[175123, 3687, 15784, 413, 481, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[190956, 4106, 163, 2, 58, "Subsection"],
Cell[191122, 4110, 107, 1, 45, "Text"],
Cell[CellGroupData[{
Cell[191254, 4115, 196, 4, 45, "Input"],
Cell[191453, 4121, 709, 18, 45, "Output"]
}, {2}]],
Cell[192174, 4142, 133, 1, 45, "Text"],
Cell[192310, 4145, 369, 8, 133, "Input"],
Cell[192682, 4155, 123, 1, 45, "Text"],
Cell[CellGroupData[{
Cell[192830, 4160, 133, 2, 45, "Input"],
Cell[192966, 4164, 73, 1, 45, "Output"]
}, Open  ]],
Cell[193054, 4168, 219, 4, 74, "Text"],
Cell[CellGroupData[{
Cell[193298, 4176, 455, 11, 45, "Input"],
Cell[193756, 4189, 1643, 31, 317, "Output"]
}, Open  ]],
Cell[195414, 4223, 161, 3, 45, "Text"],
Cell[195578, 4228, 682, 14, 104, "Input"],
Cell[196263, 4244, 350, 6, 131, "Text"],
Cell[CellGroupData[{
Cell[196638, 4254, 194, 4, 45, "Input"],
Cell[196835, 4260, 1285, 32, 151, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198157, 4297, 938, 19, 220, "Input"],
Cell[199098, 4318, 95527, 1918, 839, "Output"]
}, Open  ]],
Cell[294640, 6239, 253, 5, 45, "Text"],
Cell[CellGroupData[{
Cell[294918, 6248, 4460, 100, 713, "Input"],
Cell[299381, 6350, 45231, 941, 694, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344649, 7296, 243, 5, 45, "Input"],
Cell[344895, 7303, 45110, 938, 694, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390042, 8246, 165, 3, 45, "Input"],
Cell[390210, 8251, 23207, 451, 123, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413454, 8707, 815, 16, 249, "Input"],
Cell[414272, 8725, 238, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414547, 8733, 257, 6, 45, "Input"],
Cell[414807, 8741, 112, 1, 45, "Output"]
}, Open  ]],
Cell[414934, 8745, 131, 2, 45, "Input"],
Cell[415068, 8749, 1718, 38, 249, "Input"],
Cell[CellGroupData[{
Cell[416811, 8791, 100, 1, 45, "Input"],
Cell[416914, 8794, 606, 11, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417557, 8810, 610, 14, 133, "Input"],
Cell[418170, 8826, 94801, 1904, 839, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

