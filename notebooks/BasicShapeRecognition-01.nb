(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1109042,      21120]
NotebookOptionsPosition[   1105597,      21003]
NotebookOutlinePosition[   1105973,      21019]
CellTagsIndexPosition[   1105930,      21016]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Recognizing shapes by training neural networks", "Title",
 CellChangeTimes->{{3.681060773424805*^9, 3.6810607945450077`*^9}}],

Cell[CellGroupData[{

Cell["Part 1", "Subsubsection",
 CellChangeTimes->{{3.6810629108226185`*^9, 3.6810629178383904`*^9}}],

Cell[BoxData[
 RowBox[{"randomRectangle", ":=", 
  RowBox[{"Translate", "[", 
   RowBox[{
    RowBox[{"Rectangle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", ".5"}], ",", 
        RowBox[{"-", ".5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{".5", ",", ".5"}], "}"}]}], "]"}], ",", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "2"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6810614329920073`*^9, 3.681061474359852*^9}, 
   3.6810616755762086`*^9}],

Cell[BoxData[
 RowBox[{"randomDisk", ":=", 
  RowBox[{"Translate", "[", 
   RowBox[{
    RowBox[{"Disk", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", ".5"}], "]"}], ",", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "2"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.681061329760766*^9, 3.681061417855857*^9}, {
   3.6810614770001183`*^9, 3.681061481120109*^9}, 3.6810616801201105`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomExample", "[", "n_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", ",", "p"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"r", "=", 
        RowBox[{"RandomInteger", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"r", "==", "0"}], ",", "randomDisk", ",", 
          "randomRectangle"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"g", "=", 
        RowBox[{"Graphics", "[", 
         RowBox[{"p", ",", 
          RowBox[{"PlotRange", "\[Rule]", "1"}], ",", 
          RowBox[{"Background", "\[Rule]", "Orange"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"i", "=", 
        RowBox[{"Image", "[", 
         RowBox[{"g", ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"100", ",", "100"}], "}"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"i", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"r", "\[Equal]", "0"}], ",", "\"\<Disk\>\"", ",", 
          "\"\<Rectangle\>\""}], "]"}]}]}], ",", "\[IndentingNewLine]", "n"}],
      "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6810614854331007`*^9, 3.681061610624069*^9}, {
  3.6810616891758947`*^9, 3.6810617889445314`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"training", "=", 
   RowBox[{"randomExample", "[", "2000", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.681061821472228*^9, 3.681061829439577*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"8", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "3"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "3"}], "}"}], ",", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FlattenLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"DotPlusLayer", "[", "80", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"DotPlusLayer", "[", "2", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"1", "\[Rule]", 
      RowBox[{"2", "\[Rule]", 
       RowBox[{"3", "\[Rule]", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"5", "\[Rule]", 
          RowBox[{"6", "\[Rule]", 
           RowBox[{"7", "\[Rule]", "8"}]}]}]}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Image\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"100", ",", "100"}], "}"}]}], "}"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Disk\>\"", ",", "\"\<Rectangle\>\""}], "}"}]}], "}"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6810618559827056`*^9, 3.681062211207279*^9}, {
  3.6810646566638994`*^9, 3.6810646591594515`*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetGraph", 
     RowBox[{"[", 
      PanelBox[
       TagBox[
        DynamicModuleBox[{NeuralNetworks`NetGraph`PackagePrivate`selection$$ =
          None, NeuralNetworks`NetGraph`PackagePrivate`outIndex$$ = 9, 
         NeuralNetworks`NetGraph`PackagePrivate`inputs$$ = Association[
         "Input" -> NeuralNetworks`EncodedType[
            NetEncoder["Image", 
             Association[
             "Parameters" -> 
              Association[
               "ImageSize" -> {100, 100}, "ColorSpace" -> "RGB", 
                "ColorChannels" -> 3, "$AugmentationFunction" -> None, 
                "Parallelize" -> False, "MeanImage" -> None], "Output" -> 
              NeuralNetworks`ChannelT[3, 
                NeuralNetworks`TensorT[2, {100, 100}]]]], 
            NeuralNetworks`ChannelT[3, 
             NeuralNetworks`TensorT[2, {100, 100}]]]], 
         NeuralNetworks`NetGraph`PackagePrivate`outputs$$ = Association[
         "Output" -> NeuralNetworks`DecodedType[
            NetDecoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {"Disk", "Rectangle"}, "Dimensions" -> 2], "Input" -> 
              NeuralNetworks`TensorT[1, {2}]]], 
            NeuralNetworks`TensorT[1, {2}]]], 
         NeuralNetworks`NetGraph`PackagePrivate`labels$$ = {
         "1", "2", "3", "4", "5", "6", "7", "8", "Input", "Output"}, 
         NeuralNetworks`NetGraph`PackagePrivate`vertices$$ = Association[
         "1" -> Association[
           "Type" -> "Convolution", "Arrays" -> 
            Association["Weights" -> NeuralNetworks`ChannelT[8, 
                NeuralNetworks`ChannelT[3, 
                 NeuralNetworks`TensorT[2, {3, 3}]]], "Biases" -> 
              NeuralNetworks`Nullable[
                NeuralNetworks`TensorT[1, {8}]]], "Parameters" -> 
            Association[
             "OutputChannels" -> 8, "KernelSize" -> {3, 3}, 
              "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
              "Dilation" -> {1, 1}, "InputChannels" -> 3, "$GroupNumber" -> 1,
               "$InputSize" -> {100, 100}, "$OutputSize" -> {98, 98}], 
            "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[3, 
                NeuralNetworks`TensorT[2, {100, 100}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`ChannelT[8, 
                NeuralNetworks`TensorT[2, {98, 98}]]]], "2" -> 
          Association[
           "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Function" -> Ramp, "$Dimensions" -> {8, 98, 98}, "$Rank" -> 3], 
            "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[8, 
                NeuralNetworks`TensorT[2, {98, 98}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[3, {8, 98, 98}]]], 
          "3" -> Association[
           "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
              "PaddingSize" -> {0, 0}, "Function" -> Max, "Channels" -> 8, 
              "$InputSize" -> {98, 98}, "$OutputSize" -> {49, 49}], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[3, {8, 98, 98}]], 
            "Outputs" -> Association["Output" -> NeuralNetworks`ChannelT[8, 
                NeuralNetworks`TensorT[2, {49, 49}]]]], "4" -> 
          Association[
           "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Dimensions" -> {8, 49, 49}, "$Rank" -> 3, "$OutputSize" -> 
              19208], "Inputs" -> 
            Association["Input" -> NeuralNetworks`ChannelT[8, 
                NeuralNetworks`TensorT[2, {49, 49}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {19208}]]], "5" -> 
          Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {80, 19208}], "Biases" -> 
              NeuralNetworks`Nullable[
                NeuralNetworks`TensorT[1, {80}]]], "Parameters" -> 
            Association["Size" -> 80, "$InputSize" -> 19208], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {19208}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {80}]]], "6" -> 
          Association[
           "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Function" -> Ramp, "$Dimensions" -> {80}, "$Rank" -> 1], 
            "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {80}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {80}]]], "7" -> 
          Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {2, 80}], "Biases" -> 
              NeuralNetworks`Nullable[
                NeuralNetworks`TensorT[1, {2}]]], "Parameters" -> 
            Association["Size" -> 2, "$InputSize" -> 80], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {80}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {2}]]], "8" -> 
          Association[
           "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
            Association["Size" -> 2], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {2}]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {2}]]]], 
         NeuralNetworks`NetGraph`PackagePrivate`vports$$ = {
          NetPort["Vertices", "1"], 
          NetPort["Vertices", "2"], 
          NetPort["Vertices", "3"], 
          NetPort["Vertices", "4"], 
          NetPort["Vertices", "5"], 
          NetPort["Vertices", "6"], 
          NetPort["Vertices", "7"], 
          NetPort["Vertices", "8"], 
          NetPort["Inputs", "Input"], 
          NetPort["Outputs", "Output"]}}, 
         TagBox[GridBox[{
            {
             TemplateBox[{PaneBox[
                TagBox[
                 GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}}], 
                    
                    LineBox[{{-7., 4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}}], 
                    
                    LineBox[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}}], 
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    
                    LineBox[{{-9., 5.51091059616309*^-16}, {-8., 
                    4.898587196589413*^-16}}], 
                    LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-7.4, 
                    4.531193156845207*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-6.4, 
                    3.9188697572715305`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    3.3065463576978537`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736762*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    2.0818995585505003`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-8.4, 
                    5.143516556418883*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-0.4, 
                    2.4492935982947065`*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}]}, {
                    GrayLevel[0], {
                    AbsolutePointSize[5], {{
                    Hue[0.61, 0.75, 1], 
                    TagBox[
                    PointBox[{-8., 4.898587196589413*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    TagBox[
                    PointBox[{-7., 4.286263797015736*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.38759999999999994`, 0.57, 0.], 
                    TagBox[
                    PointBox[{-6., 3.6739403974420594`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[1., 0.4, 0.], 
                    TagBox[
                    PointBox[{-5., 3.061616997868383*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-4., 2.4492935982947064`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    TagBox[
                    PointBox[{-3., 1.8369701987210297`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-2., 1.2246467991473532`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    TagBox[
                    PointBox[{-1., 6.123233995736766*^-17}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-9., 5.51091059616309*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{0., 0.}], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}}}, {{
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-8., 4.898587196589413*^-16}], 
                    Offset[{0, -5.5}, {-8., 4.898587196589413*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-7., 4.286263797015736*^-16}], 
                    Offset[{0, -5.5}, {-7., 4.286263797015736*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 3.6739403974420594`*^-16}], 
                    Offset[{0, -5.5}, {-6., 3.6739403974420594`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-5., 3.061616997868383*^-16}], 
                    Offset[{0, -5.5}, {-5., 3.061616997868383*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{0, -5.5}, {-4., 2.4492935982947064`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"6\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{0, -5.5}, {-3., 1.8369701987210297`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"7\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{0, -5.5}, {-2., 1.2246467991473532`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"8\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-1., 6.123233995736766*^-17}], 
                    Offset[{0, -5.5}, {-1., 6.123233995736766*^-17}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-9., 5.51091059616309*^-16}], 
                    Offset[{0, -5.5}, {-9., 5.51091059616309*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {0., 0.}], 
                    Offset[{0, -5.5}, {0., 0.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"8\[Cross]98\[Cross]98\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-7.4, 
                    4.531193156845207*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"8\[Cross]98\[Cross]98\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-6.4, 
                    3.9188697572715305`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"8\[Cross]49\[Cross]49\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552195`*^-16, 5.5}, {-5.4, 
                    3.3065463576978537`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736762*^-17}], 
                    InsetBox[
                    FormBox["\"19208\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"80\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-3.4, 
                    2.0818995585505003`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"80\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox["\"3\[Cross]100\[Cross]100\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-8.4, 
                    5.143516556418883*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-0.4, 
                    2.4492935982947065`*^-17}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736766*^-17}]}, FontColor -> 
                    GrayLevel[0.5], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, 
                   
                   DynamicModuleBox[{
                    GeneralUtilities`Graphics`PackagePrivate`vpos$95038 = \
{{-8., 4.898587196589413*^-16}, {-7., 4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}, {-9., 5.51091059616309*^-16}, {
                    0., 0.}}}, 
                    DynamicBox[
                    Typeset`ToBoxes[
                    If[
                    Not[
                    IntegerQ[
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]], {}, {
                    AbsolutePointSize[10], 
                    Opacity[0.2, Black], 
                    Point[
                    Part[
                    GeneralUtilities`Graphics`PackagePrivate`vpos$95038, 
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]]}], 
                    StandardForm, Graphics], 
                    TrackedSymbols :> {
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$}], 
                    DynamicModuleValues :> {}]}, 
                  ImageSize -> {618., 25.68000000000003}, AspectRatio -> Full,
                   PlotRangePadding -> 0, 
                  ImagePadding -> {{19.5, 22.5}, {15.5, 10.179999999999996`}},
                   ImageMargins -> {{0, 0}, {15, 15}}, 
                  BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 
                    None), Method -> "Preemptive", PassEventsDown -> 
                   Automatic, PassEventsUp -> True}]], 
                Scrollbars -> {True, False}, ImageSizeAction -> "Scrollable", 
                ImageSize -> {600, Automatic}],FormBox[
                TemplateBox[{
                  StyleBox["ConvolutionLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["ElementwiseLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["PoolingLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["FlattenLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["DotPlusLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["SoftmaxLayer", 
                   GrayLevel[0.35], StripOnInput -> False]}, "PointLegend", 
                 DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.61, 0.75, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.61, 0.75, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0.4, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0.4, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #4}, "RowDefault"]}, {
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #2}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #5}, "RowDefault"]}, {
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.38759999999999994`, 0.57, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.38759999999999994`, 0.57, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #3}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #6}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{2, 2}, {2, 2}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.61, 0.75, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.61, 0.7499999999999999, 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "Hue[0.61, 0.75, 1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.61, 0.75, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.61, 0.75, 1], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.19333333333333333`, 0.19333333333333333`, 
                    0.5533333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.29, 0.29, 0.83]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.29, 0.29, 0.83]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.29, 0.29, 0.83], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.38759999999999994`, 0.57, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.25839999999999996`, 0.38, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.38759999999999994, 0.57, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.38759999999999994`, 0.57, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.38759999999999994`, 0.57, 0.], Editable -> 
                    False, Selectable -> False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.4, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666667, 0.2666666666666667, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1., 0.4, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.4, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.4, 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.35], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.23333333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "GrayLevel[0.35]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.35]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.35], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.52, 0.4266666666666667, 0.6533333333333333], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.78, 0.64, 0.98]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.78, 0.64, 0.98]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.78, 0.64, 0.98], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                    "}"}], ",", 
                    RowBox[{"LegendMarkerSize", "\[Rule]", "12"}], ",", 
                    RowBox[{"LegendMargins", "\[Rule]", "2"}], ",", 
                    
                    RowBox[{
                    "LegendLayout", "\[Rule]", 
                    "GeneralUtilities`Graphics`PackagePrivate`legendTable"}]}]\
, "]"}]& ), Editable -> True], TraditionalForm]},
              "Legended",
              DisplayFunction->(GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> Automatic, 
                BaselinePosition -> {1, 1}]& ),
              Editable->True,
              InterpretationFunction->(RowBox[{"Legended", "[", 
                 RowBox[{#, ",", 
                   RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
            {
             DynamicBox[ToBoxes[
               If[
                IntegerQ[NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                Item[
                 NeuralNetworks`NetGraph`PackagePrivate`vportInfo[
                  Part[
                  NeuralNetworks`NetGraph`PackagePrivate`vports$$, 
                   NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                  NeuralNetworks`NetGraph`PackagePrivate`inputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`outputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`vertices$$], 
                 Alignment -> Center], 
                Item["", ItemSize -> {0, 0}]], StandardForm],
              ImageSizeCache->{0., {0., 9.}},
              
              TrackedSymbols:>{
               NeuralNetworks`NetGraph`PackagePrivate`selection$$}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         DynamicModuleValues:>{},
         Initialization:>{NetGraph}],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       BaselinePosition->(Top -> Scaled[3])], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.6810622120511208`*^9, 3.68106430306107*^9, 
  3.6810646287562165`*^9, 3.681064659661578*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"NetInitialize", "[", "net", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6810624879836497`*^9, 3.681062494895695*^9}, 
   3.681064573086684*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Last", "[", "#", "]"}], ",", 
     RowBox[{"net", "[", 
      RowBox[{"First", "[", "#", "]"}], "]"}]}], "}"}], "&"}], "/@", 
  RowBox[{"randomExample", "[", "8", "]"}]}]], "Input",
 CellChangeTimes->{{3.6810624973302126`*^9, 3.681062569583613*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Rectangle\"\>", ",", "\<\"Rectangle\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Rectangle\"\>", ",", "\<\"Rectangle\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Disk\"\>", ",", "\<\"Rectangle\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Rectangle\"\>", ",", "\<\"Rectangle\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Rectangle\"\>", ",", "\<\"Rectangle\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Disk\"\>", ",", "\<\"Rectangle\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Disk\"\>", ",", "\<\"Rectangle\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Rectangle\"\>", ",", "\<\"Rectangle\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.681062507840329*^9, 3.68106257094343*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"net", ",", "training", ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.68106258998915*^9, 3.681062601927496*^9}, {
  3.6810626354801173`*^9, 3.681062641319064*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetGraph", 
     RowBox[{"[", 
      PanelBox[
       TagBox[
        DynamicModuleBox[{NeuralNetworks`NetGraph`PackagePrivate`selection$$ =
          None, NeuralNetworks`NetGraph`PackagePrivate`outIndex$$ = 9, 
         NeuralNetworks`NetGraph`PackagePrivate`inputs$$ = Association[
         "Input" -> NeuralNetworks`EncodedType[
            NetEncoder["Image", 
             Association[
             "Parameters" -> 
              Association[
               "ImageSize" -> {100, 100}, "ColorSpace" -> "RGB", 
                "ColorChannels" -> 3, "$AugmentationFunction" -> None, 
                "Parallelize" -> False, "MeanImage" -> None], "Output" -> 
              NeuralNetworks`ChannelT[3, 
                NeuralNetworks`TensorT[2, {100, 100}]]]], 
            NeuralNetworks`ChannelT[3, 
             NeuralNetworks`TensorT[2, {100, 100}]]]], 
         NeuralNetworks`NetGraph`PackagePrivate`outputs$$ = Association[
         "Output" -> NeuralNetworks`DecodedType[
            NetDecoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {"Disk", "Rectangle"}, "Dimensions" -> 2], "Input" -> 
              NeuralNetworks`TensorT[1, {2}]]], 
            NeuralNetworks`TensorT[1, {2}]]], 
         NeuralNetworks`NetGraph`PackagePrivate`labels$$ = {
         "1", "2", "3", "4", "5", "6", "7", "8", "Input", "Output"}, 
         NeuralNetworks`NetGraph`PackagePrivate`vertices$$ = Association[
         "1" -> Association[
           "Type" -> "Convolution", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[4, {8, 3, 3, 3}], "Biases" -> 
              NeuralNetworks`TensorT[1, {8}]], "Parameters" -> 
            Association[
             "OutputChannels" -> 8, "KernelSize" -> {3, 3}, 
              "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
              "Dilation" -> {1, 1}, "InputChannels" -> 3, "$GroupNumber" -> 1,
               "$InputSize" -> {100, 100}, "$OutputSize" -> {98, 98}], 
            "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[3, 
                NeuralNetworks`TensorT[2, {100, 100}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`ChannelT[8, 
                NeuralNetworks`TensorT[2, {98, 98}]]]], "2" -> 
          Association[
           "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Function" -> Ramp, "$Dimensions" -> {8, 98, 98}, "$Rank" -> 3], 
            "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[8, 
                NeuralNetworks`TensorT[2, {98, 98}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[3, {8, 98, 98}]]], 
          "3" -> Association[
           "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
              "PaddingSize" -> {0, 0}, "Function" -> Max, "Channels" -> 8, 
              "$InputSize" -> {98, 98}, "$OutputSize" -> {49, 49}], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[3, {8, 98, 98}]], 
            "Outputs" -> Association["Output" -> NeuralNetworks`ChannelT[8, 
                NeuralNetworks`TensorT[2, {49, 49}]]]], "4" -> 
          Association[
           "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Dimensions" -> {8, 49, 49}, "$Rank" -> 3, "$OutputSize" -> 
              19208], "Inputs" -> 
            Association["Input" -> NeuralNetworks`ChannelT[8, 
                NeuralNetworks`TensorT[2, {49, 49}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {19208}]]], "5" -> 
          Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {80, 19208}], "Biases" -> 
              NeuralNetworks`TensorT[1, {80}]], "Parameters" -> 
            Association["Size" -> 80, "$InputSize" -> 19208], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {19208}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {80}]]], "6" -> 
          Association[
           "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Function" -> Ramp, "$Dimensions" -> {80}, "$Rank" -> 1], 
            "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {80}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {80}]]], "7" -> 
          Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {2, 80}], "Biases" -> 
              NeuralNetworks`TensorT[1, {2}]], "Parameters" -> 
            Association["Size" -> 2, "$InputSize" -> 80], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {80}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {2}]]], "8" -> 
          Association[
           "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
            Association["Size" -> 2], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {2}]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {2}]]]], 
         NeuralNetworks`NetGraph`PackagePrivate`vports$$ = {
          NetPort["Vertices", "1"], 
          NetPort["Vertices", "2"], 
          NetPort["Vertices", "3"], 
          NetPort["Vertices", "4"], 
          NetPort["Vertices", "5"], 
          NetPort["Vertices", "6"], 
          NetPort["Vertices", "7"], 
          NetPort["Vertices", "8"], 
          NetPort["Inputs", "Input"], 
          NetPort["Outputs", "Output"]}}, 
         TagBox[GridBox[{
            {
             TemplateBox[{PaneBox[
                TagBox[
                 GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}}], 
                    
                    LineBox[{{-7., 4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}}], 
                    
                    LineBox[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}}], 
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    
                    LineBox[{{-9., 5.51091059616309*^-16}, {-8., 
                    4.898587196589413*^-16}}], 
                    LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-7.4, 
                    4.531193156845207*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-6.4, 
                    3.9188697572715305`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    3.3065463576978537`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736762*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    2.0818995585505003`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-8.4, 
                    5.143516556418883*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-0.4, 
                    2.4492935982947065`*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}]}, {
                    GrayLevel[0], {
                    AbsolutePointSize[5], {{
                    Hue[0.61, 0.75, 1], 
                    TagBox[
                    PointBox[{-8., 4.898587196589413*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    TagBox[
                    PointBox[{-7., 4.286263797015736*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.38759999999999994`, 0.57, 0.], 
                    TagBox[
                    PointBox[{-6., 3.6739403974420594`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[1., 0.4, 0.], 
                    TagBox[
                    PointBox[{-5., 3.061616997868383*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-4., 2.4492935982947064`*^-16}], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    TagBox[
                    PointBox[{-3., 1.8369701987210297`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-2., 1.2246467991473532`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    TagBox[
                    PointBox[{-1., 6.123233995736766*^-17}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-9., 5.51091059616309*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{0., 0.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}}}, {{
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-8., 4.898587196589413*^-16}], 
                    Offset[{0, -5.5}, {-8., 4.898587196589413*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-7., 4.286263797015736*^-16}], 
                    Offset[{0, -5.5}, {-7., 4.286263797015736*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 3.6739403974420594`*^-16}], 
                    Offset[{0, -5.5}, {-6., 3.6739403974420594`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-5., 3.061616997868383*^-16}], 
                    Offset[{0, -5.5}, {-5., 3.061616997868383*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{0, -5.5}, {-4., 2.4492935982947064`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"6\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{0, -5.5}, {-3., 1.8369701987210297`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"7\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{0, -5.5}, {-2., 1.2246467991473532`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"8\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-1., 6.123233995736766*^-17}], 
                    Offset[{0, -5.5}, {-1., 6.123233995736766*^-17}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-9., 5.51091059616309*^-16}], 
                    Offset[{0, -5.5}, {-9., 5.51091059616309*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {0., 0.}], 
                    Offset[{0, -5.5}, {0., 0.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"8\[Cross]98\[Cross]98\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-7.4, 
                    4.531193156845207*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"8\[Cross]98\[Cross]98\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-6.4, 
                    3.9188697572715305`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"8\[Cross]49\[Cross]49\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552195`*^-16, 5.5}, {-5.4, 
                    3.3065463576978537`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736762*^-17}], 
                    InsetBox[
                    FormBox["\"19208\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"80\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-3.4, 
                    2.0818995585505003`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"80\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox["\"3\[Cross]100\[Cross]100\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-8.4, 
                    5.143516556418883*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-0.4, 
                    2.4492935982947065`*^-17}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736766*^-17}]}, FontColor -> 
                    GrayLevel[0.5], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, 
                   
                   DynamicModuleBox[{
                    GeneralUtilities`Graphics`PackagePrivate`vpos$116514 = \
{{-8., 4.898587196589413*^-16}, {-7., 4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}, {-9., 5.51091059616309*^-16}, {
                    0., 0.}}}, 
                    DynamicBox[
                    Typeset`ToBoxes[
                    If[
                    Not[
                    IntegerQ[
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]], {}, {
                    AbsolutePointSize[10], 
                    Opacity[0.2, Black], 
                    Point[
                    Part[
                    GeneralUtilities`Graphics`PackagePrivate`vpos$116514, 
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]]}], 
                    StandardForm, Graphics], 
                    TrackedSymbols :> {
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$}], 
                    DynamicModuleValues :> {}]}, 
                  ImageSize -> {618., 25.68000000000003}, AspectRatio -> Full,
                   PlotRangePadding -> 0, 
                  ImagePadding -> {{19.5, 22.5}, {15.5, 10.179999999999996`}},
                   ImageMargins -> {{0, 0}, {15, 15}}, 
                  BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 
                    None), Method -> "Preemptive", PassEventsDown -> 
                   Automatic, PassEventsUp -> True}]], 
                Scrollbars -> {True, False}, ImageSizeAction -> "Scrollable", 
                ImageSize -> {600, Automatic}],FormBox[
                TemplateBox[{
                  StyleBox["ConvolutionLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["ElementwiseLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["PoolingLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["FlattenLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["DotPlusLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["SoftmaxLayer", 
                   GrayLevel[0.35], StripOnInput -> False]}, "PointLegend", 
                 DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.61, 0.75, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.61, 0.75, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0.4, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0.4, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #4}, "RowDefault"]}, {
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #2}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #5}, "RowDefault"]}, {
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.38759999999999994`, 0.57, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.38759999999999994`, 0.57, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #3}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #6}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{2, 2}, {2, 2}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.61, 0.75, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.61, 0.7499999999999999, 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "Hue[0.61, 0.75, 1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.61, 0.75, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.61, 0.75, 1], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.19333333333333333`, 0.19333333333333333`, 
                    0.5533333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.29, 0.29, 0.83]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.29, 0.29, 0.83]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.29, 0.29, 0.83], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.38759999999999994`, 0.57, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.25839999999999996`, 0.38, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.38759999999999994, 0.57, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.38759999999999994`, 0.57, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.38759999999999994`, 0.57, 0.], Editable -> 
                    False, Selectable -> False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.4, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666667, 0.2666666666666667, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1., 0.4, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.4, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.4, 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.35], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.23333333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "GrayLevel[0.35]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.35]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.35], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.52, 0.4266666666666667, 0.6533333333333333], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.78, 0.64, 0.98]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.78, 0.64, 0.98]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.78, 0.64, 0.98], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                    "}"}], ",", 
                    RowBox[{"LegendMarkerSize", "\[Rule]", "12"}], ",", 
                    RowBox[{"LegendMargins", "\[Rule]", "2"}], ",", 
                    
                    RowBox[{
                    "LegendLayout", "\[Rule]", 
                    "GeneralUtilities`Graphics`PackagePrivate`legendTable"}]}]\
, "]"}]& ), Editable -> True], TraditionalForm]},
              "Legended",
              DisplayFunction->(GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> Automatic, 
                BaselinePosition -> {1, 1}]& ),
              Editable->True,
              InterpretationFunction->(RowBox[{"Legended", "[", 
                 RowBox[{#, ",", 
                   RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
            {
             DynamicBox[ToBoxes[
               If[
                IntegerQ[NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                Item[
                 NeuralNetworks`NetGraph`PackagePrivate`vportInfo[
                  Part[
                  NeuralNetworks`NetGraph`PackagePrivate`vports$$, 
                   NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                  NeuralNetworks`NetGraph`PackagePrivate`inputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`outputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`vertices$$], 
                 Alignment -> Center], 
                Item["", ItemSize -> {0, 0}]], StandardForm],
              ImageSizeCache->{0., {0., 9.}},
              
              TrackedSymbols:>{
               NeuralNetworks`NetGraph`PackagePrivate`selection$$}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         DynamicModuleValues:>{},
         Initialization:>{NetGraph}],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       BaselinePosition->(Top -> Scaled[3])], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{{3.681062633585378*^9, 3.6810626762533455`*^9}, 
   3.6810627239062405`*^9, {3.6810644962787223`*^9, 3.681064513910631*^9}, 
   3.6810646504062123`*^9, 3.681064681675002*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "[", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt0DEKwkAURdGgjaVbcBe2lraKC0gwBpsIURA7d64R3MPjw3mcDDMp76a7
HS6Lpmnuq/k4tM/dNLWv43p+nMb7dRj783589EM/bbvl/PP8/373zxsAAAAA
AAAAAAAAAAAAAAAAAAAAAKgqvngBrbTSqor44gW00kqrKuKLF9BKK62qiC9e
QCuttKoivngBrbTSqor44gW00kqrKuKLF9BKK62q+AJoDHfI
     "], {{0, 100}, {100, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{100, 100},
   ImageSizeRaw->{100, 100},
   PlotRange->{{0, 100}, {0, 100}}], "]"}]], "Input",
 CellChangeTimes->{{3.6810627256988096`*^9, 3.6810627415943546`*^9}}],

Cell[BoxData["\<\"Rectangle\"\>"], "Output",
 CellChangeTimes->{{3.6810627369312725`*^9, 3.6810627428493705`*^9}, 
   3.6810646835386353`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"validation", "=", 
   RowBox[{"randomExample", "[", "100", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6810627471955357`*^9, 3.681062764567012*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"validation", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.681062782209035*^9, 3.6810627858466797`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt261LQ1EYBvCDGm4w3GBYnGAwGAyGBcMEg4JB/IAFw5RNJ8iUOXCCoM1o
NBqNRuP+BKPRaDQa53NRRBHl3K/zeO6el5+iS/d97u6559ydTe4cru2OGGOO
A/xa2z5Z6HS2T9dD/LPZPt7fazcby+1uc6/ZqeyM4sXGx0/09+BCRERERCSh
fv2b1zP+If0fDy1zVDHlaFb+a5XGTWvO3G/xj5YVEdpHCLEqDEx9Nnq/0Y/f
jedu1G/KqpajtOm95OelZ3rzJhhLG9Rn1WbM0xG/r8zhbfD3oJSscFXe1fjd
ZQjthEH2QX3W1RK/x0ygEQeFMdD3Ccblooug3gvDF73fxHDpOS56y8lgMM/w
llfgrDCJyuOuV8issGyhFL3xuDA/dH/1eZrV6jQnKO+ywpBOLHr7saRfFw9P
VrmuZYqUVb/ODMqvrFpzyspW3OecQ5sVlvn0oodgCVNQetFDsEQf2I0/Wd1u
sJPyJ6vrFXZS/mR1s8pOyp+sNF7ZezxgJ+VPVi89dlL+ZAWsR3w+ZlWbUVa2
6LdCegL2MGRxL0N6ArEsTSkrW9yVDr39uGZLysqW+20M/mY14I1a9MYToGz8
8DSrAekRDb3rxNzvAKG3nIbLgasc8vtNAzP5atlRUAXYv/16lvtnrDgdOCn0
TrOS325knAjfdyD/1K+b6YksUyqNR0826H3lB3OJ9B/lh4E5rxbw7fQTekSn
yTbfIiVMRZ67/C4cw/QeodmstREsIhqeb8P9Abf79y+iIrqv7reiFx8P+Eco
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiJ5eANl8vqj
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmyFsE1EYx18AcWLiBKICUZKJiYmJigpESRAlQSwDkoqJbmlZSZbSdE0o
CclwSCQSiUROViInJ5GTk0j4XwpLu7ve7q539/8O/v/81mxV7/vfve9933tv
Dw/f7L2645w78fCxd/D28Xh88O65jz9eDk9eHw37vafDSf+oP24e3sWXvT8/
we+/PgghhBBCCCH+a2bdJX6+5w/JDucDN2q6etBdrVRtww0a7myfP1qWRQgf
JqSS77nuTvC+0cdfDpeTIN411aoHbtNjKY6rqZs+ct69dY26Vmfb/Rjx48od
vAbxSSmbMCu/dfjR5QjC8b38jbrWpzY/xlxAICUIObDqBcbHJ2UYNRfSFz3e
zGDqlSw8GnrUGUAyz3HJS67KpXoUUUWsekmEB3RxzHcgOWhbiEKlSncgIagP
KbNvUVWZibtbZKOgnRrfh1tBSjeiz8/4bsSzfl+cl5oP+G7EU2gvk1aWO+tZ
l+3OsixPw0GD7c6y2pt8T1aRdp+zaKF0sdlQY1QGZTNlYVQGZXNz3lpin+vr
C74zYTAqg7K5ZYoF2qBOW3xnwnzZZfsSJZte2cxXeIJ0Z8JcHLN9iZLNk/2r
KduXKJk9nqZv8YV1OeHbEklnm23Nsizv+FlbCm0ugnOQskxNw+89vicxtDfZ
Bv1V3ee7EY+dTmfU5LtxK8iodPme3RVwkfKvMYRls2WOhJu1ahtGt0MjYV38
mMtmDxgDa4tm0ODHnoHyb4C06lWafTcoM3GhoEIxTA85Mxg8nnU5Rtk8skkF
JkXRZ6x4HJV+o25Q3G1kPIjq5qhVzLpu636eLqGOqlx5kArUEusf5aOFOW39
g69TGMSISLNdvoVLKEUq0evlC8p7mJak14axsMjmgXvJYLmf/yMqrFvkbD/4
slp3sIUQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEKUw28ORxr0
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt3C9PQlEYgPEzNRAMRCJuBoOBQCAYdDPgZmCoGxEYCG4OGbCJG8FmNBqN
Rj8CH8FoNBqJRDh3Wgy6A5yX153z3P10arrvs91z/3DnTv2mfLlhjOmn7Ldy
7fao16vdnaXtLxed/lWr02ycdAbNVrNXqG/aPza+v5KfZ/cAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAABIjKs/TEf6u/R/vLVNt2CyyT+0+HXLbOvvp26idj6J
4Lip77CKz4Gp5lwTRdtqMjTDA5PaWjhUbK3sQff3okSrL68Vk04tHyqeVo/F
lSrF0+rh2EOoGFrZQ8/Xpj6LKLuYL3fKi62VvYha5awXVSt72+J3U59IyEfX
59EXdqvSnudQobayS7rEpj6XhCXui6NtteK9TDytxlWRUEG2audp5cr9OWfk
raYjqVDhtbKXoLRyJLewh9fq5ZxWrp5OaeXquUQrV6xX7t6vaeVqMqTVArw/
4gu4VWWfVq7kToXqo3lnlyyhw1B9NAnFXVq5ErrTUZ9LSC5DK1ceX2MIvtVM
YNVSn0iO3xc/wm418/2IRn0caR7fAFGfZQ18LVzqg6yBvZI/zNLK1XTk4TPW
Obt8wdU=
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0DEKwjAUgOGgi6NX8Baujq4VD9DSWlwipIK4eXON4B3qK1/48kiy5d91
t+aySilNmzqa9nEopX2etvVyztN1zEN/zPdhHMq+W9fH/re/5/cLAAAAAFiC
Gdfsf9dKq3+glVZaaRWFVlpppVUUWmmllVZRaKWVVlpFoZVWWmkVhVZaaaVV
FFpppZVWUWillVZaRaGVVlppFYVWWmmlVRRaaaWVVlFopZVWAAAAAAAAAAAA
sGwf0OmFyw==
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Rectangle\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0DEKwkAURdGgjaVbcBe2lraKC4gYxSZCIoidO9cI7uE/5DxOhpmUd3W8
7c6zpmnGxXTs2sdmGNrnfjk9Dv14vfTdadvfu0s3rI/z6efp933v7xcAAAAA
AAAAwH/KXHkWrbTSKlDmyrNopZVWgTJXnkUrrbQKlLnyLFpppVWgzJVn0Uor
rQJlrjyLVlppFShz5Vm00kqrQJkrz6KVVloFylx5Fq200ipQ5sqzaKWVVoEy
V55FK620CpS58ixaaaVVoMyVZ9EKAAAAAACAKB+CyuRg
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Rectangle\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmyFMAlEcxt/UcIFAJBhwMxoIBOK5GXAzONSNQEAGgptDBmzq5obNaDQa
jUai0Ug0Go1Go/4PnNOpOCb3//M9v28/nZLu++3eu/fuuKXKYWFvzjnXCeRX
Yfdotd3ePdlKyj87zc5+vVmrrje7tXqtnavMy4fVt5/o75czQgghhBBCCCGE
EEIIIYQQQgghhBBCCCFT5rb8iedT+0OaHQYN18q5dPQdtx+TSrhG1vVL9kdr
pUjqi4SJkgxcOROdb+bHr4b0/WPCdGTbvIgC00pxxT207OtAuHLDUXlTtG8E
4WqUi7x9KRRXEpkDvVxgxBSZvsyrobiSnK/Zt0NxJfFsqo81wYK7P7DvCOHK
DVeq5h1RXDmPRqJCMin7miiuJJcb9k1RXOUW7ZuiuJJ4sLNWiwfDUC35Zfuy
KK5kXYq+odYM+pSlGfSb85q53rbvi+IK/ZapZnqhfV+68s/V1aZ9XxRX6E/2
NYP+eFozj137vhCuPLjjpxb0i6Cmq7uqfVkIV+mkfVMUV62cfVMIV8kA/gqo
5gp9y6zmKpWAvx2q5gp9D6jmqpG1LwjhKkz7M/pidSULqqdj+3az70pEoT+y
0XElQ8+/MyoOVzKZezZHxeFK1lE+LQ++ZdJXlr5GtjC90OfT6R3pKE3Hvwc3
xpJsiv3Y603EoBFJy6R+VyRiRRH6A/epIJf70Yuoou4j/VL0oU/fwSaEEEII
IYQQQgghhPxPXgE8eI5p
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0DEKwjAUgOGgi6NX8Baujq4VD9DSWFwitIK4eXON4Ogq+uQLXx5Jtvyr
7tQcZimlaVFH014249hed8t62ZfpOJTcb8s5D3lcd/P62L/283y//ZWPrq//
Tiutfp9WWmmlVRRaaaWVVlFopZVWWkWhlVZaaRWFVlpppVUUWmmllVZRaKWV
VgAAAAAAAAAAAAAAAAAAAAAAAAAAvPUABLcR1A==
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Rectangle\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2SFLA3EYx/FDDQuGixdP8AUsGBZnm2CQqW3BjTs3Qc5xG6ggzHdgNBp9
CYtG46LRaDQa9TkYYlN0+z8+D9/jo+iSvy/b7s5t9M7axytRFI1q8q3dPd8u
y+7lfiy/HBajk36RZzvFOO/nZaO3Kg9m86/q5zDH7W70fm1emKO1qb/USqva
WvR2pT/WRCs5nof6Y620ejjSH2ul1f2B/lgrrW5a+mOttJo09cfSyl+ruz39
sVZaTTv6Y620mg30x1pp9TLWH2uiVT3RX2qllYOTYLBWj5n+UhOt0lh/ppVW
w4b+TBOt4pqHM2CYVg5umcO0StY9/Ds0TCsH94BhWg229NeZaNVMXb36ltdK
LqheL/Sn/f9WEsrBRzYBWslLz+UzauGt5M3c33vUwlvJdZSzy4NltJJbmEnT
+dPpkyxN419WkptiN/d6PzcbVNHqyfeJJKwkcvCB+9/J6V46CEn31bRTPfh0
qv8XAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQwAcPlJfn
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmyFsE1EYx18AcWKiYqICUZKJiYmJigpESRAlQSwDkoqJbmlZSZbSdE0o
CclwSCQSiUROViKRk8jJSST7Xw6Wdne93V3v7v8d+f/zW7NVve9/9773fe+9
PTp6u//6nnPu1MPH/uG7J5PJ4fsXNfzxanT65ng06D8bTQfHg0nr6D6+7P/9
8X//81EIIYQQQgghhBBCCCGEEEIIIYQQQgiRgnlvid8f+EOyw8+hG7dcw7+7
tFL1DTdsuvMD/mhZFiF8mJBKNc/1dv33jT7+cric+vGuqXbDd5seS3Fczdzs
sfMerGvUjbo77teYH1fu4DWIT0rZhFn5vcuPLkcQTs3L36gbfe7wY8wFBFKC
kAOrXmB8elqGUYGQvujxZgZTr2Th0dCjzgCSeY5LXnJVLtWjiCpi1UsiPKCL
E74DyUHbQhQqVboDCUF9SJl9i6rKTNzbJhsF7db5PtwJUroRfXnOdyOe9fvi
vNR6yHcjnkJ7mbSy3FnPe2x3lmV5Gg6bbHeW1dnie7KKtPucRQuli82GGqMy
KJspC6MyKJub89YSe6BvL/nOhMGoDMrmlikWaIM6a/OdCfN1j+1LlGx6ZTNf
4QnSnQlzccL2JUo2T/avZmxfomT2eJq+xRfW5ZRvSyTdHbY1y7K842dtKbS5
CAYgZZmahj/6fE9i6GyxDfqnRo3vRjx2Op1xi+/GnSCj0lXz7K6Ai5R/jSEs
my1zJNysVd8wuh0aCeviRyCbPWAMrC2aYZMfewbKvwHSblRp9t2izMSFggrF
MD3kzGDweNblGGXzyCYVmBRFn7HicVT6jbpFcbeR8SCqm6NWMe+57c08XUId
VbnyIBWoJdY/ykcLc9b+D1+nMIgRkWa7fAuXUIpUotfLF5T3MC1Jrw1jYZHN
A/eSwXIf/CMqrFvk/MD/slp3sIUQQgghhBBCCCGEEEKIbFwDj/ka9A==
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0D0KwjAYgOGgi6NX8Baujq4VD9DSWFwitIK4eXON4BX8+fAJTz6SbHlX
3ak5zFJK06KOpr1sxrG97pb1si/TcSi535ZzHvK47ub1sX/t5/l+AwAAAAAA
AAAAAAAAAAAAAAAAAOBffGZ9/ZtaafWztNJKK62i0EorrbSKQiuttNIqCq20
0kqrKLTSSiutotBKK620ikIrrbTSKgqttHqHB6Ge8nY=
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Rectangle\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6810627865066643`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"result", ",", "validation"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6810628006092186`*^9, 3.6810628106627703`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Net\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["100", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Net\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["100", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.97`", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.681062814807774*^9, 3.681064694840197*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6810628168354588`*^9, 3.6810628216789656`*^9}}],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{0.9314849880510291, 0.8595437723226278, 0.6420460452386425}, {
   0.9019015327353961, 0.517448487795332, 0.004884048212672807}}, {{1., 0.42, 
   0.}, {1., 1., 1.}}}, {{0, 0}, {2, 2}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["52", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "52", "\" examples of \"", "\"Disk\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9454545454545454`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.97196261682243`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{52, " examples of ", "Disk", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 0.9454545454545454}], 
         Row[{"FScore = ", 0.97196261682243}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3", "\" examples of \"", "\"Rectangle\"", 
             "\" misclassified as \"", "\"Disk\""}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.0625`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.05454545454545454`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{3, " examples of ", "Rectangle", " misclassified as ", "Disk"}], 
         Row[{"Row fraction = ", 0.0625}], 
         Row[{"Column fraction = ", 0.05454545454545454}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"Disk\"", "\" misclassified as \"", 
             "\"Rectangle\""}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "Disk", " misclassified as ", "Rectangle"}], 
         Row[{"Row fraction = ", 0.}], 
         Row[{"Column fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["45", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "45", "\" examples of \"", "\"Rectangle\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.9375`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.967741935483871`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{45, " examples of ", "Rectangle", " correctly classified"}], 
         Row[{"Precision = ", 0.9375}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 0.967741935483871}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "52", "\" example\"", "\"s\"", "\" of class \"", "\"Disk\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{52, " example", "s", " of class ", "Disk"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "48", "\" example\"", "\"s\"", "\" of class \"", "\"Rectangle\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.9375`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{48, " example", "s", " of class ", "Rectangle"}], 
        Row[{"Precision = ", 0.9375}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "55", "\" example\"", "\"s\"", "\" classified as \"", "\"Disk\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9454545454545454`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{55, " example", "s", " classified as ", "Disk"}], 
        Row[{"Recall = ", 0.9454545454545454}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "45", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"Rectangle\""}, "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{45, " example", "s", " classified as ", "Rectangle"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{1.5, 
       FormBox[
        RotationBox["\"Disk\"", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["\"Rectangle\"", BoxRotation -> 0.], 
        TraditionalForm]}}, {{1.5, 
       FormBox["52", TraditionalForm]}, {0.5, 
       FormBox["48", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["55", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["45", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"Disk\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"Rectangle\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.6810628222961855`*^9, 3.681064695167503*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Part 2", "Subsubsection",
 CellChangeTimes->{{3.6810629108226185`*^9, 3.68106292843843*^9}}],

Cell[BoxData[
 RowBox[{"randomRectangle", ":=", 
  RowBox[{"Translate", "[", 
   RowBox[{
    RowBox[{"Rectangle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", ".5"}], ",", 
        RowBox[{"-", ".5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{".5", ",", ".5"}], "}"}]}], "]"}], ",", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "2"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6810614329920073`*^9, 3.681061474359852*^9}, 
   3.6810616755762086`*^9}],

Cell[BoxData[
 RowBox[{"randomDisk", ":=", 
  RowBox[{"Translate", "[", 
   RowBox[{
    RowBox[{"Disk", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", ".5"}], "]"}], ",", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "2"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.681061329760766*^9, 3.681061417855857*^9}, {
   3.6810614770001183`*^9, 3.681061481120109*^9}, 3.6810616801201105`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomExample", "[", "n_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", ",", "p"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"r", "=", 
        RowBox[{"RandomInteger", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"r", "==", "0"}], ",", "randomDisk", ",", 
          "randomRectangle"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"g", "=", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomColor", "[", "]"}], ",", "p"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "1"}], ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"RandomColor", "[", "]"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"i", "=", 
        RowBox[{"Image", "[", 
         RowBox[{"g", ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"100", ",", "100"}], "}"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"i", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"r", "\[Equal]", "0"}], ",", "\"\<Disk\>\"", ",", 
          "\"\<Rectangle\>\""}], "]"}]}]}], ",", "\[IndentingNewLine]", "n"}],
      "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6810614854331007`*^9, 3.681061610624069*^9}, {
  3.6810616891758947`*^9, 3.6810617889445314`*^9}, {3.681063050911672*^9, 
  3.681063062584445*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomExample", "[", "7", "]"}]], "Input",
 CellChangeTimes->{{3.681061594133053*^9, 3.6810616215520105`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt201LAlEUxnGpTYvUyRk/QN+ibcuWJUkgLZQcicjCgigIQoIIzJdpEUEE
0RftDoiRWd55Yc7A+cMvMVfnPnjPvXec2Wyd7fkrhULhYs287DWvtnu95nXN
Mf/sdy+OO9320U73st1p97Zaq+bDo+lf+L66GwAAAAAAAAAAAAAAEIPrjw3x
MvLJbU6cu1Hp9Wn9czAjXlWuhBH1R8W3HxGR1RzvYOLcjxZGRFbf6oFzOyp+
LP4ukdWMmXRzTYmsFqqcjNffrVJSntXG5ZLuRFbToK4iB6Uzq3DqRQ9KYVam
mdsseWRlNlH2q57yrMyxJXZQqrLyGkHs2actq/LjMElQerIyLT1hUHqyWnou
JquZSGcZzVm5fszNp8KsnH4KE1BJVn9d5ySrOV4thRVQS1aNgKwspdXYNWRV
OSUrWxu9dBZBDVlVzvle2aJf2fMO2TNYq7NniCDhJT5VWZUfkl7l05NVWkuh
+ECyUE9nGsoPJBPlQQrTUHwU2UjlpCM+isyUnpNOQ/EhZCb2bQwKs6om7lri
9WcpyY0f2rKqJrtEI1589mLfASJeuYh4jUu8bBn1oDSMHJd82UK82iTqb6zi
NcuKdDeyeLXiXH9cfLHaSIiXmhNmL7H0p3zxIvMj7GA388/BkdX/wifjTGi/
ztriheWZ15g+kWqiM8TrAQAAAAAAAAAAAJCZL5gY3p4=
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0DFqAlEUhtHBNJZuIbtIa2ljYQiplRkHmxFmAuJmrbIAl+AI7uH+woFz
H/e+8vs8nHfHRdM003J+dvvLehz31+/VfPwM06kfunYz/HV9N34dPubP9jXP
fXvrAQAAgED/v/dA5Vm00kqrQOVZtNJKq0DlWbTSSqtA5Vm00kqrQOVZtNJK
q0DlWbTSSqtA5Vm00kqrQOVZtNJKq0DlWbTSSqtA5Vm00kqrQOVZtNJKq0Dl
WbTSSqtA5Vm00kqrQOVZtNJKq0DlWQAAAAAAAAAAAADgLTwAgelbpA==
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Rectangle\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt291P01AYBvBFb7z0RgMGTYZRo0QyiQTRAME7Ewdl6zZrFNjchmM6dUVk
+s/7mJql4bDSdW3f95An+UHGrs77tOezpdj6VuleKxQK/g38qjR/bQ+HzVH1
Jv6oDfze0aDTfjM46Rx1hi9a1/Fl+//Pv8+33v4hIiIiIiIiIiIiIiIiIiIi
IiIiIiIioqut6Phht8u/xZukx93dn8vu8YZ3+Pr9h0k2vYOS21t0huKtlYoI
5SOEiIhMW97+s9pn3G/i7c/HfPkM9U4VkWmt0Uba4rVkZ648eur2t72PMwY1
tlLr3imfideVOtwG0YNSMuiV950f4tWlCOWgqNSDGntc+SpeYypQSHYpjWEM
tH2B8aTyJYegxsOXeL2JoevlFlQAl0a86gQwmKc45cVn3VCPRVQWs14cuEAL
O6fiCcSHbYtIUAGsVMUTiAnrQ5HeZ2NPfF7vygYFLxst8RwuhSFdPKjAo8pA
PI1os++L07Le+CSeRrRM9zLT0ryzLjq+eD5hmrthye2J5xO2Wu+IZzLJtOec
WcPSReeGGq0SD8ekc8hCq8STMek8nNc2sAce7GlcwKNV4smYdB6ZYoIWT8a0
VO2LJ2N6uPddPBlbstI5XuEKiidjWtg5FU/GpPPJ/lx5JJ6MSe3jafEjPtO8
yrUorNTkT/nCNJ/4aZsKdU6CAQxZqrrhvd0T8UwirNY74hEFNrxD8TSi6dnp
LLvH4mlcCiOqeFBb3r7aGTAs/9cYTDq3zBeSHbU2vQOdx6EXknrxI6BzDxhB
6oim5PbEa08g/zdA1hpti3rfOXkOXFhQYTEsXnJiaDyudT5B6XxkMxV0iqyf
seJyWH1HnZPd28i4EPaOUZMUHf/Vu2aKKWEdZd3yYCpYS8z+KB9bmKVq/+rd
TibUiEqTvXyLlLAUsWKvly4s7xFanL02gkVEOh+45wzTffCPqIgubNEZ4ku7
3sEmIiIiIiIN/gJZA3ZG
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0LEJwkAUgOGgjaUruIC1raVtxAESEoPNCRdBrN3CCZzAkZwjEZxBffLB
9467192/qI/lflIURT8bj7I6r3OuLtv5+Nil/tClttmkU9u1eVVPx2Xzntf9
cX0CAAAAAAAAAAAAAAAAAAAAAAD8sdvy/gFf/6ZWWv0srbTSSqsotNJKK62i
0EorrbSKQiuttNIqCq200kqrKLTSSiutotBKK620ikIrrbTSKgqttIrbagBj
3XmE
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Rectangle\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2t9LU2EYB/BRN112VSxsKP0wFsoKZ+KNCN540Y0SXnkxcZMI1pjKaKBB
EYkYWDB2oYREIwpiMAaFhMIg6qI/qm+cGAffOc/ZzjnP89YXPoru6jzfs/d5
f5wztPR4LncuFoutXsCvuUxpuljMPJm/iH8e5FcfruSzy7P5texKtjixdB4f
Lv/9+fP3rx+XbFT/crVQSU6V06nihHeTpfFHb27XGgnx64/G0XEc9fqKyLSw
lULa4rWEp9WKl/dupdfu9RlUW2535Ou3K+J1BQ5fg5mNsaBSco/Kvc9D4tUF
COWgqMCDanv57oZ4jYFAIeGl1IYe+PP7ZfFi+/H87c0Igmq3L/F6e4ahF1lQ
Dtwa8ap7gGYe4JTnnXWtHouoMGY9L3CDmocD4gl4t15NigTlwEpVPAGPsD4U
GX02jsTMzqhsUHD/2V3xHM6Eli4elOPV++viaXTX/744KPMv7oin0V2oexm/
NO+sa42EeD5umodhoSK5VDAtbo+KZ3Iav+ecYcPSReeGGlclHo5JZ8vCVYkn
Y9J5OK+tsTuqHzUu4HFV4smYdB6ZYoIWT8a0uT8snozp9Ydr4snYkpXOfoU7
KJ6MqXk4IJ6M6aA+KJ6MqdWKiydjUvt4WvyIz3R0HBePpaPc7oh4OG6aT/y0
TYU6J0EHWpaqYfipqbRZORa35Q/bHTMbY+JpdKdnp7NeTYqncSZ0VPGgJkvj
amdAt+hfYzDp3DJ3JNu1psppncehHUm9+OHQuQfsQuqIplCxoKWbon8DZGEr
ZdHoOyHKxoUFFRbD4iX3DBePex1NUDof2fiCQRH2M1bcDqu/USeE9zYyboS9
Peo0tUZi9mmQS3qso6xbHviCtUT/j/KxhdncH/73vk4m1IhKe3v5FilhKWLF
Xi9YWN4jNC97bQSLiHQ+cI8YpnvkAIjO7aA+iA/tegebiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiOj/8RsoKsxf
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0LEJwlAQgOGgjaWVvUuIraVtxAESEoNNhEQQcSB3chqDOIN3yAffPe5e
+a/rS3maFUUxLqanrG67Yajuh+V0HPvx3PVts++vbdcO23o+fTbf+ezPBwAA
AAAAAMDvrV6bhMKzaKWVVgmFZ9FKK60SCs+ilVZaJRSeRSuttEooPItWWmmV
UHgWrbTSKqHwLFpppVVC4Vm00kqrhMKzaKWVVgmFZ9FKK60SCs+ilVZaJRSe
RSuttEooPItWWmmVUHgWrbTSKqHwLAAAAAAAAAD8hzegd+lA
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Rectangle\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0LEJwkAUgOFDG0tXcAstLS09cYCEnMEmQiKIS7inO1gYwREC+uCD7x13
r7t/VV/yaZZSGhbjkavbtu+r+2E5Po7dcG670uy6a2lLv67n47L5zue+f7wA
AAAAAAAAAAAAAAAAAAAAAAAAAAAILT83E/r5d7T6E1pppZVWUWillVZaRaGV
VlppFYVWWmmlVRRaaaWVVlFopZVWWkUxbas3ythxjg==
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Rectangle\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.681061597065897*^9, 3.6810616217366877`*^9}, 
   3.6810617920843887`*^9, 3.681063064663126*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"training", "=", 
   RowBox[{"randomExample", "[", "2000", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.681061821472228*^9, 3.681061829439577*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"10", ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "4"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"2", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"20", ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "4"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"2", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FlattenLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"DotPlusLayer", "[", "100", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"DotPlusLayer", "[", "2", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"1", "\[Rule]", 
      RowBox[{"2", "\[Rule]", 
       RowBox[{"3", "\[Rule]", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"5", "\[Rule]", 
          RowBox[{"6", "\[Rule]", 
           RowBox[{"7", "\[Rule]", 
            RowBox[{"8", "\[Rule]", 
             RowBox[{"9", "\[Rule]", 
              RowBox[{"10", "\[Rule]", "11"}]}]}]}]}]}]}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Image\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"100", ",", "100"}], "}"}]}], "}"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Disk\>\"", ",", "\"\<Rectangle\>\""}], "}"}]}], "}"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6810618559827056`*^9, 3.681062211207279*^9}, {
  3.6810634447848625`*^9, 3.6810634525767293`*^9}, {3.681064728334937*^9, 
  3.681064728722308*^9}, {3.681064783777911*^9, 3.681064829623516*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetGraph", 
     RowBox[{"[", 
      PanelBox[
       TagBox[
        DynamicModuleBox[{NeuralNetworks`NetGraph`PackagePrivate`selection$$ =
          None, NeuralNetworks`NetGraph`PackagePrivate`outIndex$$ = 12, 
         NeuralNetworks`NetGraph`PackagePrivate`inputs$$ = Association[
         "Input" -> NeuralNetworks`EncodedType[
            NetEncoder["Image", 
             Association[
             "Parameters" -> 
              Association[
               "ImageSize" -> {100, 100}, "ColorSpace" -> "RGB", 
                "ColorChannels" -> 3, "$AugmentationFunction" -> None, 
                "Parallelize" -> False, "MeanImage" -> None], "Output" -> 
              NeuralNetworks`ChannelT[3, 
                NeuralNetworks`TensorT[2, {100, 100}]]]], 
            NeuralNetworks`ChannelT[3, 
             NeuralNetworks`TensorT[2, {100, 100}]]]], 
         NeuralNetworks`NetGraph`PackagePrivate`outputs$$ = Association[
         "Output" -> NeuralNetworks`DecodedType[
            NetDecoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {"Disk", "Rectangle"}, "Dimensions" -> 2], "Input" -> 
              NeuralNetworks`TensorT[1, {2}]]], 
            NeuralNetworks`TensorT[1, {2}]]], 
         NeuralNetworks`NetGraph`PackagePrivate`labels$$ = {
         "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "Input", 
          "Output"}, NeuralNetworks`NetGraph`PackagePrivate`vertices$$ = 
         Association[
         "1" -> Association[
           "Type" -> "Convolution", "Arrays" -> 
            Association["Weights" -> NeuralNetworks`ChannelT[10, 
                NeuralNetworks`ChannelT[3, 
                 NeuralNetworks`TensorT[2, {4, 4}]]], "Biases" -> 
              NeuralNetworks`Nullable[
                NeuralNetworks`TensorT[1, {10}]]], "Parameters" -> 
            Association[
             "OutputChannels" -> 10, "KernelSize" -> {4, 4}, 
              "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
              "Dilation" -> {1, 1}, "InputChannels" -> 3, "$GroupNumber" -> 1,
               "$InputSize" -> {100, 100}, "$OutputSize" -> {97, 97}], 
            "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[3, 
                NeuralNetworks`TensorT[2, {100, 100}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`ChannelT[10, 
                NeuralNetworks`TensorT[2, {97, 97}]]]], "2" -> 
          Association[
           "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Function" -> Ramp, "$Dimensions" -> {10, 97, 97}, "$Rank" -> 3],
             "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[10, 
                NeuralNetworks`TensorT[2, {97, 97}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[3, {10, 97, 97}]]],
           "3" -> Association[
           "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
              "PaddingSize" -> {0, 0}, "Function" -> Max, "Channels" -> 10, 
              "$InputSize" -> {97, 97}, "$OutputSize" -> {49, 49}], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[3, {10, 97, 97}]], 
            "Outputs" -> Association["Output" -> NeuralNetworks`ChannelT[10, 
                NeuralNetworks`TensorT[2, {49, 49}]]]], "4" -> 
          Association[
           "Type" -> "Convolution", "Arrays" -> 
            Association["Weights" -> NeuralNetworks`ChannelT[20, 
                NeuralNetworks`ChannelT[10, 
                 NeuralNetworks`TensorT[2, {4, 4}]]], "Biases" -> 
              NeuralNetworks`Nullable[
                NeuralNetworks`TensorT[1, {20}]]], "Parameters" -> 
            Association[
             "OutputChannels" -> 20, "KernelSize" -> {4, 4}, 
              "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
              "Dilation" -> {1, 1}, "InputChannels" -> 10, "$GroupNumber" -> 
              1, "$InputSize" -> {49, 49}, "$OutputSize" -> {46, 46}], 
            "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[10, 
                NeuralNetworks`TensorT[2, {49, 49}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`ChannelT[20, 
                NeuralNetworks`TensorT[2, {46, 46}]]]], "5" -> 
          Association[
           "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Function" -> Ramp, "$Dimensions" -> {20, 46, 46}, "$Rank" -> 3],
             "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[20, 
                NeuralNetworks`TensorT[2, {46, 46}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[3, {20, 46, 46}]]],
           "6" -> Association[
           "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
              "PaddingSize" -> {0, 0}, "Function" -> Max, "Channels" -> 20, 
              "$InputSize" -> {46, 46}, "$OutputSize" -> {23, 23}], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[3, {20, 46, 46}]], 
            "Outputs" -> Association["Output" -> NeuralNetworks`ChannelT[20, 
                NeuralNetworks`TensorT[2, {23, 23}]]]], "7" -> 
          Association[
           "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Dimensions" -> {20, 23, 23}, "$Rank" -> 3, "$OutputSize" -> 
              10580], "Inputs" -> 
            Association["Input" -> NeuralNetworks`ChannelT[20, 
                NeuralNetworks`TensorT[2, {23, 23}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {10580}]]], "8" -> 
          Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {100, 10580}], "Biases" -> 
              NeuralNetworks`Nullable[
                NeuralNetworks`TensorT[1, {100}]]], "Parameters" -> 
            Association["Size" -> 100, "$InputSize" -> 10580], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {10580}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {100}]]], "9" -> 
          Association[
           "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Function" -> Ramp, "$Dimensions" -> {100}, "$Rank" -> 1], 
            "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {100}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {100}]]], "10" -> 
          Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {2, 100}], "Biases" -> 
              NeuralNetworks`Nullable[
                NeuralNetworks`TensorT[1, {2}]]], "Parameters" -> 
            Association["Size" -> 2, "$InputSize" -> 100], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {100}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {2}]]], "11" -> 
          Association[
           "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
            Association["Size" -> 2], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {2}]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {2}]]]], 
         NeuralNetworks`NetGraph`PackagePrivate`vports$$ = {
          NetPort["Vertices", "1"], 
          NetPort["Vertices", "2"], 
          NetPort["Vertices", "3"], 
          NetPort["Vertices", "4"], 
          NetPort["Vertices", "5"], 
          NetPort["Vertices", "6"], 
          NetPort["Vertices", "7"], 
          NetPort["Vertices", "8"], 
          NetPort["Vertices", "9"], 
          NetPort["Vertices", "10"], 
          NetPort["Vertices", "11"], 
          NetPort["Inputs", "Input"], 
          NetPort["Outputs", "Output"]}}, 
         TagBox[GridBox[{
            {
             TemplateBox[{PaneBox[
                TagBox[
                 GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-11., 6.735557395310443*^-16}, {-10., 
                    6.123233995736766*^-16}}], 
                    
                    LineBox[{{-10., 6.123233995736766*^-16}, {-9., 
                    5.51091059616309*^-16}}], 
                    
                    LineBox[{{-9., 5.51091059616309*^-16}, {-8., 
                    4.898587196589413*^-16}}], 
                    
                    LineBox[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}}], 
                    
                    LineBox[{{-7., 4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}}], 
                    LineBox[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}}], 
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    
                    LineBox[{{-12., 7.347880794884119*^-16}, {-11., 
                    6.735557395310443*^-16}}], 
                    LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-10.4, 
                    6.368163355566237*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-9.399999999999999, 
                    5.755839955992561*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-8.4, 
                    5.143516556418883*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-7.4, 
                    4.531193156845207*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-6.4, 
                    3.9188697572715305`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    3.3065463576978537`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736762*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    2.0818995585505003`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-11.4, 
                    6.980486755139913*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736757*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-0.4, 
                    2.4492935982947065`*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}]}, {
                    GrayLevel[0], {
                    AbsolutePointSize[5], {{
                    Hue[0.61, 0.75, 1], 
                    TagBox[
                    PointBox[{-11., 6.735557395310443*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    TagBox[
                    PointBox[{-10., 6.123233995736766*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.38759999999999994`, 0.57, 0.], 
                    TagBox[
                    PointBox[{-9., 5.51091059616309*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    Hue[0.61, 0.75, 1], 
                    TagBox[
                    PointBox[{-8., 4.898587196589413*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    TagBox[
                    PointBox[{-7., 4.286263797015736*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.38759999999999994`, 0.57, 0.], 
                    TagBox[
                    PointBox[{-6., 3.6739403974420594`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[1., 0.4, 0.], 
                    TagBox[
                    PointBox[{-5., 3.061616997868383*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-4., 2.4492935982947064`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    TagBox[
                    PointBox[{-3., 1.8369701987210297`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-2., 1.2246467991473532`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    TagBox[
                    PointBox[{-1., 6.123233995736766*^-17}], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-12., 7.347880794884119*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{0., 0.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}}}, {{
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-11., 6.735557395310443*^-16}], 
                    Offset[{0, -5.5}, {-11., 6.735557395310443*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-10., 6.123233995736766*^-16}], 
                    Offset[{0, -5.5}, {-10., 6.123233995736766*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-9., 5.51091059616309*^-16}], 
                    Offset[{0, -5.5}, {-9., 5.51091059616309*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-8., 4.898587196589413*^-16}], 
                    Offset[{0, -5.5}, {-8., 4.898587196589413*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-7., 4.286263797015736*^-16}], 
                    Offset[{0, -5.5}, {-7., 4.286263797015736*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"6\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 3.6739403974420594`*^-16}], 
                    Offset[{0, -5.5}, {-6., 3.6739403974420594`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"7\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-5., 3.061616997868383*^-16}], 
                    Offset[{0, -5.5}, {-5., 3.061616997868383*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"8\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{0, -5.5}, {-4., 2.4492935982947064`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"9\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{0, -5.5}, {-3., 1.8369701987210297`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{0, -5.5}, {-2., 1.2246467991473532`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"11\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-1., 6.123233995736766*^-17}], 
                    Offset[{0, -5.5}, {-1., 6.123233995736766*^-17}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-12., 7.347880794884119*^-16}], 
                    Offset[{0, -5.5}, {-12., 7.347880794884119*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {0., 0.}], 
                    Offset[{0, -5.5}, {0., 0.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"10\[Cross]97\[Cross]97\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-10.4, 
                    6.368163355566237*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"10\[Cross]97\[Cross]97\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-9.399999999999999,
                     5.755839955992561*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"10\[Cross]49\[Cross]49\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-8.4, 
                    5.143516556418883*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"20\[Cross]46\[Cross]46\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-7.4, 
                    4.531193156845207*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"20\[Cross]46\[Cross]46\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-6.4, 
                    3.9188697572715305`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"20\[Cross]23\[Cross]23\"", TraditionalForm], 
                    Offset[{3.3677786976552195`*^-16, 5.5}, {-5.4, 
                    3.3065463576978537`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736762*^-17}], 
                    InsetBox[
                    FormBox["\"10580\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"100\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-3.4, 
                    2.0818995585505003`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"100\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox["\"3\[Cross]100\[Cross]100\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552166`*^-16, 5.5}, {-11.4, 
                    6.980486755139913*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736757*^-17}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-0.4, 
                    2.4492935982947065`*^-17}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736766*^-17}]}, FontColor -> 
                    GrayLevel[0.5], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, 
                   
                   DynamicModuleBox[{
                    GeneralUtilities`Graphics`PackagePrivate`vpos$201730 = \
{{-11., 6.735557395310443*^-16}, {-10., 6.123233995736766*^-16}, {-9., 
                    5.51091059616309*^-16}, {-8., 
                    4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}, {-12., 7.347880794884119*^-16}, {
                    0., 0.}}}, 
                    DynamicBox[
                    Typeset`ToBoxes[
                    If[
                    Not[
                    IntegerQ[
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]], {}, {
                    AbsolutePointSize[10], 
                    Opacity[0.2, Black], 
                    Point[
                    Part[
                    GeneralUtilities`Graphics`PackagePrivate`vpos$201730, 
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]]}], 
                    StandardForm, Graphics], 
                    TrackedSymbols :> {
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$}], 
                    DynamicModuleValues :> {}]}, 
                  ImageSize -> {810., 25.680000000000046`}, AspectRatio -> 
                  Full, PlotRangePadding -> 0, 
                  ImagePadding -> {{19.5, 22.5}, {15.5, 10.179999999999998`}},
                   ImageMargins -> {{0, 0}, {15, 15}}, 
                  BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 
                    None), Method -> "Preemptive", PassEventsDown -> 
                   Automatic, PassEventsUp -> True}]], 
                Scrollbars -> {True, False}, ImageSizeAction -> "Scrollable", 
                ImageSize -> {600, Automatic}],FormBox[
                TemplateBox[{
                  StyleBox["ConvolutionLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["ElementwiseLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["PoolingLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["FlattenLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["DotPlusLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["SoftmaxLayer", 
                   GrayLevel[0.35], StripOnInput -> False]}, "PointLegend", 
                 DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.61, 0.75, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.61, 0.75, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0.4, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0.4, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #4}, "RowDefault"]}, {
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #2}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #5}, "RowDefault"]}, {
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.38759999999999994`, 0.57, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.38759999999999994`, 0.57, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #3}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #6}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{2, 2}, {2, 2}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.61, 0.75, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.61, 0.7499999999999999, 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "Hue[0.61, 0.75, 1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.61, 0.75, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.61, 0.75, 1], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.19333333333333333`, 0.19333333333333333`, 
                    0.5533333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.29, 0.29, 0.83]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.29, 0.29, 0.83]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.29, 0.29, 0.83], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.38759999999999994`, 0.57, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.25839999999999996`, 0.38, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.38759999999999994, 0.57, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.38759999999999994`, 0.57, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.38759999999999994`, 0.57, 0.], Editable -> 
                    False, Selectable -> False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.4, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666667, 0.2666666666666667, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1., 0.4, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.4, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.4, 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.35], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.23333333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "GrayLevel[0.35]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.35]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.35], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.52, 0.4266666666666667, 0.6533333333333333], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.78, 0.64, 0.98]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.78, 0.64, 0.98]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.78, 0.64, 0.98], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                    "}"}], ",", 
                    RowBox[{"LegendMarkerSize", "\[Rule]", "12"}], ",", 
                    RowBox[{"LegendMargins", "\[Rule]", "2"}], ",", 
                    
                    RowBox[{
                    "LegendLayout", "\[Rule]", 
                    "GeneralUtilities`Graphics`PackagePrivate`legendTable"}]}]\
, "]"}]& ), Editable -> True], TraditionalForm]},
              "Legended",
              DisplayFunction->(GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> Automatic, 
                BaselinePosition -> {1, 1}]& ),
              Editable->True,
              InterpretationFunction->(RowBox[{"Legended", "[", 
                 RowBox[{#, ",", 
                   RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
            {
             DynamicBox[ToBoxes[
               If[
                IntegerQ[NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                Item[
                 NeuralNetworks`NetGraph`PackagePrivate`vportInfo[
                  Part[
                  NeuralNetworks`NetGraph`PackagePrivate`vports$$, 
                   NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                  NeuralNetworks`NetGraph`PackagePrivate`inputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`outputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`vertices$$], 
                 Alignment -> Center], 
                Item["", ItemSize -> {0, 0}]], StandardForm],
              ImageSizeCache->{0., {0., 9.}},
              
              TrackedSymbols:>{
               NeuralNetworks`NetGraph`PackagePrivate`selection$$}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         DynamicModuleValues:>{},
         Initialization:>{NetGraph}],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       BaselinePosition->(Top -> Scaled[3])], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.6810622120511208`*^9, 3.681063173680008*^9, 
  3.6810634556664476`*^9, 3.6810648306133804`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetInitialize", "[", "net", "]"}]}]], "Input",
 CellChangeTimes->{{3.6810624879836497`*^9, 3.681062494895695*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetGraph", 
     RowBox[{"[", 
      PanelBox[
       TagBox[
        DynamicModuleBox[{NeuralNetworks`NetGraph`PackagePrivate`selection$$ =
          None, NeuralNetworks`NetGraph`PackagePrivate`outIndex$$ = 12, 
         NeuralNetworks`NetGraph`PackagePrivate`inputs$$ = Association[
         "Input" -> NeuralNetworks`EncodedType[
            NetEncoder["Image", 
             Association[
             "Parameters" -> 
              Association[
               "ImageSize" -> {100, 100}, "ColorSpace" -> "RGB", 
                "ColorChannels" -> 3, "$AugmentationFunction" -> None, 
                "Parallelize" -> False, "MeanImage" -> None], "Output" -> 
              NeuralNetworks`ChannelT[3, 
                NeuralNetworks`TensorT[2, {100, 100}]]]], 
            NeuralNetworks`ChannelT[3, 
             NeuralNetworks`TensorT[2, {100, 100}]]]], 
         NeuralNetworks`NetGraph`PackagePrivate`outputs$$ = Association[
         "Output" -> NeuralNetworks`DecodedType[
            NetDecoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {"Disk", "Rectangle"}, "Dimensions" -> 2], "Input" -> 
              NeuralNetworks`TensorT[1, {2}]]], 
            NeuralNetworks`TensorT[1, {2}]]], 
         NeuralNetworks`NetGraph`PackagePrivate`labels$$ = {
         "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "Input", 
          "Output"}, NeuralNetworks`NetGraph`PackagePrivate`vertices$$ = 
         Association[
         "1" -> Association[
           "Type" -> "Convolution", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[4, {10, 3, 4, 4}], "Biases" -> 
              NeuralNetworks`TensorT[1, {10}]], "Parameters" -> 
            Association[
             "OutputChannels" -> 10, "KernelSize" -> {4, 4}, 
              "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
              "Dilation" -> {1, 1}, "InputChannels" -> 3, "$GroupNumber" -> 1,
               "$InputSize" -> {100, 100}, "$OutputSize" -> {97, 97}], 
            "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[3, 
                NeuralNetworks`TensorT[2, {100, 100}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`ChannelT[10, 
                NeuralNetworks`TensorT[2, {97, 97}]]]], "2" -> 
          Association[
           "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Function" -> Ramp, "$Dimensions" -> {10, 97, 97}, "$Rank" -> 3],
             "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[10, 
                NeuralNetworks`TensorT[2, {97, 97}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[3, {10, 97, 97}]]],
           "3" -> Association[
           "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
              "PaddingSize" -> {0, 0}, "Function" -> Max, "Channels" -> 10, 
              "$InputSize" -> {97, 97}, "$OutputSize" -> {49, 49}], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[3, {10, 97, 97}]], 
            "Outputs" -> Association["Output" -> NeuralNetworks`ChannelT[10, 
                NeuralNetworks`TensorT[2, {49, 49}]]]], "4" -> 
          Association[
           "Type" -> "Convolution", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[4, {20, 10, 4, 4}], "Biases" -> 
              NeuralNetworks`TensorT[1, {20}]], "Parameters" -> 
            Association[
             "OutputChannels" -> 20, "KernelSize" -> {4, 4}, 
              "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
              "Dilation" -> {1, 1}, "InputChannels" -> 10, "$GroupNumber" -> 
              1, "$InputSize" -> {49, 49}, "$OutputSize" -> {46, 46}], 
            "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[10, 
                NeuralNetworks`TensorT[2, {49, 49}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`ChannelT[20, 
                NeuralNetworks`TensorT[2, {46, 46}]]]], "5" -> 
          Association[
           "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Function" -> Ramp, "$Dimensions" -> {20, 46, 46}, "$Rank" -> 3],
             "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[20, 
                NeuralNetworks`TensorT[2, {46, 46}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[3, {20, 46, 46}]]],
           "6" -> Association[
           "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
              "PaddingSize" -> {0, 0}, "Function" -> Max, "Channels" -> 20, 
              "$InputSize" -> {46, 46}, "$OutputSize" -> {23, 23}], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[3, {20, 46, 46}]], 
            "Outputs" -> Association["Output" -> NeuralNetworks`ChannelT[20, 
                NeuralNetworks`TensorT[2, {23, 23}]]]], "7" -> 
          Association[
           "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Dimensions" -> {20, 23, 23}, "$Rank" -> 3, "$OutputSize" -> 
              10580], "Inputs" -> 
            Association["Input" -> NeuralNetworks`ChannelT[20, 
                NeuralNetworks`TensorT[2, {23, 23}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {10580}]]], "8" -> 
          Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {100, 10580}], "Biases" -> 
              NeuralNetworks`TensorT[1, {100}]], "Parameters" -> 
            Association["Size" -> 100, "$InputSize" -> 10580], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {10580}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {100}]]], "9" -> 
          Association[
           "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Function" -> Ramp, "$Dimensions" -> {100}, "$Rank" -> 1], 
            "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {100}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {100}]]], "10" -> 
          Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {2, 100}], "Biases" -> 
              NeuralNetworks`TensorT[1, {2}]], "Parameters" -> 
            Association["Size" -> 2, "$InputSize" -> 100], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {100}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {2}]]], "11" -> 
          Association[
           "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
            Association["Size" -> 2], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {2}]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {2}]]]], 
         NeuralNetworks`NetGraph`PackagePrivate`vports$$ = {
          NetPort["Vertices", "1"], 
          NetPort["Vertices", "2"], 
          NetPort["Vertices", "3"], 
          NetPort["Vertices", "4"], 
          NetPort["Vertices", "5"], 
          NetPort["Vertices", "6"], 
          NetPort["Vertices", "7"], 
          NetPort["Vertices", "8"], 
          NetPort["Vertices", "9"], 
          NetPort["Vertices", "10"], 
          NetPort["Vertices", "11"], 
          NetPort["Inputs", "Input"], 
          NetPort["Outputs", "Output"]}}, 
         TagBox[GridBox[{
            {
             TemplateBox[{PaneBox[
                TagBox[
                 GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-11., 6.735557395310443*^-16}, {-10., 
                    6.123233995736766*^-16}}], 
                    
                    LineBox[{{-10., 6.123233995736766*^-16}, {-9., 
                    5.51091059616309*^-16}}], 
                    
                    LineBox[{{-9., 5.51091059616309*^-16}, {-8., 
                    4.898587196589413*^-16}}], 
                    
                    LineBox[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}}], 
                    
                    LineBox[{{-7., 4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}}], 
                    
                    LineBox[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}}], 
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    
                    LineBox[{{-12., 7.347880794884119*^-16}, {-11., 
                    6.735557395310443*^-16}}], 
                    LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-10.4, 
                    6.368163355566237*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-9.399999999999999, 
                    5.755839955992561*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-8.4, 
                    5.143516556418883*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-7.4, 
                    4.531193156845207*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-6.4, 
                    3.9188697572715305`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    3.3065463576978537`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736762*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    2.0818995585505003`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-11.4, 
                    6.980486755139913*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736757*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-0.4, 
                    2.4492935982947065`*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}]}, {
                    GrayLevel[0], {
                    AbsolutePointSize[5], {{
                    Hue[0.61, 0.75, 1], 
                    TagBox[
                    PointBox[{-11., 6.735557395310443*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    TagBox[
                    PointBox[{-10., 6.123233995736766*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.38759999999999994`, 0.57, 0.], 
                    TagBox[
                    PointBox[{-9., 5.51091059616309*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    Hue[0.61, 0.75, 1], 
                    TagBox[
                    PointBox[{-8., 4.898587196589413*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    TagBox[
                    PointBox[{-7., 4.286263797015736*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.38759999999999994`, 0.57, 0.], 
                    TagBox[
                    PointBox[{-6., 3.6739403974420594`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[1., 0.4, 0.], 
                    TagBox[
                    PointBox[{-5., 3.061616997868383*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-4., 2.4492935982947064`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    TagBox[
                    PointBox[{-3., 1.8369701987210297`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-2., 1.2246467991473532`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    TagBox[
                    PointBox[{-1., 6.123233995736766*^-17}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-12., 7.347880794884119*^-16}], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{0., 0.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}}}, {{
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-11., 6.735557395310443*^-16}], 
                    Offset[{0, -5.5}, {-11., 6.735557395310443*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-10., 6.123233995736766*^-16}], 
                    Offset[{0, -5.5}, {-10., 6.123233995736766*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-9., 5.51091059616309*^-16}], 
                    Offset[{0, -5.5}, {-9., 5.51091059616309*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-8., 4.898587196589413*^-16}], 
                    Offset[{0, -5.5}, {-8., 4.898587196589413*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-7., 4.286263797015736*^-16}], 
                    Offset[{0, -5.5}, {-7., 4.286263797015736*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"6\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 3.6739403974420594`*^-16}], 
                    Offset[{0, -5.5}, {-6., 3.6739403974420594`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"7\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-5., 3.061616997868383*^-16}], 
                    Offset[{0, -5.5}, {-5., 3.061616997868383*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"8\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{0, -5.5}, {-4., 2.4492935982947064`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"9\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{0, -5.5}, {-3., 1.8369701987210297`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{0, -5.5}, {-2., 1.2246467991473532`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"11\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-1., 6.123233995736766*^-17}], 
                    Offset[{0, -5.5}, {-1., 6.123233995736766*^-17}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-12., 7.347880794884119*^-16}], 
                    Offset[{0, -5.5}, {-12., 7.347880794884119*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {0., 0.}], 
                    Offset[{0, -5.5}, {0., 0.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"10\[Cross]97\[Cross]97\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-10.4, 
                    6.368163355566237*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"10\[Cross]97\[Cross]97\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-9.399999999999999,
                     5.755839955992561*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"10\[Cross]49\[Cross]49\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-8.4, 
                    5.143516556418883*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"20\[Cross]46\[Cross]46\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-7.4, 
                    4.531193156845207*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"20\[Cross]46\[Cross]46\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-6.4, 
                    3.9188697572715305`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"20\[Cross]23\[Cross]23\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552195`*^-16, 5.5}, {-5.4, 
                    3.3065463576978537`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736762*^-17}], 
                    InsetBox[
                    FormBox["\"10580\"", TraditionalForm], 
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"100\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-3.4, 
                    2.0818995585505003`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"100\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox["\"3\[Cross]100\[Cross]100\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552166`*^-16, 5.5}, {-11.4, 
                    6.980486755139913*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736757*^-17}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-0.4, 
                    2.4492935982947065`*^-17}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736766*^-17}]}, FontColor -> 
                    GrayLevel[0.5], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, 
                   
                   DynamicModuleBox[{
                    GeneralUtilities`Graphics`PackagePrivate`vpos$202058 = \
{{-11., 6.735557395310443*^-16}, {-10., 6.123233995736766*^-16}, {-9., 
                    5.51091059616309*^-16}, {-8., 
                    4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}, {-12., 7.347880794884119*^-16}, {
                    0., 0.}}}, 
                    DynamicBox[
                    Typeset`ToBoxes[
                    If[
                    Not[
                    IntegerQ[
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]], {}, {
                    AbsolutePointSize[10], 
                    Opacity[0.2, Black], 
                    Point[
                    Part[
                    GeneralUtilities`Graphics`PackagePrivate`vpos$202058, 
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]]}], 
                    StandardForm, Graphics], 
                    TrackedSymbols :> {
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$}], 
                    DynamicModuleValues :> {}]}, 
                  ImageSize -> {810., 25.680000000000046`}, AspectRatio -> 
                  Full, PlotRangePadding -> 0, 
                  ImagePadding -> {{19.5, 22.5}, {15.5, 10.179999999999998`}},
                   ImageMargins -> {{0, 0}, {15, 15}}, 
                  BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 
                    None), Method -> "Preemptive", PassEventsDown -> 
                   Automatic, PassEventsUp -> True}]], 
                Scrollbars -> {True, False}, ImageSizeAction -> "Scrollable", 
                ImageSize -> {600, Automatic}],FormBox[
                TemplateBox[{
                  StyleBox["ConvolutionLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["ElementwiseLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["PoolingLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["FlattenLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["DotPlusLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["SoftmaxLayer", 
                   GrayLevel[0.35], StripOnInput -> False]}, "PointLegend", 
                 DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.61, 0.75, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.61, 0.75, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0.4, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0.4, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #4}, "RowDefault"]}, {
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #2}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #5}, "RowDefault"]}, {
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.38759999999999994`, 0.57, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.38759999999999994`, 0.57, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #3}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #6}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{2, 2}, {2, 2}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.61, 0.75, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.61, 0.7499999999999999, 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "Hue[0.61, 0.75, 1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.61, 0.75, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.61, 0.75, 1], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.19333333333333333`, 0.19333333333333333`, 
                    0.5533333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.29, 0.29, 0.83]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.29, 0.29, 0.83]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.29, 0.29, 0.83], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.38759999999999994`, 0.57, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.25839999999999996`, 0.38, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.38759999999999994, 0.57, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.38759999999999994`, 0.57, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.38759999999999994`, 0.57, 0.], Editable -> 
                    False, Selectable -> False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.4, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666667, 0.2666666666666667, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1., 0.4, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.4, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.4, 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.35], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.23333333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "GrayLevel[0.35]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.35]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.35], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.52, 0.4266666666666667, 0.6533333333333333], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.78, 0.64, 0.98]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.78, 0.64, 0.98]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.78, 0.64, 0.98], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                    "}"}], ",", 
                    RowBox[{"LegendMarkerSize", "\[Rule]", "12"}], ",", 
                    RowBox[{"LegendMargins", "\[Rule]", "2"}], ",", 
                    
                    RowBox[{
                    "LegendLayout", "\[Rule]", 
                    "GeneralUtilities`Graphics`PackagePrivate`legendTable"}]}]\
, "]"}]& ), Editable -> True], TraditionalForm]},
              "Legended",
              DisplayFunction->(GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> Automatic, 
                BaselinePosition -> {1, 1}]& ),
              Editable->True,
              InterpretationFunction->(RowBox[{"Legended", "[", 
                 RowBox[{#, ",", 
                   RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
            {
             DynamicBox[ToBoxes[
               If[
                IntegerQ[NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                Item[
                 NeuralNetworks`NetGraph`PackagePrivate`vportInfo[
                  Part[
                  NeuralNetworks`NetGraph`PackagePrivate`vports$$, 
                   NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                  NeuralNetworks`NetGraph`PackagePrivate`inputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`outputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`vertices$$], 
                 Alignment -> Center], 
                Item["", ItemSize -> {0, 0}]], StandardForm],
              ImageSizeCache->{0., {0., 9.}},
              
              TrackedSymbols:>{
               NeuralNetworks`NetGraph`PackagePrivate`selection$$}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         DynamicModuleValues:>{},
         Initialization:>{NetGraph}],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       BaselinePosition->(Top -> Scaled[3])], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.6810624966278367`*^9, 3.6810631787394342`*^9, 
  3.681063458106209*^9, 3.6810648350408125`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"training", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.681062607634968*^9, 3.681062613975375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2L1Kw1AYgOGgi6O34F24OrpW3G1sDEFJNW0p3fy7AAUFwaGDgiKCVoMg
YqVibSGKUrwgj8QhWNSTJtCS74UnJckUXjhfcjplFnNLY4ZhlCbUTy5fnfG8
fG1uUl3MuyXHdq3CrFu2bMubNsfVzcL38XW+87EAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAFlVD5zQ0J9kBB2+2lcP5ba//nKxHTX0BxsdKpHf
rHSuN34kolXU/vvizX31t0S0Cu31zMtWKWhs/RtKeCu16PqHEq36HXWXu41N
/VBiW509rcaqJLbV+ePaAKEEtlJLb7BQ0lqpYa75yhPeSn1ExXrrSW6lti1J
QslpdfBmJVl9olrd3tUShhLSSo305KGEtNLZF9MqFHcvI7ZVPXBSCSWhld+s
0ErTH/9z0ipqt5dPK1TmW6lPUFppSnGwZ77VcWeFVppO20VaaTp5dmmlKd15
9QkqfIoB
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt279PE2EcBvBGF0f/Bf8LN+PgIBPBSJQ2QlvagmlLaUnUgcmpC5MTi5OL
k5OLE9HSIrQotLYOTkwsTP4BPuRMc+Ftj/Z6d8975Ek+kNLp/T5378877mU2
FvK3EolE7Q5+LaRfPaxW02+e3MUfT8u19UI5t/q4vJUr5Kr3M7fx5er/n8vP
W7//ioiIiIiIiIiIiIjIjVfqNt1qgwt6k+yx0TvJtXdS+4vPvj4YJ9mYz7br
xdM9emtZEaF8hOARkWmpMZc9eov7jd7+aGz2z1DvVBGZlltFpE2vJTy1/nm+
8+75t0czBjWUOdyu/PpDrytwuA28ByV/0CuLJ1/o1QUI5aCowIMaWjv+QK8x
ECgkvJSGMAbGfYGR77yPIKjh8EWv1zd0vciCcuDS0Kv2AYN5gFPe5GI31GMR
FcasNwlcoEpvQE9gcti2UIJyYKVKT2BCWB9Sel8ce2L6+2tuUPCimabncC0M
6fSgHOvHH+lpeJt9XxzYrdUq0NPwFupeZlo276xL3SY9Hzebu2G2Xafn47Zy
UKVnMs6055xhw9LFzg01WkUPx2TnkIVW0ZMx2Xk4b9vA7nj58zM9GRNaRU/G
ZOeRKSZoejKmfGeXnsyIrH58oicTl6zsHK9wBenJmCq9AT0Zk51P9mv9c3oy
JmsfT9OP+Eyb/TN6LCNlDrfp4bjZfOJn21Ro5yTowJBlVTcsd4/omXhYOajS
I3Kk9hfpaXizZ6eTa+/Q07gWRlR6UEuNOWtnQLfoX2Mw2bllHok7aiUb83Ye
h47EevHDYece0APriCbbrtNr9yH6N0CWW8UY9b4rohy4sKDCYphesm9oPK51
NEHZ+chmurgGF2E/Y73senG+o64I721kXIj4jlHjlLrNVDMZYEpYR8VueTAV
rCVmf5SPLUy+s3vzbicTakSl/l6+RUpYisRirxcsLO8R2iR7bQSLiOx84B4x
TPfOP6IiOrfi6R6+jNc72CIiIiIiIiIiIiIiIiIiIiJC9w936T07
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0DEKwkAQhtGgjaWVvXgJO7G0VTyAkig2ERJBPIQXsvNmRvAOPysP3iwz
W37z43V7GlVV1U+GZ3u4r7vu8NhNh2Pf9pdz29Sb9tacm255HA+f9W++++z5
KsLivYqLR9BKK62KEA+llVZaxcUjaKWVVkWIh9JKK63i4hG00kqrIsRDaaWV
VnHxCFpppVUR4qG00kqruHgErbTSqgjxUFpppVVcPIJWWmlVhHgorbTSKi4e
AQAAAAAAAAAAAAAAAAAAAIC/8QEvJaRM
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Rectangle\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0DEKwkAQQNGgjaWWlt7CTixtI1ZWCYnBJkIiiNf2BEbwCjIDPnizzGz5
N/WtvMyKohgX01NWj/0wVM/jcjpO/Xjt+rY59Pe2a4dtPZ8+m+989te5BQAA
AAAAAAAAAPgH69UuofAsWmmlVULhWbTSSquEwrNopZVWCYVn0UorrRIKz6KV
VlolFJ5FK620Sig8i1ZaaZVQeBattNIqofAsWmmlVULhWbTSSquEwrNopZVW
CYVn0UorrRIKz6KVVlolFJ5FK620Sig8CwAAAAC/8AZ9E7x+
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Rectangle\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6810626142852306`*^9, 3.6810632128103685`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"net", ",", "training", ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}], ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "120"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.68106258998915*^9, 3.681062601927496*^9}, {
  3.6810626354801173`*^9, 3.681062641319064*^9}, {3.6810632415612464`*^9, 
  3.6810632450643125`*^9}, {3.681063463968833*^9, 3.681063464192399*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetGraph", 
     RowBox[{"[", 
      PanelBox[
       TagBox[
        DynamicModuleBox[{NeuralNetworks`NetGraph`PackagePrivate`selection$$ =
          None, NeuralNetworks`NetGraph`PackagePrivate`outIndex$$ = 12, 
         NeuralNetworks`NetGraph`PackagePrivate`inputs$$ = Association[
         "Input" -> NeuralNetworks`EncodedType[
            NetEncoder["Image", 
             Association[
             "Parameters" -> 
              Association[
               "ImageSize" -> {100, 100}, "ColorSpace" -> "RGB", 
                "ColorChannels" -> 3, "$AugmentationFunction" -> None, 
                "Parallelize" -> False, "MeanImage" -> None], "Output" -> 
              NeuralNetworks`ChannelT[3, 
                NeuralNetworks`TensorT[2, {100, 100}]]]], 
            NeuralNetworks`ChannelT[3, 
             NeuralNetworks`TensorT[2, {100, 100}]]]], 
         NeuralNetworks`NetGraph`PackagePrivate`outputs$$ = Association[
         "Output" -> NeuralNetworks`DecodedType[
            NetDecoder["Class", 
             Association[
             "Parameters" -> 
              Association[
               "Labels" -> {"Disk", "Rectangle"}, "Dimensions" -> 2], "Input" -> 
              NeuralNetworks`TensorT[1, {2}]]], 
            NeuralNetworks`TensorT[1, {2}]]], 
         NeuralNetworks`NetGraph`PackagePrivate`labels$$ = {
         "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "Input", 
          "Output"}, NeuralNetworks`NetGraph`PackagePrivate`vertices$$ = 
         Association[
         "1" -> Association[
           "Type" -> "Convolution", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[4, {10, 3, 4, 4}], "Biases" -> 
              NeuralNetworks`TensorT[1, {10}]], "Parameters" -> 
            Association[
             "OutputChannels" -> 10, "KernelSize" -> {4, 4}, 
              "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
              "Dilation" -> {1, 1}, "InputChannels" -> 3, "$GroupNumber" -> 1,
               "$InputSize" -> {100, 100}, "$OutputSize" -> {97, 97}], 
            "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[3, 
                NeuralNetworks`TensorT[2, {100, 100}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`ChannelT[10, 
                NeuralNetworks`TensorT[2, {97, 97}]]]], "2" -> 
          Association[
           "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Function" -> Ramp, "$Dimensions" -> {10, 97, 97}, "$Rank" -> 3],
             "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[10, 
                NeuralNetworks`TensorT[2, {97, 97}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[3, {10, 97, 97}]]],
           "3" -> Association[
           "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
              "PaddingSize" -> {0, 0}, "Function" -> Max, "Channels" -> 10, 
              "$InputSize" -> {97, 97}, "$OutputSize" -> {49, 49}], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[3, {10, 97, 97}]], 
            "Outputs" -> Association["Output" -> NeuralNetworks`ChannelT[10, 
                NeuralNetworks`TensorT[2, {49, 49}]]]], "4" -> 
          Association[
           "Type" -> "Convolution", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[4, {20, 10, 4, 4}], "Biases" -> 
              NeuralNetworks`TensorT[1, {20}]], "Parameters" -> 
            Association[
             "OutputChannels" -> 20, "KernelSize" -> {4, 4}, 
              "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
              "Dilation" -> {1, 1}, "InputChannels" -> 10, "$GroupNumber" -> 
              1, "$InputSize" -> {49, 49}, "$OutputSize" -> {46, 46}], 
            "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[10, 
                NeuralNetworks`TensorT[2, {49, 49}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`ChannelT[20, 
                NeuralNetworks`TensorT[2, {46, 46}]]]], "5" -> 
          Association[
           "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Function" -> Ramp, "$Dimensions" -> {20, 46, 46}, "$Rank" -> 3],
             "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[20, 
                NeuralNetworks`TensorT[2, {46, 46}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[3, {20, 46, 46}]]],
           "6" -> Association[
           "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
              "PaddingSize" -> {0, 0}, "Function" -> Max, "Channels" -> 20, 
              "$InputSize" -> {46, 46}, "$OutputSize" -> {23, 23}], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[3, {20, 46, 46}]], 
            "Outputs" -> Association["Output" -> NeuralNetworks`ChannelT[20, 
                NeuralNetworks`TensorT[2, {23, 23}]]]], "7" -> 
          Association[
           "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Dimensions" -> {20, 23, 23}, "$Rank" -> 3, "$OutputSize" -> 
              10580], "Inputs" -> 
            Association["Input" -> NeuralNetworks`ChannelT[20, 
                NeuralNetworks`TensorT[2, {23, 23}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {10580}]]], "8" -> 
          Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {100, 10580}], "Biases" -> 
              NeuralNetworks`TensorT[1, {100}]], "Parameters" -> 
            Association["Size" -> 100, "$InputSize" -> 10580], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {10580}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {100}]]], "9" -> 
          Association[
           "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
            Association[
             "Function" -> Ramp, "$Dimensions" -> {100}, "$Rank" -> 1], 
            "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {100}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {100}]]], "10" -> 
          Association[
           "Type" -> "DotPlus", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[2, {2, 100}], "Biases" -> 
              NeuralNetworks`TensorT[1, {2}]], "Parameters" -> 
            Association["Size" -> 2, "$InputSize" -> 100], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {100}]], 
            "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {2}]]], "11" -> 
          Association[
           "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
            Association["Size" -> 2], "Inputs" -> 
            Association["Input" -> NeuralNetworks`TensorT[1, {2}]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`TensorT[1, {2}]]]], 
         NeuralNetworks`NetGraph`PackagePrivate`vports$$ = {
          NetPort["Vertices", "1"], 
          NetPort["Vertices", "2"], 
          NetPort["Vertices", "3"], 
          NetPort["Vertices", "4"], 
          NetPort["Vertices", "5"], 
          NetPort["Vertices", "6"], 
          NetPort["Vertices", "7"], 
          NetPort["Vertices", "8"], 
          NetPort["Vertices", "9"], 
          NetPort["Vertices", "10"], 
          NetPort["Vertices", "11"], 
          NetPort["Inputs", "Input"], 
          NetPort["Outputs", "Output"]}}, 
         TagBox[GridBox[{
            {
             TemplateBox[{PaneBox[
                TagBox[
                 GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-11., 6.735557395310443*^-16}, {-10., 
                    6.123233995736766*^-16}}], 
                    
                    LineBox[{{-10., 6.123233995736766*^-16}, {-9., 
                    5.51091059616309*^-16}}], 
                    
                    LineBox[{{-9., 5.51091059616309*^-16}, {-8., 
                    4.898587196589413*^-16}}], 
                    
                    LineBox[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}}], 
                    
                    LineBox[{{-7., 4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}}], 
                    
                    LineBox[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}}], 
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    
                    LineBox[{{-12., 7.347880794884119*^-16}, {-11., 
                    6.735557395310443*^-16}}], 
                    LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-10.4, 
                    6.368163355566237*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-9.399999999999999, 
                    5.755839955992561*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-8.4, 
                    5.143516556418883*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-7.4, 
                    4.531193156845207*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-6.4, 
                    3.9188697572715305`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    3.3065463576978537`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736762*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    2.0818995585505003`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-11.4, 
                    6.980486755139913*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736757*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-0.4, 
                    2.4492935982947065`*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}]}, {
                    GrayLevel[0], {
                    AbsolutePointSize[5], {{
                    Hue[0.61, 0.75, 1], 
                    TagBox[
                    PointBox[{-11., 6.735557395310443*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    TagBox[
                    PointBox[{-10., 6.123233995736766*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.38759999999999994`, 0.57, 0.], 
                    TagBox[
                    PointBox[{-9., 5.51091059616309*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    Hue[0.61, 0.75, 1], 
                    TagBox[
                    PointBox[{-8., 4.898587196589413*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    TagBox[
                    PointBox[{-7., 4.286263797015736*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.38759999999999994`, 0.57, 0.], 
                    TagBox[
                    PointBox[{-6., 3.6739403974420594`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[1., 0.4, 0.], 
                    TagBox[
                    PointBox[{-5., 3.061616997868383*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-4., 2.4492935982947064`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    TagBox[
                    PointBox[{-3., 1.8369701987210297`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.35], 
                    TagBox[
                    PointBox[{-2., 1.2246467991473532`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    TagBox[
                    PointBox[{-1., 6.123233995736766*^-17}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-12., 7.347880794884119*^-16}], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{0., 0.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}}}, {{
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-11., 6.735557395310443*^-16}], 
                    Offset[{0, -5.5}, {-11., 6.735557395310443*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-10., 6.123233995736766*^-16}], 
                    Offset[{0, -5.5}, {-10., 6.123233995736766*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-9., 5.51091059616309*^-16}], 
                    Offset[{0, -5.5}, {-9., 5.51091059616309*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-8., 4.898587196589413*^-16}], 
                    Offset[{0, -5.5}, {-8., 4.898587196589413*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-7., 4.286263797015736*^-16}], 
                    Offset[{0, -5.5}, {-7., 4.286263797015736*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"6\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-6., 3.6739403974420594`*^-16}], 
                    Offset[{0, -5.5}, {-6., 3.6739403974420594`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"7\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-5., 3.061616997868383*^-16}], 
                    Offset[{0, -5.5}, {-5., 3.061616997868383*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"8\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{0, -5.5}, {-4., 2.4492935982947064`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"9\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{0, -5.5}, {-3., 1.8369701987210297`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{0, -5.5}, {-2., 1.2246467991473532`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"11\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-1., 6.123233995736766*^-17}], 
                    Offset[{0, -5.5}, {-1., 6.123233995736766*^-17}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-12., 7.347880794884119*^-16}], 
                    Offset[{0, -5.5}, {-12., 7.347880794884119*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {0., 0.}], 
                    Offset[{0, -5.5}, {0., 0.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"10\[Cross]97\[Cross]97\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-10.4, 
                    6.368163355566237*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"10\[Cross]97\[Cross]97\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-9.399999999999999,
                     5.755839955992561*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"10\[Cross]49\[Cross]49\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-8.4, 
                    5.143516556418883*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"20\[Cross]46\[Cross]46\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-7.4, 
                    4.531193156845207*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"20\[Cross]46\[Cross]46\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-6.4, 
                    3.9188697572715305`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"20\[Cross]23\[Cross]23\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552195`*^-16, 5.5}, {-5.4, 
                    3.3065463576978537`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736762*^-17}], 
                    InsetBox[
                    FormBox["\"10580\"", TraditionalForm], 
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"100\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-3.4, 
                    2.0818995585505003`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"100\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox["\"3\[Cross]100\[Cross]100\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552166`*^-16, 5.5}, {-11.4, 
                    6.980486755139913*^-16}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736757*^-17}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-0.4, 
                    2.4492935982947065`*^-17}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736766*^-17}]}, FontColor -> 
                    GrayLevel[0.5], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, 
                   
                   DynamicModuleBox[{
                    GeneralUtilities`Graphics`PackagePrivate`vpos$451024 = \
{{-11., 6.735557395310443*^-16}, {-10., 6.123233995736766*^-16}, {-9., 
                    5.51091059616309*^-16}, {-8., 
                    4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}, {-12., 7.347880794884119*^-16}, {
                    0., 0.}}}, 
                    DynamicBox[
                    Typeset`ToBoxes[
                    If[
                    Not[
                    IntegerQ[
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]], {}, {
                    AbsolutePointSize[10], 
                    Opacity[0.2, Black], 
                    Point[
                    Part[
                    GeneralUtilities`Graphics`PackagePrivate`vpos$451024, 
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]]}], 
                    StandardForm, Graphics], 
                    TrackedSymbols :> {
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$}], 
                    DynamicModuleValues :> {}]}, 
                  ImageSize -> {810., 25.680000000000046`}, AspectRatio -> 
                  Full, PlotRangePadding -> 0, 
                  ImagePadding -> {{19.5, 22.5}, {15.5, 10.179999999999998`}},
                   ImageMargins -> {{0, 0}, {15, 15}}, 
                  BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 
                    None), Method -> "Preemptive", PassEventsDown -> 
                   Automatic, PassEventsUp -> True}]], 
                Scrollbars -> {True, False}, ImageSizeAction -> "Scrollable", 
                ImageSize -> {600, Automatic}],FormBox[
                TemplateBox[{
                  StyleBox["ConvolutionLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["ElementwiseLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["PoolingLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["FlattenLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["DotPlusLayer", 
                   GrayLevel[0.35], StripOnInput -> False], 
                  StyleBox["SoftmaxLayer", 
                   GrayLevel[0.35], StripOnInput -> False]}, "PointLegend", 
                 DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.61, 0.75, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.61, 0.75, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0.4, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0.4, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #4}, "RowDefault"]}, {
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.29, 0.29, 0.83]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #2}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.35]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #5}, "RowDefault"]}, {
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.38759999999999994`, 0.57, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.38759999999999994`, 0.57, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #3}, "RowDefault"], 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.78, 0.64, 0.98]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #6}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{2, 2}, {2, 2}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.61, 0.75, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.61, 0.7499999999999999, 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "Hue[0.61, 0.75, 1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.61, 0.75, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.61, 0.75, 1], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.29, 0.29, 0.83], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.19333333333333333`, 0.19333333333333333`, 
                    0.5533333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.29, 0.29, 0.83]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.29, 0.29, 0.83]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.29, 0.29, 0.83], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.38759999999999994`, 0.57, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.25839999999999996`, 0.38, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.38759999999999994, 0.57, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.38759999999999994`, 0.57, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.38759999999999994`, 0.57, 0.], Editable -> 
                    False, Selectable -> False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.4, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666667, 0.2666666666666667, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1., 0.4, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.4, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.4, 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.35], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.23333333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "GrayLevel[0.35]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.35]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.35], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.78, 0.64, 0.98], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.52, 0.4266666666666667, 0.6533333333333333], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.78, 0.64, 0.98]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.78, 0.64, 0.98]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.78, 0.64, 0.98], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                    "}"}], ",", 
                    RowBox[{"LegendMarkerSize", "\[Rule]", "12"}], ",", 
                    RowBox[{"LegendMargins", "\[Rule]", "2"}], ",", 
                    
                    RowBox[{
                    "LegendLayout", "\[Rule]", 
                    "GeneralUtilities`Graphics`PackagePrivate`legendTable"}]}]\
, "]"}]& ), Editable -> True], TraditionalForm]},
              "Legended",
              DisplayFunction->(GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> Automatic, 
                BaselinePosition -> {1, 1}]& ),
              Editable->True,
              InterpretationFunction->(RowBox[{"Legended", "[", 
                 RowBox[{#, ",", 
                   RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
            {
             DynamicBox[ToBoxes[
               If[
                IntegerQ[NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                Item[
                 NeuralNetworks`NetGraph`PackagePrivate`vportInfo[
                  Part[
                  NeuralNetworks`NetGraph`PackagePrivate`vports$$, 
                   NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                  NeuralNetworks`NetGraph`PackagePrivate`inputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`outputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`vertices$$], 
                 Alignment -> Center], 
                Item["", ItemSize -> {0, 0}]], StandardForm],
              ImageSizeCache->{0., {0., 9.}},
              
              TrackedSymbols:>{
               NeuralNetworks`NetGraph`PackagePrivate`selection$$}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         DynamicModuleValues:>{},
         Initialization:>{NetGraph}],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       BaselinePosition->(Top -> Scaled[3])], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{{3.681062633585378*^9, 3.6810626762533455`*^9}, 
   3.6810627239062405`*^9, 3.6810632378683786`*^9, 3.6810633714295187`*^9, 
   3.681063685098386*^9, 3.6810650791081886`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "[", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt279PE2EcBvBGF0f/Bf8LN+PgIBPBSJQ2QlvagmlLaUnUgcmpC5MTi5OL
k5OLE9HSIrQotLYOTkwsTP4BPuRMc+Ftj/Z6d8975Ek+kNLp/T5378877mU2
FvK3EolE7Q5+LaRfPaxW02+e3MUfT8u19UI5t/q4vJUr5Kr3M7fx5er/n8vP
W7//ioiIiIiIiIiIiIjIjVfqNt1qgwt6k+yx0TvJtXdS+4vPvj4YJ9mYz7br
xdM9emtZEaF8hOARkWmpMZc9eov7jd7+aGz2z1DvVBGZlltFpE2vJTy1/nm+
8+75t0czBjWUOdyu/PpDrytwuA28ByV/0CuLJ1/o1QUI5aCowIMaWjv+QK8x
ECgkvJSGMAbGfYGR77yPIKjh8EWv1zd0vciCcuDS0Kv2AYN5gFPe5GI31GMR
FcasNwlcoEpvQE9gcti2UIJyYKVKT2BCWB9Sel8ce2L6+2tuUPCimabncC0M
6fSgHOvHH+lpeJt9XxzYrdUq0NPwFupeZlo276xL3SY9Hzebu2G2Xafn47Zy
UKVnMs6055xhw9LFzg01WkUPx2TnkIVW0ZMx2Xk4b9vA7nj58zM9GRNaRU/G
ZOeRKSZoejKmfGeXnsyIrH58oicTl6zsHK9wBenJmCq9AT0Zk51P9mv9c3oy
JmsfT9OP+Eyb/TN6LCNlDrfp4bjZfOJn21Ro5yTowJBlVTcsd4/omXhYOajS
I3Kk9hfpaXizZ6eTa+/Q07gWRlR6UEuNOWtnQLfoX2Mw2bllHok7aiUb83Ye
h47EevHDYece0APriCbbrtNr9yH6N0CWW8UY9b4rohy4sKDCYphesm9oPK51
NEHZ+chmurgGF2E/Y73senG+o64I721kXIj4jlHjlLrNVDMZYEpYR8VueTAV
rCVmf5SPLUy+s3vzbicTakSl/l6+RUpYisRirxcsLO8R2iR7bQSLiOx84B4x
TPfOP6IiOrfi6R6+jNc72CIiIiIiIiIiIiIiIiIiIiJC9w936T07
     "], {{0, 100}, {100, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{100, 100},
   ImageSizeRaw->{100, 100},
   PlotRange->{{0, 100}, {0, 100}}], "]"}]], "Input",
 CellChangeTimes->{{3.6810627256988096`*^9, 3.6810627415943546`*^9}, 
   3.681063376947357*^9}],

Cell[BoxData["\<\"Disk\"\>"], "Output",
 CellChangeTimes->{{3.6810627369312725`*^9, 3.6810627428493705`*^9}, 
   3.681063377569634*^9, 3.681063687965041*^9, 3.6810650823517933`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"validation", "=", 
   RowBox[{"randomExample", "[", "100", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6810627471955357`*^9, 3.681062764567012*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"validation", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.681062782209035*^9, 3.6810627858466797`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0LEJwlAQgOGgjaUrOIGthY2lbcQBEhKDTYREEKdwEVuXcRojuMOd8MF3
j7tX/qv6Up5mRVGMi+kpq9tuGKr7YTkdx348d33b7Ptr27XDpp5Pn81vvvv7
tQYAAm2fj4TCs2illVYJhWfRSiutEgrPopVWWiUUnkUrrbRKKDyLVlpplVB4
Fq200iqh8CxaaaVVQuFZtNJKq4TCs2illVYJhWfRSiutEgrPopVWWiUUnkUr
rbRKKDyLVlpplVB4Fq200iqh8CwAAAAAAAAAAAAAAADw1z4hhml6
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Rectangle\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0LEJwkAUgOGgjaUruIWdWNpGHCAhMdiccBHE0incwFFcSyM4g/rCB987
7l53/6I+lvtJURT9bDjK6rzOubps58Njl/pDl9pmk05t1+ZlPR2WzWfe9+tz
BQAAAACMwON2/4Kff1Mrrf6WVlpppVUUWmmllVZRaKWVVlpFoZVWWmkVhVZa
aaVVFFpppZVWUWillVZaRaGVVlppFYVWWmmlVRRaaaWVVlFopZVWWkWhlVZa
AQAAAAAAAAAAwLi9AG1/CcE=
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Rectangle\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2j9LQlEYgHGppbGv0O4QNFSCgUsUBYJSQ0ikdBMTr+ENQ6mkKJKK/mc4
1NDa0NDS0tDQ9+oNGoKGTl49L6ce+BXm5Ptc7+lcvUO5cmqlLxKJBAPyK5Xd
SFQq2Vp6UP6Y84NC3veWp/11L+9VxnL98uTy58/H4+h43nXZ+vbt240F6pOG
lPSqdkK53iqRXmu/XtPqR6OTxdOnc2uhnG5VbO7aDOVuq9hMyebZ53Srertp
OZSjrWRJtx/K0VbB2T6tDLVermhlYioTqIRysVX5eI9Whi6eL2llYjhe0Arl
XCvZgtLKkOLC7lyrdGGDVoYWKnVaGZr3a7QyxHplbiJZppWhkcQqrczZ/4jP
3VbV6wNaGVL8V6g++2/JkqV1GqrP3oGtu0NaGdK60lEfvDPNhxNaGbJ5G4Pr
raIaq5b6yB2zfOOH062i1j+iUZ83JJt3gKgPG561hUt90vBkJ79zf0QrQ8Px
Qq+/Y5XDoT5mFy1WN3sUSg6EHA71AbtrKhMcPZ52sdLF8+W8X1Ofq3dkLxH+
q/zWy5XXaPy9t9N3MqNM2tnNt1JJtiKjk0X1KSyT7b1EM7nWlrCSSM5i9des
LjZTkg5C0n01u7QuT04ky+qvEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/H
Oww5Uzs=
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0LEJwkAUgOFDG0tXcAtbSzuJOEBCzmAT4SKItWOIU7mQEdzAIj744HvH
3evuXzXn6jhLKQ2L8ajq66aU+rZfjo9DP5y6Prfb/pK7XNbNfFy23/ncH88m
ltd9N5XJ/66VVv9AK6200ioKrbTSSqsotNJKK62i0EorrbSKQiuttNIqCq20
0kqrKLTSSiutotBKK620ikIrrbTSKgqttNIKAAAAAAAAAAAAAAAAAAAAAPjR
G2xy8SE=
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Rectangle\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt279rE2EcBvCii6ODi1MRujh16aAuQcigDhVaHXSI9EesWowhDTUSFFQI
ATu0FRKoFGqFChLBgIRCilChVGiH4NDFf8ZHTsLRN7kml7t73tMHPi1ppvf7
3L0/73ph+snE/VNDQ0MLZ/BrYurp1Vxu6tnkWfxxO7PwcC6Tnr2eyafn0rlL
06fx5ezfnz+fx47OiYiIiIiIiIiIiIiIiIiI/LdSzYTb5Z/n6U2yx+T3sdW1
xf1C7dej3W4O8vVqpTiznaS3lhURykcIHhGZWtnG+tuXuN/o7Y9G8nAE9fYV
kaleqiBtei3hSbSGl9azR5mdAYNq21wuXftxkV5X4HAbeA9K/qBXPvh6g15d
gFAOigo8qLbnW/foNQYChYSXUhvGwLgvMF5/SEcQVHv4otfrG7peZEE5cGno
VfuAwTzAKa93sRvqsYgKY9brBS7Q+N4oPYHeYdtCCcqBlSo9gR5hfUjpfXHs
iR+X3nCDgp0X7+k5nAhDOj0oR+HTXXoa3gbfFwel8eodPQ1voe5l+mXzzjrV
TNDzcbO5G1YrRXo+brXyCj2Tbvo95wwbli52bqjRKno4JjuHLLSKnozJzsN5
2wZ2x+MvN+nJmNAqejImO49MMUHTkzGVN+bpyZhyn2/Rk4lLVnaOV7iC9GRM
43uj9GRMdj7ZT7SG6cmYrH08TT/iMyUPR+ixdLS5XKKH42bziZ9tU6Gdk6AD
Q5ZV3fDOtyv0TDzUyiv0iBz7hRo9DW/27HRW1xbpaZwIIyo9qFa2Ye0M6Bb9
awwmO7fMHXFHrYN83c7j0I5YL3447NwDemAd0VQrRXrtPkT/Bki9VIlR7zsm
yoELCyoshukl+4bG41pHE5Sdj2z6gk4R9jNWXI5Y31HHhPc2Mi5EfMeoblLN
xG5xK8CUsI6K3fKgL1hLDP4oH1uY8sb8v3c7mVAjKvX38i1SwlIkFnu9YGF5
j9B62WsjWERk5wP3iGG6d/4RFdG5zWwn8WW83sEWERERERERERERERERicxv
dKWbdg==
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0LEJwlAQgOGgjWVWcAtbG8E2YmFpSAw2ERJBrJ3BCV3ECK4gd8gH3z3u
Xvkv60t1mhVFMS6mpzre1sNwvO/K6dj347nr22bbX9uuHVb1fPpsvvPZn5tX
uEP5SCg8i1ZaaZVQeBattNIqofAsWmmlVULhWbTSSquEwrNopZVWCYVn0Uor
rRIKz6KVVlolFJ5Fq79sBQAAAAAAAAAAAAAAAAAAAAAAAAAA8Gtvd7PLTA==

       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Rectangle\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0LEJwlAQgOGgjaUruIWtpW3EARISg02ERBAHcgdnsrayMoI73IkffPe4
e+W/qk/lYVYUxbiYnrK6bIahuu6W07Hvx2PXt822P7ddO6zr+fTZfOezt887
AAAAAAAAAAAAAAAAAAAAAAAAAADAf7o9XgmFZ9FKK60SCs+ilVZaJRSeRSut
tEooPItWWmmVUHgWrbTSKqHwLFpppVVC4Vm00kqrhMKzaPXrrd56I0Lk
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Rectangle\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0LEJwlAQgOGgjaUruIWtpW3EARISg02ERAhO5gRO4SgWGsHKBe6KD757
3L3y39SX8rQoimJczU9ZTbthqG6H9Xwc+/Hc9W2z769t1w7bejl/Nr/57u/X
BAAAAAAAAAAAAAAAAAAAAAAAAAD8edyfeYTX0EorrTIL76OVVlrlEV5DK620
yiy8j1ZaaZVHeA2ttNIqs/A+WmmlVR7hNbTSSqvMwvtopZVWeYTX0EorrTL7
ALWm1/k=
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Rectangle\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0LEJwlAQgOGgjaUruIWtpW3EUiQhMdhESARxCwdwP3ewMoI73AkffPe4
e+W/qi/laVYUxbiYnrK6bYahuu+W07Hvx3PXt822v7ZdO6zr+fTZ/Oa7v58P
AAAAAAAAAAAAAAAAgCReh2NC4Vm00kqrhMKzaKWVVgmFZ9FKK60SCs+ilVZa
JRSeRSuttEooPItWWmmVUHgWrbTSKqHwLFpppVVC4Vm00kqrhMKzaKWVVgmF
Z9FKK60SCs+ilVZaJRSeRSuttEooPItWWmmVUHgWAP7OB+xz/s0=
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Rectangle\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0LEJwlAQgOGgjaUr2DuAnVjaRhzAkBhsIiSCiMu4hRO5hxGcwTvkg+8e
d6/8F9W5PE6Kohhm41Merpu+P9x28/HYd8Op7Zp6212atulX1XT8rL/z2deP
JQAAAAAAAAAAAH/p/nomEZ5CK620Si48kVZaaZVEeAqttNIqufBEWmmlVRLh
KbTSSqvkwhNppZVWSYSn0EorrZILT6SVVlolEZ5CK620Si48kVZaaZVEeAqt
tNIqufBEWmmlVRLhKbTSSqvkwhNppZVWSYSnAAAAAAD4sTfs/TWV
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{100, 100},
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Rectangle\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6810627865066643`*^9, 3.681063391277109*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"result", ",", "validation"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6810628006092186`*^9, 3.6810628106627703`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Net\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["100", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Net\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["100", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.81`", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.681062814807774*^9, 3.6810634025467434`*^9, 
  3.6810636950460434`*^9, 3.6810651067729397`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6810628168354588`*^9, 3.6810628216789656`*^9}}],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{0.9334637523763428, 0.8670210137700551, 0.6614949948293126}, {
   0.9056642136715726, 0.5137107375785248, 0.004696714856570288}}, {{1., 0.42,
    0.}, {0.9017667767437736, 0.7404196793913843, 0.3640637571648088}}}, {{0, 
   0}, {2, 2}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["45", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "45", "\" examples of \"", "\"Disk\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.7627118644067796`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.9`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.8256880733944953`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{45, " examples of ", "Disk", " correctly classified"}], 
         Row[{"Precision = ", 0.7627118644067796}], 
         Row[{"Recall = ", 0.9}], 
         Row[{"FScore = ", 0.8256880733944953}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["5", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "5", "\" examples of \"", "\"Rectangle\"", 
             "\" misclassified as \"", "\"Disk\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.12195121951219512`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.1`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{5, " examples of ", "Rectangle", " misclassified as ", "Disk"}], 
         Row[{"Row fraction = ", 0.12195121951219512`}], 
         Row[{"Column fraction = ", 0.1}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["14", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "14", "\" examples of \"", "\"Disk\"", "\" misclassified as \"", 
             "\"Rectangle\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.23728813559322035`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.28`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          14, " examples of ", "Disk", " misclassified as ", "Rectangle"}], 
         Row[{"Row fraction = ", 0.23728813559322035`}], 
         Row[{"Column fraction = ", 0.28}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["36", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "36", "\" examples of \"", "\"Rectangle\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.8780487804878049`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.72`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.7912087912087912`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{36, " examples of ", "Rectangle", " correctly classified"}], 
         Row[{"Precision = ", 0.8780487804878049}], 
         Row[{"Recall = ", 0.72}], 
         Row[{"FScore = ", 0.7912087912087912}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "59", "\" example\"", "\"s\"", "\" of class \"", "\"Disk\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.7627118644067796`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{59, " example", "s", " of class ", "Disk"}], 
        Row[{"Precision = ", 0.7627118644067796}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "41", "\" example\"", "\"s\"", "\" of class \"", "\"Rectangle\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.8780487804878049`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{41, " example", "s", " of class ", "Rectangle"}], 
        Row[{"Precision = ", 0.8780487804878049}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "50", "\" example\"", "\"s\"", "\" classified as \"", "\"Disk\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.9`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{50, " example", "s", " classified as ", "Disk"}], 
        Row[{"Recall = ", 0.9}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "50", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"Rectangle\""}, "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.72`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{50, " example", "s", " classified as ", "Rectangle"}], 
        Row[{"Recall = ", 0.72}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{1.5, 
       FormBox[
        RotationBox["\"Disk\"", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["\"Rectangle\"", BoxRotation -> 0.], 
        TraditionalForm]}}, {{1.5, 
       FormBox["59", TraditionalForm]}, {0.5, 
       FormBox["41", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["50", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["50", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"Disk\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"Rectangle\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.6810628222961855`*^9, 3.6810634054257107`*^9, 
  3.68106369622217*^9, 3.681065108711933*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"validation", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6810651636613045`*^9, 3.68106516534494*^9}}],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt0DEKwkAQQNGgjZV4BW9ha2mreIAEY7CJkAjiPbyQja2nsTeCtZYzyIM3
y+5Uy59Xx/V+VBRFPxmOdXledl152cyGx7btD01b71btqW7qblGNh+XuM+/7
9XH77j59JvTz2yHCs2illVYJhWfRSiutEgrPopVWWiUUnkUrrbRKKDyLVlpp
lVB4Fq200iqh8CxaaaVVQuFZtNJKq4TCs2illVYJhWfRSisAAAAAAAAAAAAA
AAAAAAAAAADgv70AQZBCFA==
     "], {{0, 100}, {100, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{100, 100},
   ImageSizeRaw->{100, 100},
   PlotRange->{{0, 100}, {0, 100}}], 
  "\[Rule]", "\<\"Rectangle\"\>"}]], "Output",
 CellChangeTimes->{3.6810651657958083`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<image\>\"", "\[Rule]", 
       RowBox[{"First", "[", "v", "]"}]}], ",", 
      RowBox[{"\"\<actual\>\"", "\[Rule]", 
       RowBox[{"Last", "[", "v", "]"}]}], ",", 
      RowBox[{"\"\<prediction\>\"", "\[Rule]", 
       RowBox[{"result", "[", 
        RowBox[{"First", "[", "v", "]"}], "]"}]}], ",", 
      RowBox[{"\"\<features\>\"", "\[Rule]", 
       RowBox[{"Map", "[", 
        RowBox[{"Image", ",", 
         RowBox[{"ng", "[", 
          RowBox[{"First", "[", "v", "]"}], "]"}]}], "]"}]}]}], "|>"}], ",", 
    RowBox[{"{", 
     RowBox[{"v", ",", "validation"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6810651512971983`*^9, 3.681065214783104*^9}, {
  3.681065380600689*^9, 3.6810654214156303`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 10, "Length" -> 100, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"image", "actual", "prediction", "features"}, {
            TypeSystem`Atom[Image], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Disk", "Rectangle"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Disk", "Rectangle"]], 
            TypeSystem`Vector[
             TypeSystem`Atom[Image], 10]}], 100], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "image"} -> 1, {All, "actual"} -> 
           1, {All, "prediction"} -> 1, {All, "features"} -> 5], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "image" -> TypeSystem`PackageScope`AtomShape[60], "actual" -> 
              TypeSystem`PackageScope`AtomShape[86.4], "prediction" -> 
              TypeSystem`PackageScope`AtomShape[86.4], "features" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`MulticolumnShape[2, 5, 60], 10, {
                All, "features"}]]]], 10, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[243624660], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"image", "actual", "prediction", "features"}, {
            TypeSystem`Atom[Image], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Disk", "Rectangle"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Disk", "Rectangle"]], 
            TypeSystem`Vector[
             TypeSystem`Atom[Image], 10]}], 100], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[243624660]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"image\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"image\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2110262939][{All, "image"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[All, "image"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"actual\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"actual\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2110262939][{All, "actual"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[All, "actual"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"prediction\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"prediction\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2110262939][{All, "prediction"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[All, "prediction"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"features\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"features\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2110262939][{All, "features"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[All, "features"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Center, Baseline}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft}, {
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[
                   TagBox[
                    RasterBox[CompressedData["
1:eJzt0L9LAmEcx/GnWqKgn0NgU/9Fg4tjqxFEU4qntFxwCuFaQ6uQV39Crbkf
pOedqKEVOZb0L9gp2NRX+oF7zzP1htcddzd87s2zlT5OZmeVUvl5uSVTJwnH
SRV3V+Rlz84f5Wwrs2MXrJzlbKfn5GP8+5o8l7vVX+59rfTq3Zz1WmocrEXh
0lCXYDWSzcrBW6nvue3a9E//iGaaaaaZZppppplmmmn+L80z42A9CpeHusgJ
yKbB5tNeW33IjxqLI13kqGWzsm+m+cW7Pn9uLIz8zUF9410XPzaQzdvDvpyJ
3uaJh6psXgX1y9DXSzbdpi/7moN/si+e7kwoP5oJ/tIxw1wwAAAAAAAAAAAA
pnwCOSdJHQ==
                    "], {{0, 60}, {60, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                    ImageSizeRaw -> {60, 60}, 
                   PlotRange -> {{0, 60}, {0, 60}}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[1, 
                   Key["image"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Rectangle", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[1, 
                   Key["actual"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Rectangle", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[1, 
                   Key["prediction"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzdXHtwTmcaz0XYmunSaAnDapa41u7WJRXFmzVZ7KgdJVhxv81StWi1lkVs
u6qNmYzbBhWxOrWCuDTaUDs67reulq2KTVm+hIicbFw6VVR9+7HnzOz81m+e
5z1J7PBH5plzvue9PM/vPNf3nMSOmtR3bERYWFhn969aWNiIXiMdE+HS+Lfe
j672gmM2HpwzuckGx7zdonx7yyWlJnlo86G1Gu8xRw7NiO2SVWAulzS4fWpF
odkVNvtE9zcCJjTVnHo5gbvz3KPsWqISf4TPeaX5Z8W8nnFnf8AkrH66/9pn
Aiar7v4e4YuKzIkD21/f3P6KqZ7WKOJ3U8pM1oSRi/74rGM2n0mt+8QExwSD
weF39Rbm6s+7jnSvvfuo50i4j/yRwB8Bv+N9pLieN66Di+8GAd8rgG+4gG+4
QBm/Lb44Dtdh88928e3o4ruS4LvSxXejgG84wcO7Dof7yI/XthTn9Wh7gm8/
F99DAr4eDcmZqsFV4vfu2/6uXd/jQ3w9+/3CxbcG2G+Oi+8dF0+knj69a6Zv
pDje9ndGmf2+A/Z7mPhntA9Pb1r7ZfyIH9qvLb5s/lmAb6aL75cuvlEuvqtc
fDdVkv0yHCpqv2xeZr99XXwPEvtFf3gH9CvFRcbv3cffcR2P4jjJf3t8Mwm+
JwBftN/vwW6/B7zRfhkOyM9wk35n/h/xzXHxnecz/rJriUr8aL/aeaX5tfEX
7dfTdxBw9vTq3a8GemZ5UVB4HtBfSPEX50X7fQfi72HAdzexX/SPkv0yftv4
i+Mk+2X+GeMv5lcbBPvFeBkJemb5FcbXIHl+8D5S9vx0APvF/IrVRw97/oz1
Edovy69Y/EX7w3qFUcm+tfUR1mGIL9pvf+Kfmf0+bPGX2S/D1/PPLE+KhOso
onekOB7xQruXcMXnzvPP64h/lvobD7t/fk6Iv5kkv0IahGuMg8zucTxS6Xec
F/0+4pvm0z8/rPXRcyR/Zvhq699IuNbWt2x+ieK8Hu4s/iZDfwPxlfSLODAq
8Uv263f+2YL91gB8sf5FinpF+2X4svG2VKp/c4T8mdmvlN9I+RW7b/u7dn3M
r1h9JOVXkt/F+ojVvzjeb32EcRrtl/Un0T+z/IpdS1Til/D1Oz/Wv6uE84WN
Qv2LeGB9xPpa7PmwpZhneXijf04D//ypkD+z+KvNr5DfNv5K+RWbn50ffUns
18OX2Q87D8L8GCnjZ/1LKX/HeSV8Wf/qUcmftedHGyzPB9m1hK/kh6XnC+N4
Oxff9cL5kVQfPez1byY5P6po/izlV5XVv2J5W7cWTYP1QvjOuj5idFwI3+N1
DyasXVxqjscNOvt1+h5TcGN8yto9Beaz4JCeE3IKTcSPBk6YtiRg9hyYVV7n
k4DZ61J2LVGJf6/PeaX5B03fPacgP2AWbvtrlyQTMO/lvnFrxuois3Nv+syt
IXyzX4l5pcO0MrNsyd7ktiF8G47vszxuAtd7mIAvy69Y/PaLL+ZXu5c9nrKv
l2N+Hz9w6Nz1jml17MTppGWlpqRB9pqYubvMyMx2KcfO/sPsOb0ibX7nQjMp
f/HnRxsFzNb8Jhtb9AyYj1yaC9dbBfoB4c8l8+E6uWQcrsPm71g97bP3RwVM
jQYdpx/Zf84U3Wzx5MWEIjNp25qXA62umE+jcv4Q1r/MtH0vITq3nWOWxncb
segl3s9Au9H2n/H3ysqvvOflerqTENfbMV0j2w1cn+OYvc6O9Kx5peb5H2xt
fub8IfPUL1I79Lh1xgRyDiV/1P282Rb19U9/nFhkUur33lZzXJEZ7NJBcM1o
ClC8P0iYD3/HcTgvm39d1OVbyalFpuHRiBadrxeavCYTL9+ue8G8Fiz5y4Ax
V0xs1ze3zzhXZk42anLpcHPHzLv2w7zGE/X1L9ZHrI+J4/3WR6w/mXmy3q05
AxwTX31K9cwsx5Qc3T2v79xS8/TVbxMymxaaTet/s6D5lEIzpKDntZihxabW
pY/3Z7cpNmM+fHbcpnh7Olr4fSRQNp79rr3vtFo5eF9SsTm4vM+Z1eUXzJX0
yQ3PJl40JTUy3pxYt9y0XhrVPfbdclP8ZP1L/Zo5pntqnS5bJjnmNtjtbdA/
608yXPD8GJ8bv/1J7zpt5zcNXx7imIz5f0qYl+aYk5vSPnk1r9S0LvzbkqI1
JWZ1ywMrggsvmPlj8zodmVZs6qT8rGD6x8Um+qm3C45vKTa1XfqES6OB4v3a
lr8zyvhwP0g9vtiioVvmh+RYt/hYSsbUYlMwaleD8FUXTdf0NrnNApdMv5jh
beJnlJmo8XEtF0x1zGN1al6IHcX7z+GAl7a+YfwMf6m/gX7jzvkup/NDdHSv
hTt3hHA+N+bC4l+F5Hnpm/aXkj9wTOK1tn/u27jMJH6b3W55WJk5lTd52Ls3
HFPeNSMp9+b/0qvk2qOXhXGXhXE4P+NHiut81btFvdUhOTY5Lx46EpJr3wtJ
//r8jGOmRqd+sSrdMeMWPz58X6eQffy9ZuzS4Y4Z36hZ04b3sRfmX5l/rkbs
jOGrpez9yZu9FsbHheixiLwjM0PPZ+rGXR1eDeHcO/xUXvkvHbMq/0bbyR0d
0/q1q//MSAz575gdwx7rFtrPmB5zvvp5SL7R/6HedeSY+1/jfaTSOKTeuhIf
44/e2O/5BiE5lg+cuS0+JNfUzt/l9unpmK2/HpveNMUxH25Ort88lE9lxn93
NCukn9oDZtdNUeQ3LP4+qPc3bJ8bdj7B6kA2Du9L4yR5JD62X1u5tPtn9a/k
n9k6tvqQ6i62b8wfPMryDDYO7yPF36XzMHxPhj0vGMe0crH9o7wYH737EUp8
2Dq2+kA71vp19B/oV1idz/yKlP9p/ZH2uZb6CNL+UF+25wvMj2rltfXP7L2e
qsKXyVPV+OJ+GQ5MLlt8cTzi+6Dfn7S1ZzZeq2e/eWFV4SvJxfbP4hryRQnr
+MVBkhfzc3Yuxfox1eC+1Mdh/RppnHQeJvHhOY20P+RDuaX943imZ/y+jOnJ
Vh+ID6vH2Pkjjmf+g42T8nTb805JbvY8auVi+2fxBMdHCftBfoaDVh843va9
LpbXS3msdn5bql0X+0Raudj+bd9vf9Dv19n6eYwvGM9QXik+Vlb9q+3bMX7t
/lBf2u+PtPmzJK9WH1KeyKgtviyvxvtIpXFItX13xq/dH+qL4Svl05gna+XV
6oO9f6WNcywPwfWl+FhZ+ZXk97TvSUj7Q32x51HKK7Xng37zK/ZdREXxtcWp
svDV8jF+v/hq98/yparG19Y/43mmR1mfTvKf2u87pH3dVvIxfu3+UF+sL8v0
xfyoVl6tPth7IVJfSZtnavt2lRV/JT6Wp7D9sfwK9aXND/9f71+x79Sk/gp7
r1Pqb0v9Ie04lt9p5WD5sLQ/1Jdt/0r6ftO2vyV9P8jsVqortH6WjcP70riK
1kdsv7ZyafeP49FOtf7Xbx2Ifpr5K0a19ZHkdx9Uf4PpUeJjckv9DRzP9CzV
R3714bf+xX3Z1m9VRW3X9btPLR7SOOl+Ran2nEvKH3D8o26/krzMfrE/GYT5
Ktt+MU5jv1Kqr9B+tX0G7fy2VLsu+kmtXGz/OA/6R1bnsryosvQknStXlX+u
Kn+kXZfFQUkuW//MzvfZOn5xkORl37Exysax/F07TqobpH2xuk3Lr90fm4fV
j979KOW+JHltccN9YR4v5d3Sc4bjtHWCtl7T8rE+H9sf6z+ivtj+cTzTM+sz
MRy0+pDijNavS/W3FE8qKw5pz70Zv9/9Mfv1G88leW3zI/Z/mSS5ooBq9Ybz
a+Wwfa5s/Sruj527oL6Y39P+/yv021JfUasPNq+kd8wXMG/A+oD5KdvzF+l5
xT6RZIfsO04p7qC+tP/vCs+PmD0xPVXW+ZGkd+n8SNunw/sVPT+S+NjzwPaH
fAw37fdl2u9/mZ5s9eE33kl9eKyv2Tgpj7ONqxWtf7XnC6z+lc4Xqiv9K1vH
Vh+SHH7zZ6k/I/X9/ebPrK+m5dfujz3PKD/Tl3ROJslrmz9LdRybXxt/JTkr
C1/pXIXFE9u6D/Wljb9Mz1L89Ysvm1fSu3R+9Kif7zN/5fd8X4pvtnJKz4cU
F7V6YHLi/NpxFfXPLF6z/SGfrdw4XqqnWB5R0Thk+3+1JP8s+Vn2fz8q6p8l
PrZfW7m0+2ffp7D9sO9TKuqf2XMkjWd5nRQHtfPbUu26WIdo5WL7Z++BaPtb
Un6slX/wqev31n3mevN719lJ+cPu91xp59V+f/Sg8NWui3WlLb6SvEGCb1X/
/42fuLiOXvDivfWzu9Ua+992rO1PYr6A59bS+yzs/TRpnNSPk/jYfm3l0u4f
x1cX9oP8DAcm5zrXXte6uCY2+22nu/TfwcRe5g==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[1, 
                    Key["features"], 1]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzt1F1L0wEUgPGthqAwbwRpKZm0zC5CRBCR2nGwC0WNNLyY2AvWCEFLA6V/
IoGJghYYgYL24rBXEKQsMIhO2tBaEi0QhnpRargUy0FF4shu+gK7GoPnB+f+
gcM5mbUXKj07TCbT4f8DAAAAAAAAAAAAAAAQbyYTGr79yEyWwMLqfnXl6pg5
yyg/75aOA/avb4dc4r3keVzdZNfI9bbIwec/HbHuRXSW6h2Wu0aBOm/f9BrW
GjlX9zFx82GHDm/7tssmGtX3ek/71MAxKfk+3DsX2Kux7kV0wpPhy/4ht7TO
fCn3n2rTDxfzrKne+5L9K8NysueGOIPjoYQzTTqykpo/dsspse5FdOwBf9VR
11mx1CxujhZ26bXu/sqJ3U/k73KopF8H5eWz5tl3V1o16HfnmedL2W+csaVX
hE6nFenaxs4MW0utfNpoT4nk9OiWy3e129qioc4HfbNzVTKaaPw+vi+L/xxn
7o2kG0l/bGJZ6Tv0/s0RPRHO+Ty+6pHmpKcvdk1XyMwrU3HBnVxNdoTXHwXN
3C8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxMg/lw6Ttg==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[1, 
                    Key["features"], 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztxUEJACAQAMHDJvYQ7GAE4d5WN4IPDeFjFpapc40sEdHet91JkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkuS/HtRYqAQ=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[1, 
                    Key["features"], 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
6z/JN2lhh+/mpSXr159cPUu9f+W0v0HxUdfSddL8nbMb41QQIwfPPV39GB85
uVx+JcWB0ivdJ93ny+bDvB3lcXzS54nia4HziXue0V6q/yfVT8lFu7x9flEv
ta+6+ilKnddcv0S6jtOD3yO+lBzMd/B7Tj/uFyWX+1yqj9KriwdFOf/lnkuO
T9d/qfjkrf9K/Unqv9zn7e2/TvtX3DlLxXddPt3zn8NXGoc5/RQ/h7u3fQcO
X1/nV9K6mePjni9Ovn3tgfqBkuNh5HD6PYx+ar23/UnUq4sHRXH+i/UVlR9S
7/khH1ePUXkk1oU2DWbkoL1UfSnVT8lFuyh/cdqfpPbV1/q5+s4pH0WRD/MF
bp8ovVJ7pPzS+avT+5bep65+Km+T5kFSPi5PxGsuPtsU45yuPRQ/fo52Oc1/
KPlcXiWtU6j3r7l94X7nxv3egqtzAon7CGLkUHNyyh5OP/fc/a9+P+hUP+X/
VDzg+KRxieLD+pA7D7AelcZd5OfkSutf6f1y+bPT+pfLe6j8W8qnm18hHz6v
XH5FnWOUPdT+c3LRLm/zKykeuvWRtH7RPU98xddGPN9cn8CpPdI+Btrl7fmr
K0dah1J5Nxd/qHqBmmdSlJuDov5A4v64+StlD8fHxVMuPkr1SfcV9XN2cPkV
9XxweYDNp5tfIR9Vr1Ny0F6Uo6ufiyuc/zh9v47Lr5z6LxV/KHkcn26c4eY0
3P1S70FwcZvST8lFu6j4xOmj9HL9K6l+Lm5y8Znj81V8Rnyl9urGZ1xHyZXG
R2l85vbLV/GZqrO4+lmXj6sDqTqP629QeqX2SPml9afT+5bep7T/ROWl0vmX
t/kgxSeNz7r5r7f83s7XOfnSOoHTT9VbnD1SPq7+lcYFzK8oOXjucfUvdT5y
crnPpfoovbp4SPXr9sV9/f61tP7XnQ847fP7am7h6/mClOJ8EH+XSMVxKR+1
jvr9I/Lh8xisaS/K0dVPyeXOOWqfuD6T7j5x+r85f53xf3P+/vd1uucvzo8o
OVweKq0XOLnc57rnL9d/9tX56zR/0OXj8gy8Rny5fXJqjxRHtMtb/9Wtj6T9
K0qPTT1wTdVdunwURT77+g6jrxXWObWH4sfP0S6n8ztKPnefHuF9Oc0n7xcf
9mucvj8ptUf6/iTa5W2eqytHiiPX/8e+t5T6ig/jkFO9vubXtcvX+yXVj3k4
9V419VxwfJydVP5O5cnU/0tA2YtydPV7Wx9Jf1+Geql99VY/V39wuEnXcXqo
+RzOzaTzQcoeKm+Rzkm5/MbpfFAXD2n+zL1Xhnbf7/frOHzRXpSjq5+SK+3v
S3FCve31fh3Gd2rOJeXTPUc4fKn5PmUvhy+nn5IrnZdy+qT7xc0Lpfo5O3T5
dPGl8hh8f5KSg3NUad6E/Jxc7nNdfFGvLh4U5c5t7nxxyue0v8H17fylv8Hd
J+JY2Oy5RyOmh9/7vi5qh1fn+f3Or3T1Os2vOP26tL32FamNa9G5gnu41uYd
WCGRRz1HUj5dfJFPWm9x+0XZ4xRfzr/aG1+Mu7a/2ri6H1q+6C79N/NjWfY=

                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[1, 
                    Key["features"], 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzlXWtwVdUVvuSFUgqCYmklhBCJppJCa8FHCCtQGUsRJAHiINVSpIBaCuJj
AhZIMDyEGQYkIA9NAhR5RRlgoDaIIEhKIhCRqQyPwdQEQoCbcwWq0Dxuz9h7
fvRrP9c+h4dy64yz5uyz99pr7++s5943xI8Yl/G7CJ/P1yP0f7TPlxbV0xKH
Dtx0y+IjNp05M6nXsIZa2VZaMOrIgwF5+q6Ckh/7zsiQrVNajy+tEt/7b68t
HxuQ/TsHJc49YYnv6/8CNywt6LJqc4cvLTl7uWVhRGJAEjIuTigsrZVzq2+N
fCjFL+0uRl6M6xSQ5yZmJv+1jSUTO5Ytq0v7et3/sX9NQjQSnmPIe+zH3mM/
rd2RJwrooBC+MxR8g9v/je++MMG3MITvmRC+HUL4+kP4xobwHRfCNwvwdfbP
B/vsA3zxPfZj77Gf1h5F+qWD/v4lhO/oEL6DQH/DHd+ziv42BoPyTfvsA31i
OLrFl1E2zqEZgG8x6G9mmNrnQrDPHUP41hrqr7b/iG+EIV6MRih8GL7pYJ8R
30Fgnz8KE3wd/1sTwjce7LOjv2MB3wbQX0efffAcBc9B0g/HI8XxQTIO/bBD
mf8dE8J3MOAbLvq7HOxzAsF3PODr7C/qp2afI0g/HM/sM9NfxBX7PRrCdzrB
F+OrcMEX/W9HEj+jfXb0xtk/R5+bwHM0PDt4YD8cjxTH+8i8iKtDNf+L+lse
ZvjWAL4sfp4E9tnZvyDsM+o32mXsh+OR4ngfmTcC9Nihg0P4ziL5EeIbrvEz
4ov22cG3Cewfy3/xPdpnt/kv6qVp/ovxleZ/D4QpvnHEPv+B2Oco0CPUZ9Rf
xAn1l9lXpt84juW/aJ+d/PeZMMe3APCNV/CdBPGVlv9i/QP1zUfGs/gK8WXj
UH8zIL4q/j+Jr/IN86PnSPyM+CHF+BlxcUsZvvg9afYZ8Q1X/c2H+gbTX8yP
cD/R7jL/y/pp8S+Lu3BcFBmP+S+rbzSGmf5i/svqk8w+Yx6Kz1h/Zv2wXatT
mY5zaDqJnx39fSxM65PLFf118qMJUH82xZfZZ6/4MvuM/d3Wn/F8MNzqk6b5
EfpfZ/8wP0X/jHEy9mP5LevHxkUq+pur+N/GMMt/85XzQZYf1YP+NkL+gudL
WGfGftiOFPuxcUx/HXyjUpP7J9n4Lus847YGG99DhcXpoxprZOHQVXlfFFZJ
zLM/iXjyV3Y8Oabu3ZKllmS+Mrfnym03Ll0fE7vzvY2W3B9b2eaJqICsyNve
Z092rSw6uKTk8s1+2fjalgWv2PhefuTu5ltsfLt03Xik/H+cL7C4CeOvax1f
aedH649XP14WrJUD7Q4+2+q+gMycvqRiZNIZ8befsi7Q9JRkvL27efeBX0hV
/AOT4soCUplQ/Nio4zcu3fxe6bzfHw7IpKlHp1YHA/LkO4GdF/oFZPjsW+bP
H1Erf/6k+/SSeNtur/iqR8vbLdlw+LcXG3rxfFfzv1rcpPlfrZ3hm73j0vc/
talEpgz8xYVa2XtTceoqW0/HnWq9deGjNfLpiaEPVid8Jp8PyIornlcj1rIL
J7sePC2Dk2ov+U/euPRQ51bzZx0/Le1++lKntX1qpDQxs/cfH6+WZnNGfzhm
9mnZvCvt3oqUgCys+zJr2q22nn98+uGOqf9tf1n9ivlfr/UrRhFfzH/3pW9o
XWPTF8fHlcb/wJK2vj6vnjtsydKBp9sP6eaXmgUdht8ztkq2fbAsr/fuSnn1
+YF3PFVdKcfqU2YUH62UIyF67CrTo/B8hFAcp8njvP912Zwhu0rseW67fWTL
16tk0RN/ilt+tEKmdK4Yfunlv8vBvpMbH2oekEfeGl0yoIUlbyRk7l/dzbw+
ie9R39ziy+IuzH/RflclDMmZZ9PZbdfWznnAkuHJ7ae16GdJZURM5O61lrz2
VO6Ye2173b/NsLzPtvnl52u6VZ885Jdpq/qXDyrXaW6IZgPNVcblKP1y4Dlb
mT8H6PIl+9fU7/VLYtnHM9Ma/TJ+9YSi0nZ+WdmYPfXDlWfl0o96F229fE5S
R+ycPfE3lvhXvNRz6c8sqYO4xnl2/HId4IvvsR97j/20dvT7Dp0eu7fivG13
9ozPOldq038kd25cJJY836pi3bE4S6rLPj/R+0StpE2enVacbPM5sP2drvfY
3/P7T6+b5YIuDdEl0F4A79+AfvmED/bH53yg+P4FOb/jzc623V1Q1K37nZYc
39z01K6HLRnwvRbWu4st6VH3w7vXZ1nyt9d39+ubYsm8vlHR8cLrk9r5/vW6
X4d0TfbL999k07yGYfXFNr5z2yfl3WyvY/LJD1qusJ/X72sVzL3P5lNdtGhD
J0uSYzM/eSHRknXFqfG//Aa6HqjTvgbai8i41eS96bxFCv+sF7/6qK1Nnxm5
bevhuyzpNfR8TPcOlmw6P3da8zsseatmWVKwiyVbcprt2GPvT7PFZT03pXJ8
se7A6husfsziY2086i2z79qz1m5K8T4R44f3JNzO4zZOYfIhP1O5MP661pTl
U+i/6+EZ+ZjWVZDWA2XzOu3o5zQ+jG8Twh/5ML5MTo1vBHmvrYP109qZ/2X3
D9zeM9Du12t8WN0Gz60ZH9bO4kqNauvS9o/N6/X+hiYn879oT1h+h/20efG7
YnU1nBe/T9wnrd6HcrJ7qqZ1PyYn8kU5osm8XuuTzI9o/pflZVqdBds1inKx
edEO4nyav2D1HlP/wu4ja/4X+bL8V1sH66e1s/t17F4uO48wtc9u7/uyfYw2
5MPqdV5/R6DlK9/V+89NgbLfJ7H7WszOI2V8fEp/9AtNDeVh7bhOjTL5MB/S
9o/N63ZfNXlxndr9PPaM7ab2WLNHbB6v9hnl9JpfsfwU/ReTg83r1T5rcjL7
ivKj32brdOt/2e9tcF70vygn48P4YlzE+Gi/B9LOd5Evxl+m+8H6ae1Mv9n3
ptU33MbPzjP7XQXTX4zXmZ4yOd3WGdjvRfD3KMgX5WDnR9o62D4yquVJXu2z
V3yxPsDmwTq9W3wxbzDFl8mH9Qxt/643vqb1Sa3+pt3X0/ji73fwPeoR64dy
srone8/sMpsX9Zftl6lcbB2a3Ci/dm8A56lT1u+V4nmYNu8/iV9jfBhfZzzr
z6i2Do0ve2+6H9q6sJ3lUcwPaveE3Nb7TP2v0456Ymqfka+WJ3j1vxpfZr+9
2metXbu/pT1rfEz5MvvJ5Nf6mcrp9js09TtMDvz7OV73VZMX+2N8xeJMrX5l
irPmx1kc3wB6YHpeiXy1ezSMsnUz/US+7L3buEYbj7gy/4120W0dnNXFkS+z
fw0wD9Y3ND44ntlVjKMYZetC+8zkiFTkcjsfiwNxnVh/ZnVafI/9TOt9Wr2V
1XG91p+Rr1YnNq0/s/0xrT9f6/s57O9veM2PNPvG4vkGwg/zgDoyH37H2H61
8iO2bpYfIV92Lqmtg/XT2ll9Eusf7BnbvcZXrF7K7DvOZxqvuD0nZ/KhnKg3
35X4iq1TyzNYHO9Wf9l3x/ihv3I7j9s6kKYvLK5gfNzWRa+UOvKgX2L3dbTz
P01/sR/TDzYv+jFT/UU58XfW2n0dpr9MLiYHm9er/jKcMK7S8n6MyzS9MM3L
Hb6svot+D/2vafyM86LfDMJ4pKb1Zy1+ZvN6jZ8RB9P4md1rYPVM03yX8cF4
gM2DfydMk4e1s7/zqZ23avmotn9sXrf7qsnLcEX7weJ//J5Yu2ncguep7B44
7qPGh/H1+ndO2LoZfsj3et9vZ7g4+8jOjdEuuNUD5Iv3q/E92mdcj3a+j/Ni
XIRxFFImH947QL4oB7sX6vV8n8WB7D4DO5/W4kOv/pfVXdj+s/N9Vk9jcTnb
Zy3/1fwh8mV5HZPLtC6o4ctwZfkuy++wn9v8l/k3dk8I8wxT/8vWa2qfmf9l
9XkmB/79HLYfpv5Xi/PZ/Q2Wl7A8wjQ/MsWX/U6LnS+Y4svuPXrFF88LkO+3
jS+7b4nzYn1SyzdNKbNH7JwD7ZypfUa+mh1llK2b2V/NPpvuB+untZver7vW
9Wftvgr2Rznd1p/d+l/m7zR8mdzXq/7M/CbqOa7nauW/KBfLKzFuZP3Y98bk
xPfafrJ1se8fn/G7ZPvB/AGT2zRPZ/hp8bq2P2wf2ffK5mX7qOkv+x4Zf1P9
ZXIxOdi8XvVXy5vQXl1pfuQ1/2V5m5Yfuc1/veZHbD81/4pyfFv/vsbV+v2v
2/iK5cXaudaV/n7X7XiUD/mZyuW1zueVOvLEADW9L3CllNV32LxOfoRy4vet
yc3+HTFNX9g6GkEuxvd6399w5PkXSdJpUw==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[1, 
                    Key["features"], 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztwzENACAQBLALTvDxKpBAwoz/jeVFMLRJ577rjCTVAQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAgP89+3gCJA==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[1, 
                    Key["features"], 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzt2XtQVFUcwHEwFNAZoobiEYgyJK8YzUVDIX+g+YAhZQRbHirKI80H8giY
IAZkangkiUIMKAk+kDBQ4ikpjQ5QpuCSTYANu8s2FaB7914ihSWCjtPyz5m5
s9Y/dS8/ZpjP7DIw7Hw5v3POsjTyyPaYeQYGBt66z78/OJjV9prUaHyKhQTG
0yvIjIOw8R/rmHwWfNP8M75N1sCq1O4vq205aEpJkD3+jQX6+4WuytB0Weyf
LPRavDjpsJSDkY252flaDWQelJjXfa6CvU23Uy+8w8E3a3pivbuE9/ptePr6
6Pp66Po2irSvkuo7RPWN0PXtEHjfeF3fEF3f9dT6FWvfQarvr7q+GSLpa0v1
Dafms4fI5zO9fkeovnsE3pdv/dLzWax9B3R9f6Dm82zf3bq+7QLt+xK1/4by
zOdmkfal5/MDav+dXb+dAu1rTfUN4ZnPYt1/5Xrmc4TA++pbv7N9W0Tet0/P
/vu1wPvGU33p+6/Y5/Ns32Fd36PU+hVLX/p+JPbzFT2f+e6/Qp3PfOfnubL/
iv3+a61nPktE3pe+/w6LrO/T3o/EOp+V1P2Xfv9ZLPsv3XeuzGeFnv1X6Pdf
vv8vzJXzs5LnfiSW9Uufr8J4zs9zZf2Kbf+dPV/FUfOZfv+5fo705Ts/C/X9
59Pah/4zpG/tayq3V0jfvKRHQaMfs1Bj7DA9kqaBLqvpy3E2HCRP/KJKULDg
ZlzscVTNQlFfqSxAwNo03FkiJbrUhDYnjrBQGXV8OWPJgUv3kOPdYQ2YXczP
8DivgqzWkqhlB578fZvGmQiwb3zZHwU9pK9nnE+zybMcFDpm5BXnsmAfeCZ4
7S4NzNc6VeW5crBGHty+wZuDDw3DjaXAwaYKra+hj3BV+nRcV5LX8VBhcfcs
8XxNeOqtnRw4X5HXju9jocCxfPV8rQpAE3KyMYaDY9tO5yq6hdf3mOVUzCdk
Pu2oyKzft4iDmy7miS3lLMxjCi+lD2qg33Vj7IZOFjRp0oD0dga2fX+5dT/D
gKTMqK13iIFXdfI9pp+nfdqv/9ufw/d7Je+9lsMOMyB7M2vtOTkD91IGU7K2
amDDhfr3c9wY+GhCdt8wdhBueEW6/v4eWdcVJxvTOoXXN8LZw8qCeK69t+KD
aRYmdkVO+ZLeh9wtpiMWc7D9Zf8DY1IWckcT75Vmq0Hx6Naw7KoawrSKfIM6
NYTyqO/r/7WFp+TV179Qg3Jg2qD/rBrMg0K63rBnoKUz4LmyQDWc2HwqYuXh
n8BSWquKOcLBlupVO/fcEV7f6Owxv/EZFpInk+xcyOOeKKmVJ3HBuo7Hx8dY
UOVUVl015+C+aaCZTwgHfX7WL+wO4qBNPeSwLli4NmVGGz1PPDxxZXz9Dg78
rK1/Xk5eV3mwcdKS1RwwC0MPlkZooHaTYUObKTmn+EiieyeF15f2kteK/VWk
95a+i/ayJ8+7v3szSsvCyIqczW8PsPBMUV5lDDlnFUuD31okYBfYyxbbEeXN
I7c/lbMQe6bZ5AF5XDQ+JT00zIJFAyystuMg67OZE+lknkXmlHwV8j/og/4z
nW3K06bI3/PryeFh7uRxrkTSVUL2KafvurZGkfP16Mr+4gLyfMkNU6fWGeGv
XxRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURQVs38BbOfy3w==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[1, 
                    Key["features"], 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztxUEJACAQAMHDJvYQ7GAE4d5WN4IPDeFjFpapc40sEdHet91JkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkuS/HtRYqAQ=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[1, 
                    Key["features"], 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztxUEJACAQAMHDJvYQ7GAE4d5WN4IPDeFjFpapc40sEdHet91JkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkuS/HtRYqAQ=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[1, 
                    Key["features"], 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztxUEJACAQAMHDJvYQ7GAE4d5WN4IPDeFjFpapc40sEdHet91JkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkuS/HtRYqAQ=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[1, 
                    Key["features"], 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[
                   TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UNAGikHsGt9lo4gOqNZ3KdURrd1c7r+KiqjMf1Wl3wpau/m6fhq10DX99Ps6
iZutG0r819T5LKGdmz+rBlELfVQL/qvkc8S0pChgLU3d/FY9nFrotUbEN5XA
A2bltHbzO/UwaqE3GuHfVQIOmpWNunnUzaNuHnXzqJtH3Tzq5lE3j7p51M2j
bh5186ibR9086uZRN4+6GT8aiuNIQ3G8brLrNGqhSW7TprhO7fKYU+W3nHYO
rhma489DcZx/FI2iUTSKRtEoGkWjaBSNolE0ikbRKBpFowgZAQD0Yinx
                    "], {{0, 60}, {60, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                    ImageSizeRaw -> {60, 60}, 
                   PlotRange -> {{0, 60}, {0, 60}}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[2, 
                   Key["image"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Rectangle", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[2, 
                   Key["actual"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Rectangle", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[2, 
                   Key["prediction"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztXAt0jVcWvomESVkzHl3L+9HFYkjoQ6PTqdhR1NsazPQxbTDUqCSkKobW
YLzSMbXKqBnqHbRh1hixqGHQB6o1U68iEdz/j6aqmCvXFGOCZDLm/tp+8dnn
v7lYuatZK2uvs88+5+xz9tmPs8/5732D0/oNjfR4PO0D//vO1vhPQbQlCA9A
eT+pRzqkZxDpDih0OK5TH5eyYFNmKUyrFnM8poolqekFY3pHWPLKiDd/9kJV
S4Y8cjblnVL8J77kPflNLWlaLy8mrZElpVNflt7YksgA9BBYXFKy9JuQ0SM+
EmAU1FeCeqd/xgfyo+Gd/tNGjalfUMeWFwPQKY8C/EuknA7tsH4UKSMdo08j
fDmwWo9O3S7WtWVsm6Qe36tly9GM5gl1HrBlWGK3zJa7LUnuH9f22GxLZl+e
mT3+Hkt2lmx+5NVmlpQE1sNZhxKybg5eo0d8JcBHK/U4DpOvxifyU7/xhb9m
ds67AesGYMMAbADl+qS+PpQR34jgsZ2Gx/4/yBjXvV+HPLF+lH+tzdA8eW5I
TtLgnUdk4nsf+ZYdOCpTn7Ifqz7jmGwft+3TFgssOfTWc2tjI8vu92JYXwde
A8joNf2KgnrU92tgJ5AP5EfDO/0nFf39mi/NewM+67LM2rN2g5R2pv058HzV
E7PHt/fKiu4bHu77RKm9/v6OeRcy88S7aMmZBTMOSbu5yxf7hh6WHbNT93+2
y5ZBzTZNa/6+t8w+Z3YV7TOjRzzTX1aP+wL5QH40vNPvgHMzk2q38VdYuKJe
/JzqjfzSsWmDTmsG+iU1O8Wb9Ztzsnff2uaLmnwul7OPtm4QnSsHmv64y+hp
thzcUOWLBMtL/ebt8r+m+yhU/tfp90ydug/sPVNYBp4meKxHqPVjWtb6c+DE
qVlzEj4ulPU1751yLM4vG7o3XLQ2zyfv/Dm++pO/LZB7Dw5YuT8hRyZtevdK
yWpbakQkV+1y2FvGjjnliEA5AvAaPeJZfMXqcRzkA/nR8E6/GRtmFff/qrDC
wieq78nod6BQNn7WcJZ1v19GJ+U/tMvnk14d10fHZxbI+piiw/c/nyOrd4xu
uWm5LUMGNVtyOefO6y+zz7c7fvZc//NXWJiR0PoPtrdQYl9OtJPb+WVE1zHt
hl32ib2mcdq4lQUS0bBbqzEDcuSMrEk5ssKWFUvfaPtBqXyZf9P0yrQdky/q
s6b3jB8NHxUm8p0ekG+rgHxTA/LNB/meDsh3JcgX9QjjHrSDGj3DY300GUdr
j3wwfHSYyHcq6G8KyDcS5OvoL/or0/Mvo9f8I55/NT+PfCA/Gj4iTOQ7jcjX
Csi3pMH/5ftlQL7LQb5o33Dd8PzL6DX7yfIbkTCOJl88hzN8uPjfqWCf0f96
Avp7KiDfzIB8PWX3+S3jVdQ7Rs/wGF+xcVi92/g5XPV3OImvThvqL66Ppr/B
no80/WXyvabwiX74bssnVPLF+Arl+yX4X0/Zdbil3txk3W6Jx/inslKv6b9b
GC7ydexzHNhnjJ/PgP7iOrJ1DZV9ZvdHt8s+h4t8J4P+pij2ORPss4esrwPZ
/YJpHOsB+bJ9Eur4Klz8L8ZXwyF+xvMR+l9TvXBLz+wl+mdtnPLmJ++2fEIt
XzwfecA+Zyr5DS1/xei1/AbLXzG5f5e/+rZ8tfMv5ic9Zff5TfVFyz/fRF9u
KhcWX7H8M9PfYqK/iA8X/ztFOf+y/LOpfD1EbuWVL9bjOEy+Gp/hZp/xfITx
VbGSv3LWBe2wA7X4yjROw/gK69m7DMaPhveEiXxRfzG/4YHzr+N/cT3Yul0F
6Had0S+yfXJVaY90Gj5c5Dsd/O9Iw/sjZv/c3rtjHMxgFJTZ+Zfx4Ta+Chf/
i/EV5q8qkfzGnT4fsfzk7TofhZt8HfucrJx/nfiKvZ/0fL0uN42fTekRHw31
GFexcUz7Z++v7rZ8ygsd/9uSyNc5HwWbv0L/q9EzPLOjOA5rj3QaPlzky/Ib
+US+K13e76NeBXu/z/KTeH7V5Guqv+GWn2xJ8pMs/4z3aSyvi/rL6LX7u2il
HuNnJl9T/Q0X+eL5KJXkJ/F+H/0g+26A5a+QXnt/jt8vsPyV9v2CxifGb3db
PuWFLD+p5a/udPyM73PwvBTq+Dlc8s/4fgPvf534+SzIl51D8V7AA9DtO0a8
34+AsvZegPGj4SuHiXxH9Rj8ZIJVKJNPTOm9LN4vj35Us9mWEp8s3fnao+nr
CqT17hqRe8fmyKo3ImdUXmrLrKyhW47lmucn2bkF6RDP9gWLnzW77NY+O/0P
Xj0xd7FdWGHh4g//9mLilkL5ZVbu691i/dKn+9nzf1zlk/k9n06uFl8gXVsf
mvCM97BMOn+x1stbbfnJxemx/v3c/5reHyG95n8rK/UsTg/2/sjpN2Xsg7FH
H/ZXWLjz7ckpu1v5xb+t5j8u9fRL57jz6998tVCy8uutOXn6pNTO/3TW1Yw8
2Z7x1Jx5MbZs3zhq67ki7n81/Q3WL6P+auej8uqv02+HSROeibrqk/YEPkag
U98BIKPHdqxs2t4Zb9/KTjP3/NMnzY6Pe/+F5uekQZN/NT5RyyfpB3PeXXbf
KbG/GjF97mhbev182g/7nvXKsMO193SJN89Had//Ij3D43egaJ/x+19sj3Qa
3uk/eWD65qoH88vAVILHeo0OYQopI96Bw8m4Dn3kgs8PrdqVLz23zb/weswJ
+feEVr8b+5othS3G9/746eOyy7Z/+niGVz65vH/drERLelbbmjGvdll9NM1P
MnrNfrL8JPMDTL5u85M9r2zeM7eX9wbsGoB9AI+wjyGdKcR+egVgD4WvkUOv
LHywXyldetwvvmjrlexTg+7J3uWVyFPdxuRNsyTrvaLavg6WdMyenzizjiVb
li3cWOe+svnAq7C+xYDX6BGP9tPRX8yTYDvGB/Kj4W/kW/rUWNd4wNewKACL
Ac/KJYDHegZN6YoIXw58PtYa3irJkofW7ujVZLAlvx/267Yte1iSH9P/L21K
5bhw+8kjC+tb0vdXuUsGNild53UfvtT1FvqIEO0zo9f0l9lnzHsxPpAfDc/u
LR39xvM30kcROu3+Evth30uydytIp927or3Cd8ja+xzUw1C9z2HfhzI+gs1v
sDiNtTPtR1t3t3Sm+SVtPizPz9ox/XUbP2vfD4b6fQ7ub4zDWL22b4OFGj+m
fJnGlYjX4lK39IjHcXEebJxg42dTe8bo8B2Ipoca1PyFKV+sPfpBtq+08U3p
Ec/8gjaOaf9M75gdYPk0rEe7g/Sm74jYu3HGl8Y/4wf51fph+SvWP5u/9v1v
qPMbTO/wPK7l4aNJPyw/ruXhTfP7pnYD27HfOWF6of3+FbMLbr8fvF3v24ON
e9DulNc+BxtfuY3jtPjKdHyNnq2T23GCjZ9xXPZ+E+vxuxlW7xay/phdMO1X
m6cpnVt6xOP9IM5Dk4vbcdnvWrJzAN5/aX5ci2uRLtj42fQ8YRo/s/Yafajj
Z20+Gh7lY/o9HPs+jrXXfifIlM50XG0+2rzu1PeDWB9sXKrFq6bnI1Zm/bjN
XzHI9CDY/BXGQVr+io3vNn+FcZ02z1Cdj1iek91LsHsK0/sP7R5Eu7/R6rX5
IL9aP1cAanyZ3g9i/RXDeTA6xDP/pb3zNY3/QuV/WR7f1P9q93g4DrZn79vZ
e2UmP3w/ifNg91GMHw2vrSc7f7Lzm9t8JOtPk6/b8XC9mR7d6ft9nEeo7/e1
dUK/wPwW5t2Y/LX3fizuYHy5lTOeR0zXgcVX2v7EebD8JMZXbu0ewzO/zubB
5I1xA4sfWDxR3vyk6XqY5ic1+TL68uYnTf2bqXzRXmjvBNGfoVywvalfZOuG
dCz/axpf4bqyeZm+32D9s/mz95PoP7V5mL7fYPvfNK41tW/lhW7j8lD7X7dx
crDxs+k83Y77nf81s+8V1f+ydzy4L9h5g/Xj1j6z9dR+38T0vRL6Afb7G6y9
Ro94ti/YPHAct++vnj1y6TqMu9Tier+rO+cuudU+0fY55rHLq7/YH+tXG1fT
XzZ+ef2RW/0Ndh4MOnIdMrvvdTn/6fEfvPXN/czssZZfxbxqqPPPmpxM43TT
+1/T+F3zF8hnFaWe2VfT/HNWQF/fDsg1sfnIV/4H/wuF0ECt
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[2, 
                    Key["features"], 1]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztwzENACAQBLALTvDxKpBAwoz/jeVFMLRJ577rjCTVAQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAgP89+3gCJA==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[2, 
                    Key["features"], 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm39MlWUUxy+XMaRCNCQWBQmSQ9ScogIuO4MpxPQSXNBVAxGwJaahNplp
FhNqGoqhbKFAAZWYNfklOSkFFxVplx/3gkASBkFXgut9I1CHCbH2vv1x1tlz
u39Ul+dhY5895znn7O757pz3eZ73Xu+kVO0LapVK9aT8/8CNR0+ENJnBVjmW
OPCRW7MZygYPbSm/YoYDaZ9mLO4xQ1zpgogSOwnOH+n2DZ0ww0DijM23J6n6
80/ihrMKd8WkJNsujakjRRmJ0qSu+4/WvCTB7khDXmmwBPFbxzXNg2bYUxxz
PEYtwa7tUl0Ph/qGZvYOhzkN/sUQNLaW1ubBccoYCP+OvrXhj80ehLdqIi6q
T/4C3Q6+S6f9PgS5roVVA0sl6E9+WltvNEOt69ev9nGo7/5je0fdvPohHRHb
lXEGY4yZgfLg8RsWxuF4xW9Hn1uKd3g/rG9rqK7f0Qc+3V11eftvwOWQVev3
zpPgVP3xS6E3zVC1ac7qoDH+9G12LDiROL0TDDL1iNR8C2FvZsRR+akx9TmU
sVf6Ss+EiE7QDXa6r9rQAcbwhqSU0i6wW+4cN1hrgtUhHo2+YRI8n9FYdPZ7
/vQ9c35JYFSBHipkliFS8xWE/QwjjsqP7VTeCjQeXjP0RPcPemjXB+e7XW+B
nPyswoWvXwUHHWgCwkzw2Sf7tL2xEoy6n9YcNvCnr1/ueHjALQP4y5yHSM37
E3Y/RhyVH9upvP5ovFDjHVy3vBVSRg+6XAs2QFqeps1Z3w5pjiUPNySZ4Oih
Ma+XoyWA2Lhk/zb+9J2YmLjuWm4AO5Xqx78ja57ytzTOWj9lvCPA2/mCZID8
p+q3OIzooWrxpvjWt9shNjVzODDOBNMiyi8EaSWY0RWpbWrlT1+VvF5qYl2p
eTVhVzHiqPzYTuVVo/FOWd8CpO86WV8nWV8XzvWl9KHmKZ1YcZaSisN2XL+V
sr7Rsr6OnNfvuNznlPXC/ZWax+uO/Vl5sT+2U3kV+zjqzydkfc/K+mqRvjM5
1VdZPzVDBzyP+7OlcZaSisP2V4jnbwzSl9f+rKyTPWNfg+ftEan9FZWXtb+i
8tqj8Xb0/MX168R5f6b6rYrRj1n+lsZZ64f3z4q+1ah+ed8/475HrSuex/0Z
+7PyUrrh/NTnwP0Z12+MqF/VVNB3J/H8jUb1y/vz11b3V6mM85Gi73TO9aXO
m9Q8df7FerDOv1T9UnnxfgvvryrR/kroOzX0pc5HvN9f4b5HnV8svZ+k+uk/
PR9ReXF/xvdXeH/F+/75HqPOqHmqfhV/Vl7sj+1UXjs0xvdXVcT9Fa/1O9Xu
J6n7Z2dO9aX6o628H1TOv4WoP+P3R7z253Fi3XDdsPSg6pfKy6pfKq8dUb+s
+2fe3y/Y6v6Zej+Iz0e8Pn/x/gbXHzWP9cD+rLzYn3puU58D768UfStkfZ9B
9SvOv7ZZv9T3N/D7I17rd6qdf6n7SV73V7Zev5bqy2t/ptaTtd7/l+9f4f6M
3+/zXr/KOuF+y3ofyPK3NM5aP2WMz7/U+31ez0fxxg3ag9mtsFFmPEE8v9HK
OEtJxWF76Fcre026VoA6/Yj/VQMsq450kdZ1QElxd9buFBPMH3rzdn6UBAuW
n3v8FIffb2/weSf3kStNoJN5GZGa1xH2BkYclR/bqbw6NN4W/Kx/7fxmuPOl
z/SWJY1wS/W+a82sVsi862j/oo8JGnXh2SHPSdA1bVuCZwt/+n4cGztbs8II
pwmy5il/S+Os9VPG9v0PuXqEGyGn+lz+g25GOOLuV/vhPSPoOo55bh+5Cb8G
zjUcnj3Zn7+oif35Jn/63s1WvZd+3XZ5f07vnhXdEny75sCcZT9J4Os4t8jl
OwleW3vSsdhDgsxr30Td95sZOoKKyqrs/vv1/rfZvtUL4LjZZrnPpFnUNsk7
eZsXZL1rhp6kmRsWlZjBY/Rz6dKkrqHuCdH7JnW9mPNBZSCHv+8WFBQUFBQU
FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFLQV/gGf0NUW

                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[2, 
                    Key["features"], 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztXAlQFEcUXXbFVKGohRqPMoVHmRSKGsUDBPkGo4gRVDQeRMQTo1Y8QWJp
vEO8MGhUjMYDb0SJRGNBPEYJRkGSXZb11lJTGtGyLA9EIwIhlVlT9fXTPbOz
u+4yv4p61b9//+7tN/93z/QMzUZPCR+n1Wg0AeLf3IbNRnQKNcBXCLGessP1
GOcx/Mwhyhipfsx6n4Sw+NAKbDxq1+ZFYQboUnThashQA7iUezb0nGOAsner
NT27xwCtdvbf23lrhV6j2WpK/h81RBmjlrB3QfVYr+O0p/yykGrn/qFLg7F1
jVATIdZTdrgeY22GnxpEGSPVj1k/YNe3z4o9jFB/4dSHx92N8NOyLuEBN/Ih
NUF7aEavfEjO/NR96iIDBMd5Tri1h+aPhSz+qXqdTH+W4sMf46O7TxbgAUKs
p+xwPcbHDD/3iTJGqh+zPtFnbaNfvxRgUnjt7MJiAbacSR4x1CcLSh+4dTk1
PQeO7V8xIT4iH3oWttldOPP1eSgvL9/ypjJGyp6FOO4plOqX1S7S5+/vEtes
Ez5DiPWUHa7HOILhJ4IoY6T6Mev7X5nSLPDrdcLulpkbOnqsEq6PzB7cqixZ
KNrh2ibF7SS0LB0fGNPcCL5BXmfmh7yex8zzg8sYtYQ9Kz/z6im/LKTafbTc
f9b2fTEACLGessP1GIMYfgKJMkaqH7O+2DWlVdSmGLhXY0x1z8uLIUdoHTp9
8hrhkmnr0ZDELNjRM+NRWlk+uFxOrfligPz4xfPJm2+p+MX2SsevxknE5a8G
09aHHgv02ab53cc7Fo4MKL81I2edsPj6wpBGvbNg0Oak4L6uRkgLSPSK7i8/
fuXGGbW/4o1Due3szYvSouu34Mpqn1hYXt999d3mSUJXreudS8FZMHpipv+g
Cn5z7lev9S+/GjV+HVKqifwuRfyOFfnNtZBfvP5iPxSP1P4Z26v8Vi44fv0V
5leNX/uKlojfMYhfW6+/1P5ZXX+liYvKr1Pzq0P8+iN+cwh+NYz8qkE8Yfu3
9fmkHamwipjjdwkjfrUEX6znTJS9UijXL9XOjlRYRVyI+yMzv2fV/ZVDi6vI
7zJi/3xWzc8OLVqCX5yfNTLjl7Jnob3OF2w6+TYQ3vsjzFsZUcaoEecN27Ou
D2pfju0pvyysZDxOJTh+lV5/5T6/4tWr8Vu5aBn7K0vj14URv1Sc6jjjWo3f
ygXHrx8Rv1Lnj8WfUvwqjfbmQ2mRu/5am1+c11V+ZQriF8evej7o2KJj3P/m
qfe/Di3VGPtnS88X5L5/xcsv5Vc9X/hPcPxS/GrU/OyQgs8X/NT3c5xKqPMF
e7+foz7fUEbw+S/Oz2r8Orbg51fU/RHmzdrPr3jvf9XnV5UL9X7OOEZ+ps4P
WPxiP1T88uopvyyspJ1TCT7/5T1f4EXW/TFVb6/vy55EJA5z69bnFRah8iMR
nxL6R0hP+aP8UP1iNLcvRnpDzs2MspIQSDmYMHDtzb7Q77pv8dPYmdB3yron
QZvWCGt2NRwesDELUtPiH60ozYe1K85NcA2vOutv7tUG2YNXRQt5IppQWY/0
+ag+F9lh/XlUNqFyHrKj/GJ/p0VMT61TfZdHtDCnaWvvn0dNFDoXDTtdcjYG
OhT23BIXulUY3zajVOt2Ej7oqPN62NwImRmu+rA+ts/PvPwqnZ8Pnh8Sfm9K
LBwW8ZSIGSKmi3hMxBMi7hNxN6o3tzP7zSPs0lG/uahsrj+C2meJmCbi/ibz
tTF7YqCfocU7QUvnwozkbXNnnfhciP1z2PLh85LhVPsTYTeKc2FR267TdnbK
h14Nr40LmC1/f4Xn8w37Ga59FGWv9P6qJMkzPS33Irxg4EtOOzNSfl+iemxX
Qtjh9mZM9j06uN36i3DS23gm79wliFi5rI4wrAAiQyenDNxyESZt9L7T4toF
KCwZsu3Zpj+gkWe3PjG3q05+rrvki3o/tDe9Qg+JZUvRgxNxu3oinqxXI7K/
lwnuZ/xy8XmUCeL8jJvWty2AFkVR0bMHmWBv9yCfuBkF8BJWTt7fxAC939eE
djhedc4HD9XyPTp2ux4OIsT6Q4SeqjfjYYbfA0h/gECqn7Axi97rsFsPpW6+
phMJejh37UCPkbUMEJhVkBe9WA/+2c+f+N3WQ/H6F3faZRkgfnyd7Mcbqk5+
7nM/8m7f0wYIQYj1lB2ux/gJw08wUcZI9bP/4wVJBb8Z4PuXXsfu5Rigx+Jn
92plVvQbHNfar6Ks7/KNzr2C18ah3km3NhqgZa+o1nW32z5+peqVQqnnUFKR
9d2N1HlT6tzM0nFIHZe9vj/iva7kzj91XqrU9Wit617p+LXX+sv73Iz3uQ3F
L+9+kRon1Y/cfWVV2T9bm1/8XK6q8sv7fFJpfnn/bw9r/WB930b5kXr9UH4p
ZF1/Usch9/0rXj3veKX+TjV+nTN+1fXXNvzaa/1V+vtkjDpGPev3WzpO3vZS
xyF1XKx5sNb33daOX5Yf3nMbufHLex7jrOf7vO99WRpflB+p+Znya6v87Gjv
11HvXWM96//r6RhI+ZGaHyi/tto/U/tF1jzx6nnH+7bsn9X9VeXxa+39FfV7
5M4/NX5ePyxkjdvayDsPrOtCqflgobXXX5zPqur6a6//P6nm56qRn62FrDiT
yq+1frfc/KvUPDhq/KrPJ988D7aKXzU/24Zf9XzQufm1V/xSv0fu/FPjp/zw
vtdG9UONh/LPa+cs79fZ+/5IKkq9P1IapZ4/sOLX2r/D3vlZ7ngt9aP0fCmV
n5XGfwCeF/f4
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[2, 
                    Key["features"], 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
36fYY1b/svOa1um1/bs1U8j68fhOinT4vYqpfE7pJLl074vR6/pJp/syO7vd
sK78vsTHVB6Jb235Sf3M2sp9p/hn5sckfyXJ59Q/o/ws33Xqn6V+puk9S/3J
7zq/Qj/G8Oy7Q1P/ano+yb9KfNm56ur/Z5DsXrcvwr5TkeZZ/xX543cSiMd5
3bqxhu+CteRn9SvSM77sXKhfp/cs5Zd3in/G3x3LG0z9M+Ybpv4Z6U39MzuX
7vtRbf2zbl1lWnfr+jOWHyOe+Vm0M7QXHEt1sySHaX+D8cPfPzuHdM94j4hH
P2FD/P8UawuRH/t/26TfHeMn8dE9lySH6X0xfmi/pvuxe0Q8s3vpHlgeyPwF
7se+S2HvMDivq1/sF6EcTB8YT5Ev0jO+7FxYH7FzSPcs6de0bq6rOpzlBS6C
x3nkJ/HRPZfT91/G91a//+I96p7zdsVfzA+RLzuvJB/S68Zf1r+Wzs/43unv
C6Z8nfJ3+r7gVL+68jP9Ir3puXT161QPTvNup5DFLRZf2XkYP4mP7rkkOUzv
i/Fj//+V7n5SnDetH03js67enepXysMQz+RCuSU5pHyCySXpV8onpXuWzmla
H5vqV7Jf3f4Sk4/pgX13pqtf9v6L9IwvO1dd6Vf6vl3Kr+oqf5byK1bPS/0N
Sb8SHdMv0iNe977YuUz9kG4ejHipP2n6HqbLj9UFeE/S+5HUX5fopHc26fsP
iS87F+ZX0jmkfXG9bvyV4qBunJT4499hIR7npf2RnsklyY/0Uv6me666vucV
pRVXx9Hr77863v9ovFY++P/4e2vir+73V7rx19br6m3LrtIdWJj6hI5+mV8I
0ZyX9Iv3iHSSftl+kn9m8rP9cT2OGV92LuafmT4k/7w3aK+fBPW6MOpSq//C
/wALS/Hq
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[2, 
                    Key["features"], 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztwzENACAQBLALTvDxKpBAwoz/jeVFMLRJ577rjCTVAQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAgP89+3gCJA==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[2, 
                    Key["features"], 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzlXHtwFeUVvyQ3+ACmGEFCQnmIQiEEDdhBxcmHClapNB3EgiCtklLAFLC8
y8ijHSpQCAWEooANIYEk5SEwA1QtdHgKUkFelQnvmwRyk70hBIIIyU0js9vq
j/vL+XZzb9rgH8yZ7+xvz9l8Z8/z20ubIaP7Dg1zuVxPmf/29flwbNQhQ31i
Umu9n/A/Efj7CH+/IEfSv5vw8frgp4dV7DpoqL8NTXxw9ueGGpP3/TD/HkP5
PLGHH95mqJWLo26c2G6oei7XuZlVNMyk1tpfWXk2EGV4i4bDdaThAp7JRzmo
F/ko90T8lbcenXA7zSF8p9SuPMQfF+RY16+cWflK2kRDpXRaP+TCaEOlxZd+
efl9Qy3curjFwt2Geu5k5Iav7Vxp2s1l7oO1riCU4S1q7aeL0DC4D/FMPspB
vchHuaMmlHb83oBiNdKkowSqiwsWtfQlk+vdukxutayK3huzd0u/l4vVq0sf
y948uFhdGl/y55JFxSryZ+8MyHjTpz748JVnRlfZOf+J3tc6773dD3T9l+HQ
P5l/6+KdUpR76qtjdy8YWvJ/T08T/ogO3f2Df1miGh57tn9Kcolqt2zsnitP
lahPD2f9Jm5Qifqo5eITA9cVqym97sqMTTLU2oEZ3oeO/ncfkDL7Ig73NYLI
C4fruninFOWebvZE45ipRbVGz2jyrfUpk54k9z1+PG7I1oVFyn38/kTVrEjN
79a2VUSKT7234HK7tjGXVIprVOqMhCI1eVzF9tQwn4pdVjAwbSOPo8y+UpwM
J/JcsN+6eKcU5cY2OL/iYEWBNu1gE4+0E5GH/E5wvT2R90KPfm8ntvSqwuVv
7Xh3UIFavrmp53gvQ3XzRvUOn12sZrX/1ZJ/vuNVH/tHv1iS6FOrBubWn5zG
45kUn5n/6voXwzP5UtyQ8J6ODcf2TvFq03M28UjziDzkW+uzJj1D5C2JK/fG
r/GqEVtyxzS6XqBebNq95+fzDRXTLHfXgbXFquXWQ8OzSr1q0bDnd2xP8Kkn
PYVx968Kfn1VD/wGaT24D/HBqq9QbtW6x8YxXm1aJUfZwddUnt+8XkFwee2/
uK/JAq+69oes9IYnC9SxuMkPFP6+qn6OLkrrsLpYrfjBtD2R570qa1j0puKn
fSo5YULy8Izb953tH+4js6NufcXwTD7KYe9NNc/xrf0KB4p8l4BDPJPL5DF9
lp3xfo9p3y9N+x4F+6aZ9s027TvCtC+zA7OvhNO1ry4+WPWzC/YR7YR8CSfh
3eS6m6wrBf/NBf9l9s0E+7J6RKqvWF2km38ZnslnOBv4gPZh1Npvu/ehn6I8
5s+W3/qJXsu+V037HjHtO4fEZ8l/nfa/bL6EcyZdvFMaQO63/CEMKPJdAg7x
uA4n8lh8xvyLei37lhH/TYX4PAzsi/sh1UdsTsXmkkgZnj2P3flkAH112n/z
bNr3DSE+2+0v0f5SX8TwwYrPAfKwLf+VcHb9V6rH0L6o17Lvdaif55n2XWna
dw3YV/IvyT/ZPkvnC7p4pzSA3ID7j3aQ6mcmh8ll8pg+Vj9jf3QU7JsK+fcN
iM/MvyT/DHZ9Far5ht1+1V/D/hf9Fv0ScVL/i/XVYdO+c4X+iNlRdz6pG7el
uKubF5zmDyv/sTkD8pl9mRxcYxxGv8R8rGvfMrAvy7/DBfuy+ZWE043vunin
NEAdFzC+MlpJ8qAuxTiM9kSc3fqZ+W8WsS/GZcm+oZpvsOdBOSxvoP+y+YaU
HyWchGf5lfVflVBfod5cMr9C+2aS/Iv9hTS/wnN6PFeXKMOHqj+y63+s/9Wl
biIP+Wx+xfwX66s5JP/+2rQvq0uYfaU6rKbzZ2kt1VuMj/2HRCts4pFi3sW8
irhyQa8H7HsE/HcFmU9+V77PqYD9wziLfDbfYHKYXCaP6Ssnclj9PAfqq9Vg
X7QbsyuzM+NLlOGZfIbTxWM9Kp0fSTgJ7ybX8dwB11iHWTQf6qvjpn3/BPON
v8L5oPWeu4W8in6BeORLlOGZfIbTxdf2/FnK54iX8m8e1FfW/OqPpH6Wzo+c
9rl15fwI7YR81iczObhGv7U7f9btf638+xdhvuG0P2J9ikSlvqem/VEAvC37
sjmDrn2ZPJafyyH/ot7zQv59H/Kv1f+yOVU5oYhD+3+jXq32fFEX75Si3Loe
nz2C/66A/CvNN1j+lfy3pv1RqOYb0vkb8iWchEc/Zn0T9kdMr25/hOcLwZ5f
sfkDm4sgPlj2DTDvqNa/gj2fZP7J/F53vlFG7JtK+l82X2JxT8Lpng/q4p1S
6XzQrn1qSnXjN3uvMD7jfFI6H2R+xPyEzTF095/hQzWftJt/JZyEt3u+j3Fc
6o8s+86H/jcb+l+2P3fa7weLt0zJWRbv1aZFNvFILxF5yL8E171EXuKG13pP
/KlXRcy72ix3SYHqe6P+hUZ9DLWz14FF135brDxZfSYnHvSqC7HepL69fGre
4Fl909Nrfv7L4rc0n9TFO6Uo95m7O6z/yZbC/9BngSK/h4BDPK57Enk9AW+t
lUkTiN6/T8pp1PFIodrXYvbW9R0KVXRS1wHpc3yqea8Zr89MvqSORZUknXms
UHVbtflH+V18akXS/NITmfz9Z/VVXY3P8dsbR/eJOK+6AO1K+PHCdYnifUwe
w+F64s5dD/i7nldHd3qKstudU/7Fc6fOX5ivhjfvv/HTUV7V8u0W/2qZflFF
JufFxWT71OOVjaccmPvd8d+29x19/Wbf07fRBwlfwrcWrj+sKR/lPURoQ1cT
9w8/OK36zzy1duSCk6rh8uYbDvXOVWc3l0+KGpurOv5jarNOgy4ot//efgkX
ferN146MS592u93Y3KKC2DnY9mXypfcK+Sg3c9tLL0+KNNRqk1rrLMJfLfAz
bfKZPEt/BlC8/8bNpsP2NzXUzNQWmwrKi9T4hEcqu84yVPeNH3fbfU+RavNR
q2kpM4pUO3fOe6XXDfVqRruemZv4/kjzK7bPuvU3wwfLvij3UZ9f9SkzVGeT
xpu0K+F3FvjxAh/1MXmovxOR22Rd/oDkq4aanfTuus9uGCphZWTbH39hKE9C
ws6oOJ+KTY1ds6eBT41ck6Ye2WCoi7OeGzpxB4/Dkv/qzgU15obV4oM1nyxb
E7NoepahSk1qra8RfqnALyP8a4IcSX8J4b/k2XnP4Sp6qPX1BgdWG2p8m9aX
MzdW2SU+YtzPVxnqQHTO9B1rDXUm7oWDn1XZtTx76cCcbTWfX7H4LM2vGD5U
8ysmz62J06XSfBapG/RJ37Hhd1JO9UrfX4Vq/hwsyubaOEfHeSmbv7P7kY95
X5rjo378rlT3uwhW97Dnv9O+z7H4fs2/A3G6VLIrw1v6bgpybgZJ701C2T5g
naP799h9Lqf7zPICm7exebuDubcWXneOz57Lrt477XyBzUXx//Opwe9fquUz
eai/EvZFty5g38lI+YrVMbrfrerqrYXfHwX8O3B/a7u+igB9Ul0i2VdXr2Tf
ulZfMb3Mf6X3Odj+i3mL3Y/9n1P/lfrKUH1fFyr/ZXG8vnA91PkX9eO+6M7t
7eqV6l+nfx/Li6HOv6x/xHqe9YdS/ynxmTzUXy48B6vrpT4X18x/dfdBt7/W
fR5p3yQ8zjGsNfoP4pCPa+RHED5S1I/PH0Huw+dieqXvyZld2D5gvcC+a2f/
/2Swv29HuSxu6H5vEKr8i/qk/Fvb9TOLixLV3edg1894js3qKel7b7bvbN4q
7SPO91meZL/D1p3H2p0/s993S/7P8KGeP2P8tjvntVu36+IrYR+d1s+6eqX6
meVB3biki3dK7cajYH1XYJcyv2J4dl5ql+p+v1FXKKuvGF+3PtPlM3mIs957
u+darN5hzy+9b9I+SNTuPkv7povXncPV1vwK839N6ytdvXfa/IrlL6xjEGe3
HrC7j1g3Y/2nG58lO+Jais8sT9vN77rPI+2brt9h3YTn64gLtX3doA/nG/9r
+wZ7vhFq+4Y6Pkv9gxTPLPvq1v9O9UpzNbbPuv2RLt4p1e0HWXy2+/6wv0c3
PmP9zPpf5r92+19d/w22fWvqvwvzv7r1nK0zom+t98Y9WW1ckeZ2bC7IcNIc
Ea9j/Sd9V6Ar1+7zh+q63bW0n61Muy7dPOfWPu3+3S9yv3md5V/dOBjs+Iz5
V5oTsffdrl7d+hnjt659dfF2qeWvll2nN7+692v6b5P1WEg=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[2, 
                    Key["features"], 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztnAtQVFUYxy/LLuAL0C1NnMLQsRkf2AjZCMTnMBPiqxxotTLLTGN0IyPH
F2opwiA+MDU1HccX+EgtMUWYQkicErHM1BQfizqYu+wCd31gqAkdba9TX37d
qyC5ncMM85v73e9+99zz3++c75zL8vSo8bFjdJIkRbh+Y9p7Lz1XL4O7MvDk
N13OM84K7NqhjPGSbpqhijFyrO+rHpITTgVHj6pnx9KdHyd3DN2UHzDWjdmm
aGBIPOOSg5HvJDLOS86YAYxRX3rqq5mutcc2+ukegX7+r/jsptHOijOy2/Kz
L/oa+lhk+ESf5cg+LcPwrIvt/cplaLbhY7OXQ4atq4dfasueM2HtnC5WpveA
LYlZPOXzkpBDsZV/4WKNx2p2yk/Nn/JbRPj5l65NW+PhhOLmI0b3uSnDL4Nv
jlnQ2glxnfwLUkOdcHhsoTH8dxkOzgxK6c38a186U/wo9HtTccqLW5v55thh
kgq1+lGcTJDy0xq3u35iXsxeO1wbVrrDnGIHy/sDkqZ+7gDjgk+X1TsqYfag
IUH+nk5IPjao+zCmc2aYKeUyR/nbs0dOp7PVVuihwmCNfhR7EqTOYzsVz5S4
/9ZpyQbzutoHHtlkhfzmGS1q4ipgeBtLRrdAB+QOjp48x8DG5/C3V4TdkGFS
+Lp8O0f6+gbUHn1hrg1auNgSUbG3Is5rpS9BHN8XXdeKaJ9iX7S9qvi3lTaY
aS6ICIixwdDBaWuyjldAp9Lo5edmO6Ak0ZxZp3dC36OZhdlM3+CoS+MrOdL3
9lrJnGADDxclRA+V81qpI4jj6zTe/679sQ72kR/ZYNeKMNuIrjY4cOpsfHxB
BXy7buT55xIdsGx+VNATLH9N0TmlK5m+uZcjA3nUV1Lhw9IXx6fsVHsUfXNd
+ha79N3r0nc55/oq/VTPfsbdox8Ve0P1xXmI76uWp7h9avri/H3FpW8OZ/q6
e/7WG/89fxV94zjV193zV1IZn3nPX6WfbhH6Uvb7JaUvjk99jqh26Ah994n6
6g49lX56yPQkSPlpjuvSd7fK/KuMz7s50xevU7SuXxqLavGp83ePkb4HiPp5
KOf5KxH9S9kbK39xfCp/yXag8bkE5e9SzudfpZ/qXPNbPWIdmvfwea2kdMfx
deg+EtG+u/5I3/1ifSTdS1+qjqXs90tKXxyfGpepdlDjs5h//6S711eSRn1N
nOrr7vsb1PqIGp95q6+o8VCtbm2s8VmtblZ9D0HMv4WovuJ1/0prffWgdZXW
+gr7aW6H8e/js6JvAdI3llN99VLTjM96gjg+Zafao+xv5KH5t0i8P7pDpZ5p
aH2sRqq+ovy0xtWrzL+872/g9QdFSaMfRbX3C5KKnWqPh6ifVdkQ3bRSuQ9m
gz9Hrvk3R2X+VernnZzpS9UzmFr91K6n9jfU7FQ8rX+/wfv+Fd4nlJD9Ya1/
cXxq/Yvbh9//an1/tIszfXH/4fmRsjcWtcan/PD+ZDFa/+L9Dd7GZwPuL0Rc
1z7o/qSBII5vQNfhevof+5gq9TOef3mrr5R+oupcxd7QdRS1PsLx8X2o9lH6
4ve/OH9509en+ZWa7MU28HLRG1Gx+xDntdKHII6P70O1T7E/fyyvuynTBr/+
NM6/bIgN5tq/PpxkqYDNcf0Lpic74LXNI9dV6p2w2S+9bg/TN7UoMJ4nfb2T
8nTfl1jB00U9omL3Is5rpTdBHN8bXedFtE+xt82OSO5osUJQyPScN5Ot8OPC
XhklvSvgvaOdD+3p4oCN5vD4Upa/z6wa1Edi+so7Auw8fT8lfd5XF7rZKiHN
xTmI2E75UcT+6YipxPk0ROyncNa2HqvjZHbd9rCLhSWVsDLoQqhxWhXMvP7k
ualTqqB1il/veKan5a2njLY6GUImBqZe5Ujf2LAfYqf0d19aW0R8dyrGCTXm
x2dvG8h40vBGz0gnjJM2RM1neSuVn7je75YM65cnDPiAPW/L0OBHot+bilte
njvh9TLZbXnh5sZ+6xlvjJnV0WSRoXO6z5GF5TL4HR8Vevm6DB4jZiREs+fM
X3Vi2M8sb6dV51bz9P3ufVeL+p1hz+uuDPY2V91mrcl24DhjUrmxVw3jsqE7
29WyvG1X9m7eFXZ8cvG1Cbf/H4fPh84anvQVFBQUFBQUFBQUFBQUFBQUFBQU
FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT8P/EPS7P8UA==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[2, 
                    Key["features"], 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzt1l1IVEEUwPGr0UNtJgWViRKuGBQSLRYUtB2EPtAIUx8i2SgkI5Hsi+gl
wl50pSVcqIRgs90W0y1CsxCRfOoLpMIiykwkEyzTnQk3jLWsS+SLsKgvtuZ/
4PJjmDkDdw5zOCmFx/KKYg3D2PL3O19YX1nyS8lstS5QFnoypuRRf+pRW4yW
L5bh1vdayQaP2+bsUnKtuC3mWVjJvcY9nZWGlvbLuxOazTjjz9D/vUtlJDcn
ZvYazNuvnsdquX92eWcgpCRcvr6xKlXLugaffWe+lsAR19tyi5bbqzaFMkaV
qKytAX8U3PtMed19YaBTqYjWRJhPdLJzJosf1zfJft8EbWkLHA3dShZ6t1Wl
WbVcbfG6duUGxeHsWFQaOyivGyxPA8eVZNelX/mwWMsLz+beJd/nzvuNN2oK
ks36Fcm4ac6n61TjI+2rzezpah4y85VtdwwmavGsvFu241VQMjNvvjmRHpSW
Au/AwV4lhx/ufVc7T8uBjYesST/nTn7XlnTXtkaRa6a4Pm6c+4ezzazTPdm2
/KERJcu+2pMzErTk3yg+c8qmxV+UlfN4vpZ+a/VouZlXi2vfakcU3PtM+eBb
Vvil2W/MVj+6L52uMK2+M3bRY/6P/1NpfJ9Zf09mJNZvH1bSdK6ivcPsv5Li
mrpSzPVbrhV9n+dQf4WIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiI+K/8Dcz5/YY=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[2, 
                    Key["features"], 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm3lQV1UUxx8/+GWMgvpTEHU0HdwdN3SMED05hCa4hE5qZgGyqAmKSua4
pJiJC0MZyDKOrI2V5r4hilBjGEuFpkI/BATBnyz5XqTiBr+e9t4fnTy+BzSl
vcsM85l7zrn33bnfd+72oPe8JdMDdBzHuUq/u4c7Rg49y8PzSt9BtzrfFBla
Z7nT8A0PAw6NGm17kYcxNVdOeTfyUJd/C0wPeJj76c4GD06AgvGNcZfMPHCP
f4T/PWtW9J/SuLrlrG5l/dbSJqTk4IurBLDyDL0UsVGAuUn7KwPfECB00mI3
DwsBnKsv25tsBXDt6nLCXdR5RFPpiM3PwLj/W5x3uV/kXJsa8JWIy5RdLvsR
VGqvpcTtbd51P3tQnxo4dnytIWlPNYz5YUHEaKs6ML91OLmwiocDRXf7Ovrw
kOTjsjKonQCOIVuzh93XTv62r6yZ5ZBS9jfaEmUbZO+AaCDq2aI4bMft4f7Y
EM9zWuMdv2VXGayyW1pdrL8KVwYe9MkvLYFRR7ZtaPigFqpCyqwzDDwMj1mw
rXcnAQIr2/foeFM7+sas8LMxeBTDDonRqCwzhvAr1Y9pIfHzo4m4G+sc2h27
aITYs8tSvC1LIW5I8qRqPg/MmcL2id1uQMBHKSkX0wTYnv9t8qF0Hi6s5Srb
PtSOvn4dto8NbjKCr0QfidgegPy+KM5PpZ8ijvcl+hWA4vZ9N8rzXpgRIo71
9A8pLIHz1uFebZxyYVXPktSQKBPkJQe+OXmdAG71DSMjCnj4/Ociw8072tE3
4F7exOGNRvBHxPb5CnFK7SiRei7mfBT3/YLAmocbjGBvzTVW5JWAyzttzuk+
y4UqHff7qSMm8FumL/fdKsC5uD7X3PN52GQ+cLKhQTv6WnFclnWD8VH5L7RE
ZSrOioin/BSp5yq1N25IYXr3NaK+L+SMn51TAvuiOh9fPC8Xzvx67NbMvSb4
7ZLX7Y1bBHHenvtKiqjvVc9NsZc1qK9OogUaR9muR34dirNS6aeI43VEv/Qo
zhXpu1/SNxPpGy/pW64xffH4UbQk7Er11bavlrgfYyV9u0j6fk3kb6ykb5nG
9JXHy2w2Zz5ik0QLZJfzRfbLdjzeSn6KZuK5uF94nnBV0FdA+mptfpbHiUPj
yiE7fg84NM5UfexvKfH7Ittx/lLrr1bzl1rnqHUU25XqqZ2fcRxVn8pfeyJ/
6yV9YzS6/qpdV6k4SwUdsZ+i2vUatyfvnx1Q/uL9VSzT94nzMc4bjhhvPG9S
fopK7xGH+iHHyfNzV7R/ps5HFUzfp+YvpZ9Opb+l+YvfOx3S10Fh/8zm5yfv
Y7FO2K9UX+3+We3+Grc3Du2v9qL5Wd4/79Do/hnnHUfkDRWH803JT5F6rlJ7
0Mz9s9bzl5on8f3Vf7W/0qM46nx0Gum7Q6PrL85LPL9yaDzx+RbroeRvaf7K
7eL2qP0zO//+STye+P4Kj3sTcX+h1t9SfXG/8P2kHdpfZRDrr9b05VB+YH1w
PuP7R0oHyk8Rx1P3k1h/V5X6RmtUX7Xf7/SEXam+2vbVEvcDn39lfbPQ/ZVW
z7/UPEntezhkb66/tedfXA/Y/eRT+byfj/D5l7rf0Or3fWqdw3Z5XCm/Uv3W
sgn1Q7bL83NnSd89hL5aXX+pfKHuBak4pXb+qfylvu/bofsrfP6N1ej6i+dd
nCd4XPH+Gq+HSn6KOB7rKrdL3T/j+TkDrb/RGp2f8bkHn0Ow3lScUjtKpJ6L
qXS/sRfpi+dnrelL3V9xRF5R91NUfSofm0u8D+BU6qv1/KW+w+L7Y/x3E2rr
qf1+RH0Hpr5D4+8LWN9Mdv59zJSTdkPObymGJIkJEpORPQX5sT1ZpZ9iElHG
/cLtLbee5hBuUwwesb07evmWAn97hX3w9Dyo6/TLzIaDJogsBr3FNgFWv3o9
59HftyeGQYRZQ/qGBK8/MWNdEQRJXCQxGBHHYXuwSj/mEsKO2wki2lv5foLu
fNsiWNopocR7ZDF8BZ/4e36ZDfYdelVMSTRB+oCJaaXrBYjqd2GD8CMPNX26
5HfRkL6nzalTk3pdJ3lSYobEdIV4zObGU/VxO3LZ2dN5VlpOFezI7hvRJJjA
sGVw3NG3jRD28h2DUX8DDsVP+yL4rAB7j14Kb5fBQ/+EqZGWjdrR152fnFXd
TYAJEqkyxQkK8djf3Hg3hbg+e+5PyrEQoOjDnq/5x4l+t+joYbNrIbHq3JQ1
WXVwdWF1bL85AkzMdrkws5KH1DY/XVipof/fH2+dE3y5gn9uaWwInxEg6mYa
6GS4ZuShfFK5zRm9ANcOr0oLtRRgtl20U14ZD7mdJqyp1AmQNtXoW9ukHX2F
pXPuV4vr0fNKd+ebiVkioxbNW1h7lwePtS8dzqoX19nwtk1eoo6uBYVRr4s6
D07cnXlOLJetm5Pa/RkYd0Z1jH9h1/ECcb4NExzfDRXLPczvLf74AQ/LbTOL
Vz7kIah+Wli+6Hc33YprI/prFg7NuqOh+ZmRkZGRkZGRkZGRkZGRkZGRkZGR
kZGRkZGRkZGRkZGRkZGRkZGRkZFRa/wD2kVLzg==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[2, 
                    Key["features"], 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[
                   TagBox[
                    RasterBox[CompressedData["
1:eJztl81vEkEUwIlePBUWClRIS7dlt/+CBy8ePXVnP4djG7Hxggk1UUpZ6leN
n6kaLw0XE2PSpHrRRA/WGL/iR4zWClts+7/4mKWkSaOU7ky9vOTHBsiy8+PN
e29m5Mmz+ulDoVBo+ghc9InzJ4rFiZIRgQ9WYfrMVCF/6mThXH4qXzw2eRi+
PN5+td5XqdKVOaqUqXLPHm6QiKcFpaFF1rXwTyLdduTZPYy+P8C5QtVXenJT
CzcCO/va8KjnxsAsVQUJw5NvOSMsPhyEfZpaZFWLzjujFQHaLDHUR9bgBqcg
d0IN2jU7M0PVOTHOb/QEd+ctre+ZebSUG+PuDLhU+URi3J0hpVf0REWM8DzN
fiOx37ydIQjv9PhFAYkBcbjhjHwn0SYbiKMzBAGm7wrNukLiPCoozh/0/kts
CO7pUaXqZwHOkM+vxeSz3zfe6nH+fWO874UxMJMT1euWzDRfZ4/l80NrUFx/
XrDlda41CE9b06TrbB0U0Z99c47p0W7ORlJEMneEYQYXrUyTh3OjfZXu27Cv
ExXk6vbWbsVIBN/a1VurdvilkSyLFN52Vm4GXlzqrPS+ktg1CpmsCHXuZMgD
e9hjW7J9aPtr3y8iQUWXBbS4v2nDhC7aGRgX6rHeY4ThJ6tEgn8tor91i/bY
XUf+QmJb42E/ev+IeaN9mGrtPD/q/XB2AGHu+6K9aEO9X6XZJ2ZqjUhQUBDA
jt5OPBZbuOEHiS5Z6cs0K7RRdNV2WXpD3J6aqfd63GMtd2MHmyx5YLe5bKZh
7ShR1RVfdF21/QYIBw2Y6wVHrllDj630spkC4CxWs4fuODLceSGnHkCL6NXc
ZbW5G/9YffDZ25P8bv67GIIgCIIgCIIgCIIgCIIgCIIgSED+AJCxaGE=
                    "], {{0, 60}, {60, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                    ImageSizeRaw -> {60, 60}, 
                   PlotRange -> {{0, 60}, {0, 60}}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[3, 
                   Key["image"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Disk", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[3, 
                   Key["actual"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Disk", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[3, 
                   Key["prediction"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
i6z1Tjvf/FG7oa5dEtuOuvJTd16089//2ed/t30m9V2s/VMXxfpHZfX8P4Vl
LVexcYjY71PIfYqsJ3ZfEvveLiuPy9JfWrygqv6yxk3rT4tRT139VTU+ovFI
60dVe0Vrn8UPeV6ibh6eVa+wlNqh6UFZnS+Q+SyanojVX1L/1dXfYpHjUtU+
i9Vfsj6rzBq3uvrLmgftPuu8luUH0Poh1w9rviz9ZfFD2h9V81c0OZH1Cxj3
WeOm9cc6X1A3f1XyPO37XxLFvg9Esweq8iu2HbHn3aqOi6zPKqs7f5ZcWfNg
3f9Z8hu0c09WfoOM31n2Wd38Bu290PKa32DpF83elPb5oKr2maW/Yu0zWZ+0
z+R91rhp/bHOj370fFDs+RH5nlBp+1c0/RHrX7HWM6u9f8q/or0/WVr+FS0+
Ujc/ScsXqvq9Cy0eouUn1Y1/afkjVeNf1rhp/bHyherGYyXPFxJlsd+nlLb+
qhsfqbr/qqu/rH2nvOuvFlGm+Qfk+hNrD2j2gTUulh6w1gdtPdP4oJVZ46b1
R+YVaO2JXZc0/WedL4iNj9Q9X2C9f8vqT137LHYeZXW+wJLrj54v0OI18vc4
tIky7XexyO9ZyHpikXZOyfqdF7HnzLTx0/wBUq/I+6xx0/rTZtRT971aVX9f
hXb9f/r7Y/NnybWszgfL6vsyVfMbrHGR/anqX9Hso6rxEWvctP7K+vsysd8P
qvr7oj+av6L5KbR6Yv0DsfkrVf0r1rhp/dH8K9Z8WP4V6/sFmr/N0g91kbUe
aUjan7IaH5m/Ki0sa7nSxs2yKzRe/pefVG0dl/X3C7T9lyV/lnx+lF+WfMh6
6upBaem92HbEjvtHx8WKj8pL/oqlB6z18f81/0zWF/seGOt8m4YkP2LbIf1D
Vc/3xc6DtIu09lTthyVXdc/3aeMWu85Z6+jvss/k+lR1XYm1gyz/6me1z+qe
79P0jnZdbDzEsrO07xfUlYdYu87SS7HtkPVo+lta7wuX9u9vkOtSLJJ5QLHt
SIjnWfNW9fyZ5kfQ2lO1H5ZcWfNg3Sff0ySv0/J/5PuipH8u9r1SWr6N5vfT
3ltlxROs9lR9Tt12yHqknpXWuEqeb1tN84/2+RPZf5SbcBP/1H6S+cmfJX9F
2qOyyl+x9Fnd/BVNf0srf5X5nddOLbr8UW4OQ678mRx/1vwkaV/Kil/SzpWX
/GTj7/pawmuvnLX3lfh//zb/zg==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[3, 
                    Key["features"], 1]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
6OHs6KzR0YqxEWGgJi8PCwgyhwhnC7cPj8+ingNadeL9bsi2+wp1VQgZhPom
mhoE7sDCF6tG35XmQn2qxb5dYXkw+2blZR19CnzfVnp8fCEGsWYVBM5nFFhM
8DpDP02BZOmufTPCFBCy3mTh/CkDniUt4XLOS4Q9Q1R3g8rLoGcS0bVxeQi6
dcwk53LLCmS45FpKd3kWZBxP3NqXVQjetdpDnb1psFPbQmCRbCRS015mdaTb
AiqpDiZsVqKwX0ac7H54mv7Y1Y6Wq9pJmvet3rj/cOKOv9vPfzd5xTVt6xtq
SCcj8qvYFZrpd5r2DN/L7yK5rlO9wXlAH1IW3Y5vatWHA0qrhg08A9H4Ydcm
EStPZMfTLXBPIxKesJ1JF7IIA4fv+ao3eUWBN7mQh3QrDITW09+tdXUAUuKb
1PtjrjCoEzig8uYiTDm75BsEX4JHN5/lPdFdhwoW3LOpNo8FD/6M7VOf0qBR
+vtVHom58HSrzcePj7LgbZoIdSJJD5aW+t7P4PNHqmHdxdmvrSCVRyWS7/0X
UvOTq7GZ3ARkXmce6pff9l8br7+XFInoEqpoHWnhvQXGAbVt9E/bv9GfJ5pJ
vx5srW6w2AzoB+FGtYUR2N5V8k2fbwGu7YrsyWMa6MaL1Otp34TBex2Pzvgi
Q/D2jzNuZguGGgfdFZlsXhB3bXrzrucR4F9k+EXa8Dw8T+gJ9pBMg5gSB1Of
ihuwVtWqM3F+Egynp3f0+noCv9fwv9r8glFcRXvkKm8tVNa31PKThCk4+8Sm
bCDLoKW3CJ/izD7jev4fOaX50FHmTCV9S9zh1YcWPCY1Dw8adKiX08eeS0RF
mO1GctrrSByNG9BNfV+vu7a6SGYp+Y5nnio83r6+lb7kIEhflfSRlVeF8lU+
718EmiIjmlPo0w4rpDP5ffw8zb3wQJJ+ckBMAtVlbUkgpnmhXrnrgdb8h1DM
djPtKg9T+PLdwaEX/OIgI0wrjS2uIA2q7s4brS4jBXupcObW/3POof4uzFWj
0xOJd0h3S7efUEui01vLkzBB9W7S+dkFdh4z4mAamzjTdmkl7L+loktQkYLw
FVoi6T6j9NWRKp+eDq5H8yavUMaN+RCHS3IgpVwBxiSrH5xzUYP5ZiRbWC6P
zF5JRJ9+vQDZ/7BbLbpCHxz6X/+wxGA71HLam65oXILSUvOOFtoM4jr+xUg+
fLlv12NPkvyVHO46pxQ675XkyGT3RtLmTVwZ7pQyUq+VyKvKq12k78JoC3bd
f0Lyf+ftYn6gijQusFuQnnCfVFcWd6axdpSkObvtZufwexI32So/3LyY3ik6
cfZMRiyuJw4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4O
Dg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4Ozv/wbxhhWy8=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[3, 
                    Key["features"], 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
0nl5R/2VsPEXn+9/+/12Nn0KWx8Imyfg/ISVf0frwY7Wk8LKW9j3SP24xnFS
vsO2/0zy42z88TZej+H8cDo+PsnfkeoZnN5KeM4172KLYyR+pPWwtdniNtd8
Ax8fz3e4fj9seQNeX5P0TxqfZI9dpV82ef+n7k92Vr+4/ZLmw2a/XOeD+zsS
/UfrFx+ns/bbVfrtbH3E5nd+VPwl+WcSHR+/s/UR7h9I73c0/pL4dbY+Yvvu
SEjaj8TpXP0D1/HY5E9qs/HFkURne871e2GbB9v6ua6X6/4wic6WX5HeY+NP
4oPbL9d54vYr7HlqZ5GrnLiuh2s/rv6TVI/g55OkOMO2T8127oXLCeeH00nx
gbQONnvr7P4V2zkfiR/X8zlh+3H1L1zz8K7On9nk39n4ICwKW68I+56w8vxH
v/8b+u1o/izsvkxn82dS/CXRSfw7uh9EOn/kij9r/6qj+uWaN/ws/ZLOuUl8
2e4bcH3eUf2S+LHtH5HandVvG6ZfNj/U1fvP+PidrX+5Pu+ofkn8Olv//mO/
/9v229Hf/wr4cL3fx3Y/k+t4bPcPSW02vlzzBbbnXO9Pss2Dbf1c19tZ/8x2
7tNR/mz2y0b/0f65s/Uv1/jzo/1zR5Gr38H9REfHI8VfEp3rOjv6PZPeJyHb
+tn4cf1OuOqJzS8J1ttV+1c4f5wf2/id3b/qbH71s/ev2PYfcDrX/Iokdzb+
pPFweyDRSefPJL5s54Ncn5Pwn/P99ufzz/m+cPplizdc41FX1b/C1kf4+D87
v/pZ9S/X+E/KZ9jir+B9tt8vsN2fJJ0fkej4+KT7k1ztjfT9kPw/jvh82eZB
ikNscYxrP67+het32dXxl5T3ktZB8t/C+nsScvVzbPk6Vztm88dsyDX+cvX/
bEiKvyQ6130lrvtXJP5cx2FbPxs/Yfev2PTPNR511f06XL6k+7H/rfnVz75f
19H6F583W/3JlT/b/Q02Omn8n3V/g2t9T5o3Vzvg2o9tvVx//0uKN8LaL8nf
k+ik+3ikdbDdo8PtQ9j7dWx5MIkfaT14+35Dy79Qeqn0v96nFcOEio8/uz76
535s+3Yg87deHxan/es5nXIt9Xvy4lq/CPiy7bv9qPoI50/6vTRpfFJ9JGw+
1NH9Z7b6iMSP6/6+wF4Fek2R8rzOx/8DzhaS+A==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[3, 
                    Key["features"], 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
Qi9A9sHdx7CkPBAfe0zayxnfp/mrc63w/bhcIvuVlDUKqxfXGmfi9qo66kDm
bpw/P6Ona6exIZeedjuH589Ueutv/0zWXjnamy8Ax6AFI0rD8fh8PSeb9Rmv
DxXOzt/degcB04E3PjKEELB/rXV4jH4mbI+46iAWieJ2rq1+7FA2tC7Je/SB
DwM1wUVT5isXQtWQoitZsYUg5bpNImJ+Aexa+iUp53QBhHlEnNKtyAPdOiHw
mJYPF+7/US+nWQjv93Ft1/G5ACJuZS7TYorA0EkuJcmxAGI8zp//iFc+vGOK
R+pJZoLe4srjagOYoNiVGTwUj6eJ7xqXt8uh4L3u4MNRuF4LJ5WlvcX9sMrF
Q4gQDb5/tH/+p/SrnJeg1v1eQmSo/PNuu5bOix7Yidvt6tK3Jc64vNRL1scE
CaNQY5xoqByEgIBbXKo8Lt+dulVnXW8i8DyXYcbQYELWsde6agVM4MoJ9X8e
mAUCetn+I/bnwPqSQdef1LBAaanZ2b2254E3kFl8fFQuRE3sbMvEciBfm/fJ
i7wsqHTPXR+1CIWtxww9888iMLejkjuzKQM27hQdvyoCX5dqh3jJbBTcHwVt
SnqFr3vgaNZWfJ3n93zEVnPA9z8Vf3t7vtEznmwcVZs7fdal7njln7j23WYc
y15pfQzA66ubgbK1Rp8R8M6+Yu76F27nvEmmZ1/j8fuOYWG7JAq7I/bYRw1A
YWGpxY68hXj9JeOdcbuZCRXjnr3yimLCOQ9/0Uo/Jsybs8IuZSUTeMpdEgrx
/hFv9rx2Nkbg/nDbxKsoAvt2rrwTgc/3YIqfdvUsFF7p+Vnp4/4kuhP96zru
X9AtOu0f8HXF6wy9JfgdOXHKNxdBv1Txl93zDSJd4vsjsn66dOi2iaj9SuxO
txz3Fz2tGoTjyYLko0Y4pj0Y6xeO20+k8PoNFri+X/HlT7bB9f0Cz2SFWhCo
q2i3ONKFgKK1xkE9MRSaWqdmrZdAwfnl9o4xE1Eoe5HzPFIEhdcZEopF/Chw
tYtkmTYh4DG7csoQnL5hh2mCLY6zL7pIdb8XO/vY4oYgDTn1Vg6cIl290fUH
dOtounkju3TI+on7ly4ddu2lr/mmylvJ4iVdfn5U/kyXDhldqnnpfh9OxScR
iXSp1sVpm+76e8sP2fftdJ9jd319RZ/YT8UHp9+T91ZOvZUfu/yQxXsiUuVX
nOYVRDpkdKnmpZufUPFJlVdQrau/8yt2+aHy33TPn9kdzy5S0e/Zr3T5oLte
It3eyondedjNI8jo/uzYX/Ghv+NOf8/DaV7FLt2+okPWT/RvdOmw65/7mm92
/TOn/JDZM928vGd8f9VHRPpU5/NUfNDVL9l5PpF+b+sjuu8XessPu/ub3XqH
U6SiT9d+2V0vmV1xKid256G77t/2+9+0X2JcJ77/JasrifwR63Oq59it98jq
/57+dpLxZHwQ75MhkS6ZnDjlm2weMmSXn1/Ffun6Z3btl66cemu/nPpnKn56
+n/0+0EyOkQkyoGsn/h+jS6fVPuLSJfqfINdvsnmoVv/0v1/FbJ9T9ZPta/Y
bXOa75HFB7p8UOGvcv78s+uX7vct7OqXSLe/9Pujvs+h6ifzqz3j+8s/E+lT
+Te6fHLqn4n0f5R/ZpcfYvwg2x/9/f0G1fsFMv2ym19Rfe9AlV9R6Zddvnub
X1Hx89t+/xv2+7PXR7/PN+jZL5mcqeyO031L136p5qW7X6j4pFuP0JUP3Tbd
9bPLD5Euu//PQOZf+tp+yfwXWfyi4oNuvKN6vrd8sxt/Of1/BjJ6VOvi9DlO
6ZD10z3fILtPN/72Nd/sxl92+fmdP7NnLz9b/szpd2tk4+k+19vvyYj9ZOfu
VHQ4Pc/vK77J5iFDdvn5nT//vb387Pnzr5JfEeXTV/kVmX77Or/qr/+/Ivpx
MrlQxc2e8f0Vf4n0qeIXFR+c5qtkcvpR8ZdTfn77Z/bs92fxz8T1kcVzMj2S
+Weq58jokO0bMv9MlbeQ8cFpvkTln9nlu7f5JhU/ZPqmu7/J9lVfIxV9uvbL
7nqp/vegr/jm1H6p7pP5O7r+k11/yylS0Sfzk1R80vUffSUnduehu266cZPM
L1Ctg1O/RJdvqnnp+jcqPun6Q7ry6Wv/TDbv421P/t8+MCP4/+3qeum87+md
Kv+iu3/6Or+impeun6Tik24+Q1c+dNuc+vkeOjFf9docdj6/G2/tfHDre+PI
4sq/PX/+r38/WfPVXm9/1esWv2Ldbvwf+i8EfA==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[3, 
                    Key["features"], 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
yIeCWwl0zYPz+6wvz9PMg5qREoHGTgTEOr4xy/InwTo78S/JgSS0k+xhsPs4
6qXt0cktmYBNHMf0ZOybJiief+WGvJ77bUqSFerffsFwrjDrZrLjjz6fFDYu
WwuzB5VOEaC8qW7wGMQ+qZWWpoi2CVHxVWi3YxyfkEPI91aN8ly9h1jP+soP
7N6ehAEb3+rIYf/CUfkjx8kY99PFmdRT5HvAy7kfT43Guv5BbY1sXwKmquz5
4/d+6DdXBtTYaxBgcuGN9107AmSzI+0/biWA9Cna2KcdCYNDMqfetibhxWZZ
dX4tAa63+/LmhqH8Qbpn314nwF+zd8e9GQRsUHjFd0f9glfajhLknUanx/H6
IthH1HMkcfMlW3/U2v0Vmz81vT9t7KDBAlRyvrJFW8B/dqj/AsS+M4qL5ZDv
ZV92b5mUgvGScL3OA+39cvn8VYlYt/9KND9oVYjz5m98epQkwMeFO6ugiADv
l6eU7hZjfxuTsZHA++u8uJfL8gjY8VzXMSSbgMeHTO4uRP9xTRvg7h6P8Wze
Rf0A9lHtl1y+V4fvN5PvbRtwl4DkHeUdO6Iebkp3Fhsi6vpnxX/PPkzI9Dvn
//b+im0+03MlSTO/nnfKnLy6V4DLN9U7COJ8uMbrDhqIFtkmDwS/Mx3Z9U3F
VQ4BGk61nLhU7MsmyByaegvroJmSpQyO/TauHWKOPHYyso67ifvw2nvtfxP0
82Wfq223I3/ljsPOh+J4cpChk2A/N+O6/0hBXIZ3j/4qv+xL/VlR1seEP7u/
+tnxyyafSY/W2g8Ka1c2ucLW0X8qfpnWx4TC+oGw88X1S3HnCzuPzb9aGr/C
2qGldvpR51fC9t/ixi9djrD+zHYexMQHk73Ejd9/y/lVW37+ufn5Z+2PRN0H
CPucuHqLyq+ocv6v74/a4vfHxm8bvz+WXyY7tfXP/47+mc2fW3udbH7ahK31
fYFpPtO5OF0+kx5MejK9l0k/uhy6fkzn/Wz6M8lls0NrfV9g6wuE7cPERWHz
vrj1QVQ92PK4uPYR9f8BtdZ62eK//gfnZ/r7meQz6cGkJ9N7mfSjy6HrR7/O
JkfU/MykP5u+4q5XWH7a6m/r8Nva62zC1vr9s7B5iO13v8LuS+lymOwobJ5k
sgubvdj0Z5L7T//+uW1/9P14o1//b9n/ssU/vS9r7fwsbv9MlyNsP8mkH10O
XT/6dTY5ouZnJv3Z9GXTo+37gnj5uaXx+099X2jj99/Nb1v9bV7Ov6X+tsXv
vzt+pRjkMelD/7uY9Pls72P6u5ps8pn0YPMvJvlscuj6MdmLTf8mlBbRDmz8
CLteNr8T1j/FRXHjV1x/FlUOm3xx47el+otaj4Q932htZHs/U/1r6X5fWDls
8oWV87O+74t67t3a51fC9m1Meoh63s6kn7DxxiaXCel/x5nNDkzyRF0vk582
Ydv3weavs8lh69fY7NBa3wfb6u/35bRW/RV1H9ra9ZfN/35U/AorV9g4bK15
otbllsZva6+TLret/jZf91qr/rJ9P/rR9VfYPCasHwg7X9y8Lu58Yeex+Zeo
ctn8ubXXKW5daG1+xa2/dDmi1iM2OWz5WdT6+7N/H9tWf/+d9bel/W1LUdz4
bWn/KawcNvnixm9L9Rf3eXH9gc0ubPYR1y9/1DxReRc1foW1g7Dy5r6q/oqa
1b9+fT7WODv87/HfVn//u+uv1jdeFx2c9vV6zORuMcLwwcZPW/8sHLL9fYaW
6nvqW7ye/MYrqK3cKMD/ARWsQSo=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[3, 
                    Key["features"], 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzt1/s31HkYB/AZS2Voq3ELrVqpDUk3tOH7DJatXLYxQ1YYRlIkFKVcNreK
MOSShFwXK509Rdpq5pNSQ2eVjXa2mmwurdKK7ul29peZP8BPZs4+r3O+v3/O
eZ/38zzfr/mRniEqNBrNTvYhNBltGjHPP61Kp25c78xTNxWKLnBtjXQeSqlN
9Toh5zRpEMwsHyry7RYJdgpnL4w5TU31e9HkfD+o5r1BvZEyrv6rl3dsQFRV
FiOQblOB4pMzTGbvNYEvHcVB/vdeibokSRN7w3owXyXjMHJ0X/LVHpElnZ7m
tEwDdMbCxh1HzAi/bodW/lN34nN9PtWWYAQqX/j2DfA/iqb6vWhyPqZG7Mhi
acPez1Vnbe+5kiQ9aX9WQTjYxNkGPazPgXR/Z91aex4500xvite1h6l+L5qc
fCfrGk7hDCjXrnATDLNIw3Sx/3fCQGjPLZp24UQKXNw+3q36xpNEvQwJP1C3
AvNVMvkcnvfhzQMijvrNhpWgD4YqJxtn0L4lFtf5taU3NpPmlY1pe9hLwZ1u
dkvqzyBT/V40OY6LbApq24coT4vXY8OCecR3jcPxXevs4AlVPlcaxYPQ6dOK
WlSXE5K5tcW6dyb2V8noubWlVl02hN56psW/2hwi3VMpUH+0CzqX9l1pUCmE
Fz+/brILDiH/SFY4333iBIIy47jtfbF4RyuJYaJmfKrCHLqvHeqEET65JBy2
YrakQCA7uzqXUQtF7B8d/IpjyFVNndgyMw6UJI6xXyTfx3yVhHbr7gO2GiYg
iR6tk+b4kfNiu1OfsxPgjkEq1dFVCtY+kQvidu0mTy7+OqdyjydMf6Tvu0Wq
SgJecO+eMnDBnBXcPA/u2xMvD4r6aclhM/VdwN/EV6T1PpxkVCbm98zKg5qS
nEuOqw7BCjb9z5X7tpJPefkV6Wfs4EN8mOm1yi34P6zgDmtYdfl2lom6yp5a
TnS4Aqt4SaxFZjSx6bHK4LkWAi9lZ1XQWA4YMYL6TZ3DSNDixuqhgyxoH9SI
P2PQj/1VcC0uJWVDLTXU8d8YlbZiFaK3oazefqY1PM712x7gwiFvmvkMincc
RtdmLuXpmYKbUHu9UHsx9KYH5y/v1iFavuFC3Y29mLOCe5c60cGKa6O+Wkx/
pPFuNXglDHFKffjEKSKRvWZCANH5EwJ7mxxIehlldTMqijSyYu4l3neHpi6L
gAUcNfJ4gZrnnXlizFlB8Te9NTMYP09pJTHZ+zUN4ZaJZuOIrjXxqD2cLImf
T+hx2d8s7CiAB4wPkkV+kbDuSECfqpcXMc8SB6Z0LoNFf6eG97mO4z5WcN5v
Ypszql+LxjI2hreHW8EPeeW1E5lcMt/ToXWufiQ0GLquel96BC4HnsgtPsaC
+sHZNY4HjAg3MVh3bqkuVJcbc72s/xA9SKhLi6PXYJ8VTEJJRmfEwG1KS+so
c80sLXL+c57ll8y1UPQse8l+gRdZWJdVZXWOBe9Ksi6eDg4EkcTDffCaIymO
jHgeFPpc1PpqjkqE5BXVY56q5+TegX1WUPK7Sb5fzWRzuELWV3mu7R99LHOI
GwSk3VldMMcextVDxR2hhqSliUZXfzaG/VVw8rvJRLZf5XO4SNZXP1muvYSR
mZWwBdbPcueah+qS5l9aVxcajGO+Ska+X8/J5vAzWV/luXr/Pupx5cooFUkr
j15f0obzWcn0ye6m27L92iybw2dlfZXn6vz0p223mYXYX4QQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEELof+A/FsZMUg==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[3, 
                    Key["features"], 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
pPfC+dPmQDWUupgkP0l/XPsjUvwixR3SOtp8g6tfyDrfwOt7kj+S5CD1d1zl
IPWR+Odc+0Ou8w2SPkn9bVPNN2j25eq/XO+7aP06V/vS/Lex9sXzr6zzH9L8
Q1Z90JAmByk+N9S+tHkb6X1wvvgzvr/0vWoIcuJy4PxJ7yt9/iajfWnxmat9
myo+NzXS6nEaXdb9ZZ2jysq/FtO7rPGNRm+sPmh8pPaupSCt/8ORtp5E5yqH
9Fnqt9+amI8Uv2B8cHoNZV8SnSYnTV58PS4f7se0+qGh54l27mlzdNr38Pdu
Kj5S/Ibtj9NxvlzpNDllvV8gxRlSviTlLa5IW0+ic5UDz5c1TcwH9wtavibt
29D7QZq8pPpZ1vck9YmyyoPTSf0eiS/e/+Cf43GQK38aX7y+IiFX/eHPXPXR
UDuR7mtJ935c55Ok9TQ61z4Tr6tqCXLS1nONz7T6mcSPRKfpg6YX0nxSVnvh
54CrfWl00jkj8cXPO2mOxVU+rny5+hNX/eHPXPXRUDvR6iTpuqbuj/D3ofHF
5efav9D40/hy7QNo/RVpf6764NrH4Z839u+bkZC2vrFykOYhTcUH1xvtPJD2
JdFpctLkJf37bpxOy3v4OeOKtHxB8itSX0D6HinP0eTg2j/heY3U19D0iPOl
6UPW/EuiN/bvX+FI+n0OVzpNDtLvc0j+S1tPwzrKOSf5C43e1H//CpeP9Hcf
cCT1fSTE4xKJTpq3kvjS5tRc6yCcP40vaa5Bk5/2HrLqo6F2otW7+PdkvT8n
3WfT5CDVnbS8QrqvJ51rrvUz1/kGKW6S5hu/+u9fNfW/X1CirKfRaXLg62n1
FW09DUlzIZw/iR+JTtMHTS9c/34OLZ7KOn/+d98P4vNJUv2Kvz/X+IzPJ2l1
KE1/pPkwKT6T9iXVYzid1H/h8jW03ybFQVK9R7Mv/r0aDLnKwdW+37D9cblx
vvh+OJ1r/UvKTyR94vNZrvMNWf2X63yDdh9COvekupnr7zdIfRiJr6z+y/U9
ZNVHQ+1Eq69I+byx9RWJzrVPI/k71/pK1j6eVo+R+JHoNH3IWl+R6jLa76VI
eqMh6RyR8g2+jnTuSd8jyUmSg6v/4vUzCUn8cDpJTpL/yqpP2rrGxmeu87aG
xmfafJKrfLLGZ5wPqZ4h1Xek/bnqg4YkObjGJ67xjOv9Edd5G6mP5Dq3o/Gn
8eU63+CqP1KfKut7NNZODUWu9m2q/fH5VWPlwxGPz7LqlUZvrD5ofEhxp6Hz
Mtq8jUbnWqeS+hRSv0NbT0Ku9TNNflL/RZOHlhek6Fv+9U/sEd79z/1SBhn8
P3tz7Su4+gdpPY3OdX6C5x2S/9LW0xCfa5PyHokfiU7TB00v+Hv2+suuJ67t
/5NfqseyZAlyvU9RlBFp60l0rnLg8UeKTcUHj3u0/oi0L4lOk5MmL74++S9/
Tf7Lrh7dPkRI8H8AdaK5ag==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[3, 
                    Key["features"], 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
Gz5eOJGgx8f9gz+o5PHP4cvXBiRi1sMgKhz9t8dbPXtFPubvWQFXLTG+Fw+a
zNRR4cGFPb9ramjwIFraICrpO8Z7GNMg0p8CrW0rUjeMoMAiTue01E0uJCtO
qCr+jQtO7/df1L3MBZ+yV6vk+lEQXhvqI+FLweHayb3rsC8P6Rmz+4wZD2QL
g7ve7MGDlNGHzCSRz3D3F8u2oP4mj3RnpeG6BmWf78WvJ8YcpQZwRfCDqP1K
W/e/7YWN6yLDlg3ko1RsRh0/rjfo9H73ClF9s7ekO/Jsr+O4aB3Gje+8BfML
MF9/+DBwkyti4ZWh15dgf+2eJ3VKFeuzkOB9UROwLi+ZXti/eggPYiLSes9H
XQ2R81+9A/V+ztaNvnY9eSBX9fuyvbUU6OyZSE7G8xM+Y7vvcTb2c7ef6Izm
UVDNW2evzF/HGS0f/n2cqk1vZ/7vWrfIrtdrzv7aq37+p/IvnV0tjX1wuNY0
Pq6uypLjo/+F0P38uJnzrJbBj+8VwZNulSPKxtqNskSsXL212+6PeD4Wmz8f
i3z5SPXLOoH1OfNpD5UI1PnA3gzmZ/zb7W6W1nkcH7/FSjMB7WcH+ld64/OK
1YWMZMTjX4Nz+L8XHKlVFMO/R5TaqanXEj/UiuhPQT/Q8VArBOni+J/WZzpd
ElfnBM+1qOul819L5/236nN78StYXwqzo+OX7vtxuvUI2tOtQ9x5RV23INK9
h24+Yd/vi8pfW6Oo8SGq3jf3vcJ0tr3319x82d7x26HPTb+npfrcXv0vHU/C
7AQ/F7yHE3W9dP5r6bz/tv6X7lw0Vw/ErZ/p7l3o7OjOO939D916BO3p1iHu
vKKuWxDb6v6qvbEj/zbPTtRz1hG/HfHbEb/tv7/mxlt730+Kug5hduLuR9Ce
7vmW+qm19tfSfqa99JnuXo3Oju68093v0a1H0J5uHeLOK+q6BbGt7ifbG0W9
HxJmJ+o8dPZ0z4s7b1vtT9BO2P0VnT4J+1xUPRBVTwXPW8f9RtM8iKojHfeT
/7/qq/aK347vF5p+D918on6/0N4oqF/NtRN1Hjp7uufFnbet9idoR4ftzWdb
9Q/inlu6+GjpvG21v+bqaXvrc0d91fR76OYTt74S1neJ2/eJWg913E/+/P10
PPy3/D6WLu8Is6P7flDU/ENnT7cOcecVdd2i5t9/+/+/8E/1D6LOQ2cvLA7b
e3/N1dOO/Nv0OsSd99+Wf9ub3+bOJ+46m7svcedtqT/b6jlheV3cukJUPe2o
r9q2vmrv+O24v2r6PXTziXp/1dJ/30ywbhQ2Tve7L2HzCdahgvai5kk6e7p1
iDuvqOsWNf8K+50cXbyL2td09Ef/3f1Re+uzqHUfXR3aUT+LlneF5XVx6wph
fhFW13TUV61TX3Xw28FvW/Lb3PnEXWdz9yXuvC31Z2s/18Hv/w1+EypqGrD7
PIUG+zzlwIa/O/qjptch7rzt1R818prMim34Oz/qnunfn+/oj36+DnHnba/+
iPdXvDby+qKbV8O/O/AfQHwUmA==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[3, 
                    Key["features"], 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
PGFvod1bESa73LJPQ30qCg3bPkJ93zzp9+lL2Pma76AiZb9e/SrnCkifnbcy
WIXvTVto7epeLELy01VuHfA5Ljxl9cimCrjUxrF/bLwcdE58NFrcVYSRg1+Z
v+6igEpGk+r2j5DDwUeNBz3ZIMDNU9rL30Tjup6a1uMq6qOH1wETu8/EQ6nn
C5TdqfMFCl9JxXPs+6YH21hYIj3pumd1Hq7XNV5+1T3Rzvpvbp703yGAd/+8
pxGtZTDCveyXkR9fw9G3O73dt+bDth1T/bUEEfwGeVVehnZ+/EjLoCM+95oc
9FNj1K94OKJfbaR57dvf+TdwWGHBcFHpp3b+lWNb4PPkxvFvryBuyj1WKyD/
kwj6TS5qvtVFf9X13J9YSQHDFpw7PO2+HDL2RcTmZMvhsanB6+i2CjA86O1e
bxa2Fx/7h5wRoFb9dacMMC9t2jw+Ow/rxQ8jpx/ugfoY7mq3/nN4hsK/UvEV
xU/lX8o/eflC9dx7aJ+I8UhrrtIYvg6p3YtpnUyR9tKY6LNlnwBxDtar81vK
4JVb4nhz19cQ3Pf59acv8qHmSqfpz/QU8Mro2mC3BgrwrKPnewjz844L0b4l
qPcBp/08lfXJrPbBo5T7g/Zj7mxQnsO2HOTxQR3//uC37J0+0iYXRzRZiHad
eH6BrB7G3fnNf1ck4/p6tMj9osYDEap4BiYn5MvBpIpB4eTBIjQLerp5IdZ3
UY18NpxPFCFey1G7dbkA/llOlwrRb5Obtjf3OSHANueVyWNwfTttibGY/Bk9
U/FQ3fzL8msT/VPrif1OycPGC50nCk3l+s3dW5BYHeviap2WZ9tjXp7RZviJ
d4g/eo9Pz4tpIgO9C2a3jbTyYZrdHvlQi3xo1wQ6FtsgLp3i5tFXXwFnNY5l
3EVck/vwnIv9OxF01hzNXI32fthu0bpXWF+lFSQJVdFel+Cl10e0c6TW1ILS
z9i7D1y7dwvtGmXUxni7pgJOZ/S/lYR1zpH1mt26bxDh3dJB0R7dROhkUeST
dFWE6Vu7W4caKaBLpMHR+TNEGDwjZql7qQBBczUOX0K7ygOWdfkZ6/1GNecu
aYR2vVhUNG/FX/VA6Etd/+Xpm+KnzhVLOOe/vPf1DWs3UOLF1SEGTUch1T3e
f4gr2rm3+1MtC6yTU/UbFWihP7/qVRLzDnG1Q8zHbqHb8yGkjXvs1Sb50GDC
ooEX8mSwMGTn9aPbRShbGVFDA3F3WOOY8mVo78HnT2wTMH7G3h3WSenfeuEZ
K8wwby7bOrfeVsRFtnq1PyrvDxzppzPCDe2pdaXFhZu4HvrqvnLshni4qt+x
3geQ33jhuMBZ6I/3V7a0CDwkgvOi/OdOLRQg5Fx4q1lXAW6PAprJjshhdJLV
yUyMw82vDW9Rb6MA1Y3r+WSjXXXmjwt+i+vVsG1vs3k4z8TTB8P/qj9tQs9f
+vxXi2mnweGjvvPedwxOy1Pa2XuCl4e+ctz1tx06oJ2tHyxutRnXe6fR65OC
EIeNXxnTeV0h4pIPv0YOwffxpy7vQV3D5IDa0zbUF2CK4eUDTTzkoOs4Orlk
vwgXblu1X/VUhDu5ab9vqqEA865xLx+i3d0uVq9ahH76ptm9bp5I/VrUtdBH
u2sG/RLUHOOww7RVxR0wv2qF5s1cgfnALGSRe7PmCujZ0vWcLdLmdR09azfH
+O+iGRPiIAOjTzEtJ3gKsENRT8c5SADzd7MirZTnKT5JVRuinNp7fD7NxnlN
c9bdbvU3+qD0zNMb1U6qnXj38zSYZ6n3+VjK8oUN6dpD6c/N9kXZdEEaeXNF
zCHEYRNDxYGt92Cc+TWi1WnUn1Xr7gcavxGgcZHWzuBpAkwtdYuzWyjAT05P
AjclCmDTbN/BDppyOBsY2W68lwg5l1/slx0UoX2vl93HYBzfl1llxFOMv4kv
+1d1qq6AmlXK8kueizDXdeHLpJ8RLzvNG7j3qAgvJ/XZNT9ADvbVxliLs2Qw
APbO0ziCuOhaq7IHq1DO320fBx4XQFbQc+ZzxE3+uwriR6NdfzD2SnVF+Z98
2JP0d/NV6a+yRL2o+53Hpxq3ovcJePcMqPHPaS8WlHRPQVnRCKThU81EpX8f
O7K/mifSkLN5LeKQxmhb+DjvFmDr/YSWe9MEuG89/ZQV1pP9lgwYfvUg4vVJ
GU9eOAgwU9dmcVQWxoHM9GxdXA9vgh1fvAqRwaITJqmJoTLY9OKiXvIzGUR7
nRuwBOtT8ZaF2eB2MtDInHXKFv1x41Pbqdt8BGgy6kLfK8sxzqwNO9od15um
z5quJ3A8+9oXTSeGK89PEnYr5Y2KW9F94mf0w+qR0jPvPjJ1D4PSN8XP4mT2
/hUPX1H3PqTivRHHeyiUtIqn9VnlebJn3+DhRkj1PaxcMjGOtw3+WGSC+TrY
PNv1B3y++U7zxn70o7TEwxu3YP5L+NA8xDIE6+2sOsOnB+K6KGx8eQn6Xdba
ebcT3QQ4HtNc8F2C8aBryaGI9QJk1rJ31vPDePCbdcwo7E+nhvfNdjFYp0b4
bpqO/T2/E29zFO2bnNqzlbLOa5qZ5a+sX5v9tnzn5+IhO1+V/lh8xbaj8qfU
+7EsP8vHyqnCBVLxFTtOCTFvqfnml8vxh5R02UynE8o4bj1Kw1DpLz6NOo/u
hrRoxq26cqSxF9pMaon6P5t/XW8b2sMo7eqz8mMCvEx2r7UG43tfk3f39iFd
Wipa3olHe71PX1oJ42z/jAe2n6JwfcSttf4F+8nSXtB1JVLD40Xxyvx5wamn
oTKeJLzbu+vv5kPph51vCSf/su2k6o3SdwljJ3X3J6n2FL+6fDzcQcUdHi7h
xUNWXqru4L1nx1PJxfov247qT1198+5vsPUYL17w9lN4+zDUfg4VJ6hzE56c
vPNQ6lydqit5+3ts3KX2N770/hX1+5SvnX+pewqljByU3KycbD9S58uLH7z8
9K3lXwoP8+4D8M6DK8rHk4PCk7x1T/Hx+KX6LzUeu9/Pa/dP9c3qiaqvWD51
6zFWvorWcdS5CNsfZX92fN58eeuA954djzrPYdtR/amrb2rfmopXvN8Pfun4
TMUdVg7eOfX/V3ym8NXXis9U3ubtZ/LwFS8PVBRfUTiJpxdqfGr/nTc+zx4s
fqbwFdtOqt7UxaFsHFRR3v1JqbSifDx8RcnJy4/qylHR+arkos7xefL8U31T
+1dU3KPqMV7cpe7hqxufpda/bD+8/Tqp9TivPXVuQ92T4emT0htPDmq+VPzh
2ZfKh1L3S3l5VV37sv1InS8v//L0Q8Vd6vxX3fjM0zerJ6o+ZturGx8qyseT
gycvrz91+Sk9SNUPT+5/W98sP1tfsOtBav7l7Wuy643iZ7+z+ZfCDaycbD9U
vcnOl6c3yl/Y/nj5V2q8pPRG6Zv1f+o+ldR8QNGK8vHkoO4FUnmcHZ83X6l6
4OEHNg9Q46qbf6XqifIDan+S579s/OHVKxQ/+72i+Jm3D07NV2p+oPyX2p+k
/s6JuvUvT9+U/1LxqoSjN6nxmV1nUuMze+5F/b0RVk62H02J8/234rNqPFZu
qh1vv0Td+MzOV2q8p+IBDxez61Eqfmb1Td33pvIaKzdvvjzKa0/5GzUuT5+U
3nhyUPGdjV8V3b+icM0/3b+izjWl7l99rfNBdfevqHGk7l+x/Lz9bQp/Uu0p
fnX5ePtM7DkB247qh+Kj5OXFGV78YeMxe/+KbUf1p66+WTzH5nfWb4vVzD+8
vMRrR41fzNiPlYOVk8IBvPnyKK89O1+VXKw/U/lfqt54cqj4dBh7U/lNm9Oe
4leXj/pdBSsv2x8rJ0spPkpeqp7hvWfHkyoX1Z+6+tYk+mXzMluXSK3/NBh+
qfUa9Z2Vg9eOkodX77L8vPF5+mHbUXiP6k/qvgJPTh7eoPCDuviKwk88fEXh
Bl5dSOGRr33/ipWb106q3nh6Un3XIfr5VvEVG6/UxVe8+X4pfEXN/0vjK8r+
Kj/n7RtQlLcfLJVS93qpfRCqHzau8eRl37PfqffseKzcVDuqP3X1zeYLtv76
1vcnpZ4v8Opwar6sXP/W/mRlYtwvvT/J5gXqXJW3v0Ht91P3wSh+at9C3f0N
al68+fJwoNTzAN7+BnUeLVVvvPsS1P4GxcfLBxTuoe4BUvy8ewDUPgUrJ9sP
xcfDPbx1TOE3Nq/qctpR41B64+0H8v7+htR4Qb1n40RF8TPv3pjU/UmePVl+
anyp+mHbVebMlxpHKn7mxWfq/IZ33kxRFh9I5WMpz75sO96+P2++1Hse3qHG
Y+Mz1Y7qT119U3UEhXuk+i+V9ylcxqszeeuS578UjqkozuNRCs/x7kNR9uXp
Taq+qfXxrfovJbdU/+XN90v5L/X7wa/lv5TfVvT+M1s3SOVj6de6//xv369j
6yPeOSDVn7r6pvIvz9/LOXLy4h3vvqbUuMjibKod2w/F90/jMG++qvfU/Rye
Pim9qasnXtyicDlVn/DqRqn7gFLlZuWkcFVF72HzKNuetRs1LoX3eHqTqu//
AMNiQ0Y=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[3, 
                    Key["features"], 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
rw==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[3, 
                    Key["features"], 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[
                   TagBox[
                    RasterBox[CompressedData["
1:eJztls1LG0EYh4O9eOzFUqSt2qI26T/gwYtHvWnptZBg/LhEiBXxYE/Fa1GT
GMhmrNKAq5FoNH6Etu7OWEEs9iLioe3BfLhtNFqLqZXW+k429NJ4UMMkwgvP
Druzs+wzP3hnpsLS0dRSZDAYOouhaTJ319nt5p7HN+Hhia2zvdVmba63PbO2
Wu01lhvQWZu5+P3QvoogCIIgCIIgCIIgCIIgCIIgCIIgCIIgBUFSde8q7oTi
3lMzwOOuAv35d/tfNW3oOqQDv1n/3+XBY6bTf7o88Ic5f1B9QIHIc5N9lRue
MPLl3bQ/NEdmlvoCyosAtPNSMDgeerX1dvAXA1wHkHz+4wVb5yENTM19sMqf
ake1e1KixPO1VNJJ3PJod6XPNSPrFjkoh/j4E5a3wNM/dfxksrL48enYTrkX
3OL3vREj2X40HDFl4PdGEn/A38J0Nhp9gdl5R4pC4HkQPqDOI/XNy+lYJQEf
EOM8JNHqLEC/PkArk2B29Lnf9Z0KFtZTWuma0O5I0SoSMWVXzSJvIpFqAl+t
m8eEJpxUHSn2vnvi220PRBc9J9tzSWe+U+YV5gxVD0UXdgQhKx7vRYX/BW4k
goT3oOioby0MxRWrurywjiDnpOo8omttMi860/BVhAU5p0MeVxah6K5oK8wZ
ThGwEbPeSa00ByGLcE7ys4QntrTZ8BoWWL5cFLwzr75j6lsNxyu80VwIi3GG
E45/YYEvcdfKOTQyo2/TOXE+A9E+VvQ=
                    "], {{0, 60}, {60, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                    ImageSizeRaw -> {60, 60}, 
                   PlotRange -> {{0, 60}, {0, 60}}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[4, 
                   Key["image"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Disk", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[4, 
                   Key["actual"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Disk", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[4, 
                   Key["prediction"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzVXHdYVccSp5r4xIqNqKigqJCEIIpEgUFAEQuWEAx2RGxBI6IgMRFRbNFo
7CKJYgMNKoQIEuXFEjsaAxqNCQhIh3vPQZ4VKW/J834f38R5e87lXhL/4Pt9
Z8vszs7O7MzsXrpP/2Scv56Ojo7Dyz99HZ3ok9ME0FMTef1ra2v31v82QOX6
RDseHYw1qJ7Xnoeq/tUvEdPD88bfBoge5hvT09R88bgq1FETef1V4+L2FH/q
zoM3rrr9a5A8pPKB1wXXa5pfSh76DaTH64/54O17ik4Npx7315R8qwh58PjA
64LrMT0efzysIcZVyVtXTeT1V/GhS/CJ97VUOrx6XnseUvYZ803xoY/oUfLV
9HzxuJR8qH2C63F/qh1lP/A3Raea2N+4nuovF1X9q9C4eN14fFHtMao7f9wf
j2NA9KPOcVyP+1Pyxu3x+NT64f1JzQfvf03JF+8rXYl84HXB9dS5LNUuUnYE
+1c8feUhrz8+Z7AfieVD0cF6xKvX1Pn7gjgveecCJW/q/OXxx8MqYlxqn0jV
X6pc9Y3jFkOivIazf3F7XI/tG6YnF1X9VetGzY/iwxDRw3zL5Z+nv3hcbC+p
uBYjrsf9qXiYas8bn/JbqHp140cK8blGzVvuNxVHS80rUP0NUDkV31Dypeqp
eAnLhZffkEqHqte0fabiX6n5DZ59lso/Lz6l5Kvt+AjbHX1UTtknHh1e/d9t
n6n4CNtnTc8Xj6tt/wrH7ZhPPD+pfhpvHE3lC7B8Md8UH5Rdw/LVtL2h8htU
3E3F0ZR/jtvJzQtQdLD/RNVjOg1Fiq7U/KRUPqk8Cm9+uD/P331d7fM/zX/+
p9hnQzS+XOT1x/xRcQNuJ9Wvo+p59HjI2588PvC64HpMj8cfD3WIcbH95p0D
VD3lv+Jy6r6Ial+L9IgaF98DaAopujy+pdpnnJ/grQuvP5Un1RZi/nj3CxQd
3nwb+/5X6v0CxTfu11B5YP3H5Y2lv1S8x9MPyh+m5PB36y8vPsb9qDhbqv7y
7gfxusnVI6n0qPwo1Z6ye7ieul9qKFJ0eXzz7h945xW1Lrz+VJ7sn+4/47iz
sfIblL+raf+Zxx8PKf9S6j7h7R+p9px3bknNX/D0jEdPar6Auj+SGu/y8gya
zsdQdg/vK8reU/W4XPVN+Se4vJpDhzoHqTgV05OLqv6VnPlRfFD6XU30w/On
5ELJCfvP+NxX1y7w+mO7w7uPUDe/oS17p9JfuXxQ9hnrnbbzG9T5SdkBXI/7
U+2k+iUUHcre4npNy7ex3ueoO3/K/6T2nVyU+35S6v2g3PNXW/l66vzV1P2g
ps9f6r0TPhek+jG4P27Ha88bvxqtMzWfF6i/phCfv9S85X5jPvH8qXXk9afs
K2VHGxr/YruB97HU+I96n6Nt/xn7QVL9Z6n6i/0wnlwoOWH9pfJsclFuf6l5
WYy8/FRj5680dT+oqfljvx2PS/ktPH+Y5x+pxsHtefqL6VD3v9rWXyrvr6n4
lzrfeH4udd5J9eu0lZ+U216qfW6of0Ihde5L9Z+l8qkp+4zXR9vv63A5Ppd4
7Xnz0rZ8Kbo8vqXmn+Xyz2uH39dJtQM8+0DVY7tjgMop+8Sjw6tv6H1DNbLP
cuMASr68OKGh85V7f/O63B9pS3+pdwWvy/2RtvMbvPeT+FuunVQhPic1lS9Q
xb9y+ZD7flLbvw9Vly6vP+U3UPdq6sq3sd/H8vig9Fvb8qXiGey3U3SoOAaX
10rc9zg/LpUOrsdxDO8ejIeU/uK4hvf+uRZ98+RL8U8hT3/xOcN7p0bFg7ic
oqeL2vPGV31XcuZTSYzbUKToUuez6hvzib8xn3gcah15/an7FnX3udz+6o7/
d+WvqH3F40Mun5rKX+FxtH3+8vwxqf0b+vsVdVHd91dS8wKN5V9pC/E+Uvd9
LK+el39Vd96N9T5WU/OlfjeoLfvMe5+D8wIUHZ5fgO9pNWXv8L0d5pvig5Ib
732OuvOl3udoW3+xneDlN+TmVaTm9dWdN7bPUvM61O+7pdp5deeLx6X8cLnn
HC5XffPiI6nxAS8+ot6lqasPvPds1LnpFe+3uA4PDvlFWYfT1gTFJDFMPVlz
fg7DC9tn77bwFWDT3E5bO0wWYFxUa2flGAGeX5taEThegLlLvKsHfijA8LDN
ju39BDjUavDNQ6ydd8uNPgdZ/3TrFkOOMfQwcrt4nOGveu/2TWFYZlwSWn99
sbzV/V0Trz+WqyExPm4n9/dlvLyRur/XwvEP5nvsyKVvxjLctLDPRyfq+Kt5
I/oawyWXJn6RxeRW28xVYe3K5FLTuWqAO7PjK7rsiBkswDstC2v9mDzj7RKX
9NomwOpOmX8khwrQq/Dq5OcRbJxxVWd7OgvQfsypjmO9BXCfZbds/xABwsrW
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
G6B2VPtX+U31v+Nf6mvKS7mu+968rA7/C9ievWo=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[4, 
                    Key["features"], 1]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztwzENACAQBLALTvDxKpBAwoz/jeVFMLRJ577rjCTVAQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAgP89+3gCJA==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[4, 
                    Key["features"], 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzt13s0VWkfB/DjhJocyWVKF5VS0YU0dEM/t2pCEmNyJqlRIhyX5C6lpiKK
jNJFpUKJopuZLqYo45qUIt2bXI+zz955SYXOPNab9dZeWdNa7x953/WzlvVZ
z3P22Yff9/ye59nqzt62LlwOh2P44fffPwygKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKPrP
Oqu0bWiT0HBGo4RRJONsD78ZVe9pcAjipnt00VB1e63BADENo4I5MRef0zD+
oPeL5CoaJkb7vtjziIaKZ9EFnWTeb93AVZNradiyruS6QETDHjXuwJROGuSu
2HnyyX1/u97seI98TvpJsURC/Nr/9/+7WT4vZsSQOt/iPT41RYoB+7FzBedI
jnFeLccjHtOw32Ii55YMA8dLFwY4GDAwVlr81HQRA4fL3OJG8xl48jqsNtWa
gQiP0ycHm5HvRWyp7GhDBhxqFscqTGFggoe/xllpBqweBxsakft6BzXIVHeQ
fA/pLHckn59nkLrwIeb8X7uaca/q7s+hQ5Uau8eJgT8e5xLjT+a5WL6lQcA1
yhxRTYNbxlPPcjUGUiskLn4kv1mD5oVcIfmOKZsks3YdBeseJUx3fNAMoeYp
Z66dEIJMi/9oBetmuAACuWnSIvBPmzj1X94i8HN78sfPmyjQUjA45n2ehuRf
E9udSN6etT43FpD7TTfXWd/4igahXrREl+Qd+vtI4XPy96nn8ZOk+0C9/lc8
fieqsJPUTdnMwqqSONNekRpE+lQ3UNsmppmG1TbNUd+R65IX/9ZsuJaBTlF7
zqXRNMjaJyacahKCKFBumdrYJriz5E9+yM+NwGz12F0TJoSgHYlHuyJEcMLy
vr/HURFE78xz0igmYxMloxkNIrh/o2TQsDwRzL/kuCnIVgwTdq6/OaZRDIKR
D5ZNPkGDY/4SZro6A95KpiEmPAZeFxiGl9I08JhH44z7QN36ujWRR2eLSZ5d
Ycu9hpPxNZ1nYyOJe+5kH68n+6Upv3PXHE0G7FZuSDGXY+B7WeXgfprNoPUu
YjEvqx7io6dIRixvAp6gcHL1RhF4OdYl5aqL4YxpbadlJ+nL2E0dmqUUaJfr
JivepGDk6iVxTy5RcDBKP/zeOQog23GGchYF31ZZW4IXBYOttx0MnUBBWO2u
mh82UEDtr5FaUU7BS0VaY9k+GtxH2D6WHc8A32qVy6TXuF7/kyZb2q/kk3w7
bKYVmpF+vSqfx+WR9TeLn18wYCkDG+rpWRe0xfCTjN/5/uMawNXr4vPBbQ1g
GHbkl8gyEcR2OWsu1ReDzd1h50QVFHRMnCo84kLyMit3bQygYMiYW7mvtlKw
f4Krs+E2CuibA6dpbKfA/d6atSJi05S8oW5kfoNbs+aFOAq21t0qv5lCQWVA
scPFLeR676Qrr+ZQsHL12RkBChSUGnvNj9ASw6b+Fde6+/pr16+vWmg9/iGf
5OqiupKzjcuAb0aN8dPbNNiO0uO5kXPQUif94nBFCtoFCdvnZdTBqKL4jL8y
m2CBny0d5SoG2BK94srvFHAGVu/P8aAg3zxSXyGMgsCHa/JKdlAg3zjYaj1R
/fnwU27ETokEAonvP7grgivufv19g9eFEGKhhVnmdqIkgbtvaiQF1Tryoyx2
UjAhfKxp0wEKylRH8bJPUvBMYXjMhUQRZOko3eUXUV+9jn3NcxkCzS6S66Or
/WUPkn5VCxZbhdynQa9Y1lfPnoGOpOnTlgaR+sZrtj52qgOD4Yohzu1CuCrj
+Uw/UAzpm1ZrZfLJuvqN/m4Nci56UlK03ieGguSbF9+ok3yEKrZx/kQpDsc4
8CO7PuQq+SDnw3zPuJ/5os4A4pKzOZEC4tsTFrmtxAX6Khu/JXnTmkPe3iF9
3mbSVpl5mYLgQd+ELpDGfNk+WuVauIrkK+dZxn/dQvbXUIu7gWRf1fOZe90t
lwaDc++Obg6shxIn1WXGBkKY1WJ3LNJPDCqKir46dhRsezN5tiiK1F9Ovl86
qf84z+hSRyKXlWPPmD0v+UI5iY53uvvbpsxaJYK4NeDdgJnR5PtTofndOrJu
r1ij6690AvPt8Uhn9rzuc9Ss9MObnUjfhl81VZUi5ye3/XZ1aeQ8XFD0vE2s
0ARv4nP/ck9qBNfgecM73MXQf7dWa8aPFNy7V2AmIH06u2NNenef5bdXjvt4
ve3JpauX/uxirc8S1pg9z7Z9jhfXnphmH5LDIznnaigJ1Ldhvj3q1UdlDCPG
3dWV5ZHnndSS8ttcfQZ26l3WrmylwDcoLmW7ZgNUHdEMWeVGgaWL/I0deymY
89TkWnoEBXvv10oZd/crf9IvPh/lx2H1aU9OUr3Ms9/3pb5nrQtS/3m9T9T3
ays/xyRMmfRvXcWCnHyy38q3SZuoujDwZ2aOsg55Th2qdMMvFYQw2jenZs84
MeyYb2O3kDyvpKVYHXQmfSt88GuN26d1/Wyenawxe56dM7t/Ob3k29t9v3Zd
+4oWD9USmttp8GGMwlvkGTg53U76wCEapsydKr6uJQRd4+zqZCkKzpuHJpzP
piDV2Uh5M3muUVEvLtMgddROa/5s/dnnJXbe7Pnezlfsebbs/DHfTz18bG7L
NZoG39NLvF7NZCDrvqKRjZEYLrucnqmmIIRpuwt+auKJ4cDGqr0vPcl5VsuX
r0LqVxQTm/PxeZi9n7LPTR2sfNnz7Pd9qR2sz8F8P7V+cUurqJWGpI7BBn9o
MBDvMOp73VoxzJ7FOxWzuxnsqHeV2i8p8HdvSn8WSMF8g0PF4R/VsR9rP2Xn
x95n2dez+5f9fvY8W/b+2w/z/cTrcbLthu9oKEoL9n9C1ueXPoLTWpY0aP3g
/9CDnKf2tHnmeMdScGnfonYHUrfzQ6JVfT5TT/ZzD6eXHHvLl309p5f7sO0t
378B/Nr6AQ==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[4, 
                    Key["features"], 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
gsX+/v8SqOmEI+kNqZdUa2DD2d5wc/to4oLDuxbTzW4gqj5kkX/4ADS+XXxr
r/x8ImjNmMkDfZ7vNq//aYle8pK7JEjRs45OzVP2EiUMe2Lj3NU1uJ4vt9Xb
N+dNOupv/xKgxXSRkLle0kt7MQV99Qa8+716QYTj8LK/lQ2ebAMnq7BUEGeL
p7jyBhBpMjKD/h5OcC0x/s6Wj+uI8k3DShXWfd99Tr9PcT/nyXa46fGbif0n
PP1whhc628vtMJjNQnuQW0Vq2REKbIioJpPtHaBydHSaJKsUyEs0RbttQYTo
J+r14jF7UJoSUn7ZbR0IGT1bcPT+5M/rtxX3855sD40s/HXCbQvjn/X3kDC8
zd1dl48CP6ETBYbBJNwRLZm5Oq0RdB7NCTDxyYDtDuVJT3kvE/HKzj4cMVcI
MmEJhwxKEbSforif92RrzOTITOy5RQdlpOQLSVho98E7+wAFsRc6bf7Y+QFY
votOcfpeQhetsk5zxg5CYHxPgnrYccgbcMhvfLoOftOatXePDO0Hn9u/i/t5
T7b+0d3SKWMklDptqyzIJMFB2CrpRRQFeYw2U5rXezC+PdjpFfgMHEW9g7ev
tIX5ipV2zDkmAD3LHfWXjOfSfqrift6TLePIJksah4TCit6Iw3kkuN5uauoJ
pyA7srlP1ogNcooKqQsKI0HKkGXzsvoszEgtaDD4bST3sUysk3yI2E8yt38X
9/OebJuv6AnVoL22o9Vvve8bEsqSMg6LmVMQMLAsSW/5W9Dis+GtO8ogGMIu
S4P3nYTxN/tDYsQM4M103cBHBs9/mvn9E2nuMWQ=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[4, 
                    Key["features"], 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[4, 
                    Key["features"], 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztwzENACAQBLALTvDxKpBAwoz/jeVFMLRJ577rjCTVAQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAgP89+3gCJA==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[4, 
                    Key["features"], 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[4, 
                    Key["features"], 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztxUEJACAQAMHDJvYQ7GAE4d5WN4IPDeFjFpapc40sEdHet91JkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkuS/HtRYqAQ=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[4, 
                    Key["features"], 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzt2PtTlFUYB3BlMGEBNSzBCwJeQE0LL+0CAzwagooKAkqQpKCuOUEikTia
JihsXAZFxQFldEoSUbyClwFjNEKGFKkERVPykogQ7Hm5iS6w9Lxjf0D9QFJ9
mdn5zHPgnN33/e5z9rC2KyL81Ab9+vVz+fPx8kciCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII4V+3QTUxpadH
kLJUtaY/1xblHUPbuC4MccxtYj32ZFga8njYpYY1e7ieeyYtVsfWa5Vn5Pkf
BxS1y/Nf9XXAl1qY6QbJ+Ti2qLcM5/qCWYCLE9dXLYTNjm5BMZOPnI3m8Yqn
H+xczq6++iDzO/69zYrz0u9cl9wwum7C/hIcZCavM32CYlhfuK7/q19vdu+S
+9D+Ys9uG6711VPSl+oFjTSOW1LfJejmTtdt4f0lmjffLHnlaxI1uoaJqk5B
3kmPAs0575FHR2Ucktexcj99pFnQQMO9eZ68nre9T5AFj0++2HhYj/79x22b
1RZ7m+97UdLGzDKupcVGIvSFoHEHH59IM5CoOWDZt6uNJCqsVKXeF4Jyl4yo
Ci4T5HIv+X4d56pbaz11V5OgH0riTxRx/uvun9o9jt8PESWl/rd4Xd8w15kD
eF1NyVt52J97X52zr6ab77PPF1/e6mAbDnoGbOZxVaJB8s+tguwe1m4tHCSR
h0FoW84zQQsXljs7hAr6/oDeMXmjoEnKZgfBObdfzGpJ5zyjctLCpvF8bax6
/25eTzW70jmS65CQ0+/JuX4znoLk53swstK4L1z/f92oIRHBL/h+k6Zpw/tc
z8mqN+viHAunHfY3tpRo8QD/A4pdgjzf9YqckaWluiB1+ec6Qb+5un20lvfr
fdWNhl4D+P1Qnn/iBvdvzT59cR2vl66sUJnyehc6397xlGv15Wkmcr+a7709
Wn5e9XWlHv3be44JTLE5y/c3fHn70De47xJTEiLeaRO0wPPYo60KiYqyjl7N
PC4oqS7k1Fe7tJSnsDAyuSaoxaXZrtZEoiTHO1c6+PPWY/RMtwmc87BhdvaT
eF3zDO9aCbm9MnNXGcfLfePX6ZR+mWu39ulT8nkftraMaa0ZIVHljwW6mHzu
M7Vtg1OelpRnHYI7OX+rkMKYYs7VNMzvQ5fngjQ0M3APz99s3GT7nNeLHOUd
j3589S6dPGuu/H9LlrOi9BM+N4XNOVCq48/X5qc5ojhKkOWUF7eMqptoQfud
fH/++6rtKa33+HxcEL3Bt5RzDXcKNNrC4+WK9YOfIM8+Z/U5pc8Gdurt7bM1
vL/+amXoWGYu0Tbb+TrFZ1qyGO84NipP0Enr7nUjXpfoManiN7Xz+Sk1yziC
5+1c3LqwHrn2WTWmZ9ztuA+1bsXXw4dK9MQ+PtLcWlD2GNXd0z6Cqlc/TAwa
LpHhVt+J6hZBV9xL1jfwvLE307tbkWuf1z50VVw2n3PPH/+01pbPvVrrXI+C
YkF3U3+ysuL9elnNswz5e6aEbOdULzY71nlpOXL911iXdsxrHqtYmfckknNO
WNawP3OgRJdmZKZd4/Ht6apN5/g8HHevsWJIH3i98O9pOnhTj+B+rIk+dHIc
1yJSc9OH89yiv1GwiMeD3NTn3+Rxq0XqGB36FkLYi/4B/g1wdw==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[4, 
                    Key["features"], 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
lGRf9h+g378DJ0lMWg==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[4, 
                    Key["features"], 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[
                   TagBox[
                    RasterBox[CompressedData["
1:eJztmF1vEkEUhoneeOlf8LJAaSF+F41tAgsUxNIYqpU0fNfWQl1o6263l3qh
UZNq/QDRWn8Sb/+PZ8+AlpvKcjO7ZpIHMjNXD4czM2fOlVIzV7vg8/lal+gr
V9yb1/WisXyZJg8braf1RrWSbLSr9ap+s3SRFqODjz1O4JtC8Z/SlS0wFkl0
BTTW0CNGF934K+L4ScRwQuM0PqZxlMJXmop1Dd9daL6Ml2WUm9CeY6GNO23c
beHeNmLrWMnDSuND7K+5fFuBhZAFv4WAheA+pgka8NRmB3MVFDM4FH+ESwJu
Imww5hmMIfsIHcC/i1sFNDT84GyXr21i9lzIPMLmUzU8SqJDeSJd+1/OA3MT
EdLeQoZ2aEK29njONgZr1/srlCReiPOI9ho2aUtKPEkcOZv2rpx5gWvZ/ts4
jmVliENnCnWYTpIaVunGkRVqp84MhfpqFtJCPYEzhZquoSfQZYV6UufAJpY8
5GzazkEd817Zg8PTY3oH0TQOpVyLkzqHdnHjAd7w/eIZ5z1cX8JrKUfHxLnR
RjTjqdygPUhPAyrzEvwWc7/z8KzLeeisE86r/ZaHnOnuNuy7+11cxqExgTOV
o9agRvJMXSdq0ft4H5dX+TvN5AME1rAhsRB15CweKevIS4ywE+cwR3hq6zTD
T2/JHYNx8oEbNYE6HlM+SBdm5xluv0SMkYaMmM4OezJzBTTd05MR7zv637nZ
JRpfQV7xc/F2u4wKd+1OEq5pNubwqoQqPToaSOlYILahPUO2dlrIw0rh87A7
2pGu+ge6GmL4peGYrBZxtIhPKXwhSVrkjmjPPeE9Q5djSFY9UuXaUrTNO67q
357j776QKhQKhUKhUCgUCoVCMeA3mtnH/g==
                    "], {{0, 60}, {60, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                    ImageSizeRaw -> {60, 60}, 
                   PlotRange -> {{0, 60}, {0, 60}}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[5, 
                   Key["image"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Disk", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[5, 
                   Key["actual"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Disk", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[5, 
                   Key["prediction"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
/3TA+arDy027LYsR7Oz8MNsfj+9GrNmxD2PQxI16Xhi7vn4a8DU+P5eZ4orv
nf/S/Wt7y39791YkHmA+9AaP7jQCx6/39SOuBWGe1Cfnck9hf/q0aNsWCYxk
VVjUlSocbwdpN3fH+YujaojZlkIEyhLJO9fgcarXXVv8O8ZNR4p7fUmPz2W2
31eyzbeg7doK23t+xPb7CLYy2/ev6P0E/b6ZoON9a6TPs7Dy2X5fwtZPWLlM
55pM/oRebu33zej+i23ddpxPtsw/t5ZftnVF78f2/r+w+n4rZONX2Hn+ns8X
vrZ+2MpscSi9H11PprySzY7o19nsr63ejxVWPtP80e+b6byMbX6YsOP7ooKt
e6b7EVR+e/2+aGv9Mz2/ZDuHYLN/Nrtgq2c73xBWPtt6YJPHNj9M2GG/X8f2
/vvB1vLL9h0pQe/rZ+W3vftn+n10xFf/v+KrH80vmx6C6vutsL0//+04vxLM
P7dW/o86v/rR8RV9ndHtnO4fhP39Htu4bPbLdD+Cyv9Rvx9sLbLFV2zt6fqy
8SDo9W/Fr7Dy2eaFTc+WjtdW8RXT+mPq196eH7WVfKb7ZRtP0HZMyJZHsJXZ
8gy2fj/7+Qbb89+f/Xyjtfx2PD8STD4bv0x6MrUTlN/WYkvjOkH9M9M8CXr9
W/ErrHy2eWHTk228CdLin5AKrfpUr1y6pk3st7Xnzx322zb2W/k3r+MHa38q
9wPjprbYfzv+fplwerc0fmFrp/K3vfb/m1e96oPd+OX/AvYWTwQ=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[5, 
                    Key["features"], 1]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztwzENACAQBLALTvDxKpBAwoz/jeVFMLRJ577rjCTVAQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAgP89+3gCJA==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[5, 
                    Key["features"], 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztxUEJACAQAMHDJvYQ7GAE4d5WN4IPDeFjFpapc40sEdHet91JkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkuS/HtRYqAQ=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[5, 
                    Key["features"], 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
GTJkyJAhwy+R/wRxdc9u
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[5, 
                    Key["features"], 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
ElKeOsOtR1/Svnvkip1Nbej+FNshbd/71vsvXtc0PbC+tH1N3k/s/ivWv5Yx
+ovdf/H3st41sPwAbRzr3Easf/va+Jm2/9LyUZpc1jqhUdp++r32X/y9ND/P
oqxxYv9fAkXx/VI9aefGtDJtvdB+R8ySL1be1+6/rLyK5l9ocZpYv/SluGG/
pWj8LNdTbD5Jk6toO5bPqqflRyy5ND1oflWsf5aI5MOSqyi+ivpnuZ60+Jg2
nnZuL+8n9n4BzxMNX9p5GObHul+Qy2HdM4q911S0XVF5eH/8Uj3x/S/WA5eV
GPxo7bT+YuWxcMFycZl1b4wpXn8SxIc2jnZ+iuXhdkzxuqbpRePHuj+i6Uvj
p6j+Yu+PaHaH+bFwoc27ov5Z7LrA/gXLw+2Yfq1/pq1/2vzI2//u76/E2i9t
nYu136/1u/i7aXrR+NH8M0sPln5i9Re7T9HslyWXpgdeF4raL84TWHZEk8fq
973uj1h6sOJ7Re+PWPXf6v6INi+scxix9yJi79/FyhF7TsTSE59LYD1wmSa3
UkG98D7wve+PWP4IU5ofYNnv/4p/xvYgVg/aeZLYdiyfVU+zX5ZcsXr80/EV
u5/9U/DFfoCGE/bnSpT5wVTOF+8LWB5ux5SWv9P2GTwexzM0PbC+NH6K6i82
fqatM8yPhQtt3r81vqzv/m/jq2h89Xd/H4vn5X81vhJ7j/it4ytFv+tr4ytc
z5pfln60dUF7L07Lo1njvnb9s/RgycX4itXjW+VHNH+J62n4suSy7lW+dJ2w
xrHW51+dH2E9cJn1Xk+sX6HNM00eCxfa+waaPOw/MMX+HK8P2jjWuqX5EUy/
1f2RovHVtzqfpNkjTR7LfsX6VRYfmh4sf8eSQ+NHo3hd0vSi8cPxlVg9WPbA
asfyWfVi8xyW/5HT/wMi8YKG
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[5, 
                    Key["features"], 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztmQdQFNnWx4eRpGQRUUGCARUUlKiEPmBAkCVIkAVJS5yeAQSRoIIRQRdc
QDBhQjCxgoAoQaVbEXB3FEQkDuqSFiUpIkEkfWN9y1evppZiF93n917dX9XU
v8693bdq+t/n3NDyrtssPagUCkX3jx8CgUAgEAgE4uuyZuh55ya+51jSshiq
W/QZTMDbYD+pQIX419GH6o3FoMWWVRSgLQImUYHKy7JFwT3EU7xsfTeGxQan
sqhFWMSaj3vlU25gd1cL2mUp7SZ0BWMMXvnZYN/6fyH+lyM7TFf7mz8mit39
Fx5VLCU+KgzlWt1aSG6PXOFE1quS09bo+NH4VpHr/V/m5WuokgFVgtl7CsRI
0/O9XW/tm4num+cs0mT4IO7q65jW93xwK/kKYL+kEeVtxxyO2/pguxtGFM5W
OCK/vxG7pHiPDt5jYZ48zYIdh8RJtxC32qwRc7gTbWmMNznD8gjpJXDFAUbt
t/K7EE7A3XzjR5y+BkRnDwgebuwlRNJkRnYNLyWv6nvcjg5YRs5j1XrSygSh
rfpl5xGvD9jo6HaXa0eKiGmJCwLNjiYhn//N3MvpTNv8syso5fn3+TC9YOva
6/PrHXGgSVxaw32DAYoau7I/6jJAKeDu9rn7GJDeLaLxwIQGurf7r3B1eEL1
3uhU7ZtWYHzx7o6cmyZg9ITyltWjTA5vc7VWkxIn33gmxJX1zYSEAif+04kn
iVrVAIlh3VRCYJHk7qU8h5Df/zArr7xd8IsRHZQbKzp6nuNgVZkv62COQ10i
PU/1Pg1e22gcSX5Bg8MsQbcnTBr01qwsVzqPw0K3yNrkShyK5v1qsCGUAZWO
ZwqkVejQdp/FY8XnBp/M4wZuWwIERtwq3pegRS4LKXhINE+DUx8pw0NzurAD
q3qrKwqYxC9BZraPO88hn/8hooW2BUTMxoF7iXYMnyYOOq9P3runj8P80uJF
bWyfT17deIZiikNol59JgRkOq8McfklYg4OsSpiNpToONvqqSv2lNFhOpAzM
b6VBlnLkp4OXGLBaHfSK8zzBIWXOgvoDNrDTUbxT4j0PWbCvdVD4wxDhPp05
KJnSh3WdPfrwrSeTKDg+umG182Hk81eGi/0j2P5N+0MpfyjXBPHo2NhYAVs1
9pTtU2HrOezszQgLHH5O78xL34SDui73QOITGriPmMbyxOMgzAoXuBXsDQe6
nj7xMnOBlib+4vsDCuSVNvfoDK5BgnerHNe84G4sV/5m0YzpOQS3lGIhcQFH
Pn8lPp9F/5m/1AnisT/8HW9/1KnI/Bwfi6LNUfoOh+B3hd3DNjg0NX0nu1KR
XRfuJPLVRrLrvGRB3puLDHAJWakTt8UFYlSW5dkdEiGJBC6DrncjmNmGixaK
yx5izm06gZZ1ccjfrwSnv9RJlDJJv+y9HtHTbN3fl6SbzdaBPqZNHrvO94Qc
XuoQS4MX873fpVp7Q/o7vYro3C3gf2l6WEmlOukeWiYUYCkKwo0HOvNZuYTo
iaumsdUeyOcv5Evzd7L3gLu+3K2JrcqDXcIKq3AY+oFbPy+ArZeM1ModvWAX
c6dOSYY+pO2tfrejWoIcUHrZP/NRLzbWnSrxYu924hs8kv86/nV+nWjeHY/H
51/Odk4d79+XTdw/y1bRV1lLh61waL51R86mnAY9BQcdqqMZUKRJuzr7gisM
NB8T1/ZUIq8HiVz3OyMMagufPyoRziZUsqoS9t31R3n8BfxZ3k2kIxz5+1f1
RLmXy372/GzZlpsrz16HWcSn57ez19v0tyNzDDfQwV3t+On9LYagoB9UcTBe
kWx35E4w6OOHEiMpcWJnPMrjKcJZV7kmiSkTtE80zrgeTK9/9fm9CHuXvXYL
e73t4eVkOpsPB/DZqc4bR4eGikGWbporiLMkhD7GUEmxlLhFZXXPsZjSmvyO
S0yUv1Pk7/rLWZ//qr//d3+fm542W+P1mVYF7P12xOnKcO6nOBRGMxoyG73g
cKvTjHOZVLJdp4EUp1cSqvquhTODbiF/p8hEfk6kYxz+/lXlHN8t74K2pxYO
y5lrmcGncCh5nvOiVZEGvzuHiM3KMYBak0tq+W6S5N61fbR21X7k7xTh9Gs8
nkhHJumfSDnHp8/aK7yevW+6xFvFnFFMg4DLrVs6zjJAVzxThV7iCEH1Wu+X
+qqScpe1k8oaReFbP6f/VCZbH3PG4/5ytnPqKMd1nOOfWrIlLYCtxqNhtMQq
GiRV9R17ac8ASVrV/uVzHeC3/t03Qr1XkdIyetLV70WQv1Pk755vjOffZNdx
Kuf41g5aakc+f8eQmRkVX0iDJ9MIiQdXGOBpf93ditcJhBa8+CkiQZVM2lgV
s5tbDPk7RcafO+fznyjm9Jfz/oneE872t7Y5tcsNcLjXn1v/wBgHtbprBaMp
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
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[5, 
                    Key["features"], 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
Ju96eTVAKQRi+EP3mo2vh0dTh17vR+D4m0uWjiDQIF7d62UEB91jXDeK44ie
L9oaOnY9Byv6Wxr7WuZA3IPn0YGWBeDWYnavzFZi0Lg7dRs3qxxMbIziYhRK
4HCv6NX2XXjQXLu1TdkKHsr1A291bYQf2o5idpuuU9DfaTtM+2XM/mP+lLYj
tP5i9GH0CMXT/NHyxfQVw9Pjb0s/j+5D4OTU0IX1sLomOeY6kXN8zIMjNgkc
BFUp2HZx56C8XUhE1Icc4Nu5qiQMLgRR52veCRolMHdUeEzF4zJIErkHqazi
wejStWeV5jxcPDhynBPJpyZaOm5Y1Yhdpe0zFjdhcQwWr9Qi82NxjlD5fqv4
im7/3fKlv1dZeXceQmDs5KpSOSJnubWKx4/c4+CI6eI73acSP1/w9heltXlQ
rXj+2KZ3RVBeds3Q2qoMdFdmPHSPLYGpRwYY5SoRO10p9TbNjQe9duVv9e3/
Gr/QeQjmD2WoNj2e5V/p8fS6Qu/jmjMg3Q+756Hxje3L/8oFs88YHhvf0D6V
v6x/vR6/fH+5jRGBZsOvzPC7ykEcF2ERGczBruDcmcnKOdAhWs/DYE8BpOgk
fz5TykO4/wIjaZJXZcySfXFUlYeU/NSdF5x46HFn7QwnBx4yhywJWNiI/jW1
Pvm1+vtvzY++tXwb2mEeFT/V++estxNuaRM9rk0tv+qXyIG81s3N70nezZV2
TFIpywV5o/SdE52K4cfnrlu6W5ZBn5C7MkNOiEGqUt9sFpFz2/l9Wixz5+H9
sc2a9t9Bvv/1/Pd7yXe3zG39ejjNq+/ycQSKH6nXxZA4e97Iwb6J3hxYTDTw
rtqaA8/aLBh4z6oQfklTjleMK4FR72Vc76eWQMrInW9KykXQxkL69zereZAr
l5m+XoB8JMXTENNfln9n+d9vBVn+V9L4GRuPtUeqX3PuS+DzZSKf3STf1lQN
LO9yhuRZg1ckfHjEwV1l87C9s/JB2Yv/ecJrMciGp887plsK58P6xd/uSuJo
+ZYfo+vrH+MSEhc7NM7Pl/QCy49Y8sfyI0x/sfyoqforFM/Kj/7u+Arrt2Gk
md1SAh99dn6SdZ+Dkvaxll0NOFDpPOmW7JQ8eDbWIzBvKQ/JvY9t/mVsKdgc
ehFmt5gHJUWz5xPn8zBqR/lv/o54noLlDbR8sPGs+wXsXAmtb0gqX5oPDE/n
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
H8M36GvOn3K9Lbd6eD38P4wcml4=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[5, 
                    Key["features"], 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
8TfKJwBY
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[5, 
                    Key["features"], 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztxUEJACAQAMHDJvYQ7GAE4d5WN4IPDeFjFpapc40sEdHet91JkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkuS/HtRYqAQ=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[5, 
                    Key["features"], 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztPQlYTlvXkSGFq5QMhUKGuIRI5V1SkimUSGkSVySaVKYKFd0yJMqYuSR1
RSLUoQklGkQqKU3vLnKlhFTf8T+/5/+/fdv2Obkuvuc7z+NZz7vOWmsPa69p
732isHStwfL2IiIimv/7r52IiOc+TwQ0KEr5TaP/WtjS0uLRlvc0PpwOp6fh
+c4fzsd1Hkn8n2Ezz/7gsD3lN43+Z4Vfu25o88F1Hml0pP4In9bMOMhCn0Xx
mVs/yVEsClJ1R3B93OKpCizs7F8XGLyZ5VeLYMI8EDhLpHUeytKFd7I4vYGF
bsP1woNZeNdQqiSQhSJYf0R4zqcIAeLrE5f7+T1XPhI/To/jcbkkeTi+PaE/
pHnC+XB+XH4TAa+ySFLxhQkC+xFnkvcZIcjb8z4ncTkC27mWu+osEaxf53BJ
i/095MJiDdn5CJYy2rviF7Dr4UDJhcksfmwvg4w/XBHIam/SSt+EII4Rc13G
yu28d8j7IBaO089L/KT3Xo07vsp/0NYJ6T3X9UXTOwnP135xOXztlzQeUn/6
3AtaM1G8CsTjd7+q71cFSit3/ylbyurnzsvHF94jWJTkFXylHMGLDZknRk2s
gt5emjvlFKvAVUTQeOYhgsr5Gr12eyPQOlVyDBwQ5OdPeqWzGsGrebGXZVh9
765OEfdk7T/NxPvYZbY9JUkTaz8WhprKGwe2Mq8kSFqftPc0PpwOp6fhufa/
HYGP5rdwfZHa/UjADy6YK1AOqIB90TJLx/SpgDN1cOPV3DL41fi2xdXkUphg
v36xxdZSSB/lsel3tzJo9EkLafYqh1s7EkIK3SphRm23CypDEOjJnfrQGIDg
2sv3+zvHIthSm/murz0CG6tYXYXtCHSfLldvdENwYfbqU1Jsu2fPPjpzhoUK
r3MCP+l7e5RwU2vr9TP8HF/4vqfx4XQ4PQ1Pk9vW/vDlbyLg565Bzx2H50NF
ods1seBcCHMK7f+h5SHIeTjkjK/KhClDlaP/0M6Cp45SuSZdsqA4bYBn3O6H
oOD+S8D40kfgaGvptM/vGfR4crlP2ZQyaIIODjaHKmHjRc3M6kkIcgdLRxpO
RODi5xyUF4ig/KrdSrSF7Y+RfkcR1r7PSa9eu4b9fVhtkZbDF9ZxC8VeSO9p
fDgdTv+Rgudrv7gcvvZLGg+pP2PHD98uKpkI4udvDXzvdAYuTI8W3+gRDtbh
5ia+NqHQvE8i3qLpABzMyOq7L+QohNrcv5btdRxGReQ8062LACaj9pVc/g04
OLdinrdjGmSeHdhTKyUPVqjNL4fRZeDzPEXygbkQNpucfz8iSggT+/3ZZbYV
gk4dAisb9iIoypEbGOb6qT/pdmmsnj2OPKnc1Mo6pMUtUj5C4iPx0+IvnueQ
5JHsj2t/aPxc7de3WPFkveEvUHCyY2DLpbWMdFEfK1GnrUzkie1x5b03MZIL
Lcblytgy93Lnma0Q2DP7h8fqF1Y5Mkbhp/KEnbcxS7IHeQ+q2c+kTbQbUn/E
g4mRadSteuYIBjo1/UfOTIQxawPeF/gXwod7S0ePrKiE/ctjZJSshTC0/cuh
UxXZfLxS+snccATahgPdxqxDEO25SljK6nnqmNEh9mz/YutnbPjSev7W+RUN
/6PkV5/1i+O3Pqg6uDZGHVREz7u/7WsGhvp+IvvnrADb9AO/Rz9ZCt30lLOn
PV4M23PEty4tN4W1WtZ3VKoswLZ0kRJKWQndm4YtG67mBjtKHaermC2Dlnz0
m9JjVfhV1vVu8dUg5sU1a7eDiruZsruXJj+5kgV9/E2s+wkqQXb8NRhoKYTs
DUovwu4LIbZz54UykQgGyGtfz2X1vDI380o8q2eN6VXlOzz/Gnfw8dPqVFr9
yTX+0upNUjv4/kR7DE/i57q/QdLvNbMkWfO0SVCzR1ZnxpuO8GcY0ygiXp4w
4GZ69JXtdwUi2CP1JlH+cN11wZK3DpsehaUKjierOC1MikmYeiS3eG//KWD1
WvayS7vpsGdu6j7fxs2QYZw18dTyVeCbquJSVxXOaI7NuAZ3bsMQo8m7fFwq
Ia93tmbf5UJwPJp6SUkCwZyYLS8zDyGwTj2mAxsQmHo7M6FsP1PlM/T2fsF+
uMY/vnhaXc1VniiBjoTH+XA6rv3B9fe1j7Z34qFc6Z4QVZvQZ3bhJOY3/Wm7
+s20hoFz5Q7EmO6EleMLUizrwhl18+c+UaPugmatu9rmt0KIVNf3CGovBL2+
T8uMVyIwSAqtl9uGYLS872gx1o5HW43V8WnFX9HiFi2e0eyatB9Bir9c22lr
/kziJ/Xn79av3dMxATeVzAV7d7z8YLgsR+DRIXr1nYLqhJFxTsqT+msxCikK
o3p77AHlCyXLM4z/YHo1irlnj82BXe1XjewiUQUeGarPYp9UQv/sUy/14xDs
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
wdUJdtEBsx8IFktfKBlyJC/Bfnf85lSpcZCQ9qyoe+QiKLfO7ev3ZjVjKWY/
2uFhAMzfL9tikxQJoUfGJT69mAfTN5dMeateCUo2m62WHRKCVW+JIOYUAqUe
6akRrF/uvC9qam0r4/xv/ftt9HtfOj+mh4NQ0M0ySiWysCujf05i06DRyhAz
Smjes8YCLPQLm4P9dcDPy3j+4AH2jOJh6Zsirich4EVYSrVyNFheV4Yo54dw
Kb5d8jD3Cnh6b9n4hplC+OW934LIcwjEpFJ2XmfrIYMa6WbxrQiGGw079//P
A7nWuT9K/fu9vv91npd5RN17MdyyuzDG23g+zGyMdrWW1gav/Q2h+iumgFSu
X6fOWepwvTRFLWPKTKg40X2sFpoHoUvGOeaEGUJDN/GANdbLIbNZoW/TbUsY
rgGP9R45MWb5FXNupi6ELNW0iPzCkzBPLNm9yCge2kdtu9PR9hEIUhf4GruX
w/E9PuuVGivh9/FdNBaHINBPXHJ+ElvfMp6L7Gs9EDidFGxbwfZzX7cDy76k
t2+VX5HqShL+R8uvZsUvFjPutY55EfNqfKyTNRP9TkdhaKMpxIHBGx0fU8ib
ccj/bchS0Jvo9nHmtOnMrdfPmjw3WDF9/Wuca+faMcfLDq8P7rGFkRm21d3f
bSXT54/uujecj8KbnmPOz38eB6fud2ovOeU2NMTldCppLgCfZXF678QroMeN
S0MTVIRgoSNVHc7mT4pmfYYt2oRgZ9CC2XVsnB29QjfsNtu/Va/Fuuxtxf/g
/pF2voDzkfhJ3/ni8r+Qr3Jqh+bvSf6f7/nC+dvxEipyQbCltrDvkA6+IC1f
GtXi4ciEXbWYNXGoA6MbolWUs2MzI5mpUpw8yxlCT4/Yf97MG5Lijs16qRwA
s+82SBgYXYLl+gv+7PnhBuiJzo7otiANYsW8NRanPwLHiJNvZJ6VwOlFIxXf
rK2ACNFVsd3PCGGBk211QyiCsqmTEx6tRyB52Lw2mdXr2TyXnZlsv16AvcTO
VtYv7T4LLQ/li+fr97m209b7ObT8/y/7XQqrFUocsmCIzlnVS53TQPHD4D+b
lG9Dc2XIRWXrZLi5bYCM76EkmC/f3ztuwW1wjt21PiYqDR41bJ/du+IeZB1x
TdVs/xDuWmUdVnXLhwQ/7QPhK4vB5X1exJCz5WDWbP9qtZoQRM9KSW1ei+B5
yeq3pw8hWCxReyWLzZvqf3s4chLbD58u0eqf+hOXWLf+91bsBl+ftHM8Gh+J
H6dvJMhvpMgj+QPSfWoSP26/pHF+IOCVlcsn9G8uh/aGU4/LmDyH6cqu0Qnv
iqHuxPkXso5FUHtrSMmKrUUgaZZ3aJpFEfTeadDQcKkY/kh6JWXvUgJrg6MG
X6wuhbUxAs37SRVQI3hl1DFeCDuu6EcNm8nWMzOFgf5svuRjGnLFm7VTW9dg
Ax82vta/Sxb/9Pcdfnd69/sxFor1krALaMW/4OMl2Q/NP3PNo3B6vue/pHZo
9S+Jn+v5LykfMFbossu9TxXcNE8su9GrClDZ5OnvvVn7stMa+7oDgvlSuSWT
fYTwImJLeCRbl0ppzwyTfyKExaefVmv4I1A5ftMjIx1ByMxk3RHJrB7fvtMt
PoIgMtXTWM8PgZZP+GHvNQgc3QVTCtl8yUMpLymJbXddgVQvXxae7tTxxad7
rm2tc/5bH/37OsTx2bLtZiksQXDOsE72pgkbB+1fPmxm/aa5x426NwEI3nZs
/KVrJALxWdBzFmuHD0rrDFXYPNdSX9etyQ2B1euiq6NWInDtbrMz0gaBm6BL
PeOMQLNjn5NnNyKYMWnIwF1sOwERltmfoEHOq0F7ONgpCZL8M1++tuLb2g7J
D/P1z6R2PxLwl7vsuG6xBYH80aR+hWx+0z59uksv1o+6THWdd8sRgdm2SP0i
OwT3w37zs2PtcHa2j0acAxsnBS6FDax++6Yk6sixfBYVScfyWXm+q29peHr+
dR+Ga51Iq99xOq7nAFzPEXB6fN5EMDxJHo6n+WcSP8k/4/L5/j0BHJK+r+BK
/7WQ5A9p72l8XOsZrnUObT5wOVznkcRP6w/XPJ309+tI/KTvlvl+p/m96yOS
/yHhad9343R8v+/mWx9xjfMk+yXx4/Q4HQn+p+ZXpPkg4Un2S4tfpHhBWpe0
eSXx0+778Y2/eP2Ay6XpgRZ/aXUTV/9Maoe2/0ybd9p6I8VffH3g36XSfvPl
p0Ga3ybJpe33kORz/Z6T5LdJ8mjttHXeSOMk1ctc97nx9UOyXxI9V/v9T93f
EMXawe2XNu84Py6f1B+++6C0fIkvPdf8CrcXvnkQ1zwKp8f94dfuP/PNa7/2
+0Gu847ny6T8mev7nwXS/H5b54/vPNLomin2SsuvaHVBW+l/9P0N2j4U1/yK
VsdwnTdSu42U/vzokO+64ru+aPrgqqevHUdb+Un360j+Hf9Nqo9I/KR7YzRI
s19SP2n2S4uzuJ2S8Fz3i0j1ES6f7/062rkhqV2+8ZVvfOC6v0GLg6R+0uIk
Lf7h655Ul9LypLaOgy8/1/j7s+RXfPN2vnkQya+RzgP4zidtf5KrXfDVL6ne
pNV1tHqV9p4vJNV9tPc0PpyOdi+EVm/S5oN0H5PGR+L/DGn3/X70/Bnv7z+1
P8n37xNybaet80YaJ+28ktYOKe6Q+HH6n1W/OB6Xy1W/uL8kxXPSPOL8XPWL
95/0nStp3ZL4cXqufgy/58b1+1u+fFzxHwnvSXiSPNJ8kPC0/y8Eh/g9wC98
7/1D2i/XuMGVj68/JdkFX/ul5eM0+6XVj7R5+FEhrf+0+perfNr99q+dz6/V
A99x/gsmZkns
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[5, 
                    Key["features"], 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[
                   TagBox[
                    RasterBox[CompressedData["
1:eJztmElsG2UYhn/bEQSptKEtB8RawQ0uqJQWBCL2ZBzsxGmSNk3axHG8jMfr
JJ4Z23GcOAtFFT30hjghiAQcqOCAkGhRDyAkFA5BQNUK1LKItSGJEydp4cj7
z9hV00TIdWbsIkZ6Y42jkfXMN++3/N8e32Bn0EwIkerx0elNW0XRmznUgC9d
ghTmBS7gEGSO58QDPgv++Vzxj143LY4YMmTIkCFDhgwZMmTIkKH/hhYy7Pww
hAvluvS15mCbo1JI20qu8a+XrNembKvjkPXqZOPfx21rE7in+CA1R1UEGGZ5
DGBMIec67+s65zr6QZP77Weg3vcaj3zc0v7FMfbPNPhthZwa/9qGF5+I6os/
Dx173xp6+YEh4c5UP0l5SHJAkYek3EQMmaJj93qm97nO+614tOWxplq5ZT7D
LOfYheGeD5vj6QYQyn6Kl4jWrVOsTgyb5QBJ+ogYrRt4/UnHDzHYpgbY1Lrj
jp8E/pWHk14iBQnwxIiFKmzeRBELvSFsxs2CvL1jpgdWwVNXM8LItdaLgXhm
p+wr0W6KukG4GQ8ohi3dZxy21YkqeVspDs7vY0JqO8ygRu/WFLVIvEniyOFP
2m1rk1UwCZPP2q8kQ8fvT/oqAi5ZReTNiXi96xsvPMbqapL5YfjQ/c6zyDix
YuCSSeCr8NR9tG7nszoBswsZZiXX8i0/NFgvhiqnvQHbkvST7jNOxEGnXskq
tcLzxl7kfuWuWO8QiTNFR3fbf5eZpVE98pFZytr/kIXk3RJPxIgGcVaxUbrb
Z47qUUPw7vCzhz7rkoImbWivM/tJ//Q+nZgx/HjefArZp40xbmBGJtKGrjkz
zLw64Xv1cc2ZUahjI/c0/ybBexpj54E9Ejz5iNJHyu16ZTHz6ObbnJciTEHT
UOOn8ll2LoXJjQ5CZXfqMpkHE3e1XggUJ1VN7QFs7tRjW2p/mzIHCWqR83JU
c0uzSgf0vfYERmKNczAAP+9EFdW8G6p1ow9dW6uGcp3ZT2A5GmRtXbFYHJgP
zvZp0rVvYu5993m95lJMdHOpaHaXHNQuDSNmNKm2rzwIiC7MtESP955+QTN7
YLRTjKEMSFoX5xIzXIfjajy9g3bwrYdaaSgdn3fTZYJ+BxZUj7XJIx85ZC/s
sbX5OVaH94XiqUv2rQ81uiGaLC16W3EIToUciQ83OH+M6zFpbMAeaVoatc+l
QycerAybnlA4kojd0fb1AHVFVU7f7Lxi7F/F4KlHga1glOdtpICSd0JyR9uX
/daqnbsXi8ZWfJjxTD+NfFSHkH9ZGqj7GfgBicCfeMh5OWKtyol7g0no4GRb
yR2cdQdP7gEPxlS6uwitPxSETJiC8Dqg2Oiu7rMttGYWcjVbli6oRXsCp7mO
mR73W/ujY7tFJdrgpEcwZRU2KG9Dznadc2FIpuujvD6l+FbEqpvGq5PoOPYr
qZbvQu2zfYc/7YTwIK0XuOZfEpiNrdem8Gi31S66uF7OZ4GHRoyCQLU6zhRy
6pn6tto/3yx1w6+o9ttmQ4YM/c/0DxbnTsA=
                    "], {{0, 60}, {60, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                    ImageSizeRaw -> {60, 60}, 
                   PlotRange -> {{0, 60}, {0, 60}}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[6, 
                   Key["image"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Disk", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[6, 
                   Key["actual"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Disk", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[6, 
                   Key["prediction"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
W71NNCgHg90TmLtDp2PgHjWj9lNHK1wYp38r8VY7BOebJKw4h8OMxtxRRltQ
ftKex7fMhtwfk/lnsvpoYIT10QDJfKMo5vPVkDmTjrBy15ww2iZUl4++YD4q
G9XJvZP9vt3rBFqIt5qIDwNuz3koOPkxHXg6E1ISX9LAZzwX38QSlI8m3r7B
Ok7tF4ltqt/FEunI8iuinqnyq6yuzPEn4lG9G8+3LgnFl7mxAXM+zKKDn0xQ
6CUdDFZWvBIUVOmAiCtmWSISTDA728y4jOLvXp00j0S7/5XjIAE51d/weOI8
RDri/GTzEfVLnE9WrdyVjeZ+vTMX/oGDU1Vrwx4/5LflBpb2FzNg77LDe3FH
HPY/HKqcpd8GUZaLEgamYWAY8rhlTTYGk+uU3wVHk3/H9W/FXyr7Hab/Jrm5
hwvFFe1m+azVZhg83JjDNYNFByuro7Ymb+gQWxerdflrOxyNFDh+6QYT2raf
CZ8lhuogr+ohfkdyfZLpkVj3DmM/hf7JxhPnG0Ux36fvB72uI1RrimNq2+Nw
1ns77yNDHGTG5qZJN+DQ2zxXFV4x4cvqAHEDvTZQ6ApbrJWKgV/Gpcq9yG4f
VIW8KIwh/x7/dzt/XlHh93n/WQzEVbISuG3QulXOi8kU0sFoR+7up0w6pO2r
tCmc2g5f5cvnJL9jgv6Cg2rZwjhkuD88csgByV+dZnufg/hLlD+ncZaLYjxx
Pqr4e8BmYwk7XxDqSt83fhcO55M7yg6hOBxl2TynFPlp4TuPlaXamJBQ5DdH
dj+Sw273PkNUL2q1BnsIoPrR2HW98IRY6nznd8mvXqV6D1nEIf3KHn97h/39
W5ub9sA9DL6IXJnvsrkDzn5dKLgxtw3il7qaaxixoPJ6/4dqPZRvvqoJf4Lk
Y7zb/stRJK8ttOIpV38SL6nOH8nqI7LzZ7L5yOoj76YXW9jrsxWTCJyM7HbW
kaZjg+Y41MpXHi1EdRKdZ9DzYCcLBPcfDCxYz4TNjwe1zqTSodHo8/qzT1Fe
ojXGSDUEg3Qx95wXMZyfJ1LFZU7Hk/lpKvrG/cXBQgifaEU6R1/BYFJ00BGe
Php8ixKdVRDNgA+j7tgnhLXBmMONYrg3E0KDUlZYv8TBcYUzLNuK5OqQXSOA
4nBO/81deb9xfjUpfKFEE8Lnkd8DxJHf8e59lClnikOsR+8C0VQcUq5nHymX
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
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[6, 
                    Key["features"], 1]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
lPdhL/UHfqHPlLgyvL8YhmEYhmEYtob9E1qB0yk=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[6, 
                    Key["features"], 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
5yyyyCKLLLLIIosssvgz8R8Rhsv6
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[6, 
                    Key["features"], 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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

                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[6, 
                    Key["features"], 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztXHk4VW3XRxqk4ZEMqYxpQImi2UIyNJiHUMiUDKWSqMxFM0WUJkUDSUhI
k0Kmknk6+5jOPuamJyoZ+u7zXq/rer79ttuHp+f7nue63j9cv2ufs9a9973W
vdb6rfveh4TtLkMHLg4OjtX//uPm4MguKsGBiwQ5SK7H/Bu5CddEJNMj3odM
n3j/0coRP6eSG8bv378/+9E8iEg2H+K8ichNMR7xucjkqfTI5IfnR7zmJOhz
kiCZHvE+ZPrE+49Wjvg5ldwwDpDMn4hk8yHOm4jEdUQ2D6L/qJ6Dal7s+pcK
/+n+HfqL/UuUo/IvmTyZ3n/j9+f+HfyHxy+V/BDJNVldJlsfVHFApk+8/2jl
yNYpmdwwDpLMn4hk8yHOm6xeko1HfC4yeTI9Ig9g1y5kdZyMn1HxFDJ94v1H
K0e2Hsnk/mx+JuNnZDyMbDwyfkr1HGT2YRfZzc9kemSfs6s/Ujmy+1ONQxaf
7NpntPmZbBx2/cVJWA9UdiNek/F9IpLpEe9Dpk/2vCOVI5svmdwwDpLMn2o9
EZ+Lyk7s+ocqfoly/+1/f/5cQ4S4+af1v1TxS8U7qfSp+Oqv0hvt+FQ4RIgL
MruO9rnI+M9I5cn02K2fZHWACsn0yJ6DjBf8WTmy+ZLJ/dn8zC6/IqunVM/L
Li+i8i9x/RKvqfTJ9EYbP796fCok+pesLxntc5H1OyOVJ9OjqivE/mCk/iXT
YzcfEe8/Wrlftb9BZley+YzWX1T7G1TPwW68k+1vjDS/E/XY7XuI9x+t3K/q
j9jd3/iz/qWqi1TPQazX7PIDKn5HlveJeuzWX7L1OFK5X1V/R8prqPZlqPgV
8bnY5VdU+zb/3X/+3/79p+4/U61LKv9S4T/dv3/1+SBZXaB6Xnb9y278kV2z
y5//7v1vW4739lKER6QUSlMQGkhW35V7g0P5ftmmueU48MtKXd5Sg8OciEFR
FYRpk7M8oypxaO5ZoX4cySUWmVh6I72aU1yvMIQzW00YhWw8F1n+HKn8aPvf
f3p/9OZWmW4xwr3nTzq+QujztcypkuWH1S8T9yG/uK8xclFF/puTYGAyjYaD
86e9vlM+4CAk88gXH8KBZ88y40AmDkWTpLRCHuGgylyygPMZDsrzxCzyq3G4
O+Xx1PMDONzcFpWegPC0oLREHgOHsJ3HilZU4OAUbaxZjO6T1r0rgHV/HrWO
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
i9VSUd19/7o/sC0Ch9kB2ywC3jEhdfDtmGNP2mFd9wTnTDsmxNlLPlFoa4Di
JgFuyzQaCIyddqjJ8z9572jxGwF/1bhEnOs99TGLB7oqT/w6JIWBlcScd7MM
6NDbfSxKKbQG4ifC1rvV5fBA3JQ3S5oOK4/5frd5g0ONzRvOzyi/2Rd83FBd
+J/2/Lu+P5nrkvA6FsOhwrP0ylfEqw5e8udI/8qE5O8N7YrHOkAgNX1F3EMc
Zu2vcNtm1gAHVIv4zStpoBhqg+3d859xxy4S43bYr2T7WGT6ZPFPJr9BcG3q
ZoQb5bW3Bc/D4OqF3Gmia+hwyCa52Lq/BowelinofKuAG2uSEooRzyhZab9n
LsrL8RGXFMxRHBzX5/XwLiC352jPF6jq72jPF/Yf5z40GeXnep3ILV9ScHiR
+VvEODcmHKmLvcNX0AE5tofDFioyYbqoi2F4bwPcndajMSmFBrL4TPEoFL9t
rVoyFn/Ig8T8Srym6o/I8jTxmt3+iFi35aK03OYj/P3F/GvGMzGwiPzonuhF
hy92/lstL1dD6pjT4ZptlZCt/3Zq/zYMhOIPTPmtDofJgWvLziN7CdQmLUoq
JH9/Y7T+/avOjwL78ryvIn71znzxKz2Erz749lxFn2/a8ml/7LsOCN3RZ14m
gvrAXK9BR+sGMBewr31Jo0F+82r7cXsxWFH9eZcysleyW5H3SOomsa8hO1/4
Vf2Ru8/6dBZ/voDrc8aYIb/TRbVzJDFYyGOsvMiWDmLVXRxbJ1RB9Nj8k5cm
V4ChTMdBxW902DiJ0/x3tL7nen9JlMxEfaQhv+6zYvL3ZMn8S4Yj7YvI+iyy
8Q5NvWXB2ndeeN2vJ5eB+rxa/OyADQ5BH9Ui3sV0QPqbRoWG962w0Ol3yULh
BniUZNbygg+DHsu74OKOwTaZ78WvWXHCuOz8x/6IKn6J9ifrj8jGIfMjWfym
avKWiyHkF1SsTDfBQON7zIJQAwyam0LPue3C4Fpz30zfzirw0ws/INhfDnuC
E8efzW6E8ubaTXd8mPDcpqeg+iYOS5LW7E1+TV4//278ebuUmzjrvNfDzm72
3CYcFCz3uro64HAmbW5qfnEbCLZOWjBvUwes4Tf8rXJBE9TKtvfFb8IgKUIt
LtQKA786o5ZKawwm2J9O1UL2O/fwAoOd+KXan6SKX3b7X12lC+KsuM21eT7N
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
uTXCiw==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[6, 
                    Key["features"], 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
5ZV9bKHEJwUKFChQoECBwg/KfwFqiOL3
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[6, 
                    Key["features"], 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzVfQlYTlvbf5MkJEUDkowlaaBCHTdFpjqUkogMJzJPFRJpkKJEhQalSGmg
RIWkQaNQz35o1lz7aZR5Kv3Xc67T/3uv9Vn2k+M97/u5rq7fda+1173Wvu91
T2vv/VDYtMfEWoCPj0/3rz/uP/+bNOAogNGChH5BjP7W29vr9x1++HW8zsuH
8cXX8auw5y/+P7u+/o4jyQ2XHxNf0jx9/Hv/4oejANZPonH8xsAP58M0bx9+
Y+j/u4jrt7/r6+84ktxw+fX3fnG+uH300fxYP4nGkWS/+HUk+yTxwfvxdtK8
vPZ/JcyPI2l+Ujuv8iOtk4kvaR0keffRAhgtROgXwuhewjz4daT58X3Hj/HF
19HffUTq769/Jq27v/Ik2SdpHNN94Hrhw/gz7TcSf1wP/ZU7fl84H7wfbyfN
y2s/vv9J/o80P6mdV/mR1snEl7QOfH8wIZ4PkNrxfcQ0nlfk+0V8SEiKX/8u
ZMo3fxV/0r4g6YtpflJ8IOkLnx+XNx/GFx//q+y3v/kVad39lWd/82em+8D5
8up38bhHameKv7zGf5z+d8dfUp7E63he25nkRpJff+cj5TukvAlHvB+P57yO
4zWPI/Flije89pP2D6954s/KE5cbfp9MfHldB1N+zSSvPrqHwIc0njQ/TuP+
k1RXMNUdpH583Uz1EZPc+ivPHsI6fnY+kt9nui+m9p5+jucVeZX/z2L3L+bX
X3ni+v1V/HG/gPsH3K/j/fh+IcV/kr9lmpcP48u07p/Ff/p8kiQ3pryMCUl5
Fc4X78fzbX6snan+xa9j0h/Op48m5f1MeSVTfzdhfhx/Vf1LkhvTOKb7wPVC
yl/wfhKNY988pHqMVL+S9hG+v/tbN/Laz+vzC9L8PytP0nOA/p4v4Osg2dPf
za/wfcRrfkXarzhfkv8hrZ/Xfjy+k/T7q+ojktxI8uvvfD/r15naewj+o7/z
4chrfPy7/H81X17liedXv5o/jqR8irRP8HyQNB+v9oG3k86vfrV+f3Z9/R3H
VOfxypc0D9M5HB/WT8qPSXGMFE9wvkzz9uG/+/nvLLa4MBfPrJ8y3BfhjWHW
5xMQyoQsFR98g4bJqv4LlRC9pDVSxiKRhtefe2sn36ZBe8gt0bEIVWMOno5H
/Zxrc66cQWgd7O50kQd54nLD5cckL5L8+ns+yWv8JfH5u/GXVz+A880ep9DA
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
4dN501T/ZaiucogQLR/XAlZnJYoFF7dBmZDiM6GENlj0bap+mUgLzLVOWDa5
vQn+aJjhud+hCdxF7axbWhrAfONe5aPOjTDE5InX+cuN4BtcWMEX2QRvP/KZ
WxY3QA/LIInl3Qj7QW2Yi3Ez+G4Y5x5D06B6S2Ttak0OfBFd/aAD5Ut8CiUr
Ai7TMKswb+dwlDed1OT3XYXWfz/szbSzPMiLJD+m9ydJ9sfUTooDTPUY6XwD
58t0DtbXrjpGh5/7Xvy8xys1kxCO5rM7/wzZdbzFug4fVGdcy1m+VR3V02zr
3W6KK5HeJeLHxQ+n4dWhU3nNKH7X2evF5hmjejNcnOX1ggNG+bvU+PI5YL3l
pN9iPQ6sU9IdMwztF+PckPTHQMOhdQLq8lo0dKVue519h4bCL9Ir5CZzIHSn
0sBOpFe+w9rscTE06FEjR2zyoeH3okUmcmhdq60i1z9HSN/cE+/wA/kx6Qlv
Z3o/Bx9Her8ZP1cmvU/H9LtzpPjb199DWAcef3C+GVtVArnXP4h+fDAI4fE1
7+19EKrMi1uQgPSrMlcJZJE/rNwWm/00m4altg9ap6TSsOCYwv4XzjR0jxO0
GL+Fhrak1HXUNkQ/svBPRHb3rCosSi2KButBT3Q25qH5U9++50f6dtb/Eql9
HcXPipXBLui6MLPFU0tRvWqepTpFA/mTgzreVsvR/MbH9Z2564veoFF57ib5
PUNcXqT7xOXH63MBprhIypt4HU8ax5Tn4e285o997eP949dxsdp4QzTXzpfq
ignbIBzaZL9DFflJk85s8wBkh+XC9tJdCMvG5p6U4uIuuYncfKdBYox/UCwa
N09TLR3peWDhiLJUpFelKx/18pGdutTceM49b9NYXu5ypB9y47U+YWrvb57D
6/eDTM+Pfja/6uP77/r/j/Dfn/y7+5xXeeJy66+eSPOQ/BxTHGSK0yT/jF/3
s/4ZH8/kn3nt/0qYnyR30rr7K09cbj/rnzWHCv553Zsbb/6k5Vo2fXd/9Dev
ZToHYxpPmh+n+/gy+QESX6b+f/r3J5l+P5ZXOfXh67/0qjVpzp/0eFjx7V/z
UabnQrxi3/r6O47pPJzEt7/PqUj9OH+SfJnW/bPyxPXLq5z6cPRf9ir/l171
354YwqX/HylIimE=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[6, 
                    Key["features"], 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
TjrppJNOOumkk85/K/4Hi9sqZA==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[6, 
                    Key["features"], 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztmwlYTWvbxxukQaVUKGOkqJwMpaLcRBRKUikhouRwlClSIqVJo+ZQNEkR
oRwkJCozjXSkebfW3rWW5kH13fv9jus7137fPs47fN+5sl2X63c9z1p7r/3c
//W/n/veeyVv62hqx8fDw6Pz+////kcDl1xyySWXXHLJJZdccskll1xyySWX
XHLJJZdccskll1xyySWXXHLJJZdc/l9y6xHdhoFBCjK0J3sPIk+VmMmNwHnV
0ZHpF/sp0BDfvbLgCwXBSxXXuiDl5QVnjUK65Eo+jEKmDW46fA7Pk/ddM7dg
gIL+qrDpIvh6x+5D3n34fuHFcY/Y7/v/vc4fheot0z6x4122UbIjiq3ruOOj
KnD+uO6zX6s+U0BpHVfyfUWB8sGV2qHvKVCSj6ZcP1Fge0bzTiKDgtGbySdy
bRToxa2auq6dgsK3yjEHGyk4VC4cZVVJQSijLoNRQYFTainR0E2B1MJzycfw
/TP5lhbe5er8H2Oknur9YxjfDV7STCaON4y90qWLeq7tf6RjmEfBeIGmB4f4
aNj5s/iUeztogHWTAm/Z0lB8X83YZxsNgvtdzrHW08DqUZ9Yok2DubG4Stxc
GiQ7J6SoG9Fg+pbfotmGhmfTexjy1jRMcV/SGypIQ8/UuhsX8L44031tbAX6
vLAhc/FqvL7+VYOtH7h6/9McH6xl04zx29Zicugy0tp359jrqF9IaHnYpLsU
NO9K7ugXp6HqgbC7aBANnZqVZvH8NJwYpxlzxokF+kF2RiaTGcB6c6E+2LgB
Ti9ZrjZiVgM8MLWqmKDSAJ6qR+OYVxqhcBufvX4TA+LqyJjiIgIOx+y3W17M
gmTl55s1rqCfLZ+mLVxAg9ZjAYHHNAX6zYdCnnZS0PrUJZGHlwbXs4GfnuLn
6+0tVRvg6v1N3uSLSQjCOBmVN8o4YfwKNtWceNhFwXEpKwHpHApOJhvnEoE0
+PncsLTOpKAjXa71mXgTCEcfOKqlUgPGqXfk9vNWgX/NGe+iV1UAFbuzlbJr
wcE7++Ni3kaYXXigmLjbCO8tPjctMGFA6kW9G7lqDNhZpjC3bxUD7sSFwdOg
JhDo5Wu01GOCeJWlkHEBCyK+zJySy6TgYVFqTo4MDS6+N8861lGgNj8yrBf3
bQufKL1V+PlferyqaOHq/Hd87N4t8xjj8luf+vntqGt+VorJKooC00cJzboY
V4nO+q4UzLPr9yh2yyQw4Wbn0geChdXwa6ae7i7NCijPdFn9iqqG+C3ST/xm
MqC9QEs3gpcEbc1ZVS5JJCx7OHOn0D0Szm80f12VSEJUa1MC33ESxo2cmprj
S4Igz73s8KMkpKa/9mpYQcJz4al9DrEEZKjYrCHzCTBoWfVIk5cFaRsy+UMe
UDAjL5f3MeZ3h0muvp7NFFSOzZw3B/O3Ysn0TWNxPSx5UKdxPbWK3vSPXJ/p
1etUvWT7dSrFY4+6Bnhu3P8Q4zVgsZLFi/WO21Gzjf7BNMx4WaF524YBXnva
tKfSZZB4bVLEGuZH+CCiqOg1gQGNyRHRvT4kvE5uiHntSUKV/rmAiwwCVhfP
3tD4kgARj0BF9ScELOr/2QgKCVBwuvjB+DUBfrcVpvMgpSzmvppRTICFXmrO
vI8ErMy8dTe2jwDLFVNdqj4TQMd9WKGwj4B+pYarbWokTI94I/BgRzNIfJ6n
5auL96ev/uQpLRSY80WO5kU/D1zKWKWP61ul1lz2I+Zt652VPGW47lFXS5zP
4rijzs25vZWCEP6Hq9trKIhjdkzKO4Nxu0uu1OFhgEFitN1mg1I46DZtdlZw
DYwzHSewaSwJOTvmHLPzIMFM3u1y1nMCfts2695L1PHGGfpFZCOSMkyY30TA
466s21uRxlHbUwKQH7peiZ5Gqsoqj2ePLSMi155CXpdx9ShADs6WXmSI90f/
Bef2SyQB+o/2MJaMJGHabpuZF94RIMgMFtuqQMCDT3J3VpawoGED7R2MOvMr
XHxN4OfXK5eR9sf+yzf2bYc6rm9lol8R4wfQ2dxqQhk7X/Hz3TbWxvFY0cdq
q/ooEJnt8OZQAwWHd0tOtnCgoS75xN42mgFniDBvpkApbG7bNieoqhZ8tN+/
DXtNQmaovq16GwGUoIxT130CuvvcbUvqCeA5mnd1JkFAs0kxWKNOfDw8D9k6
9g8OPmCT5/cx3xDcaX6syB9pqGTlFo6cYDXhC3v+c/SAdDjqHWzhtW9WOwFX
7S6PFhQh4aLsqeyJiwm4HN7Y73mSBT8XTdl+x4CGkZK3Z+/HPBSknTTdB/3M
8gjVmfYXiP9/mm/EbMLZ+v5mL39kDK6761evcFYV6jrCIjp2MQ2BKyt009+R
INpduVbndTksmyl/zN6uBmoDL70/y8ME2wXCWs+fop4tNW1Z6KMem0srHJkE
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
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[6, 
                    Key["features"], 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
3+dH/TPde6RouyJHqNKQv5brfWRlQkHVnPYGUSoek980Ru8qBdWUb/zo+ESC
pNXtQL8eEqLNWqsn5lHz4tP1hrnRJOwIXEfseEBCRtHVkytSqf29N6vCgrKT
ckrt5gtlJCwOUf/kTK1DWZW1n58/JcE2UiH17WMSSolY7UYqXsrq/WLn/paE
qLaBjBTK/2brXPw+5HddDbsdhuIkHm7OX9/3xMWlOHvg9l/c73PQecDu9xPY
/T4Div9Xv8+AGy+dHMP8597yTBmqm3yWsVY3p6Dm9v31aRScopCT9JyK0zqS
HX0PUfaf+nVW/GjKLg1f/J7011P7OlHAKU+te5dLUhXL6qh8NDWoehW1j0pU
mXLdeENCsmfdYlcKP2/LHfuhuOCmWPYHmz+Yr3Ry4r6nM9LvM9DZiw6P3fcH
cXUPHF3c70jY5YNrZ/d7bLh182f1hv5uZaS/O8XFv3T6o/u+Cs6/j3T9ovsm
u/MNzZNx42D3/xXg9IUbD44/uxDli5ODrt6A0kPXd/VigV/h8+T8X9vtwr2N
fj8P0LgLl0/RnTeg9NB7uu8j4eJn3DhxfNC4b/g5u///CMefLu7H0UXlppMT
xcP9jnG4/dlvdi3zb/n13vG7st4fjQ+NS+l+/4zrh4uz6fIvnH9Gn+P40slB
9/0YujoMHT6d3lC/i1tPKB7dfLT5bb06/GZXnsJJl4bg/wAQf5hZ
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[6, 
                    Key["features"], 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[
                   TagBox[
                    RasterBox[CompressedData["
1:eJztmN9S2kAUxgNBxD9FtENVRJC38KI3veytnT6ATqnTGzqDnen0BeSPiAES
AoUQE0iCfcp+mwjjAFoLu4GLnflk0ID55dtz9pw9mYvvZ1+DgiBcRfBydv7z
Qz5//utTDL98zl19u8xlv3zM/cheZvOnFyL++P7xh7wvBoZcXFxcXFxcXFxc
XFxcXFxcXFxcc6sgQA/TWjrYM7QP18KfsmjfhgfShlnfNqDaplldH1RCtnt1
hcg9mNqm0X7bMRKKfVKbUD8pd+Ptxhu9LDqrQA4D7yKmtt8Cm5MhhFa6Pi1c
gswjRY7qxYCzrGhx7+vAW9tFmok6Ife5JP1QrYQt/7Fxx3LI6e23Xkk74bl5
LGN1/MTGvUqiox825wAeGz5INaqRvm/YhcCwE2/PDTzGNpPyTcguCn6YLEd7
CwKPgkTS3rV9sBo7MPyx0hSYPbexSWJjZweM3bUZ0+APFWCPGXlRCrL0OegY
R4p1Qgf4ETtdu2OWjG756Nv0aMdWq7saC2YsH6Kutdelkn1T4aGy87kT/82C
GfFWCjqM4lmbq/D9k5ls1Gvo/egDwwrk+HNd0CLqHzfQwTIKD3Y+V9YsFj67
8bxoyZ4dz0kFpYpBYHj7RocUlBRl5vtEs8AgKjyfUWepBzOY23tdVl2HQNLQ
bTYoM+P8yK5Twn/GwYRiSJNgTiglkclGN2Ie3oYttOsUmXG2ZX2whdXqbpdK
a4f1QvYVmTZ1I5HickChuJDj1TqrUjJtNc5ESMZFsPHd+ta9n+MO3AvVlkxg
/j8fyZOm6gjj5YwLRNut5pL96lMAGRQkZWmjz/Q89TI2XuWobiYVb1L0grfk
aqqB8nHjju+WAvw0Tsohp7mjaQctpJWdmZzXYRXQEIIW4XS9SmNSb61BVdsy
4Lwa0yBlp1ffNqqRAbYafGB1aJ9q5vB5btS/KFo0gg==
                    "], {{0, 60}, {60, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                    ImageSizeRaw -> {60, 60}, 
                   PlotRange -> {{0, 60}, {0, 60}}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[7, 
                   Key["image"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Disk", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[7, 
                   Key["actual"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Disk", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[7, 
                   Key["prediction"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzVXHlYTWvbTyVCITKEkjE6kUipuCOkRAMpyliGilBKIppkLEnJkAZjkggJ
dVSGzGnaq0HjblWoKJQm9d37XLq+863XY+0d73ve74+u37XWs9Yz3L/nHp+1
k1+z2WStsJCQkNb3v65CQsNHbqJA5DsKMa5FGfdJ7SICIrM/Zr+k55njkd5n
65f0PNs8+b3/u+XBbzuJF9L7wiz3Scj2PGk8NmT209beLteZ95nXHf38rnmy
rZt0n9/1MJ8jzb+D3/bv7R3PdVyLMN5n9iNCmG87ox8SL0xkvsecF3O8b4T3
Sf2S+PzG5zzZ+ieNx5QLaRx+1/ON0c6cP8k+MPcFaZ1dGO1dGMjcb8x2Er9s
+5U5HlMezOeZ95njM/thmydb/6TxmHIhjcPver4x2pnz75CTKOOaySvJfrPp
r6D2m83uM/0LyT4L6h8Etc/83u+sPPhdD3O+JLvawS/JLjLtN9O+dNY+k8Zj
Q5J95vd9kp0k2efOzlNQ+8y0s2z98mufmf2z+St+7TNzPvzaZzb/y2af2fzj
r9pnQf0vSS782mdB/S+TF6a8mP6hs/Ezc/782mfme8x5kfY9831SvyQ7StIr
Uj9s99nkTBqH3/Uw9wlp/kz/S7K/gtpnNuTXnjGfJ/lfkv3l106S/C+bfWez
+4LKg9/18Ot/O5BkPzrLL5v+kvgl6S+//LL5h1/ll61/0nhs+stm30n8Mu27
oPyyrZPEJxt2ll/meILKn7ROtuc6y+/vkge/7Uxe2PJftjyQ5B/4rb8Imv8y
xxM0P2Wr/7DNU9D893fJg992Ji9MftsZz5HsM/N9QesbpP1IWj/TPjP3HfN9
Ur+k/c7cP6R5svVPGo+tvkGyz6TxSPwyeRFlGZ/fej3J3jP7Yat3s8XPbP2w
7a9fPV8QNH4myUVQefDbzuy3K+M5JjL5J+0PQfkV1D8x58O0K/y+T5Iz0z78
6jwF5VdQ/03yv0xe+M1XOtv+u/E/Pd7/VxQ0PmerBwk6fmfrVyR/xW99ibRO
tuc6W7/6XfLgt53JC1v9mS3OYKuvMJ8ntfOLzPEEfZ8UB/3uebL197vHIfHS
2fiZFJ/wi/zKgxQ/M+NGEl/8ypmU17DtD373Cb/y+NX4mckL6fsbZn2WdJ/f
8z9+689syFZ/5vd95nVHP79rnmzr5rf+zLYfmNeCnj+S8uvO6gtz/wla3yDt
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
oJvIz622PXILDWno5itjUbiQhorkFYfeIU43mbdPDu+ffH/h1BV8/mVsylRd
XeTbJoAWnk2D/LAbz4/g9VKlANNoaxrW9Xg7MmgqjptcL/4I9Vtth+js7q9L
oNGkuvGoHwfq7vkEuKang+z1XkZd9nNg7sgdCgdQn732ruGIL6egpd/tHqpo
tzkPkyR68KG/pPocv/Vttvia3/N1fjH85DgHPcRzn7ckVSNOP+yttMQT24/+
qb4K7XCjq8yq0uA8EDnssV0I9XR535jmGVO5QPeL36SIchZ32y15MIkG95dt
7ndUaZg25UxDtzk0bDod07/NhIbyrkuuhSFv15emvfuGWN1l4K1axKWBWVaf
EHnr5CFv/jwsDrAbwkNXoUzZOkS77Sn9PiIq9fSUTUe0qt9VxMNJG80meSDf
d1wsjSbjOJb9xcw3LaFB2GtB6oKIMri8JuTubYtSUGxNi5FX5kCk0dNJu76m
g8/M1dJVkhTcVrcyDeDFZW2StkprMN++4z/8Iq5/ygI/rYF88EL6HpHpp5n9
sMVXbEjikfncyxV9k3n566sVRxIuo94e0PZ46o75zbbxhmry43E9j/efHaKR
C5ysLVOc3IohI61ki6s/FzYPNxl1dgUNn3tp7lS6TsOFY+4eipNpiPa8LRuB
eqdy6NQaHdTPG9UG9ik8PtfYaTYielzgbuPx9u07j63fsYPXbwxsZ+A5/x69
/+L95R5tGrHfqvsaM3C8iuCpCtn6NGxueJh2CvebXc31O/7LabBYXJzdlFwG
Cxwsq95XlICH39G7G7Iy4YKi5THjtxnALb/UIoZxhZaL0AFjjBsbX1jVZ2+g
YGq19lkdlEvMo5if8sLGD7/nAYLyyy+2dI3I49V9JISnpCaiPc7dZ02lob/1
Xeb6uSfmFbk6Zt5yUoXgde3dxsYHXDBel3O+FOUYuLn0y8kbNLywfX0yQA31
1X//1VvGNBx/1idhPMrb32ZWcAXKX0txaMznv/HTxkAmj8x2Jr9MfCn38UQ1
ovlZv7xpOK5LqHF7D7TnZ3cdnDJ6Hvp/961+jfNpMJT/bB51sQx2HLE6mW9R
BLcrj+hv8UqH3oUfFwYNy4awtEjDwwmYT5sNjh2NcbZ61TXV2bjf/VsXnxj+
A/9G+h3Af9v54OGum0p8EeWO1aeF7KfAcvTW2HYpCuSVbVrXd82DP0aPOtIe
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
ihJ3CibvWTrhFeZDD5UUH6n/hBem/pHqU4LWr9iQFF8xnxuqdtusCvdn1iPb
upnOFFxqCjudhv7mvMuZKZ5JyHNc8dI+QgUgE61eFHyiHBa3t7TqXq6A6rSM
J6Fop1Ozkm5XoV+bnBH9yQrtteaFD/N9eHo01PAsT87PLlsG/T3uIekzqZ0t
vlor56nD43VYfXIoT28NdEQkeOe/+ZUSb1Jm0ODqbmWgtI0GU/cMrcU7y4AT
9norLVoMUXmah2V758I3s3Ern1/kgObUSWMWa6LdEpZ9exn91Qijhz6GyK/i
59djhv2El87WJ/lt/1VUU7//cApi1Ogtu1PRPleITC3MxPWlWPvIXpxPQbTs
kPfLRXMh1C4pLyKxGErVRohtrqkAp+wr3R37VUDJ1XEGVhh32fT27OeD8anF
60dx8qY00K8u+7mhvM9Ur/bi8Xzrz/bJX36gn2z5E7P960z467sshZl/vC1F
fL55Rk915FP0W8OJVzh+0Oi9Qu3TaVC7Yys7bScNLvmid189K4O+Lf2ThjqW
wP7sdM/2kHzISIxf6tBEwf4/ZMwULnNANrqLl3oQrlvlq9Q8zIealldUu6Fc
Co5b/NTudvb/e7PVL9n0UlCe9aPqjlsiHrrQKsvFPD/Aan6kA/J9/pRllx4n
KNiTqGNbGZULRw1Cby9sKIHWQZIqSysr4OEyR5tDVeUQNE5IRUOVhjGHU7Yr
YP6xY6bmBVe02/2si2OVjTDerqp6KYE8KFe+vsDj+YLkV0dePHap+Yr6z/yv
26Ez3rxzvtCHZ69WIZrV93Lh+VUZGz9VTcQaYzPlPF2M744sTs3Rwbh4zSi9
Q3tocFQP+7QuvAwyr+k/Um0tAaPg62O6Ty+AQ69nRTgcz4HFKx82GnhzIHC6
361l6GdjC4r0X6KfMjYJvheKcjB74KzM+27juVTrD+Mi0u+kmXFOxz4gxVck
+/y74qsOvLT/pOwoxIRJ1i6L0F6bSUo9r3Si4KzQdJEgM7yWUGrY/oiCBxyT
izvX5sHV6Eit0chzvNip4w5uFaCtH6vRshDttruXUp9NNGyzbhCbPJIGD60e
i4TnY7yj2ez82Bh5M5+/Mwux7KBrX953eI1Bm4/kI0/jWxtreDxmLBzZxvv+
QnF+pHMZoqaHQwMvf/XadT9yK/bzZd629WvmoL/fJBK9C3lVlY6wXrOehjkp
f2jbuNEQ79Ikb9WrDGom7a1JjCsB5Yv9m1Y0F8Iy4Xb/TS9yoVZlj9WEfRzY
5xCWFW1MwfLY53feYtxxuq9PtwAbCjIVNt/jxcmFkf7TR/yAN7b8lqlvpHrE
r36/wa//7cAbe0X+wj4NVbMWIb6MD4Bo1F8Tp9wJu11Rj+P1NocvpmDf8K53
Egswf5B7NIPTNQ+ELKtmjKouhmwhu89HKzBv6rltY5ttBXyaNlmvm2Y5NHlX
bVuEepziZDXAVIWGDXa99pap0xDyQPi0qT4N/m0hXFPkuW6/ZswStK/Byp4+
xgboNy3LtJchn34nJyZbIS7PCmzuv4IGZ9OE8cHbaXhpPsoqHHm1SRCF3VfL
YPfBZyHRklxQ2R627fLDEgg3OHa3sFcRXNh/eOOAzblgezfgzx1bODA55EbQ
iHkU9BZusV3pheswq5ijvZ6Cuk8nz77Hdc+Y9Dle7gd8sv0+lO17VUHjZ7bn
O/v75Y73PxlUqALi4mHaZ8Yiz3rxtftuIc8fsrQGTcZ933igJa0r+qvpx21r
w3bmAmTfSIwcVghOgyRmNC3mgp2I8JYK23Jwm/7CZENUOZSGfFpl1U6D4Zu9
PTVuol6/3SnONcF8JTn6SSXG4eMc9d4/xTxG1Fuh9jbq9+6e47k+mH89m/1u
mgPGbSOynyrMKCmDW9VB758tKQNL0bmHrD240Cc2Y4+0QSmYW2dprQ8tgaez
Ax1m2xXC40TNtrSFOfBg/J6oXpbIq5TnKVXUT7Fz6ZLPkNero2eaRa+jQLMm
POAVrnNbY9q7AYgvPC714a2/lSGXI+VNf+Hw8zJ/yeeJksb/8a+k+tV/6/9n
6GNxy4Vnr4udJi2w5umzc562M/Jc3CKWme9CQeUClSJnjC9ft+ilWK/Cdtm8
FBH9HIhbcqBOJjYPimuHtPhsLYLJ+6VWfqwtBbkrPebOel4GbUsTV85OoqF8
R6T+XSu01wOHUmWL0C4/SdO070aDZLr/xN23y2DAA2+FxDllUFiwumiLYhks
W620d/QhLnTnqIStulkKGS/i8rvrlEK3HZPH+k4rhji3dWJPpuXBhzf6Ikd9
OeDXPyRh+gsOHLo4UZl7kPfd74cH3XdQsNLy+IupqK/R1QoXRNHfFshI3ev3
E//XIZ+h33k9FXfor/upHitH/oifDjvJVi9m+36DDUn2me155v3tQktm/rUO
adUZuojDkqZGjED/PORwY8uXrRiPfHmtKoF+uuDwaOPxGG9PyLv3usGSguMn
i6e6r86BnNnJ7rKj8iBPy3zcyMdvIDqubHL6lmIYnhy21K60BJrXVTQMXVYK
l+bH73uFvJ2POSw34U4pDBkhe7fGuhSuXw7PDsTnxOmI+Q0fi+HwxcTcWpcC
kLri3V49OxcaL76upq5y4Fy/usr23RyI+1p25RbO88zn9/rhARQM9B12PAT3
5Tvq9B5RxC3q0f3P8NZ1ObKGl/c4nVzbjx95Pfyur4++8+ox+IsYD/8H+sI6
cQ==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[7, 
                    Key["features"], 1]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztwzENACAQBLALTvDxKpBAwoz/jeVFMLRJ577rjCTVAQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAgP89+3gCJA==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[7, 
                    Key["features"], 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
XCwH0spXDmtbEhhqa7vXciGBTSeD/VRbcKD4rmeL4WivpgGbElNxPQdkb534
E7F0lfmJ2Tj/nyZfQ37FC8tvCj1ntZsbf1l+m4Vb7P+zf0qVbwFvx0nyey35
/zNSNzXOrHLgoCTVq+6ZJwdvuwUZmwzh4M3D0gML7xL4eswxd+YPAv4P2wVU
VKA9tfF8b4J+/dCslB/uaB/z3trF5Nhg3p3ifqdjJ8yvH74/NFmFQI53UYI9
5t9TUtbr5aN955cWV3IYN6cHTSmXwLbBsXNrRiC+WddzZjvEZ9UadyLVCLQ3
GJyZjX7X+MnamAzkd0/5nesmtQQurujx/IZkOZSZmvn8iOegepM/CcK8QFva
XskI47B71cRopWICHQJJO8W5HOQ8VGlpifPLdJh25SDyaqnlqcrfl+yz78Co
xnhh6flf/f5zA/6//en5W435uBwwSG/lXX7eazb+GO7IwXuTrUYGyPPkuQd/
zrHnwE1naWzGGwIz/Sy1AqYQWCRvVv7Yk8BS04emrRdxmG/Vzx32Be393eh3
Tvi7PQrxLk64LvJ1T9mXm2PdVWtpMg95/1TqMMIPeXc5kKbprkrAYZLVkBeK
aP9vby7m/19hZvURNd+r6JeL31nHDUO/mmzyx5tKDoy6Lurt0KYc1o930K9P
w7w9KnBY0XoRrCs9WPG0LdqzQWbWM8z/ld5Yp+1GeW6k1qW25fOmzUlG/L3C
Mct7Lw/C+X0M2dqb98cfVtzO/JX+nJ5V/oV9K3X/0s/h0U8viMOHUPu/63yf
hQ3/f7TkWXQwjyYRN/+6t7Dy+4WrOfy8r6YevYQ8b93iLpuL9WEbqQ/RVRi/
0u9OPTJRi4NtEVG7g8YRMHXNNHHKEEHbkPx+x+6J4H61W9pIGQ4U1KcYXdmH
fmF+y9CLnzjweCMvFyRTDhLlIxaoSZVDem6UhWmLcjj5QdWSSJeDWWW01QxE
r8Nd86RfcpBw84t0n81obxaLNJXR3suijhz7rCyCiucdVfU8RBAZCsdOYh5w
9LVj8TDMG1obJg4P9+IgPHLHfnX0Q222TjrK58XJU6uL+XvsObKfd9mLwUOf
v3l12zz5r+d/mHe49s/3rHpVqN1cbO449P//GuUMOsfjLZKqwN+DjzqmZ7AF
8XRGcZ0v6sm2sG+0OmLl/Qcv9FCPQ/qfLHZfgfGt3cnNj1pzEHexc8YSPQI9
Tk4v62sgAon9zuv2Py2D18lXZrZpIQJba9N882MiMB+yXW/VAxH4zZtZWF4t
gvPLn47Zfl4ERY8M5G95i2Ct/2h74w1lUG+eY1ywtgyS259ZlDdRBDB5qPeR
6QTuWbf15veLXWUnV2wL4kBtvf82CfTDFZ8Gij4hr9JebU9vQ7nn3wn15eNr
QGWiC1/3pJ9MzxKHhwZ7Pfw3r8N1fHbw+B9qsAGk
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[7, 
                    Key["features"], 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztwzENACAQBLALTvDxKpBAwoz/jeVFMLRJ577rjCTVAQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAgP89+3gCJA==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[7, 
                    Key["features"], 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
SPvLEuNkCLlCbXI+zf3Pxhxe9BQxZZqKtxLWTzkdH6n5OnGQ+7q/k3GYGNSS
Km1niIrB4ZSmVn23IoiZKGshY4P1hGubhbrIs9qNa+eg047+PJbkO6Q//afP
r8blHDJXRezV18JEpSsLIsXQqi1ZDAz7VOywbg8LYx/NWp92shR23o6dO6uS
g50+lYM2u3Ew7/x662m47zXuXbT7a94k9UzjV836p/Eo0v6kvWj7RIaQS45/
ytk38fxAk9ONO4f2Pb9a54IV2rdnm3G2fnZiqM1dUXD+IgNs94hK7YZCsNca
ra7cjYUKu8z8i8g7zTt+NjKSFz6npMXv//T587N+MzOacL7aUR9OZmFdP2Ly
ELMLCQxoVGyMXT5aBJ0m1M9Sv14K6Xrvs3zvoN7G/PJD4GIOPgSaTdy6iZ4f
SZ5D2pWMq6T9yTxO41M0JPdD83Xd4eekeJ4Q6WgW1nUjB0qDax6rIc/yjVB+
8kdvMSTtKin7ZRILJnUF7qJPhbB6tvb86xjHNGXcunzqwoK/a6Pv47b/X7/k
d23/lu8Xdgx/lGuA9q2T/vlkF20WZmh9HmmxF+3bO7rDC+TN5jG+l1+XlELn
ge7u+95y8F7FYMZWV/STow+Ut4XS7UfLvzT/JfMvuW9o/kpDMp40Xx8Q+FyG
x7Zew++/RB494KHhRjHaN9QwQv1QLzGcK+G8S5xYuFG+cV+FWhG8avR7odOZ
hSFTFy37HflJ2Eyb84Pk/79e5QT8k8azaf1C311KKvewT7LcUZxvWYTIdI4G
8sS7vV78lsrARRnTDxPcWLg3vMaoTqUM3A4bOGYNFMPJw7eem2L+fV/evd/I
MNTLg/Drf/UPMl/S/JvGs0k7kuPI661tF+5e/oDHj8oeTU1o39T9R3yC53IQ
ZS1tmm4sBlv/t9FTo3D9HWpSVk4rgpc5BhseWbGwchU35j3m33GenRrN2gm/
L0XyLzJukvGWNu5b398wyvldwxfnO1H8u50z5l+rArkTF98wMHDQOfc51xnY
/r6wZ75OGaQF9SzVPyuGEP/++ieQP1cbpxSrbEY/qQ5LSWvBPkL1ES3vknLI
+EDWzeQ4Mt6T40dajxDx+bc8+WaeJuaXRr8o9wczkU8M3Ka5d5IYbjg9u+ba
noFbL61CYs4VwZI70/1FHiz8LApVGFjLgMlip0C1FvQr6fvtZBz/3t8fkff9
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
AUwsEPA=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[7, 
                    Key["features"], 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztwzENACAQBLALTvDxKpBAwoz/jeVFMLRJ577rjCTVAQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAgP89+3gCJA==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[7, 
                    Key["features"], 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztfAlUTev/d6Mo0iSaaSApoWT2RRSSEoqIMl9DmWeSFMlUxhJuQqRQpDJG
ypRZk5SIOufsc04KKU3/777vba37PrfHPtHvfX/vWq+1rM/67v3sZ/h+nu/0
7H3qMsvHZa6MlJTU4L//s/+0pIUg+zdKUVCakBvwX6eftKe14xpHUpQm+m9E
8jrXOpo7fy490GSuccl1tJR+GvUtT8gkylH4obWnteMaR1KUI/pv1At5nWsd
XNjYr6R6oMlc45L8trR+ZDj2AYmS3ifbyUjYH5fMNQ7Xvua639z+mztvrnG4
5tPc6zS/KUPcJ/eBDAUl7YfWH5dMzree2Pc0fXHdJ+dV3yBZfOGaN23d5Djk
eFx64tIP6adJ/mm8NPoR2nzJOMjFL82+aTLp10h+ybjHtU6yf1LvtOfJ9dHk
5vJLm4+k18nx5DnGJ+9z2S+tHdc4kqI80X+jHsnrXOvgQpIvLj3QZK5xyfjb
Uvpp7r4m9y1XXCHbcY0jKXLphTY/WvyXdP5ceqDJXOPS6oCW0g8tj/tVfmn9
0PiVVE+0+Tf6NRrvNP659Fov4fO/yy/pn2nzkfQ6V5wjr8sRMs3/kf1wtfvV
+CtpfUSuR45ynRbXSL2Rz5Pro8mk/rj88+/GX3KetHW3dH5FW+fv5lc0P/S7
+RWX/6HZdXPzq5bml5wnF7+0fI+LX7JdS/FLzqOOGIfMQyWNv2T/dRR909bH
JdOwjljH7/JL+g/S35BI3udq/7vPSdovV1zimg8XNvYr6XpoMte4pP22lH64
8gZJ1y3pfMl9ReuPS+Yah7ze3PvN7b+58+Yah2s+kl7n8s+0c1fyPomS9sN1
zkKTyfk2ro8rf+K6TzsXllRPNLm558+0+Uh6nRyPdu5Py6+4kNaeVudzjccl
0/KY5p7L0/IeSds3Vx80v0lrL+n15uZX/z9/bvp5Wnz7fyV/piFNf1ztmjuO
pP2Teaek8+NCsl+u9XHJXONwjddclCJ4lyLwV/mVorSj1SfkeFwyOQ+aXmnr
Ia9z9U97vqX4peVVXHriut5cv9Uo0+pLErnev/wqkvUlre7kWkdz58+lB5rM
NS7t/dHv6qeRd673ms0935CitGup97+S8ktbD81+af3Tnm+p842Wfv9L7icu
uyLv/9+2X1mif3Kf0ubX3PGlmqkHmsw1LrnPWko/XPuatk4ufsn93dLxl+y/
juCZZr9cSM6L7JdESfnl4o3Mr2jtJb1OyuT74N/d9zTkGqe5+7O5dtLcdbSU
/+F6rqXjr6Tfb8hRUIrjPukP5IhxaO0llSV9P0hbDy0Okv2T9SzX+rhkGpL5
M20+zb1Oq8e58nqufdZA2Y80//yrdQbtfTh5ndYf13q5npfUP3PZW3PnI+l1
2nxo+iHXxXWfpn+u/rhk8nodx/iNWBrvmqiDuDWs/yNVREtexgEbRPm8lJzb
MkJ4KWcuYyYrBLeHMfHackL4aLVxm3orIZh7mL+LRZRR66Q9R0EIGRq+vf1Q
dlzacdBJeSG8CB2aYIfPqc3zSNVHzDJp188S+9M6fG13W9aOX8pFsuNGj5lq
09T6yfjLtV5Jr//quTDp52nnsmS75p5zc8lkPtF4vWDeyl4sDpZOVNVFnDqv
6+oOiJGQZz8GseP88UqZLH9u5/t/Qn70puSOUmxgQHHcrrXTkZ8Yg7e6KVJC
MNF2yhn7hYFz695fPiFmoHDe0zHWAgaqdzeIossYWDDlUIRzJQOxmw+0noV8
W1svGe2GvO7qZen3HJ+fpNEl2RGvnzddEdgX+73XNTagDY5fobglowtiXhuz
MHaeDxInt29qHVx6kvRcvrn+WdL7ZLuW9s/k/s0yqHJh+TwcOMKwPaLvwC5r
WfusrkyJnIQ8dtrc6fQ81PPB80+fnPjGwDTDcKnUcgYqvu3foYL3Hc+YzPMq
ZaBEfDdqPvJzLXusz1w3IYStKag87SiEFSbLDvbbJoTFRqe6xw0VwpSDR4JH
jcb9E88MeVfIgG/1DX/H7wzUmw04Go/jHpk4a6ZTBQN36m4bq2J/Y4OTnUNx
X+nvs89ohZg47LqSNGu3NYF9WfvuOWTpTR0J1ivpdXK/SBHIlc9z1Udc3z/8
an1EzqOd9zVXQ8Tv5vmdy1CP58pvJZijHV1Jn7s/EO3n1leHyELkkXGw1TX/
wcDdZ/O2nbHDPCSob7/EVeiPnfP3prmLwCrV7bzjDDG8Vu1kGqpcBtMC56yL
3lgGzJOII/7RZSBzqcJM6V4ZtPXcNW/VyTK4WRt14ZhHGeip3bRpeCiG6wd4
XvFtxKCktPZBsFAIxqGzMqZNEcJegfmwKC30J5pnunWuYqDjiaqcCJzHOymL
qCjcV/1PaFUPwvn7GGx1boXY66RwvZ4EepL0uqTf9TfKjfuF1p7WjmscSXG5
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
PMueHy6/eyIfiqYbRLnuwrx40Z89rv9gIOKcSoRjHgOvN/bvoNeEf6TluaT+
ZQmZtEOyHzmKvZIyOW7j9VVXbBWPIF7ss7XqM/J8sVp/oM9bBiZX962XW4/1
YdljJ8uOYlig0v3w/O5i6DQof0HVcwZmeEqdq8B9H1o68KqizL/5Is+XSLsj
7Yp2X1LkGqcRbcvM/ryJdZ6PuNLJBP1W8MwOvIl7hbAAFpRWzWXg3gqHO498
+PBMdemEGduxvnQ4tOwZ1k0xvHPX45HfGzXGl3+W/9DyK9IeafkVVz9kO9I/
k+32OMy71g7Ryr9TJO8j1snTc29eS2cg9Xhi6VRbIZyN9w4xvyoCv9KuPeUm
i2Gzq8LJumoG+i6em9MD/duiGWtOZcvQ/S4tLkpqb5LaLy2/Itt9jzrpEID2
O3J4m1HBGHcTprQeYzRDCFNcIg7mdWdgv5vCn9eD+aC9Vb7nqBgGhq381CcR
2013/T429M2//S4tDnLlV7T6l+yHZp+k/6Dla66BrtZsvpVin/eoNe7nSr04
mwTMI5hpt3pL6WCdaGV9sADzrdMDY7Z4rBWDzPOUeh7GXXiS4OFWg3V1jKXT
UNl/67WR7+a+3/9Pf39lfHJfX/t6BswKVgofo/9J277g0jjkbdLi9xstZdGf
CQ/bew3ig3KWgkHqXgZUDo0zT63AeFZacfFC3r/5pfFI2h3ZvqXrI5r9npyR
s5E93w4ObV0/EvOGjW2WZ5zAfPre6EsJThEMdJp92GTSTBE4FG/r3KqrGNy+
j7kV0MCAu12bi5NRT8/sdxxJk6HbFdf3Oc39+5O0/FzS73MMleI+9KllwPew
fu+kDuivxR1vTjjBgL3D+7pytN+ghYK0FZ948KVX2ZOCeVgHvbRfaFjHQC+7
nXM8c3H/v0pZq91EfJSn2BVZv5B8kHGX7Eee6EeOkFtRxm1sV2dlttMQ0SLo
1YQc3J9nw3Y964n5RJFN6CTeBAbWOLZdn+sngrs5Tt+ePBHBlkUj5qcX4T7w
0j16HOPY23M/rOqb4EuaIv+nzicl/X3ohdtGvrXIV8nix7yN6IeeHb1oLYN1
/azlsxdH9mLgnY2RYkd9Pph7+DT07cDABd67aUOxTnZoXbTJNwd5edVnc/vC
f58bk3GWlj83tqsh7tP6ocVjrvy5sd3afG2Xt2i3fKt3Z+4i7tlXNTKMh/n/
8RT3UGfk/8/AsmMlIjD2e3hB76AIovfE1VzGPFunyG2blZIQVg5skFrXBF9c
58+073UlvU+2o33/TLabpXyu8x7MGxT1Jga0Qp7tzBcY70d/5B0Y/jZmpwA+
rVU7Er6ND620tl7eUcoHo2hHJTlDIXgfrNZJwrhVEq6YAKg3k8pim3/aMVm3
/mp+Rat/af5ZnjLuzuwXE1i/nOU4yWAe5suWlW/b6X9lQPVxrH/KDrTz9+rG
4i7I40vd3nKdxBDpqr266IEQJqm7dorKYkC4hMesVBRCQqvFhco/0SvX+4WW
+vtXkr5f8F3js6QH4uKei88WYJ7YrVrdZqm6EO70D+oZESAAvual9DbKAthe
feaLTFvMo82nHQqpxLpxlNvpPhinB43Mit2B+jJNr5za4Sd5D4kkP7T4zXVe
RSJZT1n61SiwePToit2sn3Ea+yKgcz4DGTvD/pCVE8L0wHvPbI0w/yg8tEN/
PwO2iqMUJgwSg8MDvoNnFdaLH85+sMF9f+CdnYoh5lVJHzZPVW+CL0m/f6bl
TbT65ne/fx41KmY8O983Nom1ARiHHvSQO2lrLgSz2Sfefq4TQPylTJv9+gKY
mabz5IMsH/qHZy+925qBb8pKV0rwufVxp/OW4P6OqOj9nH3vNybVSq3Tf1F+
tVRt7VN230VFOu3fi9iRt6tY8zUDnjKObfqhPfKDnFbf3CiALi6npl6qF4K5
adbhcZtEcG7NYIHcXfRniWtNhmDcMgxOTSxEv2Zwo2OkdhN65uJXimKPkv7u
ivZ7KVp7Ui6srlX8E/OsKSFtE9O0hZApf0XvHeaTpQfjWptm8KHQsHv2N18+
aE6f4ZS2jA+me9Tco1sLwZG3+Zw78ts9NfmaBcaz9b1MVrD1R59wR82m4qYU
hU9SJvkj/TnZrhEb86kj+eE1LK+yJR4b+7F512KnrSqYL6Qu3LpsFdpjuV5c
xdhJDHgsK7O7M1cAH6+HzpmaJ4KRvsc+57QTQnpuVZQm+jOXuv5t2HPnGM9V
Q+vY726/C+7+TM+k3yXbcZ0X0+6T7Wj1EW1en898Tz6K8w+Tc+sS8AX9Vc3U
LQmDhJC1cl+wVxcBuKhef+OUxAcFPx0v/zQexOvEm9UUC0D2kN+Uz8jzXWe5
hj5oFyfq3T0Goz5vpH1MU0Xs/SAwT6uQ+zyZPL/61fNn8xCtnI4sv7mzDHsj
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
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[7, 
                    Key["features"], 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztmWlQVFcWx6FlbxVGNGq70Q4qKm6AEEC5SgAxiGJA4obIpiiFgKJiQAxq
AijCRC1WUVqWRBRxbRFkBxXZNwVRoDWyqdwGFBoamjmvZqrmS1KVyXxIM3Wo
6vrV//Dufa/Ov8+9577mOnt948aSkZFZ9e/Pv/6EBIlEIpFIJBKJRCKRSCQS
iUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEvm/8XZd1ujoKCWvyxrlGH16
vnI4o4Vu1x51A6s2nSth4gN7q7+LBv3SlW+2T0LJ9T7V3B0jlIjOmPD1gZeu
Z6jtHKbEv+xsw3JgWPQp3maI311Qp5IL406XthRmAlnHfU4y80cf9lBi5l1o
tyKL0X91Hv7fWPmPi9UjkFeFZ2rNiqAHlUP3MT7YukyfVwn+/V0ta58axAOM
++a4gm7y+jyDD/rGy2S5Wjkh6TmvWZWpKCSparF1l4CdqtFpbUpCstx6zVN3
ZSGZfcbFzwniX3PC371kwf3GtT7TAfI9R/OMwffrHyYPDgJ3NLb4LoF5J24S
m3Wjz3+ae9yzYpg6+Ry47ZAYaD9Z94o6xB23yT3aA/69c3sinAPap7RW9Ap8
kFPqs2uB6w4XJzsbywvJkbKSCNEgJTWjcSaLn1Gy6ZSPle0vlARf04htTaHE
QKt6RPQTJZXOH3Utwygxmite3XkN+Ci/KbiLkgnnYn+066ZkZqb85nzwvS9u
0cqjMK/+x5SnR8HnedVGWQZw/88OXMEI+vyHme7Iecr4ebzGrooNWn0o1+Ie
6PnqR9R4kNeHYevTF0M9zn8cc7MNfP7ikNJg0TtK4vihHSaVlLgbFNvn36Ck
/sQ4i0sRlJQmCohTICV5UyqPvF9Lif7SrQ2meylJXC0zmBdJieDMuZW2oZR0
JdlXZUJcznah0GEFjNu/weLtAUoKZERW8RnwfSg+JD9UQcksS8HBWeDzVavL
/qpw/wX3s13kpCBv0s6D9Q1+w+Djh4ZVvEmgS7I7k4xAP1eePWMjcFrYa00h
1FFreX1KZxnsl75XjUofU6JusyI54gHss25+GyqKoK7v7E5Ng/j4NG6UzEvw
8Yf72gcVhGRttmtPFazDtruXBFjBulyiYZyoBfPdKE2Y9Rz4fWtYDhfi388N
Cs0EDiXtL3wJPro8EWSzsylRiQz85AVsDyzJDHxPiYOfWtEueE6rlLZPkVi/
v8tTgnPazDqsYZsqUQCdpBp1wAF079oTm5tAKx+dVjYVeNY8K3x9MSUjhput
taGejLlv9rPqYd31zYjZ8Rr6pVAtzV/EkGct5ctLwE/WlstrVkGd69D4cl2o
+za/wA4R/D9caGtTBP3U+P3v7OIgzg/PU7QFeno/yKyEuI9E37MArrv/IjVm
AHSSb4C4D/w3H1fing7zne/pDMsagrp+8Y2pPTzXlCfvc/vQ39+lvwJvgNm/
3mS6JjD7Jyuhn9UF655k5s3J18YJybbpIa1OMbBeLzVpeQz+2lWaHPWB+ICW
55sIyHPR7iRaJyskghaLw0kw33klbvpD8Oue2rEefZhnUsLGflmId4l5XzL3
uxVrwpb8hh/zdA3amfXD+cXeeOZ6L75NBwtomru1dCbMx3soWu8L86VvPZgQ
DXHzhNiLTXC9ecjbMFkpyKO0Mf3H00+ZfNbe5VqpgFZ4kxrrDHnUM3N5HQ/1
56IxyK1Jg3NPlJ5uIfRDr3hZwltQR8fCNFzKIc+xvV5rEmGcdsxy9ykwzyFO
QTezT3d0tBcy+2Hd3i/UGR9VTX9q/jPnmeW84GxmXOpXn5MZbZRynj0I+mZU
nidTr32frEOZeO9p7xo8L/2HW5b4S5h8HG87b8b48K1xjKoA/Gr2K2wPhrrc
Nxw4waIV/Ith92+D/rYlwJUvC+vizrj4yGIYp5Vz3WsB0P+7ptY7wK0HVM2Y
fHNiZGyYOjpe4dmI+f7rGNo88pzJv5rgbyEfgLk/7/76ItRtb8SoZRn4uH38
xcbqc5RomvEjgl9B/+TpVsOG+EYLGUcr+B48Mi/3mAjzhN/2DkEfpY/LAl67
icCXnGRS6wC+dmaZWyfCuhvUc9xhNfS/wbwvp/UmUKLUmqjioyIklTUHsij0
O7nCOaYcGG/A1XEcRl+llrv8Bi4oA90Xzz5sCFyo5+ToD+Rw2+W3H4a+df26
znvdlJSpczgXoG/KMJpsrAx+/io05Q+ir1LLoT0nW5k+mWt9nz8buNLgsXMB
C86lWuUBKbDfTtUZdCqOpkQ/9C5vmHlPtHvtLOZ98bETPyfPgPEBN+Ku4Xos
vew6ENgzDlhcWH+jB841626+vRfChnMJb1FT4UlK5B+7zc2ppmSP5oPaRdA/
21dp+ofAfmsn+RQxgL5KPb23y+QKwKcGrTRL5r3ezoylc4qgb8p5EdDFTqXk
YqRw2rIWSiKdPyp2Qh8tHj7C7pagr2OFDqIZpA78qm4azs0DXyPXFXj7N1LC
8m2pawR/i2K+ylilLCT+q9/mNUM/ZcyJpmwpeG7kH+NJp/7U6+AvO1071hD2
15X9lhca6ynRq2tfrBNJSZUNLzpSSUgMt0wfbz5Myc15gS5iXJfHDO80LRKu
B79Ml0/6WAF9VclV2WN2nVDPSpXKnKeUpKhsCMmBur7bcntpN/RVPzi8lWA/
NXY4ZUccZfrndR6h85VAl1d46OWAjm8LKmZ+Twiunl48gbne2kiC56Cxx2WZ
+fkF4Js4/snzHtAeTl15jiJKPGSop85HSjq26l2IhvPukGJXoTX6O+YYe0m2
7iz4FrVqQ84z8DHPJedZSA8lvYZBWlteUeI9W09BEfpmyysWHWnYN485+tpb
7+0HfzdFTX03D3TGrjdTK8DHoPyF2RNgv83knJZfA/Hhzs2TfsX6HXOcWmKo
wPy+cyVgYg0F/0Qj/SkaoKMTvj1pA2zUdE1lfL0dNF/MkoLnRf53zGw+eILp
h2tvJYgZn9eaaEsYn88kLQxpAEpSLm1j3m9t1BWE/tbv70gkEolEIpFIJBKJ
RCKRSCRSevlPivdTYg==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[7, 
                    Key["features"], 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzdfAlYTs37fwuSSkkhVCoRlbTIlqZFhUplKVsqS/YlSyWSfS9ka6dNyE60
EVEpIa1CRNtLeuaRFir1u4//23V9r/kb53nkfb98u66uzzXnzJm55/7MvczM
OY/SvFVTFgoJCAgY/P3fSUDgToEVRkIUbGtrS2FQmLguTCDtebI+rf12pN1v
L4vwKSfZPzlesj7ZH00uXvUjRPRLykHrn1aPTR7aOAUo+PXv9gSJ64IEtl9v
/bs+2Q5Zj2z/K+W59uutxLjJ/kg5W4nnBInxktdp/ZFlfvUjQPRLykHKS7ZH
1iP1xDZOUl8k0vRA45eGtHqkfLT77eVOfMpJ9k+Ol21+0uTiVT8CRL+kHLT+
afXY5CGf45Vfsh6vz5P1yeukf6bdZ2uHJiebvGSZ7I9Nn6Q/pbVL9k+Th2yP
RJqeaP2Qdk9iMzGfSP/B9jxZn7zeQiDtPls7NDnZ5CXLZH/NFLnI+mztkv3T
5CHbI5GmJ177IZG0C5r9s/lvsl47kvZLu0/6Z5pfY7NfNr/JZr80+dj8L+06
m/2S9Ug9sY2T1/yKzf/y6s/+6fyKLa6T+RVbf7zmV2zjJPVMlmnjIOvxO07a
PPtZ+6UhrR4tP6D5g858yskmL5v/IfMdmnxs7bLFX1p7tDjNpmdeeWGLBzR/
xW99Nv9M81vt10k5eW2Xrb+Wn2yHX2STl9Yf23O8+meaf2F7nuZnfnZ9RIuv
NDnZ5KX5SV79byuLfmj90+Qh2yORLf6R9WnzgM0u2OYfbV6R10l+affby50o
7XTUfmn9kfZLk4+tXV7tly0e0PRE64e2X0Dmc2z5MZv90urxu/6lycuWV9LG
S9Yn+2Nbb7Lph5b309YBZHtkPTZ5yOd43d/gNR9m6/9n/XN7u50p/ZHP0+YN
2z4B2R9Z/ln98LqvwhaP+B0nr/kzbf+U5udpcZ7WPs0vkfql5VeknOS4yfUC
eZ3WH1nmVz9kXst2rkG2R9ajxQPaOH+1f6bNc5rf5HX9S8Zf2vxli79k/Cbl
Ivtjix+8ni+w+ec2Qg+0eqSe2MbJq3/mNX+m6YGW1/Iaf9n47aj90vpj88+0
dsgyr/ZLk5esR5OXtq9B+km2czc2P0vzu2z12FCY0g6v54O0cbCNn9/x8bo/
wqu8/OqZ1+fa99fZ8gm2fmn1SP/Mpl8yDrHJSds/pslF9tfMMi7afiFZZvPf
tPZo8YNNz7/L/gav8ZfXdjq6v0H2x7a/waYfWv80ecj2SGSTh639jsZffvnl
F9nO9zvK78+uf34Vvz/LE9s4afbe0vZj/9NR/0ye/9Lu89oOm39m86NkfzS5
eNUPr/OD1h6JbPKQ9Xndn2TLj2nPs+V7pH+m3Wdb/9DkJPun7QPR+mPbn6St
V8gyW/yltfez67f259r3g9jeB2E73+L3PIzf92ho8pJ8sZ0PkueLbP2R/LC9
50NDUm7aOMj2yHrkfbZxsq1/+d3foCGv9X42/tLkJPtne7+O1i6/46PxRcrB
q7z86plmpzT/87ufH9HkpNkfTS6yPzZ/yOv5ERu/tPZo+xRseibHSXtfq4no
l22dSnsfjbbebWZ5jrxPxqFmipzkc+3XhyzVRs8BQ1/3brkDuE78s6CGNUay
ztdvbJ2M0WrlO7tmAdpe9hgdAFid3qrlAihSMSo8FHD3xoVunoD2qpPlugB2
CZkgNQOen1G/3qxwAkar5oxwmGeBkbPy9XAhS4zOZj3nVkE/RrdEe+YABjpX
O32PT5q8tHo0/bDt15PI73t5vO7X8LvPRO5fkfdJOcf47JMpBLTx9JYtBhx7
e8vq+4A9l36R1AY+zscID2+0xch0+EIFMeBpqvKC4rPj4X5czMdYM2jvRc4g
BOXxEQPEHIGv7YYNpePhesz+U1WtcF3PSyDG0xyjTAnZPVuAx7gNId3MlmM0
YF7PaZkeGB1vKptmNw2jw3L9e+03wsglJzc8fSK0M2SNBSPXOteWFRmA5o2C
B/IBK8fujuLHftn0R/MPvOaltDhF82cdzZ/JdT95v13O2CkDXjH2aa3utioR
cOiSTab2wKepo8u6rTYY3Uu4HFIMfPhjEa/SMRgVi3lmfwae+o1cIz9yJUYT
co7cL1yIUdSG5U+vbcRIe2PA7b2PMRp+r/z2mFtgt9H6BWZuGN1YkBak0hUj
kw25RfuEMAqq9H4mn8VBHwPPamgFc9CjZ0NX5Whh9DrC5lPrDoyu+1alLF2A
Ud0zWe1m4Plmk56SJMwbM/k9ucNBvqvjlj9i7Fs1VFniqRU9jpN6ou0P8Ro/
/+n3N/hF2n78p8MD15cATtv0uNsxwCbLaAXGjxqZfLy+GvRX7P1AbijY0erw
1oiv0zHKelv6Lv8cRhqXBSvlUjE6qm3in9CZi5zk1w9RFeIik2FDx+7uwkXu
07h2VRUYORXp6s5swihj0+KQgZ24SE3dd/o7qH/kpb9TzRuMfMqzt0hnc9B4
vwCpc6c46EWm7YpBkzhor6z+1v2fapDRpNqDFXC/5GnMjO5LMLpmNzR98GLw
64vGPV4JfiEo9ZOzO2N3rto+oiBvoTun8FEH9Ew7p+yof6b1w1af13nT7nfm
ij28y2C5nsnhCkC5pM5N8wHPOV5/uR3stGJPzZ4lYB87ermPeg9xMbOh3ih6
H+RnYa+3igNfry/2fqovykUuLydKzASedG/0n3XlK0Zeb0339WqDeJag07Ic
yoLv95+yBL5fxd/5uEiAi9LuaItMa8VIQqTJJBfu7xwq9fwJ3I9Yt2aMbD+Y
H+Jr5KwHc5HrrGhZpyLw5wVBLqPAXp0icVN8Xw4yzM6uRTU1qDpq97vgFxzk
tWL+M7E1GH2ZdVtDEeqd6PxVT2ISRp55h1+6AM/C74LmZvxAvzT9kd+1sb3P
RTvfIq+zfddG+/6OtE/a93vt8o7KWVH8CnBb0OAj8wB713sOuwHxtFuGgFFf
E4xuKd36uBv8bF3hl2LuS4xUlmRYXwW7CzG0rcwHPpDj6tl1zRjhrkNMZwFP
A7f3aOkN/CWPDhtSCfwO2yuvKQ/lF+m3XEKBz1MZEjdXwfXnNmYKXeB6qqTu
fWXALGHXD2Fw3/Hye+l1dSCf9lm1jRyMvBvVZubCvFn2zjOnSRrwk3SiYy8u
mvu5+dq4URh1vRBVuqysBn3h2DhOnAr+fP3KOEWID7NiJ+dNnILRRetpoaUw
L0unqB9eDjyLChxzSf+Bnmjn+n+Kf24Wu32PwYeSs2tLARfPlghbBPi4RkVj
GfA6RKOzVTnwajbNOjbKBfIcSY1Z2aBv4b+2BC0DP/tCLSV7dQtG7puqHt0B
PvLVq85JAD97fCtUWoC34NGe99ravsUv+OPyjToXFHp9hOeTSp5vZObFAJeY
Hb2gn6uKp3XXgV8X73/gnn89RgXO7+drynLRpKhPaYfEuchwipfBiQAOep93
7XFhSw3SWX68XAb4PVytnlc+FaPBcshvC9i1qfCXr2OBZw+zxj25f5B/5vU7
oaP9VuQw+HZKzYBwwAdv3ygqgx+eFzXnbTfIZysXy43IAF5li8oK9oMeJ3w+
+DBQmItyWmRdHoCdHjly/IY46N3hdHKgMKB7/NcrXzvAJxtqdCrbWwftBw6f
OVMUypFv5yV+hrL6Wet9m0C+W1V/ST+EsmE/c/cuClzkbV2zregeB02+bTC+
uQvE7fSTL/PmY7TFacbTIuB1tvvoLCvICyNGLjZ8wod//tXf//K7f8Xr+WCe
mFYAY7ejDPpckYa86VbOeFFRmNeK20+kiToBz56CEqNAb0+Tw02uAK/mFfLV
D8BepboJn9IF/Q7d3CjUAPq0e7K6rSN2yi+KDrK6yfTHMYxxagZcHRfmpwjX
b3n7hNqAfctFjXDoDXIfDjvrs0CJi7i1FWXdCjno0Lwx7mojOcjYInP0hmUY
+UkM+bAT8omH6y8/sAG+W6Z3Ksj8gZ55PT/6b5/vP3OZeO8FY79Nna5vYuSP
zxqAwW6j31hUdQZ/fMVcxmDqXYyWd1K/GAt+eNcJpej7YK8v766zHgF6LGxo
vdP4L/LJhn0DGk3rQR7nUrtQOShf9mnyNgaeZyn7VK9rwEgzb07Ps3JcFCwx
oW1lDAeJuXKk9M5x0KpEz34nV8A62jZM6R3k2/p7RI8rAs+n08y+q2cSaf6c
bX+uo8i2/pUe2WtjEqD5xgnz44HX4HNhZbdhnbPt3LVKOw+Mtqp+VveAfMkr
bNfjE6CnM5H1+vmgv8EyGpyPvxGvJI4LyU5oBfl61+qMHwjl8Lyzy69Dnlcj
7lrYH8ZTMKGrsx7kgyPzQvZIL+Kg2YUTNwjqwDp9UPIIPQfIy5M9Mi5Bnl3S
X3fzk+/oTYCwp991f/KdyWtxD5inR4QG6pyB+GPTJ/ZxlR3w+vjBDN1ijEJE
DmYKgR66WohUPQb9lMb43O/8G/DHK4pbpGUxcXli9+AzTL6X6eWhVQZ2vHBb
bl2DFBctvqqDJ8C83vwgdbiWLwdtnaU4RBTicqaJzP0ewK9ZTJZqpRX9PSIB
Fvsl/TM5P8jrtP1vWj9s5wt7+rpJCEC89R4vWB9hjpGIW/GjAkeMdLLRpVjg
dVOMcVoT8Gpet3myGuhn5NyU6Jbf2G5pOCPlgz4Tnz1eXMdM/u2YJ/nyKeQP
C44lNhyBcU5RfC566SYHhS07U398HEa2QmrZlcD7yJDPRadAT9o749Z8j5f/
9vtXtHmQkT3tNRN3lbNPG5YDvzMbFRwDTDFaZuS2zTwWIze3tVnN4Mf8x3lo
RYJfDrdtCGfWrSta73z+N/OnX4U9LdeWMnLbfbj6SgjK8eIteirA7+s+Eeli
YhCPxXxC7PeDXkY9bHUo56CFmqHHTGC9EKQu6N0K6+SjOip6hd/hhS3/5ff7
7p/9Hpz0J9Mcgy2ZuCvTzbK7IaxvldcObPSFeTt0k5bdlCKManUL8VjIp1qS
ziePB/uNmbHqtvBvwFNHcW5j2Dpm3TZlkM96Jv9XfGA5qr8oFzV8bSvekQjr
Lb/cCzFfOKitPEU4eg7EKxtriVpYR0RbOqvl/4f+aOeOJDZR/CnNz9LiM60f
WpwuyJTFnhB3R2ipoYFQ1lfxbUoDnt8VXu+y7wVGcSNQyX6w34N+sfpHwX4T
j6amV/2Bdkui3tSD06phHJ49Zbx7QjnY637qtSaMyvRVky505qLxSWGrRi/E
aHFd+Md9emAHykF1cVMw6im5/NOO7/Dyq78/IucP2z4K7XyrteHmoesQX2br
vt6lBPmyVYBJzsm9EG82y3W2B16VueX9y99hlBO5oPaEIBdFbr+yZuL/AL+x
91snPodxbL5/QX4hlMdvMjjUpxH819z9bqO6cdFH9ZvH5TfAenqtxdY6yKdn
TVG+2gj8TnrkK+9nRd8/FqBgS9s/G39p+xtXGsOF84BfeaelJXEIoztdXmx9
vw+jS2Lne1SCX841MExI+4JR3e2iEkPQQ52GmX3F/wC/xyZePMrEmUMOsoZF
MJ4NlU/8F4F/micpOWMU2O8AyRY7efDTYwY5halB3E1TUNG7Dn5OopOvaR9r
+n4/2/4hr/ZLQ17rtaM2R8Q1HfjVz2mbJA722+qWptsb7NehofhyiAgXVQ1P
V+sEerB5HxO7AvQQqtg8RvI34KejmJZ7lcPsf3QdcTapD5Qt/EYk7AB+d3Mm
ZyZCebhORuoIWD/dCJbQ/DIDI3vLhMnuEH/PV31YdcCaf7sj10dsyOv7vmR9
8rnBRpdOVQG/OcajXVTAfluDvKIl/TB6EKSZugjmsfQwjn1NDUbDOp00MQL/
vCHL4ILn/4D9JlpddpUCdOttlT8XxqNvv52zBcYXo/ZR2xHwin+pqwXwvT/S
pO+x2RiFZWuuzwc7Tnw5+lioNf19RLb35dnO/zpan3zu1jsJIVfgt89Fn9SB
xhgdnN/X68UujCqQ7Zji9xjtuHBQSDoJo7cqlUY7ge+RJq3HdkIe3dRv7po/
cX3UjndiJEN8QP5L+fFLxwKfdsuHThv4CXisHVi4BeLR1/JRh72B337aGYcj
ZkF5wq4hzcDvnn1HNgb+h/2SvNL8JBl/2fwzv+dUtPyqbOCMggUgr1WZUnig
JeQPir5y7vYYGUcVpQomY/TpdvJRowSMxjrcUn0I/G4yWj1MHPgt9I1a8jvw
xC/Wznt2kNmvDFRM6o+bYR1c2SlFGPKpB3avpgeewGi7yZzKgFSM1N6YLLgA
+Yd8xYBPg2didEju1vHnwK+7aB0n5Dv+mdfz/X/bfi9u6DvzI2B6zfkdImDH
S/r6R6ubYtT9XrxRXgFGdw9PTlXpxEVyRaIrX8E6ceaSKwnMeqKP4sQ3X/5A
+83L0frC5FVvEkX1RoN9bg9UzteF8QWKrzg2pwSjD44L2m7VYnRvQ2lw8R2M
dCaPrMyxwMiicbf4ceBVZ0SiUr/v2O+v/n0zAUo7/P6+2doyYfU8wC/PxNwc
gN8ufbh9l0IcvvR8m+/5dIyO3n54v38ORmLrKrYUVWIkXfRAsQnWTSt16paM
/QP5NU5oFYkCudWqc2ZVgF8+4BtqJPYRIxXNi+Jt2Rh5m+jGS0hykfrO13eq
AjFSCrirZ26A0eepCvkxtpBnJUy6/OQHvLDtP/9T72/Q9kH09VvSmf22po/3
radOxujsJo88XzOIxwG+trmw/jtksudSKuihqN6yLhHyyT2mjlxj0FOB0Mxl
L0BPZlXOFxi9bd8WXf4nxOPBm5PlH4Cc54YJKtRC2ZkzeW8DjEvBJMvmSAVG
vSxurFWF+GNrsDnogDtGDVdD/fuBPiyO3J6RCvo5EbtVpugH9vOrvh+k7V/R
+mH7ftCh+8OnF8Dv5NiJSkXDOiBSVKHA2AHyjWO257ZBnqXw6fSEVA5G5gaO
QSvAr+Xmlri9AT2dnO52kNmvH1CkdfBP4HdrqPfBMJDzvLe4QxyUX33u+cYC
xqXRxn3kB/nF/QNfA5e/wUguzSZcAvLNYrWLgjbg17CdvtkF0FP1hOWlP/KH
v+p9dV7bZfPP7ThaKTUbA5642NzdCsajqq4waIkJRlL93tZERmF07dnNPKOu
XKTUdCTfgHnPcY5izEGY55lPg+aEg74W+RhIdAd9iVrJRTf9xjxXj17txWCI
5NI25nwz8WNd3VqYr5yZrz37CXNR3LnIevWjGGlbrfMxZd6zv3sxfh3Yre6e
fQqveIiLvypf4hdJfsn7Xdzjv733HWu1IPwK2HH02K5/WYMdGwcd1JKD9d+p
RScr9Z5BHIlTwDfiwb5VF7nvAL+dFe0QWw36qRwzzIKJx/eeSVUx60oVqWVC
rb8Rz/bZu1QZ/4I1N88RgfJs6e31A2F+fom7LBEPdvts2txtyZBnNO93C26G
/DJi/IeUqaAHaXG/I3aAKd2Ssr53bsTv/hWv9virv09RLZnvzcSVXrG+RlcA
Y0RMnU/AvDXtJRE6CcYrby+vnOEH/l2kv878ZRglBJwNbAzFSDO3LSJUnItU
4zh9fSC/7qNwNs8d+NbY1b+rKuixp0th/X/zvR2/65djGF4jV8W7MPaqubD5
3mwoR23KHHgUcJ//xl6FwHMPO1Xdo+sxWhONo43Bbmdy8PF6xm5jle7eBX1k
T5v0Xb2TvNLiL9vvh5DX+X3/ilfcpBt8gTkPPrQxaY4hzNvLDjfPqDDjWNrd
9wig5dJTB95GQ1416knAWi1YX0xQ17wD/I9asFWmuxQX2Sy+fNMceF6apiMj
CjjOeWAS877EoWafc4y+kz45af0bcTo47KYd8/7BnS5dpzHvUa8JlH2yAcqF
Te+Kb8K613JM4w1/iDeHNe6V9AnHqNHy9dcII8gvXc4fegzxKc7yhlEUjHdX
XVdD5jucSR7f54XX9x/Zfi+AxF91/kveTxBXeslgaOnN8mRA5+l/7csDnruX
pTp5wvo+/7PS0yn2kEdnDlC3Br2c8Nd0WHuPg9w6uf5VqAZ2qyil5dWDC/7b
omY76G94um18QD3M/71jNUzBrlUVF5jqgb5vNlb0Yc7nbg9XfsnwrVYZ19IR
3istpsQzz5uNu5LBvIejExEl3g+uTx80UTiYyQdnbDnH7DeaejcsTgG56jbW
TTqVBOs+8V2uzPdu6nIjVR7DOAsW9x+jD7j8qcUChtfgzuap/6lv2vdHbN//
kvsbbUSZ9h0CibR6vH7/q2X//54feDhuCzO+zf7F888BHivG0rfAX+UuSro7
1BzWxa5D9HvNxejjytqHKyJh/nv3TpuVx0Ff9692i4jmoIuGKWen5oO/q9bQ
N5blImkXpRvMPkLD68HYCOynU9DiFnXA7CcXWweAf1wVd96Dec8xWXlVM7Pv
X57yNON7fGfUa+Qw19e4ol5MebpZ32VM/j5Sff+SMkCXijLPL8DjZIOKchFo
96/M2T0cmO9aKuwdjkO+cOLm1tM7YjAaYd73wHWYrx9OKlYZM3rYd8j7BvAa
d0Hl2Q0ojzZVjSzkQc//1PeDNKTVI9dHtPvkOlrxk6DfM0C1sN1evsy4fN1N
C4DnoXaDt6wFnj0mb1+oCev+w7q9/L6APauOOq2SzuWgoM53ZRVtOajKacwF
6xYO0jhj+ulwIfDmpK3uL8FFbQ2iaf0AZ3j0VYvrwkXrZLtEZzUBz+OVz+wC
3pPDfBK9mH3QASVijsDX/dKS6kTgb+flYxsGABZLKfeRAhxaEfuIud9nxMaY
CIbPJGWxBcDjNtuADBfIm87GyIhUcmH9pqE/rmUPRqeDOScLwQ/rN54+0gv4
THy0PjISsKawdeE1GJ/fG701zHeu590Gf1ePy/p2+Xa9bHbFt7JBbtq3Mu33
7sn86nf7ff5k74Jv/tp3UvEu5rvBoztcS44B1u3tttsdeO4cK5hkMAn8WK5N
STH4OQnX5zZzdkI+5rWs9qgnRuk2Ws8tb3DQw4e9G5+u5aCSHg/O+oAfz3fa
rajpj9G8luOzz9wHOwo95a0lxkUPzF/VpItykW6yzKItwI/Jgo3z/GHdclp+
4f3jYK8n+hx4VwX8HSpIOSAGdnmtevow5n5N1EvORvAPXmrJpckNEGdaHpTO
jYP8/6LYoNpZwJdItVshyHdkp9HN1yC3dZpktS/wOuavRvs4GI/bBLvtz63+
/3N6Uk9v/+Z1+aR138rGm08lM/ir959p/putPq9+n5S3/5RL375LqhgTq8HM
b6WQaIUEwHyZF22OoCevQ2L9IwAVtAyDG40xsu8h3aoyHfIvScOoF1tgnSH3
VE3SGZ63jjVOkcFofsjV4165HPR2hWTEqm6gd42C4lqYF3ULy27fXohRWG8V
JHcR8qBlrWF1WZDfztZuNmoEv+zw8vmuMuBDxaFn5htoXztOPy8do/oE55UH
T4Af2ZqVGgXPKwQ8fHIF5Bgx+UzREubcNrj6HrP/tOn98APMOBbKursz+4wp
L72+fQfeILMz9Uf6bS+P/tteDf/mdXulWDGD/wewLAEJ
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[7, 
                    Key["features"], 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
zknLOv4v8u9/AZMhH+8=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[7, 
                    Key["features"], 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[
                   TagBox[
                    RasterBox[CompressedData["
1:eJztlt1LU2Ecx6Vuuuxf6B/YznToXm0vzm1qUVvq2ZlBSibeTJq9Shltc77M
SDMoA4uIkb3clFHmjTnCNufrGdFFXQVBRV1J5XS6vuecGVkR1Z4Ngwc+Htwu
zj7n+/xezo6GFsehLQUFBa3bcHHUHzd6vfUnndvxodrT2tzkaTxo9xxpbGr0
qhq24ktd5k/4v0cxFVJEAzJ+WBte4QwrLtOKyyxes2LZZU67da92NwXlcyFF
DL9CFtyzQz4/WX42XadKsmXZC0vOq9zOxZqqy8WjncwMce1uRfxc4bP3zto1
rnSZRMgZbda85tbeNwz6ZInewihZ5y5mekA5/oUtT3FGUsIAR4aDm7B0BuQ8
WWecWpCZvaa6t8SWpVyknd2aaXtbkCFc0lIxD+vCBG3XSxrO2udVLTjHHDTg
XFhzm2Alf++cqDyMHiTujHsOFo8uoZ6J10adOmo9g3MkPzeY6T5l5FOtfTUz
nwk6l4ybQ34Z4R7MaCviL3c1YwuQrZCUy3RLFw7IF4g744Y+GT9m6ku71QR3
yhqn/+CsPl/0FIH0kK4NsaRnr5Q8RHmkOAORqMXdrZ61n8BwzsXulrRx8xl7
GyYq+p1A1Jzxc61tqGQEaeTOuYuZuVQ8tlhTgfeELKNOshZswJi13Zeb7tsY
9cKocUDoxCyqOimMZf07B3tB+YT4NvmldgczH7O1Y67+W9QQRuuhL66qRrCq
QrkMeR0UHno8zlccxQqTHP5Y2Cy+YAjCN3XDAdlCryIPwpmou5k4Gidi6Uxz
pVKdIPPfxL4s2uKdEDX81ulCwqixUL6Ev2njioV7R3/jzd79CBzmWJEQSwr+
mUdY/4g5jEfTLLHWKevpfuUESiJvCf9sLsYVe2S8+HrPAZw4ilxAeAQJDYLF
kPm4zzFfcUyMl0fT5TnhH8CYwgqDOV6ihlQPHpv6J8t9iUrviyoPiNtORSzB
u/rrfUURv5wX53A0R6P4L4lJJnhv98sS8McYR5hA+EbOAzwX5sPmsN0AlHo3
ioXExxFXxqazpVAoFAqFQqFQKBQKhUKhUCgUCoVCofx3fAXAqo6E
                    "], {{0, 60}, {60, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                    ImageSizeRaw -> {60, 60}, 
                   PlotRange -> {{0, 60}, {0, 60}}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[8, 
                   Key["image"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Disk", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[8, 
                   Key["actual"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Rectangle", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[8, 
                   Key["prediction"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
8ZdeGydrDap5/jfCQxPZ
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[8, 
                    Key["features"], 1]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzt1+tTlGUYBvCFJRJWE5mmjEA5mA6FjChWHG/ksPu2igGScQpZHNdlUxFE
lnBrBJWEMkCQTNjlsAQhKKwm0oD7pDKh0ipagKgIK6GGJCeb0rDpS39A9YXe
mes383y/Zq6Z+35up8TkiE3mAoHA9+838mvN1LNxdrTRXWPp0e/Ngm59PKyU
r2FPLgb6mjIX0bfto52qFDMmAF6ae6Bma5WaY252pZnaRwpSZlsY78syaXve
e/oky3XsQZzTuLfnMprpnPDf1NeMPui9p2DrY45KTbJcStV3jym7jxB38Gna
qegdbHHw+DW3XWHol6dCdh6IifwwgZ0oMugdL++mtZ/UnXRoL6Sv6wM89pUn
sfFb6trBayHol6fOi66LhD++y9IsFTfauQxqHurT+zTkUnB5fJd8TyKLOnMp
QZpL6JenMjd4WdvGJzPbinhh2m/59NUVYb58tIJCfSVNZREZ7IfGi8u9TkVS
8Fjli/I7pf4znRf+ne8bpudlWalZvbP2nldBGUlTzDpddMcp1qHi8I2EfSy3
U+JQ4ZJIHtuOqVzF/eiXZwqNvXs+mNzBXEtntysTi6l/8bGTj1/VUdfmLxfY
arKY45auVbN64ylIs1+gTxfiTuKZ5lrvPyvb7ElV+MU5z45wdrzVaFM8WUfv
RHy0M9SUR0Lx7W+WeCqZ+OrtddvN/LCHecYq7UjY9OhGSjXnlHkrc5jTzbsJ
TNBEWc97dCRNF1Ff28DvSQvTWblzeXRGeBDNEWlOuxhvYk7zRFZy7IW5olUU
+Movi0JqFGxBV0urzXcHKS6GnmnYqyPn+fUyX10KexpmYXbnszVUfbXossb6
iWGmc8M/42DtbmM/IWKuuoJNs0wr2Evcw6rq2S+TytRYMZJVRWbeq3O2NPjS
5gBpT+TIXUPM59KQ7hfsMad5oi3dXcsFPfLP3hCvGNKL6fCZhguyo9tYdG9i
ZkntpxRXINSEeBbT1lDx+8MnUljQxOPn8lveQr88UdMz1vhaSp2/QZKn2t1q
QfWxJTl7dcuYeilnaRxKoCi7vp+Vkih6OztfwDmuZDLRT+o/nGzQL89oU6fk
l8ImDNPNXIvp7HwKDV9Y7RLjw15vlcsUk34sUN+0X7LEjq6XpJ0b4Kawf3lm
zG7YZ/mbZ/0HewYrT2vvG95w85snXSEixzKrtQMdc+gQ9/CKk/mIYf1oQNmu
pefxfwYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
+B/4C0Lfcrw=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[8, 
                    Key["features"], 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
YmJiYmJiYmJiYmJiYmKOSv4DB2EBzg==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[8, 
                    Key["features"], 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
BZVHl726ftZrx4xaj9/h/wEff/eO
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[8, 
                    Key["features"], 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
Pd5+8dleX3zWa7bGqp0y/C/L4jmy
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[8, 
                    Key["features"], 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztwzENACAQBLALTvDxKpBAwoz/jeVFMLRJ577rjCTVAQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAgP89+3gCJA==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[8, 
                    Key["features"], 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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

                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[8, 
                    Key["features"], 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztmQk0lXkfx3WzZrK0EKMsMaisSQv6zUwlg0opa4qKkDeSkBYjIi1jmkLW
GqmRJWWpJiIVmUwK7Y2Itvvcy/Mg2Xl/9z3jnDn3JM3MO+ed1/yd43zO73nu
3//+f9/ntz2U13mvcGUJCAgY//qbNS22QK+ThvGS6iI3JRnobFmifNSKhiOF
D70rEtnwU7G+1LG7bLiwLizsm5kUnE05nFIwhQJcKrBOmQIWH0f/SoEhyBrm
Pj8H8MflPes/9u8E9RQbOihSMPbOAp0eMwqsU4rpDYvZ4BXj/U48hAsn7hbH
rTFlIEP4zB7dehrKmxUXvhug/7NeQID5v+fxMnX1By/wXFxtNxsTBgZytSSU
VJrAqtw1Pbj6DTjef1ov8hUFRZLxMS2T0U8nImd7/cZ/o4Ygvz6D5L8/nJ78
9nD78NtFs/Ud2/B5nPq0USZ9CQWqlIPhgy1sOFX3YL5GFwVXleJaRTQZiHsm
/TqjmQb9ctO0270jR99zmqvsH9fRkHnraKH0YgYOFEnWKqRx4ZHI2kulJmzQ
rwvQmYX6+q14muGDcZC73E7M+QP68Mcvv75DrRtKp74/uG7Qni4j0nlJiYKN
J7KvxOtR0OVm5JDYwIaXGV76jrkUzBA0qcyLp6H7csm51WMZ0Lj008zEjpGj
L7tzSsfLZzSo6264n2TGgK92aIjCNi7oeoTJO3/NBk6tinr8Ygp2y1ro2aGf
3AfiXNd+IJ6G0/f3xm//n4zf7+N7VAOQy+5bWKxTp8DJW1p9QJKCsIbq45BI
wb/Cw8fYOtLwXObck7cTGHjRdMimun3k6OsUlKY/E/NzRtSuwGjMz3ocievz
A7hw1MXtUf4hNrjOE646uYACL7OdK44qfXw8Dt7v4+NQuvN/fih7uH347fS4
k3pOyNnS04K8UF8FlkhHiBTq/clzcbsdFDR8OSM5djkNpXktiRoyDMx6Yf/S
awTpq8pJKfZqoCGiduzFhM8ZcPBxGNX4kgtr5qYsXXeSDabVG30c5lNQs4O+
tvE98cPf77D47vPrx3+fn/xx3s9nD7cPv30tzcNyA/JsVOk9zxkUCDtEB/p1
ssG9653LGkEO1F9fyZGLpeGqhKRWDuZn1QjbuY9HUH7unjYn4y7qy2qOqz0L
DITpf2sxuo8Lwb77ctR+YEOH9tHcJmMKOuRGOR9CPxnVirb+Nn7+6v7qz+bn
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
ISEhISEhISEhISEh4YjkvwGCrxg4
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[8, 
                    Key["features"], 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
URRFURRF0f/gn43pztU=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[8, 
                    Key["features"], 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
iYQ=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[8, 
                    Key["features"], 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[
                   TagBox[
                    RasterBox[CompressedData["
1:eJztmN1PHFUYxmd2YAGhQuVDXVoVSlgakTlzZuaApSTQFIIWIrKC3V3Yr4AE
E1HBSHphYmLa3nhn08QL06S97kUvetPGO6NRE2PswuL2Q75F/wrf98wuFgHt
4pldLk7yQJadCfnNM895z3nfhsT7w+94FEWZK4Vfw/H5ntnZ+IVAFfwxMjM3
PTUzOfHazEeTU5OzHQkNvjyd+cHPuldKSkpKSkpKSkpKSkqsVL3Es4fg+8Kz
7RKyFenFiu7ZJc25QTtE5EirAlgbdHNlZaTWT3yUNg3QpkHa2EeebSXPvATP
gleLsjcXHFhDJ8nzhmnN26/fZOMPWGyNRVcziq3b53+2zn5ltk6Soz5dzZIX
jFmFV09qWqyuz1n4VxbbYJEVFk6x0OJjWmBjcGkdH2T0R5N+QCqqMTAYlTzb
qyKwptDWBAveQ6TwEuIBJHz4p1L8EsDfZ/FNe+hr49gpNDyvbnNgr2Z2fMqi
a2wsjTx7oO4FH0yyyDLcT/0BDFX+3MYMm6cusvgWf/upJwPOCg1PA7nR/CZ3
231svuioPo3pRXtzBM5gLyJ2MEl8Fs+2myGBf+5RjHqGyXTe9QGAt92OrNhD
d0l5pV7sXgF0Yuy1+q5jEXvSDO8vyHZswyTvurgeHZMbe1l0ZZ/6kKvVKSjm
9lvfkqp6t4o2Z7bOfMlNFsHME9Ie26Qnz7uzGFWwglQ+Zwe+YeMPBTJDtbS6
r+BBRfhpBExQFOPEORZdF5Dkv5WC5WyPfE/KK8RjA7MKu168PfEnCyXFMS/h
zh5KkpoTfIsRGmkeZtOez5ZlccxwUAkvGcc6xDPzPJudl/BoIZgZrL5vNPaL
31wyPl9wwWe0mrzQ5UI2eJ7bJtoTfwjOM2QjtEDqWlxgLsK60TzEYpui60aa
vf0TeboGtxXBdQOPRqS6wR79gY09yPkst5+gzkdWrN5rrrWKuAytvhvC9u4w
31Piv9NXEm4dOfgypC2jYg5I28EI/kJqm10odFmfYasqLbMHb7PIbyLOdQtQ
Oc32T3iVc60ZBytU2MH7BRyTnEMdrL4qn66pLveGHr1INTsv8kJ94KKXQkWW
afOQ631KJiFgy1N48o9vcuxc+0E+TIhvUfNDBPbmpfsGW+BceqTWBmxwO7yY
Q06cBja6atof85lYHscFJSrvLLzmq5/hsAWX5OK/tbSZq0s4Vgom6clQ1uH8
zsFKeBnRFKPhrD1wi4+5NrC33TFEymr8EQYpnDa7vyB1L3PgQk3teFcL20Fp
MfWPWj1X7ZHvdgzrUPAWlu037lidl43jnZiHfCy6/zSc93EKnzRW+YwXu6k/
QI33UG1TtGnQqGek4ig+mmNvwYEfJ3dmpLvnzx5nFqodItod5HsN+Q/DzFlK
SkpK6v/pL13eRmI=
                    "], {{0, 60}, {60, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                    ImageSizeRaw -> {60, 60}, 
                   PlotRange -> {{0, 60}, {0, 60}}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[9, 
                   Key["image"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Disk", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[9, 
                   Key["actual"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Disk", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[9, 
                   Key["prediction"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
RddVdtffXwWZ1l8UPl4t6JdK6zVwzNf6w1MSeBOiDc02kbDXN94p8wntz0cV
q75qFYJrfhZ/n5QTbC0sCWrc40m0fTX7bjvbHk64TMzoU1oGy5ReVKtmixH5
uRn3a3d8/OX23tm1PrGi+SRL/umjGQ0S7aycyLlwtJ+TeDuuUrjTXBncPF2V
k+fZw6SgJR5b+u0JjpbPSz/dtSO+Hvrj0cr6eyAZ/27DlYMUcPit57E5S69T
L5x4yh+RYProS74G7bcFWx2/6lf8c+4/o/EbJ/cR53cWP+omn08lcv60nQ+0
LbBdX0/C+k1PNRS30nFr2on5vRkUJF3ijbz3pQhUhC0f8RQmQKX3DMuZEaHE
jTWpEh93boZqX4P41CgbKOv7KLpCZR4h3LQ6/9nB8TC9eEKOzr6K3PPO70eG
XL3JaPc2bdYFXSsXlqCv6eV3HWdZ/QK8ek+gleVlYRApxM8BmemRpHbYBBDi
Kwp9vMwSNrSFOe8c2ASfJxk7j1YKImLHa+nViRwEmTHv5dXjC0DP6H1ULB2H
c5+uipJMoPPJJ00+j++SoPMt71o9XUfcO9ew4Gv5///94HD9F2ffX/39As5/
mX5nYYhu+xo/uxBa35e6E5L1G0hQNvfOk6T9Oe37qn658xQEqWYGS+4uhVtE
VJJ64E14o3Fa/mCeK1FZWupW23yE2FH6kjflnhnEO340zFbcARVH9wvApj3w
QClsgaSSBeSNPipbnb8BtpIVs9V55EGSpVtTGdaZGzBhfXqg0iJIO9C2++zu
DbDI++w+TR8LCHDls23p2w2NUaTU0l0WsKXI/Mva7brQYM5RYf7Wlyi/enTs
8RvOREXs5QiPkTcgo9+q9EDvI/BNDL0gdZn21zeiQp+PkRBzXKP0GG3X/Xpx
AfNqSFCxOd39qRwfT3H3FdH7qbg4icMbLkTlwX1fhpMbpUtVNNRbRMO0M3fi
f3xvH7Ws+FomHbebMl2OCDmToLE/Lub2LAr6B24dsr1OgfjMJYUXvArh/Iqi
GTvyU+CCTPzZUXqHiGK9yC8XBP2IcS+4iv+wPUpkj3/mYBXnTXh5Ns9TcTAm
XC61BpjJ2kC2Sb7Flrd/wCm9XBNXpV0gZn/Ff6z9NkJj8dusuxw+RLKBstyB
jCDCYOPWfINRAYTAxoaMC0ssiJw+16XNItfgwAi942LvCmD8QJaURBMJV6Tz
PZrpOGzZBgdd6bzpzr21bZ+LSbjmeKQjhPbX22IzGgRp/cIk+vu3/In+OH9l
Ot/B2Relx+1T4fij/L4gEO0fJ98X5O+37gfp/4Du3MfrQ2k7Z92e7x5D52Ee
prccOeg4ZxH8Vfy8PQkGezk+ZxVTwCnpMZX/GQkLb87JDdlTDI3CowKbm3LB
b4v89rNaSdDmsahHzCwRnMc2spTVD4OOxV638OwQ4k3YRddV908Rnes6VkYq
BxDLyYHW3vBDEKtuF80STwSNSj2Byb3JcKyuXnyUNgFNa8apNsoUQWt6zirz
PfR8M9xT9DCSAqtFQbktT+h1Jur81GpvEvQ0n6s60HLnZM59OZdeX5e5K2h+
o98fjsj6U33R3zvgYKhf0Ham+uhnIbv3c5juYeLo4hLveW2lYTQ/76Mfft1k
9D0uiR6n3KOd2mr0eIZaZvYrWZBw1WuUwOh2Ok8pnDMg6ESB6qiXi/a1UmAR
8XlV9j4KqK7uXv0JZTCe2vNVYU0R7K6zWMMj8BACbHnDHig9gFWHnaidvg9h
btjj8IVqRXDozLGLinPKoPFme6T8Zgq4d99qsntMwa6c+DWqhyhIv+whqsFJ
waFDzw+aupMQEHiwwe0+CeOq+Y0GaT+Np/jGpNNyctRe7Nj0J3rh3tF1lGld
Y8LHvQ+XPy6uMPFhygfQ+qzAbGm6IQ3N6xNfdtLjd3yhdOcoejx7rr8p33mH
hMmLpyQ6RZAQLOR8Kom2u67Y9fG8YbSfEx/qXcdTsPLxmAljaX+zSc19+OIt
BbUiU0Q1x5TDw+4xQoOvKKisub5cIpoCgRVFS3aLUtAg8t7EPJqEF4ravGn7
SLhuOvGTwynafuPLfIqySVjBq2ETT5Kw5la1TxItVzoreprKfxkXpvoFV4+i
/oCjQ/3or+ZXqDy4+xtMdTTTd3HsystVLlo1QNtde5523Tc6LjYtvCx3/AEJ
/a4Kn72ukCA09Z3AC3od78+rrTem87aghR7JCXq0ndrtQ+YakXDs9mJpKbrd
ft7B5wpXSWjRiDzMX0Cvq4GnhWfQ/HdGaMVuoGHa3a3/gqieOLugeQhKx4HR
dwji1jWUbiSCP9T+s+dH6L1n3P0r3P1oJvlHIO1M55UoH1RfnN4oPao/0+8E
4caP6b4L7p2pPkLnC9P5HtN+BNP9EKb8GoeH8meSf7j5Pbt6M9Ubf5WOXTmZ
flcPnUdonMP9HiBT/MP5NdP5Ai7Oov3h7hP97O+boecbOPvi6FH9mc5BceOH
2heXXzHpx/T9Hg4fjSM4fFx9hGvHff/LRI+rB3F1Pq5flD/OHkx6MY0Hrj+0
X5T/snUi/2q/MO76v95TnTa0/IA/+/0X0/e/7OIz1UeoXuzeE2M3PrDrv0z8
f3bccPUgjg7Hf8iuS5qMm3/ATLfm6v+kY4rPaBzC7Veze96A44/b/0bjHA7v
Z/njIBrnf7ZfpjoB1x+745byb3/N/rdd/dOl5X7cT/t/b9KTPw==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[9, 
                    Key["features"], 1]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
VS8E9teec17s8e/8Td7/rN+X4e3vT/X3ZfTqwUPe95s/fsDQN8DI6jWGoPVi
6QjG9xJLb4ERfgQCNDX9M6MQCM/uYpS/TwHXgub5AqJkqI0UP/2R9zS8iPUN
p2ochYkspM7NbA9Ya25UOFx6CI08XNRVv8IUPWNDeWATeRCFbOaMqx9N0HFV
jzVxQ1boQbAUerfiABxc8oqd/OYUTCA3zK7duQBlweM3Ef0i+LBOgI2z5BqM
UVeHRpZlg3fOhKeiViSs7ZngzHh8BpYw8PqrvaZCxsfCjiXpCCyq5TGvxebX
003+I48we525wGXFf+IFb76j3d/FKyeKi/DWJaaKRHqI7HhSziV2dN4whn9S
xY/fwnC9y4ZiXuw5PQy847beEsuzLHVmsSxHIMnY2DBWiAJUUtfDuBoKPNps
2J3YQIWVZ3lKC4IT4Kr7fo9K12hY0D2DNSE8Bo4qPt0dvCcGGrnDNd5Ex8Br
CH7LGBMNHTLmt0z8EsCtqulZts8FaByRElNYnwGi3fmh4SaJUJry7uROjzhQ
VxLOLemPgx1rn+i/ukqFoAAO00vOFJghcuVo9BYEOkKVHuv5IZBRp3pilQf+
uhAtP0TnFPHyEnrPO+LVnyoS6SHiF29cJu13/jiD4WPRKC4JzJ6lpVf5+WDz
dIz/4MwyLF4Z+hy1ceZaBPpz4mYLomSYNxFDeVdIAWmelIn51lQQuyzY93QL
FdCMsWhHPSrsk184SxC7F0rc4VduQYVPX0rPBdyiQE4qa497ayLE+WvsMRFL
hBA+sYKURAq8NR95U5RLgY5Z85rsj1NAwp/v4REqAqualw4cc0TAkv9pY4En
8bjwxok3/xKdz8Cr/3ebf6c6LlrUjTzck4zlW8PxC0A9AENzvpIiIczO7R5n
rH1Lhq3r7/S4jZHBvkVP0niUDO+Hctdfx+71FDT9zN+RgUmJWfoeJs/Wwqz7
bg4FQgJbo3cABRZLcwx9my/CHuXPb8fydlhgesHNA/97edMdJx6/RH6PNi/5
Xfil15/TtktvP/HaxUO879dNt7948y4tb/TySyT3hU75H6Xne/uL1y69/SRq
Fy/v/1njJPq+Ct57N9XveHzv91Wm2+731iP6vvdU26VFon//6Ee1N8k/7d/x
9gfpjW/G6JT/Xj1E+RHeuIhwDEcP3nMhahcvTqVtj97+TrZrzT3zX3Idhq/+
dS9fXUqX38Dz50Trib9q/RkP8cY1VfslWpenN//E6w/tOIn6Oyn38i9ebbVc
/nWveJTK+5/4ovffX6Ctj2dfeOMi2p+kVw+9/E71e8p4cQu9fpSIX7w4l97+
TrY7aa+kv3g91jVP9hv+D4HW5p0=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[9, 
                    Key["features"], 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
yi8fy8/9hMeRfZEhQ4YMGTJkyJAhswb4H74pDzU=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[9, 
                    Key["features"], 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
LslXEiRIkCBBggQJEiRIkCBB4l/g/wAfE89V
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[9, 
                    Key["features"], 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
DCaUZ/s7ZszejeK1S9fhbRziNfFUzJlPfwN9/aP5l4hfot8PTowHg/OlxlEm
+HhQKEJtTo7KFqRjq+RdrQPlUX6OP1S9cy4GbakUnrPyZJD0WD5X7CoZPgxi
ZkbOGZBxfYBJyzcK5mxZpto4dh6axfjTZ3smQcJVhzV0o3nwPFDaNJlcBD6V
Sq8OBZeC8gfv5/sUysA/ue8mRi6FqakrZE7IlMCFhZ1uIU9fgWSp3UCjeCn4
y+/afLjnBZxZ572erycbljC2u+vqkEAxZNRsuxMJrncdln1Yifa/aJ+L/h4M
zn3mXLJsMwbvVGOO06H9X1Iu+Fvw+aPil0h3JtuH1Rw+WDD+Xm3XjWqT8bi+
dT7n0vjv7byWagWvQP5iMLfYwSyAgVzuZpVXyhismJIxKkJPhnPWyQPtbtlg
/X5GUeVTMght2bIkjC8TUu/7HW/fkQYj99LtV7CnAlvF7Oc6H56BSKfUxnkH
smCh+JDskQQy0MuWF5hOzYamnNGD3sfIoDwjt2/8/UYN9R2pyrdJIGqREfT6
FgkOznBWb/DGICbGJfeqHwbhTp9H5VQw4PIMIT9H+5sWLew3/A1+/tWeX/3o
vy+qdcJ05Xg9VhdsaJ6H0GnI+LQB0jv9gCeeOPJrSi7jqPs6DA5mqC65sxCD
O0UDwmIb0H3Wc+Pt/gEMSOoq8zafIcPsjhdzFG+RwU9z3knflWS4aEgfqfYc
5YEqE1ZGfgy6s2eeT2XHoDHYts+JD4O7GoM2t+MxSOpOcMtAPM7dekq2xgmD
zc+UWSR2YBDSt0JLWAuDhIgLlVu+8juiyfJCqx+lNQ+t91mJxkT8EtnRWo+o
viK6brLPa7Ze1FLCxlG8JnScd6d7kouaNDGwNt7lIimFweIH3a6OqM+uu7tA
NRrlcwnHDWIpqN5xd3IYHUP13PnrDfYDRzHgzhnWUUQ4tCOt4gDK9xy7X35o
QH36foX66LVofj2jMsWZk+hnJsvvZP39Zz2/ojUf0fnJ6gAtfaC1jz+KtHTl
W/3yvev/t+vzt96vk60fqPfxs/7+86/6/sa37vuv7gup90G07rfy+73r/9X4
Zz2fJBpTX0/09+tozfu9+/9R9xXRevkfRv51nE135r/G+NyQr+azv7s+E8Xv
ZPX5W+urH6XPPyp+idZj/43Xgpqcf53Hsx66fc1f/7Tnk9Tz/lP/Pv9EvDb/
xmsWq+Pxcfw/0KTNMw==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[9, 
                    Key["features"], 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzt2H001XkewHEPSXQJuetpEa3cwmCQx/l9hFxKheq2NyZX7tVU7oa9s0hd
XNfTxBG1IpG9ksZ6ypAdu3O/mklsMWQUhcrDnTGFBlHGQ/PH7p/7z56zUzr7
eZ3z/f/7Oe/z+f7xNTl8IpCnICcn5/bvgxBCCCGEEEIIIYQQQgghhBBC6D/L
/8ispLjkHHXB0Lr26x2N0kLl23LXHmpB8pD3P/TW9lAFqd1dFea1UsFkefmL
ajH1ru+L/kUzniYIY3tRgqGpoUvLfKq0/Wn5yP1nVLyDSFYwpEX6p2RG66K2
wff9jvKuv2HC8eKESfvvlEneQ1mbu/N2Uhqcr6QRu5pkZ9PMLp4YptpVdFuz
LjZK3/Vc/+8cG68uDjpPUn9i7/YNLVtPFNNUtv8x2BGiY8+KT+bZw6wLm562
Zgtcil/m5b/gkouHmHb9fceJwUHbFiWND+DZfGGtrz4PBqw8yxcCNoGyx/Mi
2mEF8nHdQL1dRi/u71uSqtWl+lcjOnWAfsqnJaqZKpO08ROLZRQr6kprnZMp
MaXTnk86smA409Ep+gGbqPinGveqhpHLPAf5VkkAudf1ZuPaM2fgi98XXtWK
yIVQ4ebu+30HSXNxRo94KAkq5Gsi11t4wkjE34/xBg0JlZCg/ZHRDPZ9S9JS
fbqTvX6gQsjeR+x6OqGulvbUGDrBKYXQtPQhH9A/2WW2JjeOuB27PWDZFwUd
RuYKgqQCaNkfpNHfdxH+2ZseKJ49BSnW497qVmI40uWT6Xbam3BnbXa9+TGQ
GE9V6z7lryfjnn6KqRNTlMmPDF/Fl7fxff6VTbRcVuYEPaFsLywwJjboEWEu
vSBuNxOCbsmVdBYFkHLvBo5jOp8wLAbCK80K4cl4pc5aj1LYayqLbbybBSPp
s7bRezikUl/Ub/2aRdbXKWVPJIaRQWHJG3o7AwTTr/nX52zg4GfaeizOFCUa
ZizT7bukn8oaFu9Lr+D+/o81evkMuDyzow4zj7WuqpdR9T3C+QJiQCxffVOm
ruoLk5KijIbrPJJ73ZjnF8+G1iN0/Tv+ZSBhNbE1w0tA8CKk7eVdDum0qrBw
dTlO3FMEZWrqTAhQiAqfGDWHR5u1NF5XbIXCc45jx9KXpPtj9Gq/1+imQmhm
OgpBBdjzV1ZRl3ngW6sqKuya6c1GBy3SHsM7qnneG1jL1e6PJWFEffmHn/ta
RWDfuvRh1bAENlnN+OrY54DX755ksllx5LrGUL21uYzqPmvgNjq7A4bnHMpL
LE0JSSAxdbY/UVeER+PeKCdix7fM4xtaccqJTynJ5aXY73pGKVH1qn22Rx3g
RmO22nJOIGlWN15IYXJhJm4XLTW/GJyFvbN/LgoCWlz4GdpiBGljxnIsuQGg
zQwNXrIbk/5h4aaTvfABVcPapf3UpQt7vmPn5y0LUmdGKd6YX/mteX2ySd3B
xOqaBygu7BmLlw8jZfNNBpHtfwEi2jLXUJcCCQ9N5EPKIoj/m5k+ifx+2GGs
s3PORoHMpa+5YzHYgT1XmDuzts18VVVipqnXGfmBP0jm3VwCE6PJ6WZ3V5E4
B7YsxAt0eflQpxLx2GhdJIly9qk6F74bHsR41403aZIoau+kuLiSSszNdjRn
JmHfFSIrPSnyhn4x1bX/7EbrQVuoHG7bXulwiCRr6GQHW8eBYuDfHp1syIVM
NYuaI9YxxEO41UE5fA8MfCifua9en3TY2Ti8DBqmGGljBttER7HrCuP+9JMi
94ZbUsPl2a2JHBvIyftyRqmdTeLVVFRCo3JA956V6bBJMozNfcVV+oxFEvkZ
B64aOMPPfko7N4qGsOcKx6XXB9q01FHj7DtVD92mKNnWmMWmck2odGYmvDJP
gxDXTo1L2zlkye/El/e2OUNWrlCzaFSXnO58sioirhT7rnAdX/duTjJygZp7
PYpZn3CI5+cRS07+YhA8LlS5oRsN6UIjsQ13HxkZPLWhljDgK6fU4KCbE9j1
PfGMRZTSvQyBYVDpLtrmQboXT1rYVYXD+aZvv3hOCwM+d4uA+5Mr+W2E98dc
ShOqTYwZq7PDsO97om06PD+vYF76et9OxbWqG6DCKHRk9Zgn0R3iM5Y4LsRv
+n7yBTU9MK/xS5KEv8D/4PeMqfBMlSf/AZWhNJBlo78o7Vg3Lj4UaQKWeZ+/
mjbQAfpl35Hi6VlptLamzE10F/cWIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIof/CL5UGzCQ=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[9, 
                    Key["features"], 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztfHk8Vd33f0hpnmlSkkjzoEhllQZFojShVChjiIpCQgOKCiklzVTm4dxL
pEklU1HKPM/DuZJKId99n9dzf6/nt2t3rnqez/D6fv/wetv77L3O2mvttfZa
e+9zJ+hbrt8l2KNHj0V//nH/LzhCgcCf+K2rqysfIa++B/acVxb+E4Ww5zg9
HHG6TO17EPjC+3US+CbRx5/z6ON84vWk/riccBTqJl+8sjDhPbg8mOTP69eF
jYdXxp/3JPCN08MRp8vUntcOb0/SP7/0mcZJque3P45C3eSLV+5J4IdEh1Tm
yYckp28YXdxu8X44PSb5k9rj78f1y6vv7CZ9puf88kWS06+OG6eDy5kkD1L5
V/0z7738+of/7f65u3zhfv13/TNpXuD+oItAlzSfSf6E3/ZM9st73vGL9PF5
zVTPNJ6/e9wkOTP5Bbw/7v8FsTL+nLT+4vRwxOkytSeNF++H2y8TfaZxkur5
7Y8jvv4y8cUr9yTwQ6LDRLej68f65HdeMfUjjYNpHuN88cs3v/x08FnPNB4S
dldOJP11d7y8ecVDfF3H5x+vzIvbcTvmF3G6TO1wvnDsYOCb6f0k+qR6klxI
7+v5i3zheSi/8sDfi9s/zg8+j3D9ChLKOOJ0mdrj87FnN/km0cef4/ZCqif1
x+X0q+PG6eByJsmDJP9fzX9Jefu/K/9liq9IdP/T819SPEmiQ8pz8P5MesP7
4frmdx+HqT0+btz/4HEuv/SZ5E6qJ/Un6YOpH7/5Ef4eXB4k+TPlVST7/VfH
z6T8l9fud+Pnb9g4SfWk/t2139+Nn0n7FEzyJI2HxC+Tf/27kIkvfvnubv/f
pcvDX5UTbj/d5etX11+Sfv9v/f29ceN0SOsnv+svKc7id39SGHv+T+1P4u3/
7v1JfJxM+45M/XEU7iZfTPuTJDpMcXNn14/tFcd/9f4Gzhfe73f3Nzr5rD9q
a3WxlzMFp4+UNVigcp3IgMYJLhQkCI59sfQKBSYuZ6lJFymYvkGV/dEP9Zvz
juPjiPhzKjieak9Bi4OOYi7qn2ZqnJnAx7hJeSJJT3iZaf7wa/fdRab5TrJf
Ujt8P5apPf7cX5sazsXp2yrluXj6zuCc80gPtc75JxwQFix+qBGE9ORm4H5D
Uo4FR3bImclPYoPO0i9HU9axYdmy+XunNFJgKZM+s/MLBe/DVx97mEYB59Kx
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
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[9, 
                    Key["features"], 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztXAk4VVv7R6SU5kgDZUwpujSgelVSKlKphDRRGpCUlDLLkKJjn8Mxl9Jt
EJJI6iRj5qGIzGQo7E2igfyX77n+z/c/393/fbjd79b9Ps/j+T3v2Wu9+13v
u95hrb32nrPfYqsJDxcX1/Lf/tGfmkIOBjy/IRk9iP39/fDP18loKj7s/Mho
dqTiR8aHTL5Bmn0cZNfJ7jeCQj4q/ZLJy6n+BnEEmzzcQ0SuIdJ/lN9wkYwP
2f3I2rPrnex+vH+SvJz2G5STl00eTu01iN9+48NNQVPxYedHRpPpn8p/yeQg
ux/7OAav97Fdp4orVPOGjCaTl1P99bHFH3Z52P2ZzL/Z4xEZTcVnuP7Ladwh
k4NqnrDzH6r/kslHpV8yeTnV3/fy3362eU5Gc+pvQ82/nPovmRxU+ZfMfzmt
C4brv1TziGqcZP773/rq/6+vvnFo37+6vhqUk93vqfTLPn6qfEmmD3Y+7PzI
aLL6lew6GR8y+djzL5lfUMnFad1NRlPNI6pxUuXf/9bPv9+e0/w73PXI966f
yfyXKp+S5Smq9lR8horD5cdpP/Z2VH7L7r+c6oFT/XIq9zc2OdjloaLZ70OV
f6n4UI2XrD2ncYdMDir9svNnty+V/5LJR6VfMnk51R9V/uUUqfIlp/P9e/Xn
lC/V/ajac5p/v7e8nPYj89+h1s9Dbc9pvcspDpcfp/2o6to/q34maz/U9QLZ
upnT+MypvJzG06HWV5zGZzI5qOorsvjMaX013PhMJi+n+iOLz5zWw+zzhCp/
UvEZ7vqXih8ZHzL52OMdmd44lYuqLiejyeTlVH/s+6vs/aj2G8niEVV7Kj5D
xeHy47QfeztO4zO7Hw9XX+zXOZWbrP4bqv8OtT2n/sYpDpcfp/3Y2/Wx2fdw
YOzH8lwMpoxU97uajkGn/6kpEjx0uDC/bnRgPB3o3BLzijcw4NbrVwqBkgzY
M1+Bf6EdHfaOmxI2sRqDWGGm6f4XGEja50VA7vDjATuS7W9QxUeyuo3T9lR8
horD5UfVb9b+vPZFCONzqrhXISw/nnu+6BUGTJmKeYUsDEYvOS/meZUOn/cZ
5jrGB4KDu6651ptrMGf2Y/7bM8Lh08wvu2S3hcIIc7U7E+cHAK9LgZ2KayBc
WCOiqxYTBgJ9r7PyEsJBcJ9oxcIbVyH5y8UZ5xYy4d1suueGTgxKbO/syEB2
z3vshy0qwmDx8ilivyA5NMxXveZkfFTx+T8t/+7GxXM0Ee6vLFlZW4jBUutm
hRbkj1O/vvkSL0aHrQte3DpjzIRJsZP2890PgVfKPGOXlzMhJSnuTnSABeuD
wMm2de23WEK7+57KjbrLylJvjLRQCWK18BnHPu2yY52jSbVMA0/W0WNvDKRV
rrHClj6fuczmHotJ8+zZKH6dZa/Jk+hxyQEE/Z4xITYYjC8mMAiXYPg0Pctx
Y5gf9CQ2rRPMRnFi+9qXggUYBDh+0JTIJx9nL4l9ObUX2Twho6n4sPMjo8nq
H07n8yD95hi31QCufbTt7Jg8DK5fFHhRXozB5kW1W5TvYiBcx61/u4sB9M8M
8VP6IaB6I8WGdcsF1hs21nj1+bN8W9qF/A7osa44CK9jXk+Bw6sm6WqNKYNn
xcHZ69qrQL2pqrbkWS2s32GHze2qB/M3W5JuGdfD5U9Wc7vaa2DPixoj59pK
sBRKuPfY4hWYn/ZPfswfD9ZNdpee36Szoi1H3uu45sOS91crr9dC48zKdl16
LQgCrjXtmHuSDibEMiPeeAxeKnieDEb+fX+G2LFHOdT7z/8p+bdg7JwRzcgP
5rg1vXRLxqDyrJy7ZiwG+oWxRDUWAIsVBeV3a/vC9GOTVuSaMlgzJ7ydmGDx
AA60jdSbYlAG9/cp+NFHNMNNVTnZnvw2KKjZSbtZSMC7EW/N0vd0gGH6Tb2J
Qh2AKZsnmncScOLrTFeLXgK+rBj39LZ0B6hIt407adIBayPHvnm4k4C9Somh
DMNWWHJoqdF1/waQvVfntbGkEERnzREJKvIFf6O8mBWKzqzY+PhMbkMm8GsT
24ue+0HKwzM+qmYY1MxWb/vyGoORujWX/5Pt+0Gd0XMRzfdW/aRa4h4GZuWd
9bwrkT/0TBP1vhgIdjN2ZmvVnIGvV5WLE/uvgZbtOc8LS0pBuj8+OCm6BWiF
GrH59gQ0bTM/IR9FwLK4vm5JLQIOxaS9qg7Ggd8zTHyJEQ4uhwUb1jvgEGDy
pWypDw6Byf7X4i/iEIqr9Dy3wWH1+7shDvo4EKnbAx5V4BASWXZJwZSAaU+Z
y6ZXEKDJerljJB2HcHut+KWn3wL9Ynf+GPcccDPgu2nE7QQu+lI1+UE0iEt4
Z34/gQkaXIvH7z+IwYK7aQcTUZ3Qc/bX1u7cv3/+XT1rP9dAnUR39V+ai/zV
uvdWnDeyq//obMcObToUveyKdrQOgEP5RyK6b+9n6SXoTncSY4GCqIRb1ZYG
yFdykN6yg4AU2RhNaW8CtKVnnfiUjENGyy8jpkYju1m9ihhbjENKTUhpSzcO
5iqhWDgXAW9TImdf68cH5EB/BDxfoiT/EdGbNBbI3ENotuVBFR39fvTKi5fl
bTjw3FNLrM7G4bX1Tss2fxwmdPKfmzeKAJMX28r4Mwngv9lvc7O5FeIKHjL9
9pWDUnyX2iarUDjftePN7RlOIFTifF41iQnp9754yZ3AYLKgf2IXmsf2ko5T
t+T8q505RU7nw/fiN1ScExld1IHmsYsdvSL3KapDww1jvDTpoDpZSs46NAAM
+bY6cdNOgLT16q678zJh7UmzUflVTVCpsDl4MpOA7buiWhw/4BDZ1aaw5zoO
fUrys599wSFCsv7QA2SfYIGtzwP/yY7DxSO5sZ97v+HQ0ZZ1ks5DQITzGam8
tzjkFI3o7vHDYbvt1Jq5mgRkiX5YVquEg+ZhFbdzsTXQ/AHfHWIbC1UO+574
tLjD2drk9OPHmVA2X427zhGD+aFeO++WYCDlO+Gszj/p82fff848bWZkgHBz
LDZpBKqHV58e3yRWhtYdioxKKe8AeO1rusjjghor9JT+CUWHdPAQYSjcONEM
qsx55kGeBCxnvvk6JRWH0tYKC6N6HGbdzK/Q5CZgRcdt/2pkT4s2rQDiO9h1
EEU2rivuR/xajUy5KhB2jSq0GI9+t3x26kgDwrkhrZmuCTg43Vm8+pkiAWs2
OsocnUPAbgMXLM+iGjrHihkGHvoVen0rfNyEvGBr04Vn2rr+cPAFbxG3LwYW
zftPTc37++Rf0woekSMoHlfJHz5cHY3qzMgzUydUM1Ee7Sxb6OEIzIUlYqYu
T0FsW5ry18mNcDLSVqDDiIBfpZdcNkPxV7VI+1N9Kw4qI1s0zyO7The2c3T5
jvakwkPjTGkD86dTxOxjKMICpvd7Aslxvl8+YUMMyss6IokvVAm4uvvQ6BXi
bWAbjGeFJJRCXXdHtnFyGGRKgZncRxq8fKQVo/ucAROmm6+3+531FBVyej7n
e/HjFK9Flu6alIpBKcaXfbSJAZpJfgc2e9Gg3mCC5EST69CTvV1b1KwGjls2
Zqoo4zA1Si0qYALKk3NZ1jeqcDDm4t82HulT6e0CvsR/o13Zsf+u0ZQBv7a2
mbckBOGo07kBJ1H8ft/8tD/8Pg4fPZrCjzoSEOs621R+4juwFXgVnfosBxyD
+XJ9ljjCCOVnGSoVTKgS8bgSxRq6Hjndv/pe/KjwUIvpfFOEkiPn5L1fRoeu
LDl1gQsBoEiridixfS+r8a500921BZDHa0+M8G4B6213Z0lpEyB0trJsVgYO
8XP5XuoivVa3mcUl/YV2ZUdu0NnYheSJFNb2uY1w/azrJpJdOEh8cpMKKcKh
f2zAuHuGBITUhS07+rkGZEaoWjlwRYNuOsbVfsoDlDLy0/gj/Ie83zjU9lR8
/ug+I+7SefQWqhslMPWCDRP8UfzuSOl2cwUdha8X2z0fwPORjg91ptTChXGX
uyN82sE3zbj8mQjKfxf4u8Pe47AxdUv3JKRPYZ3LrX0/kH0HUSVoSSeO5Cp/
+ZqxHsWXyaVWBVJZODysmMXVqUfAKqetm5rHtEJN7ceZUT75IFV0UnT6EzrE
RtabvHQcer00qNe/+nxsonj0yKUIz6nhQq0JGCQcyk3zCA+AaeEa+CUnNVhy
3j7DalM2SLfFXVm8qhmOmSnG8CO/ZSSesdmC1p+HfWSz7/Ti8PmTSlDnD2hX
drTJtH3ijeQUs5bddh+ty7b6TF+TgertqRaVEk2bCBAXWP3w7qQaSL7lzpez
LACWRFg1bjOh/7TP9+cb+c42Rijw7CNfUAMdztpOpMnm02GyboRXinAgbLSc
JJKTWwIXZlwo1J73HpbJLTMrsSNAjjb/ZvgjHDSKzvJp/AB2GyoeKROcz4Nw
9DiGzQ1fHIzmRh14U0oA7fIO7bqzjeBAf5GR0hAPPBFtO17fo3Hsj+z7uoPX
yWgqPsPdfx7kF3I86E5BNgbbHtntWm3AhOA5NBvurfZg5JIqri32EEzKPD71
PaiBYJkYlWrkp2vtNmlXNeMgmMn3cDJazy6eU78x9yfwW3a077k7/S2Se7yI
scO+UhzWxOs4LVpNwKtH0xy1GlvhmKM+76ymHDgoEyrkyGXK4vpJ6+cVJ/gN
ktA63nubsEvi9gBYvdZIdpuXKfCeD8eLqlkgp/Hh2muTOrCwUEuZfoQAl4Nd
006hvCV4f87XpB/ATsNFTYUROd3Ivu7H6hdkI3qG95Yys+c4VBay9PLoyI8f
2hnVcRfDbmaq0imlqayh+u9Q2//Rc4Vk/FLPSIjd50NxuV6Smf/AD8am8O27
JHAJrCv2q0y/kwwfFxMzNps1QOXmqds1jJEe3rM8s3Jx2NB74vr2n9Bv2bHf
WY7f5xsOFnc25Ljn4DDjannnjDPIvotFLM/0lYKdlMls52lnOd5PZkdO23P6
PI9THOQ3fYaxfvFCOkgKnHt0WYkBvKovtwshf17WZhVSZZMGoRrH+Uc+aoLz
oyXFr58kwEhkZYkvWg9Z0HSC3/8N7PvRcIqMLhrH46CW9b3PcFBWcdTcRCNA
X91bcOe1KkjvFz9yw8RgyPu7nD7//V78yDDRZ98L3hl0KHISTm68w4D7ur0q
b+m+EMhw91emPweZ3pgPqdwtUH1e47PNOQI2G1+7Wp6Cw9GQoks/Q71Mhek7
qySs0ThYQmVjpRJw4MsG/a5fCZhrdP49r1kNNPLv5ovEsP/Nvz/b8yPNMzyx
R0sxsJDMeJgT6Q81ul8l+Na4g+yBT48EJOOAFsCSqG1ohBuPip7eOk9Ar9vb
MUkoT/kef6vQ8jewb8VB9VZRNI7tt7c486D1wGzDm+NW3iFAxkQmr+9JBTjr
2x29ZBrO4vR9BPZzAv0UNBUfdn5kNNn7A36xy2UWonWvzKLNlsctmNDKrfzR
W90Jnoe8mfVq8W3YWpJC321bD88quQu8rAi4GTA3VwnF50KXEy1b/gb2PR5n
pbUZjWOVd1WUIwuHV9ghW41QlIcOQPKD1hIIyBfcfP5VGItTf2S30199Pqdt
4aNjI5IwcI6f1xnj5wc2K8ufMn69AuUTtX7Zl3UJQkITS81FK2HfgmI+nzAC
BDfQ5wejeV6tISud8wPYZ7gouGm9/wdkV4dpxYYTUX21x6f2gV0BDu8rpO4p
oHnsfsJry57qLNjxZPvHF78EDTk+D7X9n/X8KGzyrI7oTAymBOifTX+IQd5a
5SeTlEJgqoT8Dj3FQNb8RK5DG84XQ6CnoaVqFQ6KAguWaHfiEPfBzd+8C4eX
RxiTUn5CP5aYqJudjuRuUl0XJFaEA/MLd/airQQILd0XYiHZCvldR56X5sQC
XHd13Wy596fNvzTR6PZWhFGuugp79DB4sS4oINk/EJ7pfBA6S8gC/Y30lVXJ
SdDgaZugfqMFnKzabSquEXBjvZGsyC0ccoJ2nlD+AezFKXZfEdb+jOzqrzLh
3ixER4RmRDSew6E5iTX2lmAHCJzQ68HVGsBtn57/E4errGm2rx0jZEOH7D8/
yv6GtjY9pj8bg2irrcXL/DAIfHns3prdfmA4NcGRfhyD+t2epVq6NJbQyudK
kuNroTnB4fQVfwKMz81fOCsWh7XF2s2n+nBYs+l48PIf2I8Z72m0r0i+F1vG
OexCOEPCSTkJxaE0eYtL8mU4LFO/mJ6gQ8CCXtuX4uHFcDDn/XW14ussvhlX
HjTpX/2X83ZUyOl+9ffiR4XrPZ0XWQ08189aWueO4jXdPim7xCUAHKJ8ZWKr
XVlr103FrwmmAU1vb5fp2VYQxfdIORkRcN7hwd6ZyTjMzO2bMZKHAMmLMhn5
P5Cd4zblxw3k2fwL1/enDTwntPFauA7JiY8+XfjGFwdxz+zlVWkEHA7WYczd
0wSjx2vUHQ2wZ31LFn9rvpYOEs5L2oP2MP5Xnz/r95GKoq0nbUB+XEcTf1Dg
g4FIpbLR42V+UGC3K2FMDA3O3Xeagj24zCplctW8xavA0Oq5WqwPAet4TG12
Z+HQHyTW+wHHwVyKf8dAvFZssrKp/AvtPPkG7dzA8/03zK96A/vMRwKPqL9C
v2+hZW6vycchVqs0hilGgJq2RI/9eRzKlHOPR7TkQkmJRN/42DCW244FAWmr
w2B3rE2mmO3Qnw8Otf2fff5KJGHRV3mEeyLcf5mZgsFtUeZ2LS8MvAxlukZG
BUC/ueo5P7o1Kyin7PCsB9GguiaSa49xI2hcYmyWDibALtgrshL5Q3KDO++7
DzjUzNT11OEmYNGdrDTrf6OdBd8UGLah+1VPaLn4GqF391azvAG7KiWuGoXs
yqt6/JhXDw73M7gZuxKRX6+lr+w5XwnWtuOTe8aEsUQm7crY1h8IW2l+Z5f2
0GHeqoUusqlDr4d/1O/XvU4UDZuXj0GBss2SU04YNO5IdXcZw4Di1ZMO55TQ
4cqjLOb8FH9W7960/sliadB490zpytIWYMmsb/78gIB4+6ftZ5HeGjSf+I1v
wKE0UqFpP7LzRtF0CW6k59YLYcnfc19z7C+Kewb89Lh4q3ITQpPKComB/OAt
1bdq4Dxf0wy+kYqPceioHzMyS5SAccdOhSROIMAv33jOmUu1sEaw+wn21oWV
Yfwm02SrB/AJ7C+cy8ME3bZvQS0rMMi480ZgVAF53PtZ4vMg7pW0a7dHcTrO
YwUXrQwDHUcrfgEjDJrt84O86xjQXfYqeVsuBg6CevVCvp6syjVd6paJ2VCf
6Sqs/6gZZsvdl7xmRoDJ3Sof14koHzv1nxO5ieLhrJ2rultx8DUX29GK7P15
5l3nFX/Azt5Pg7yLUH8nW+OaZoThy6V2F6Lfdd5dPVCUh4Prt7PyEWHIX7m5
29zMCXCSiqz89WY7OPf7R0zUrgGfd3zNT27QYeLLmElYmRmUX8GDTzcEwqp6
Rb7QXl/YdVrUsb0aAyVhlhEte+j+O9T2/67zk4OYXtyReigLAw+ZGDVhZGfB
onUBrXMwiF+Za6H6xQ9W2KkfSL3qBnGCtfDZ3ZXFby71QS8rDT7Jpu+zojVA
oCDwrWnCYVVEpqCJFwFt27KWD5zPuthTYBx1A4eq2ZVXMl7i4GZw8GheNVqv
8OtMZr3DoXFzn92ZbhzSx3xsjEV1+Wmd3qbirzhE3XeuOYbiPuNMip/gWxwm
T31Ro1SOg3vOLuvMFBxirHUE7ANwYEWZXriiTEDouxPpu5IJyFgrM3rK3ffg
FLZC7KZKCWy/wzOmSeg0VBx7qGRnaAVnO1pOPtQMBEXZfU0BfBh09O+PNCzE
4IDyuV/mDrx3emvllQX/j1/8bP47iIEKG70lEUo6F+/vRvNXLOzg1+0obh+8
11bI0sLgGc9jq6f7GDAlO8dxE7831CWo3VhedJGV6h2xWV7oIbxYrHTfcV05
ZEXdZ8Rdawbf/JaHewUJCLw63i31DgHOiV9vGxgQIKVFV21bRoBoiKncyPHI
z3yzRkx5gcMCTel34gwcxEyntCkiP3RRqU0OeIPDohEQdQbVRYbm7a/i1hAg
tDpi9Rh7Ana7L18S/5KAGLqYS05kGwRqHV+YdLgW7ov3i48Jfw7zmqyZa+ut
WZ5qipnzpvtCoLNlf8CGQJD5cvyIR6EvHFj0q88i5K8Lt6i1xeVhULnJbHZV
9n/O9xmWlppMNEfz+ZCOSEJWCQbTmOX6rodQ3R1xVe/TWz+wV/9UnG9AA4uW
Jy3vjW1ZWeOEWnT0PCEgrUH4Pm8q5NyadTXOoRzUA1nlO3c0gMHGlXN6X7+H
XUdUes54toNtft0TSzoOlp/Upgw8x3j1IUnIuYEAfu/Er2OLCeBzXXpsuiEB
dRKFVUen4vBZXv9qxup2OK25qKBTpAWm/7ouuLqkEmZO8VzOQ0uHRR+KxA00
bVmMdxrjz8UxIb9k5PRxLiEgfbqruJnBgGMyp6OUpZGfmr4W/lSDwbWW3VYD
7wm/duKn8+X863v/VPpl3/9lf5+djKbiQ/V8gqw9FT92PnyNO7ASNJ835Sbz
pSE6vHsqPRHRS7eNd7tujYGaV1vNsQI61J2Sc3q6iAkz3J5kYXm2MHoV42Zk
pxOronPE6JLDdIhSFJmr4hkHXz7apkaEZkKd9Eh1Hv2X0Ly51qDuazkYLPgk
L1dWA5tksr9miNVDlKulhodYHeAv9UfC+yqIWyV9Qy76FcjqnmuI486AnWKf
j9QcuQ16R0XyaFoWrOre2xdvhnvAqKMeGv4+4SCnapLU5c2ExeLp7zzvoXk9
5lr1BuSnmf4CDekoHvHK7TvSgsbhW5pksAmNK36roMvC37Hv391/B+lFkadO
DayjvOY5uEohFCx16y9H8cxD/IC62RUMDNraWtWLMQjOlw3PXucPrScNbvUn
+QNT/kzD6FxH+HpndPM4GRtWlOvWhemnHCA81eNu9Qk9qDyr8W2GxHmWluTD
UrrJfrCssNIr/eDM2mM5OnzqYYwlJ5EiQ9PBWOpfmvbjdcdZwslYHvO2K8hf
wQODd16D5dmGR19fDofZts7uVwKughtD68zTShq0Syyw9eSlw9j1LbkZDRhc
Ftgy/VU6BjczuSIeI/klePl65w7YcUzF/5nPf/T7k5za93vxGy6S8bHaFZwp
h1DeX33VKITan5M22CM7R8jbODWi9WJ62ezTfl4YnKicxIjgowPf+y3+Kzb5
g3715hD+bYFQ7rjqhpGcN0xcuP6dMuYOhqP89ZbXoDw+Xq9vnckV2OQ45+JK
Lho83iVwq2laIGj5JKW1hgRDMC0g6aPSVTjhMmmiZ18gzDZ+BGaSftCj8Hy1
rbAvaMHjHf3jfCF34mbx/dfpMHvOhd0XHmJwr1WP9yDKL+tvLFTfheQ9/Kz2
jfzvjJPq+4ScIqf+/r34DRfJ+LD//qDeR5sLISby6PA9hOtC25UfZWJguWZ+
TGgcytsJ+8RbMQyuXy/Me4DWW7Jfb6w678EAhykd++Rj/KBE8KOnGEJnHsnN
hjL+cPh40/TMw/5Qez3cPcmUAYWbZx0sNqLD1Nve0wvovhCf6pa8m4lBZ/wB
R67FdCirFw5qQn7aInrz2SGEJ103bFqWhkFowlQbO2TX2VqqgmocjHPQzn80
Pv/o66M/2o+93eJzlx0wtN5adjsxWhnF72iBcaP2+mIwZ9PyOHsLDFRFV9Yp
nsbArTu65QjCpKQnaelmKO/P3viqNxGDUf7RkwIrMcg4LPfaSIIOO3PzG3eg
eEs7erolE9lx5Ikrq/2RHS29y0bP52BeUuWj/36fcGjtqOoB9n5/9fcJh9pv
qPUQp/r4Xv055Ut1P7L2Q/0+//eWl9N+VN+/oqp3yM7JULWn4jNUHC4/TvuR
1S1U/ci+9/tH9cup3GT11VDP1/WyXSejOT1fx96enSY7X0d2nYwPmXy9JOOg
4kf1XX8qudlpMnk51Z9U9od/4Mr1i/8hh5fByZW/Z++f7fk+p3w5fX+OKr6R
3Y/3T5KX034qv9lV8ajwP+T1GMHS+K99qe3LXs+S3Y/9+8D/bvt6/uav7r/Z
lUuxWXAA/wdMf2Ep
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[9, 
                    Key["features"], 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztXAlUjd3XL5GxkoxJhkJCKBTFToRMRQoVoURkSIo0kAaKylCUpJSo0KhR
4+25t5KopKJBKs16nlIRqu/0rveu9V+P9/zvzet7X771tZb1c85zzj777H32
PvtMd+reo1v2DeDh4VH681/f/2PtCfi3kfdv1uNUn9vv3CKOLj3di/5i+sEP
t/m4NC6fB1OOh8N3XLn+1uv5Uw708jg67DRbfuz6OPq9tO90uuzvdOzB5OPo
0vn4hmmXTgeXz4vJp6fpfHIaDz9qH5zGO65eNwe+OI1Ldn0cfR4OdHHjshuj
BxxdOh/faGlu7YneX1y7dPnR+eHDyB2X/3eRD0Of7se4bZ9uV5zKcUuHE+Lo
stNs/ntoaU78cJuPS+Pqcxo3uPHWX/+Maxc3/jjZDbs/dPv/Wf65G5OPo0u3
X3qaXg/HB72/nPwznU9O9v//+v2/pd9/e/6lxyX9nX97aHL8WfMvPe7DjbMB
GD7o+v3fmn/pfNLnOV5amp6P+44r19969HHHqX16Pn3e6299HNL54tQ/TvNv
f9dh3NbDyW8gZrzQ83+W/Q7E0KePR07t4+zuZ9svDnF02Wk2/2y5c+rv37Vf
nBz4uMzHyQ83T3Jqj06f7l84tc9Os+WH88/0cjh+cfMvt+tfun/G2S+9Ho4P
en85zb90Pn+1/Q1cXMHJbuhy/9nxFQ5xdOnpf2p/AyeH3z1+Zo9bTvEzPX6j
02V/p2M3Jh9Hl9P+Br0ejg96f3Ht0uVH54fuN3D+E/cdV66/9ejjkVP7uHHL
iT6O7t+1X27jq/7aL50ut/aLizNxcfXPiq9w7eLG3e+6PmLz301L/9Pro4GY
ND0f9x1Xrr/1OPGFy6f3F0efHpdzOz5xesDRpfPBticcPzg+cOsYXDk6n+x6
v8r+M12/3LaPsyNOcvtR/erWfdKKRGjsMEQqAyFDMl6a/wwB9pX3unaeI6BE
cnl+50UCdg2uq+K9SsCzGzvV2t0JqM+bRug7EeA1RSdoIap3ndLIyOsHn/3V
Ly7O+bfiK5x/wdGh1+N0PsgpvtoqqFnZ9/1ix572aIQ5E4YxNvfZ38Is/hBH
Amqas80nGxOQ9UDD/bMGiptEB53i8yLAPFVotuopJjh6TFt3/wYTNp1Kkpwn
wQRvBf236YkECDjq6MneJMAzN7zBZyETBoXu4w/QYIL86vaVp6sJ2N6ql1CJ
xkNLOe+kd3YEmC5NaT7ggPjZ7v2xjx//5mDhv5IPLo3bB+SUj5Mf3f/jEKdf
XJzKqX16PVz8jIuvTxzx945COGV93XZA+KXuZNjU8wRcChfXUzhKwAjTsqup
1gQEZkk+cJnHhN4E4S2lEizoOfpU6awpC248+Thq4igmXN9OFTl1p4FQxPRT
/uvS4ISU0YTFcgwQKDb96NebAQZuqydVRRIQz5+WcWs6AxQM7g3V8kuHELeA
NNUpGdDqtlJu9AUCzraqSzu3ESBz84MaD4sA5292ix+icSUvcNJBpY/PuD15
gg54eXGSAyc7+VnIyb762z5u3ULHy/PTP/d9v1osMtEdYZryqsRhSF4BT+N9
ApFeDRJyOxasQnRKrm/QUGTC582xKs3nWZC7VjfedwcDuixvNxvKJIDfgTR+
+6AYELyUdrV8LAPCFcRChZrygM8zP6iBVQjSlTpiOpdfwZNa/vQm20IY7lIk
WnMsH+wNLbYV7CyAHKP7Ivs+5YPMJhPt4SdyYZQI49h5dyYwNAY5lw1mwLUV
SVGnTmWA4nCd1gxhJph+iFtuehv5/av1+W/RPNBhYJ0PiG/LBnUZFhdy+FXm
316a3f7s89+7fNmFwxDG3h8eVOhCQJ1FiVzIXgI01gcV7/Qn4IKjxM20Ehb4
7paWcJdiQLsKY67Tp0iwf/ml+pQnE6bPizk7jPUaslc9TTDVroP5vFV1h3sa
4byA+FEz8w/gdH9yY359C9idlOdV3dECN9SnVRwKb4bdfC8VU7Mb4GH9qkcj
vtTCk5auIumjlbAmbavDiM4S2BEZ5CCyrBhy77RMV7cshNtiQ0J2wFPY89R3
a+7jdGD5HLNwm0RAV0V63LM6AjId+LQSLQlweHJtjBHSc+3uhUO5kQN9vHO7
79hf5LR/2N/2cetSNr7haQ8wRui0qsTyKprnluca2hmtJsBP7YnsAHUmiM/R
maN5kAmCSUdehEx/DMM3bY7eWc4AxYfHVtxSqAK+7tLUuZXNMPhBVJRBAgVZ
ypsapMMocAqPHmjiSsHpsS92dipT8GKnjZ3VTAokannemytQEBKZa/NgMwVN
7RqlPXsoWFHRHjjTmILwxyLU5GEk3Mq8NGT77kZY6fLJLm1BNYTbTRgs8LII
xo7MumcGJVAifldYObsQcjtnrOSZxoKCa3qPCj8x4NECj49yQkwYl6PX8QLN
Hwu2GRi9Rv2LvPNxSxMXcvy34itu9ctpf9JhwMOaPizYaDV4AkJdmGdSi/Sa
y9ruQiogusG3pNurmGCgM7RmhUwGZC0UfejvHwVPeXvlkwreQM+xzpy7M5sh
OntCQXsLBcqaTz4N2kGBisjC5OQAErqN7M/mxZNgdmgKv0gGCfvkR4zeUULC
ohWu+eaVJKyaHJTfXEaCzpYze+YVkaAgVf54WT4JCytvND7IIuGY8pDJhUMo
CFBZ82qDHwWC4Ci5WZuCw8z6J1fzG2AW5Ro1KqQU+OpUyorFXoGnw8AVDTUl
MKOb2rbNPAdqlnU5yL1OB/d5r4qMJzDBkE9kaTCy5/nhx4tEkD03rnN4m/Af
cvpV9jfY+unv/gZdv+kElXERoaypRpkK0qvobeG9scqI3kLCLKKNCRIWCUMa
ndIhesrqldvr4kFG7fiWmYrVYHK+VOhVKAVH+YbvGXKYgh09r6xrnUh4UF2u
Ko/0MtZ24sRYXgrGTR2g8biXhDvWN91fIeT544/CYqlbachuVM4n9Zm4IKo/
3LjlhE8bCZOmKIuOiCBheu2itMIcEpS7eWXMPSnoHsZ8bofaffRxqOvB+e+g
9dtUVp12Dji7nxq9/WMJXFftKLk0Ow9qejzttL6mg/qwTMvx4kzIlq178wXp
2StOQD4W6fnVcpnchL+wE279Nqdy/a3H7f4zzu4nxOQnhiM87Jfs+Aj1r1fu
rbimLlrPXMlI3WXPhP1aFdtJewakbrscYJieDGPrMu89GloH770HjywtpkA8
ZObAAiRnpZy7O+Y9ISH2oXSgD9JHaYZ/5xCkJyJjiGgO0tOlmZvre7nQKx0V
g0LO9NVL4YstSUZ46JL+fGWUf6fnJOzoJmFkmJmbJPILcWXRs8SFKJCJfeve
GEOBMzH53W3HanAQ0KLiSzPB7axycoRRMcgcOn3gsfZzUNp0ef1BQQZckZmw
yoOPCVYCUxjqpwl4fYEY0fIf8qLbDy5+wdknvRyuHi4+wp1v4ejQ8/Vllboc
EKaVGni0oXWFldGOeYefovVF5Mzy3mcEPHs/63Xi6hgocDSxaEt8D9+e3p+2
Z3grWF0el+txhgSTM8d4lzeRcDGLtDEeQMFax1lic35Aj9yiz43yed2I/rPb
71UvINSwGcJsQ+NJPOwRHH2FxoFnjlJsNgmqEaGVV96j+WFuk1deaRWUaZzh
XzorDi5KxgxjihaDsbOFYqZ/NhiIBm4wWpkBUc+z5n/OJWDGDE8nCYfv42v6
PEiPu3H647T+xcU/uPUcp/bp+Td7zPYwnQjYU+1jGbESrTfTFgh13WeBjBmv
tvauWLgcV3t/Y1AlWDo+kbDNpmC6ZzElf5uEPYvC8gKQvwxYNS1ZC8l9RXKS
ZeL/ol7p+HUWUdmD2juq/qAzEmGmUplkAdLzbGZehXYFCWRphOs4NK+/yG05
7hZEwaekGKeDgWUQ3VvjfjYzBQry5hTyJxSBXVTMV+XrGXDLPVbUOYCA46q7
vtjYfL+/ibvXQf/+o/dzcPc36PbJqX12+qmFv2wYwlxrC+tZhwlYOne0skEz
E26s1vp8Y3EKnN+6OuKoTz6c3KM2O+kFCQLPFkgsEEPz6J2HX5aUkhBvWDrL
FslTSEZAuPAf1CsOl7QNFbqK+JAWDJ6qgPzIyodvXoxG84ZXyZbhDVIUPE9p
0/EobYGuAXudd8bmguoz13uz9rLAr/52XbZ2PnjHN6QGpadDpbzWyxcjmNj4
iNu4qb+Ii8twfpwTvdkLZjJFkR/q+hL7uiiSgBfWcp8ZG5lgujRqbPWyJzBe
S/jYoIBauMHUfbg0i4JN+z7ftXdFca5i2HN9pFdT3qnzDvwCeqXjRA8BYQPE
1xZhsd0uSM+zDBJjMlD8XqWW+m7pbQrKXwuWq52vhWueyRXhbaHATNqUb5BV
AIVRkiOoWZlQayfVKN2Q8d25B+48hP79R9dHdPtlf6f7ZU7teyZtXt9XPmDR
BdcCpN+k8qS3OcZMOPdu1dLs7WkwqLIpcNTWQjg6bj3jpjwF/nfPf9hfS8Lw
j+K8Ql0khNkl+nf/gnplo9h0nuF9/HWX7daxRLhBcaaUXg0J7dr8XWoCFIhc
0Y5pfU5CtruA0jidVzDh2r5dts/TwMy709b523N47bDg7KELjO/iGLYccfEN
Tn+c4is63R+Nr9h01sqK2vehodOq4jn7CPgYIZK5fB0LfJcGHRaZHg+BY/Y1
MgbXQKl5d+uTWAo6DU+3SoSRIGmyPO4Tkt+Llnnvq39h/bJxJ2+Zcyvic+29
ccdXIn+zZZmxz1xkx/K1FZ1dDAqyixJ1amJqoCTE5UN75FkQkIH9J97lwvgw
h5mrs7g/l/pZ69+/65/Z+YpworvvfG0rr6diAIqTX1rpTbI/QMBl/kAP6Vgm
RM5tXFZt2QQOoSonF56nwLDR17csDcWpHa4Xz/0GemXj+WuJX/vWVZNaZ1vZ
IwyO2T3ZspiEy+GTFtmqUPCgJeX64+dN0GGTPz7SmwUqGXP2EsGZcGF3wBEd
TRbX9wlw3/vrn3H16PbJqX0/FXFj93MEKMyt7uRH+pyhePpLYUwqpI0Ktdgu
/wo8HGOV5/GSIPOh7dKDyRQEXnn2KA7FoUEl6q9/ZP36b+Ms97jdFOJb9o3p
WN0PSM+Zxu8WoPzsXr5CYVkU959yGyCSXABpWrw5931uwrdNFpfezXz6254f
Sdz0Mw9H69z3eipTW3lZcC/PL/TlySSgFgSeHXO1FKI+d40as4MCOS2fwV9K
kF5HRw7e30rC1Gcx1b+jftmouaSDWYH6USgg1KpVRYKE7rpPa1A/eX3lHgg7
vwbXhet1b3hYgYWP2BvpV9m/zP4G/f0Mp/Yt4eXz8isELJtY43U/lQlpnUIi
G/lSwMD4c+HWXe/A6+icIuUECiof3a7f85CEYYdP8zR9+X31ysYFi2ImCn8i
QemE4G5dtG7yqwmWCbGjICKA1+fa40rQG9tovMvBAXYmdW9auY75nX54OOiN
/Z2O3MZXuHGBex+Fo6NzWdhjhS8BG3vM7gYaMSFZK+0muSINpMTPOH4SqgFR
k3qKVULBjNN32wb5krDMVlgx+je2WzZmT+K7WfwVrZuWkGWaaNzmWF23mh9P
wYBrMzpML1bDTROhu4Xrr6Wy1AOVjtem/DL229/9ybDqeXYJNwlwWdow9Kom
Exz1gtVsk9Pg0uzeNd8cqkB50v7CKDSuPyTLfDFnkeAzMk447PPvr18PF1tV
N6Tf87b2pg13SUg3744FtK6/7jn//blLVVASbmBMCAanvn4XFPGlJvG7+Y9u
J//U/uRXWnlO7Zc7LwqOdyOA6l4QpX+NCdfXnTBVH5AGYd2jpkvVlYNNzeoH
x6ZSUDx6y+DOjyTsGnreXIAk4V3dkvbfef4dWsvjXdVJgpm++MsbCSSUGBnx
T7xLwUP9OY+sx1ZAQ2jNmd4bEalDwk+VyR1P+s6/0uX/s/0zrh5uHODoxCxx
bj+N4qtZa5IsJKuZsC8mTvNAZDLUb2+4m/f+NfSuc1utN4GCkLbjMZO7SFjD
KCnZ1EzCjvxIvl9BTz+K2iajLlShcbpNwcWrvZaE8RaTPx5dR4GpLEM/1bsI
fPcQdx9PiUgdN07JN9w39bf1z4YNg19tRRhrJl3uZ8MEKR+3NybNaeButVCx
VuIlbIu+ZnpcsgXeGuv7iS2ioG1dR0HNa7S+uDV36lZkvy2f9LYKIHn1XCEW
ff0N7PkNX2pUSN/5w8VNm2xR3LzuvelWGbQukpFQh+X3WsBjXolfrSQLlLY7
NdhL7Qatj491jqzg/h3Iz8K/+36QjVflHsnlI9zxidA0f0zAjUbFGMMsAg4q
tNyWyc4AoZANq/IE6uGQ3LpgcEdyUIqwKU8jYbuTsmQcktdJq7K2a33nciOV
y4ei9GXW/Ipf0W/P3lLu13e+1N4jGSmP0noq91zVk0ioembtvtWbAv4xi5uq
1tVD3sfsgUo2u0AqXD1u4QF/UHg/0VddjPXLxM/fMHaKoxMhULz/McKkxEVO
kjYELE2j7qWlMEHr4ouC9YeTQTRRbXe9wDuQKXklUeiG5PRQJ/F5JAnTbS0X
v0XycgjeOKIJycv8AJ/jDZT+oKEpzPsL6JOOH3NSR7Qh/s6ZKWr02a8++bTB
3RPNN9sYF6PfUJA+qrv3YkYZ6IqGMkVv30992rCAoZaQANOYbbaG578/P/q3
9ifp+uf2XEstSEFLHc3DIhFZG+aLMkF0TLzDekcGsJ7Zxn7szgXWYbuhL+Kb
4XjSGfmJcyl4qzh6SIEpCapT79V/46Pg8T1HH7luEow6jw/u89eLv1w/3fkL
2HHXmYa5eYgPpXMOhzIQdpZRISPiEJ/b9B+7HqIgxb+x45J3E7ic7AywGZYO
+45MF23vvpK6JkZrnsZdBigKXQ+v/o/1L6d3iZzuF3OKn+l06fRx7xs5vcts
fnRwKIFwQVH36qEeBEgIKow4dI8JBhPHSZu2JMPgUe12Zz9UQq08Q740CK0T
AxVmbB5LQkqVh3QcPwXTr8033sRLAcyMV5jeQ0Kp1LNDkki+kV3F0f+Gv556
K0amr935lfqe41E6RkOv2wShha3l1ARvEhTFHYXON1Fwd1mB6h3+UmCUr1LS
XhucGhesL5bzIRKaxtyS2aTOhNKDM95Ybf3+3RP9HJ7T/WVu7ynjzvdx9585
tc9Of/ZL7u6rd2hcTKjXGQL85Uy37WwmgGmVxDR1ywCVmw323emZcMVkwIxD
HQ0w7QDx3NsBxZsH98d9u9oCVl5eu6VEKFA3jzDLRXZ8RSuzxBrhoWOjCqWR
XF2ra/d2/QN6NitMv9V3ntUWfEEpAGGZt1mtKhp3B9cdfPXsLAnXX5TxtDMp
qLM4KB1eVgfNQ6cYnwsKhik+18ekbj6QevRIw7Yjxgywq6Q2hUgzYSm/hWeZ
Dv5+Gz0f9x1Xrr/1vmHK4+jQ8/Xky+q7HAgIWZ7stduUgEpDXdGJyI6NZ8rM
2PE0DZYqL729z6UAFgtuLLBP+gDbzmTqjHxPgu0MkV3Oui3QpOUv5iFGwbkJ
gWuaPpEQO2zVm4VfSUjseKywCMk/etjtOx+Q3MVGfXz5M+x6/kWnp3109kbe
1Ou7hyk8afXzOoQb8577uw+g4KuKg1HiKRJaGRA8M5oCKYW11luUm6C9ZEDg
NI800Dqp1HAu7E6qdsUjzRWzYmHOAtVTk98zwajWy6ZAjoCjgYd6TJx/3jtK
TvaLO9/H3d/k1D49LXq3zvIuwiMG6nE1TgSw3L0cdpkQIHVijwjRywRZ/ZAx
Q84mwXIDpdQPV0pAILTiiVcnCS+0mdqaSJ4RC716rPVbYKLQqyWs8Wh+480u
jRSgYI1a3aELH0jYPMjLZRPy37G1eh2rkX5O3Hir+f4H9Gx8SudMXzxcuTue
5z6il2Izxe0pigPGMy7k5JeQcDNtWKHcYTSOxt/33cugYKS4RDvDqRmWCdWY
ayI/1GgZxfx6PSRVbp31AMH4CNgOa25pInu1Cc2uemBOgOpXlvUwCwKyXRYX
Ms7h45t/+nyQbp/cnmv10uw4gVX0Pg3hGdcrdn3vUXZUHtARR3570mjB9NGv
mbDCbJzTevEUkDWxaNvPKobq5LBFV8d/AEuRrOAFayiY0RymKLuoBdQkM6ZN
1CGhYUNyvP00Cq4sG87i+4bsaf26XMXPKI5tDeke1dN3LjX61Elk55UbQ2Nv
I7253ZfuLEJ4YJOPybu+dfa4+WaySK++O3gYWcjvl5CFAA0k5Kvw1hqUkeB/
LT/E+jwJzhMnqu8bQ8Eg+bVpWuKtUFjL75OzvgHCor8cUhJMh3Qy5GL1+dDU
0oksd8GCR6DTotC6M5cAjSvH5Pverz0RFD9Ts5eA+8VO7W/OE6BuNK7p/n+Z
//r7vofT+ohTPW73N3D57Po+h2Qd+tZNixJD8lyRv54mqN4tjPS7jkfj9lOU
H59wszewggny277GE3eSIEd+0jGh/fkgG0F83ZVSDyn6H8KeXyJBLcdL98S7
FvB4ra82KaIFbFd7zInxJ8E9M/hC00sSDFeeMOyqQPZ76+W4dooELz/DyM3F
SE/DQuwuvyDh1pNh4hsZJLh0ZETfCCOhKKEubc4jEoJHu4vUjaDAIXOE0f1l
FAycOvCUVAuKB9RKV2UuI2F4R2mua/w70NCMslbdGAC+TZ2OuuqhqaxZDWKT
vSPBdcDO28I5BNgLZAuXexMQfGJwafZOAnK/Tf225wIBzlodY4T/Qs50//hP
32+nr2/7+y4KN46Oxob69t3nr+UVE9Y9i8rP2JEw0o6AkfnWu1a0MeHASMvd
QyXSQdGtM/ecLgF1Tyad8uAtB8YJy4PfnjfAkNdfTjz2bQHD2NEvxaeR8E0n
48WgIyTIv34T3qVKgb24kOszUbS+Xp1R2qtGwTvfYYXjdlBgRWQ3Z5ymwM9o
t5x2KAU31qrMro2iQMGbeVItk4QlFm8qD0R/gDdeAW3HO6pAT0JzlrUYC07O
D0n5fCs89avihJb67dtSTUVmjvGOjYOiNQ/XTBjHhH0uxYZhyF5nyXkEdSN+
nZycvJqRXn1vKWhr/IWcfpXzfdw+CLd0cfsvyzxYpn3v7e3mDdf6jDD/fQlD
AOnbeaGZkOsRFGfr6muYmTDh2Fel8Va8BAjJTGjZMDsJVD1nxLavzIYOlpGv
VWQJyBpKic7cVQXnInLemrrUwy6eiMWpoY0w1L7iALGrEYp1hXNs5Jrh3dBh
x7cnNkGjY4VY9IpGOHN+xhjfm/UwMc+gp+XSe+hNMDEzWlwEc5UGl1QNTgGN
xy7ms3U8UxXcTssIJASlPp+qHcubHgX+Wsdc7zkx4LpebeL4JiZIVh+axn8M
8Z8wUPCBIerPi+7wW0ivnusLa/VQv+qLwuSj/ou86f6O233l/iJu/wr3+9Sc
6HF7vmVQO+KPd2eNWxQejEH6TRWR1WxEuFb4tKvvSQI+ycnNH9JIgODYtyZS
yK43jdRYYpbPgGJVb995AalwZ/Q6wSkXk0Fk6L7jvTEEdMg+j2pfkg0Pbtgy
JW9ngxhrXfr4Xbkgmn3v1k3hLDgX+GzEFc0U8ByzWPckMwCuVvqodvi5gOU7
ICwW6adS9qUKo85choqpDqtmVsdDvXf+sTOsDDjlPND/4kEmjLlSE5Y/kwkJ
g1+mqcsQ0BYqK2ByCulzrZ7NcTS/Su1LuTMc9efBl8v/VQ6/+/tBen1OfDW1
zn7SV+7i/mWSEQi1o/yXNyPkXzo55LMj0tt1n0ajQwRMNhY++1WECRry0waZ
OTHB9PCQBUP8mHC84rD60XcZwCtd0TDpGwNGN2zYcJI/HbwGyShQRimwI+b2
154JCdA126o0sCEROnYqqexxTgKrCxseFRWkQ7nN9c8X0Lo0wMpEdHYiC8pK
DxPjo5nQfmVL9teJyP/u3RxxWYuAMV16g2S3E3BrRLLboIsEmGTlqBxH8XDs
kQl64Vz4L3b/f5X3gz/6+0h0O+Z0P5Oer0pUVvfFY3JWJoUhCMdGSrxSQnZd
PclvfIktAdZ7R0WnovVW9crHV52vEzAn68uNnkoCPAIbPn1tJeCqk+5JYx0m
hC0/EEMwUdxWzbw6YBcL3B+OCR61iAWOLd0RWaNZEHd09ieNnUyYxFe6cX0e
0tdYb4+uBQSczNTYe1SNABvFyicfkd+tVnudomhNwNvRL4zrER8beKLVzf+L
X6PLDxeH4OyH7uc4zX84pNP90ftX9Pbo+5s4vuj7m5z8PBvrmVP5ghDGOVjY
T0LybtBxUL+C4rSru4sH7UH5Jjx3u6VMUdw+8KzqeLQ+Ec3f3targvz/LdCx
RxgzZH3dDCBg87a5K28iu1VcZJUnd5CAQQeceD4he1x8b7VNFaIjY/4kJfAv
9MSD0R89jXu/9bv7Z7qeOMVvnPw7t4ijSx+fuN8nxNkLzs/i2uVWDpzo/iz7
/Vn36+j5nOyXU30c4n6/HUeX/vs19N8X/bvjiFs+/99+/xn7paf/aftlf/+3
79f93fe/ODvjtn5/fz8WRxd3DoLrD7d0OZWTE+D7gz75qO2P9KSGvX8Z5/xb
96/oyKl9er9x/NHL4fjtr3w50R1A0yen/VhO/eEUX1F/6nXh9KV/lJ8CGj19
6V/l9/np/env7/PT5Yorh+MXN6+w6XKaJ+j6Y/PfTUtze56Dmydx5cT+tNfJ
f+p15UfHEX3p/wGXJJ6n
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[9, 
                    Key["features"], 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
6adG8UiBAgUKFChQoECBwn+R/weUJYAa
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[9, 
                    Key["features"], 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  GraphicsBox[
                   TagBox[
                    RasterBox[CompressedData["
1:eJztl11LG0EUhoPO7M5lf4LRJlrBXnlhMH5EbSWCgklLBTGSaIw2sNEkmNWo
F3olCCoiSKEftAVFelEw2iZ+/Dbf2Y1QBaEksJuBA88us7Nz8czh7Dk73kQm
stDk8XhyArdIvBDKZuNr0Rd4eG/kllJGcj5s5JOpZLYn0YzJYPWSY/OSOUeJ
FSss+Yn7h4VvWPhrxUnnwgXbumNjea2lV7S/UcC5UGJrVyz/m3d/EG0Don1E
DWckxtJX/nKwLmGHnTcqLHHMW/sVc57a1ZRzjm6rF+fpPfWc5064t08l52KZ
pb9zf33CTjoD1Ge0lUBMrzM9nHSWffCWTRQ1b1CNPminx/pflv7BX40K/5Aa
zubDlxjO6fWE2mFngFAvn7PX43rNTdx5ZzvUsUPus9KjBm3nnW3tzRv2bkdD
ra5B2xVnW3u9LLXhIJMEuf0/5iNyg245S6xozx7xrgmBTxKpAvPnYo55vMWa
1j5XnR9yO/uLj61qnWHh7RVt/VLsUSUckjM4JuB00/FWjK7o7jpXk+SPDHj6
J49ua8G4juqNqPpCVTCGamBGn9zSPn7j2KPrzrY2WiT+RmCO/p45Y4tfOArL
zD6PHfDUZ26cymV4i5MOFrsu/MTctAo4/BHPjWsJxpgxrdbfUMKPKFn+/2A2
rCpBEARBEARBEARBEARBEARBEERDcg/niZIP
                    "], {{0, 60}, {60, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                    ImageSizeRaw -> {60, 60}, 
                   PlotRange -> {{0, 60}, {0, 60}}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[10, 
                   Key["image"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Disk", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[10, 
                   Key["actual"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Rectangle", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
                  GeneralUtilities`Slice[10, 
                   Key["prediction"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
D1x0D3Q=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[10, 
                    Key["features"], 1]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
P/kbOxXJmA==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[10, 
                    Key["features"], 2]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
FovtTf8F53/LyA==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[10, 
                    Key["features"], 3]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztW3lcjln7r0TZBiVhjH0sEZmyZLtCQslQUSQpSzWoUKhBZqLJ5EcxlnqJ
llfzmpLIEqOS1ifpftok2u5HlGwRUqr35PP2+b3v4Tjnedos/dHn+7nOc93n
vq5znWs7526ApZ3BKhkpKanJ//lrIyW13DqTB+n/YG1trfmHaJyvHknjDcU2
2PtJcuB84uqB84m+kd0ACC9qGStOieNh5uOQ05OlRXBFc6lcvzcF8F25TsSL
aRxYfLNB52UCBz2F8hm/ywsh6Gq4kssMDtqqLRvjYskBWuMdr824unnfIY2W
wmgcWX+XeX/+d3pJYfriNM4nha0TPt5QxNefJEc9XUOQm6YHzte1y6EaJYTF
el6dsy/w8O1Plh3srUVwInnGSYPoO7DNe9vTLq4p8HbzZvukDUJoM2la5nlb
DnzeOIdzxhxM6gGb15iT7dBQ+0nw+//oWYOtZw3BD0j+0ViI240kB84nrh44
3w4LvfBh6Txkzey81zOCBw93HakSKxFEuNbO+PWXLPDZb9pLIUoA5eG5HjdX
pMGlm5tGL+jAge7hX9rpWnEgeOT0UwqDv7aU/9L8qbn9lzYu7vtp/FrzXKoF
qTx01j277AXCgKHxMR7PeeipuOiwa2garLY3OdB3lAC0reStjX2FsFvFvrxg
BAfqIZs2qSzn4EZCga30MrJdSDTaXy7/TePI+vsH7M7kvzgfKf41FtbPi/sv
Ka6y+i9NX2fTSWMuJvPw+NFEoedDHqK0/Y8cXM7Dr08SzxxK4aAoTKFydsIN
mLxszkTtkULwPxHLCzQ5sHHL0/VEdjWL2Po7iz2by754XUPzk+ZGkv/hiMdf
Vj3w8XWL/QtWJyFaPWlfVjkPSSdVcuYPQXn5l2OJl8JSYSYYxHssuAFKUXMe
zdYWwrYD4+XUx3Kgcse8pmgZuz2b2764H+B0S8VnUv7F+aoJctP0wPk2vzZ8
KS3gwcjt2v38Uh52mSdq6RjzoLcm2/ns1lR4qhK1rvvVJNjoLzR/tV0Id0N8
NYpVUN2cG7Tl2idoXxnG9SbxsT4vLrK+r57G47W489aj04Xb4y1u8qB6903M
WyEP+uEdY1Me8PBD97avDLcJYa7XPYusDYnwpvDHrnuDhBB91rfswWAOvFa+
NvdD9nX/7YhhpQT2bSz8UuMzrX9ijc9j8o8aKafxcM08//z9KDRu78lbTBHB
JJtg6+yjmSDrstt81d5Y8DQ5Zh+K/NdqQHrs0skcDDQ93cEM1VcPg3f5lqN1
vVkj+8G6lkQ3lv+29r8f1zc1JrPoaAbim36weNcVHsIN7v85HESQITR1lO91
B8Z1e2rhX3wNlJRdsi2WoH5XvstkTRcO+o0eVjIO9b2VBz08k9C6jhHY7vxY
P4PjR/JnQ39vzb//RZ+3mWs2CSFnOKX4+1ge+O0OQ9bLiMBX+fGcQWsKoKzQ
7mHFiiSw736rZOdEAQS/KdisukwIbUDzVrtRHDgv7hhgY4HqrbV9xsuheK1y
3nMv5k8f7H8by764/7bm3/9Fsxuj15og7HG9skyA6uh7ymUKCSj/zqjcY10z
n4dFkb2/2bwoA3TnWtWELYuB8d0P+PrZC8FwYE+vnAkcZNk+d5+O7BoUHj25
aikHLw4Hnn/7ETvV042FNP/92uOz7pb2MTYI96caDV6G6qxRh2W5x4U8RPY2
WCI4hOw9TibkMZcLexcnD1iuEQdB5Zkh/sECuGl3CBatEcLpCDll0+85CFU3
llu/koO3Nu4lQWidUwLywqpawH9Z7dNS9qWNk+wr7rz1GNTm7SsrhDqL/tQ/
gHCbMmfQP46Hq6r/d6FjNQ+arxXn9VxdCDd18i6G+mXCH/rq+WNXR4PKWLuM
Q4pCWJc/MVl2Cwft7363uPxHDhKeBl4MRHl5oH+XB8lovTdv2xJQ0Yz9Uat9
P4y6Vi57lyNsE1R9dhSqp3svfPG0bQ4PeaX2czce4+GyVeCfcf3z4cJKx23j
x6aC/+lHU05ZXoeISr+YkDQhKM8yiBqpwUHJtZgn+guRfSfHKndAeXmfx8XZ
jmjdD+hGiWo/0jfhyPp7q/+yvT8lt2fvVQiPaCYcMETY3qncZJIA5e9jacP3
V/AwSxD6avjpQngQnHDhjOpdCAkqEB1tkwjVuoNt7bomwF8dnHufixTCAwgq
PTeHgzN9/zW+/zwOovfdsfRDfZSlltOlunhdOOzNmRKERzWkL1Z8xD9rCP5r
ZpIe8AbheVs/qXYo78/5yffWBUQr3tApjrfg3tOLlLca236sSDqXxpE1/4qr
75RB57wtEZ4J91Poj9AxLON2p2QeTEcMf7nyNQ9C7fwenYYVwlSHVx03Hs4B
WdeOJ3YWJ4JaG7UuutkJ4KnVv2B9VyHYTDUpu/E7B5dTU7omG6K8LFfaQ88Y
YfSk3rEofutlzvr+JbKLb97QrKcItR2yvevst2mW3zu77hJlvOu3thwW/FqH
HnpuU+vsKTIZoTgU4W6THSN9UD23d7nSsFNOHIRV/eb8bGNrfUWzr6Oaq9NK
hD8rGh+qy8d9vmur0Q7F63ulFenrEe21Z3+/YzwPHdxyx5cHFEBxxGXV9j/n
wEy9dWsi7yRD7ACvLXplCSDbCbhx7hx4X9BPDEeoEGgwtGY9B6XthsgXGaF6
229O++q1HBzeZ3vS356DUc/dPXbYcBAY1svh8RoOIu51GLgC/f6bkYV3BwcO
8tzmDDq9iYN5Ey/tvoLQL963ezfEJ1e0aatDQCpcPb86wi839YuJz6xxRlJ5
d3X9h9dShLGe61Ols3hwG7RqzRUOzacxvUgDje89u6LT/Xs8VI0bcL9EvRCK
zBKtN/S5C2rVsv/4I1QIqfP2GVkXJ8GdfSrba3VvwpRpJSN89nBgbf4wTt6H
g1O3lxqMe5wK66R3+oREpULfv11Dun/LgZbh2p/dunNgEu0aCN2Q/xecyFt1
ORXcHedGTd2RCjL8taxpjqnwYmBtdZEaB4OWiM7maaUDPIg+puB2q/V8Ukz6
ibZxsT7CBcmze41Fdv62ktu9Ctl563MHtSHIr/2VVLxNKnnQSN8WueBcIXhm
+GyVf54Hxv1dLeWH3AInQ62+faQ42JHedpHCAg5U5+txukkcvOo3yy7JSQju
I9oEJ15KA327f7btFSQErTuJWRWJQrA7fXtdn0whdCo72D7gTBoEVz12DRyW
DrMCoa9sVSY4Dxdcs/7rFtiOGeU9ZX4WGJsPmK6il/Xe+nyu329UE+Sm6cF6
b1xPD76hPagOO82bpm6GMP567avnCI0O6V3XSEdyVI051xHVYVV7tlU4SYlg
/7Swvv+K4kFuStdpclsKIUQ7QO7bwFz4ofB4XHhoFhzS95TrXJUGixceHfwN
srP37jgFrwdCGF8yQfehWRrsiQk9GZSdDlaKJ477vEiHkAM/9H2ZmQGr1trY
PitJR3F64AVHjQyYMKHKYUmPTNgU4K1cejwb7h/3unrdJf+9vPO53u+z2pdV
XxKNj4+03Z62EKGbBz/DB+FiVzOfQQiDfSNruyWivPx99prcbFR/D/L/68kr
1D8beEROj+ehe8VOlajNPFx5dvDE850FsKl/5MHfX9yFTOvI4KWaObDIvJPs
gLHZMLgy5OTICbfAtbRbkesvt+BKivPC+LPZcMo8bqTX7hy4ruIz+0T/PLhT
sGtlhlEhLFQS5imi+i80Xideq5uoNT5LqD9pfOGTI0Om1sXvPzxP66L4vcB9
g5QAxW/fxwszHyF7H/Fy/e4Asrf6njOdh97mYbLbs7hxA0TQZ123hMphIsjO
mharriyC19VqNhuR34+226k9MYaHc8Fh+idP87DWO6J4BYoLx8vdHYuGimDm
SE37Z/oiiK489qKXjAgWeV0um5/Cw6WRgj4LYtnPj7+W8+eG4q/5w9/JEdaj
y8q6vipidGxH57pxnXsdH2bwcCJH+GwPytNzY65v3n+Dh6G27UrvX+Nhvurz
fm8TePhbWbAjD/lfXNEuTde7PEzN2ZV7N4eHo7EK5w/l83DS1H9T8k0eJt4y
bDcd7Zcl0qdsyqNR/DfJLFuC5ou84uled65a7aAXUJH+//ri+Q6ncT5pbL0a
229lsPeT5MD5xNWD9TlcPtI4Sa76765nnFW6WtdvyZzZec4OoaLz5UfTEf44
+9KS48jufe9ffBqP/P3kWqNUVeSHC3tG/ViF7HZQv3z7GoRjVf9W+2cqD7mD
eh3ZL+RhmnQvU0e0b2ZulP35DELTsocOrmg+dYdQJcvM9/NJNYHG+Uh5qrGw
Fns/Lb++lVAPEh+Jpo2T5MfrQFyeakwPUr7H+XGadp/Kei7wtZxvkOI+LR/g
8uN5BJeHVOfT+n1a//+l9EeN9X27uPUzq/ykfEPTk6YvSX+aX7aeXzWu/KS6
jhRPJK3zSfUkbf+S4gtpvKFIq69IfOLq0VT+i8tF04c0TtOXpD9pn5Dibkv1
vzR5SfGKVQ8aH+tzNPlJ/w/Jmn8ltROtbmCNe02F+HqQ+JrqfpD1OZr8pDiH
87HeY7PKyVoftVR9RRun1RfNJS/tPQ2tn2n60+Qg+cHX9n0sjaaNk+RnrZ/x
fpnWD5L6Q1ocpMUR2nhDkfV9+HpLOm9Ty0/yM9b4TNOf1X9p8jW3/9Lk/VzO
NxpaX5HmZe0P8flJ+6m5/fdTvx9klZ+mDx6fafuJ9DxJDnHzT3MhaT3ElZs1
jzZW/sX5SPlXXD3FlfNLic+scfZTP3/Gx1vj8+cRn0n9QFPHZ9b9K+k+lhRZ
7U+zH+u+bGz/ldQPaHmUdV1a4/PXEZ+/lPMN1jrpUz/fYO2PWM838O9VSHZr
qe9zaPLifiGuHiQ+Ek0bJ8nP+j0Z7u8kfUnPk+QUty4RNy+Ii+LWV6x10qde
X7GeX7HWV7R7RhJfcyFNXtr3lDQ9aHysz9HkJ51fkb7/ZJ2XVR7a/v3U7/dZ
+6OWut8n+S/OV42NN9b9Pm29P/X7wYbO29TyN7R+llR/Sb8LaC6kyUuqJ1n1
YF032nM0+Rt6/yupnVrrq6aJz59KfYX/Tvq+myYHPt5QrJ8X/x6cpB/rd+qs
+pJo2jhJLrxOwOUhjdP0JemP52ea37dU/4vvR9b/T2HVo6nis6T1M24XWr9P
6v9J9mk93/g4/bmeb4h7/tpcSMontPjFqgeNj/U5mvwk/yXVA6zzsspD27+S
7mNJkaYfzkc7nxZX34b6L+19rPtU3Oe/1Pr5U7//Zf1+o7Hvf1v736apr3C+
lv7/hVps/+B0S/kvqW+g+S+rHqzP4fKRxklySVP0ofVHpHlJ+tcjqa6j1Xm0
8YYi6/vwuCfpvE0tP6s+pP5I3HlJeZvklw2tG8RFWnwm8YmrB+tzNH+iyc8a
n2lxlhafcTn+DcN+0Z0=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[10, 
                    Key["features"], 4]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztXHs8VVn7J5cilUZR0z01RegmUnjURFJKdEORpAu6STVqDELeyEilNGlq
QlSiFEZOjkvYTkplRBk6+xyNShpEZV7qt06/8Xln9lj2Puc0mtH5w+drr9uz
1vPdz23vzag1W6xdekhJSRn+/oN+N1m7mARpCra3S9H0U9tx2IPhPGq/FAVx
86n7pDsXTj5xNTnPG6Glxwl9X1sSrrs+5Kyt5cJ8L5/L5c18GDJ0ds7k0vsw
Y2xTls4SFhgrhjr5XSmG/IgfTc20C6DmrHzCwbuEQI6vWvz/UI5yzRTb58li
+hm0d6pHajvTftx4cddlKlfUczUGJyTFINSQ4tfMMSMhNuS+wg1j1F40tEl+
Gx/y5O35ek6F4Oz5dt+9TXlgEj9IRuYVBwZrfOXqspyAygFGAyKSCcH98l6/
0hS9t19LUa6p7VJCzusEOzwnrp1pP268uOsylSvqucrXTqz71ZqEXRmO0ZOG
k7Ak7PXYn4fyoJHVptuQRcLZ1pI77/ZfAYWjulsbLG9DfFITO3AMATqDTePa
qglYpLiwhH32r3qWoVy/fffOpyM+2tvbkek8HEr8858x+UK6ds+lJLCObeFu
kCdhkO2dK9vO8cDNpDSgpoALwbIHU+KDo2GJllXFqSkc2Pls5ec7OASU9Rl/
LOUcAWG7wu9t7kDPVJ7eYXhqb39H4bcHZh7Vvjtof38uNA/+iO3tbynt1H5q
Ow6peqQb1379loK4+dR90p0LJ1+hNPKiCoq7xivSVw99xYWerrAufyQfBqo4
2S1VrQTH81KsiEEJEOj3xmPQmkJoWjWuolcGAS4/aWm1niKgIJyb05mflaLY
IXUc1X6p/FHn4fw61X5xdtJ+7o8Vf6n6x82n7lPU+HvqRkTfV/YknBjzQ0Ia
yqt0H9+6uHIjH3aa2+3mvXwAR3TD3xhmREP89PxQZ1YhTGPPrlVIJODwk+aB
KT/8Vc9SFPvF9dPNo+MR104Xp3D8dlX8xdkfHb+ixt/ghVdtk1aS4FUz0mz0
My5M0jwu/YMTH2RGqjZt0K8Ea86SJ83+ofDL0p0+t00JCNcfesNArhBiSo31
MqL+Pn6p9o/zC9R2Sfz9M+qOGB8rjfyzXaNdvedrLsTXvpAue8eDi5o2Q2Kq
uGCxre/mfr0joO/j9Fn7SgvANiD1s/7DC4Hw+f6k3kkCAvUc5/4WR8/vO4x/
xsVfunk4lNjvn3FY8tT6S0tI+NWfYGf3JWGM7fQjsW482LYhatRZex48V5r9
Om/EaQiuCLTlFGTDslO/xtdIc2DBvTknfLcR8JniwKvKSK8Xywmfzvj9p/hn
pjz8XfyKKlfUcxUas/eMQvXRd/5WfRR0SdDJH7L56AkS1kfZl8xSqwarxIL+
qa9yocBh2fhXSpfBN2txz7ShN0GzvtqzeAYBuuV2sReQ/caqf2fTkb1R7ZMO
RZ33hzxbYr9/wAmBT99EIbSvsmv1RHXS5Jdenu+Qn/5u3G7PtKJq6MHaMmf8
i/sQcGSB+e7IADBoCPot8SIBdR6VjYcfEZB14harMZSAirQbmW6I54itGc9U
4//3PIlqb9S6hmqHTOfR1b+4OPep5c+ZM/2atyK0C+75VZQjCY2VFb9M5XNh
1/f+cNqZDyuCrPf5XebC8h0xTy/axEFDuo1CbBAbpmvIjXdczYGiYcmykYsR
r/NLZW8nEBDwea91lXF/9bNMkZpfdVLndlr/Suz3/7FZWs/QGeFvp1+91F5B
guvKEKfhU0mYVJcabhiJ/PSYEzP6NVfDSF9r41fVxeD/n7sephY7QX/WpXnb
UT0cParCfX0aAdPKHGqjwlC+pd63X+9zBMz33jTpeZzw+RXu+QfT+MtU/3T5
Kh3SrYdbV9j7hW5/dPKNpyrGCFAj10tvEMK7tdmZj1eTkDTl0o0sVA//aKHu
fP06H+xkv11m70LC7rdhn1uFnYOZl8xz+GQqPNu84aBJKwdYe4cNXzGVgHsa
wc3zkJ73WCfaCvx0Q7a9jELHdQxdndNpeyfY4Tk/1fqofZ014838PBC6cS2i
zVA+bVT/mONhSMI8I5P4B3tIqMj9cqAztxoObqxq/M/e+7D+NG/p4ZmH2JNf
+CpmmedA6v7jDjMdOeB6qsVxshYBR0c0WpnHErBu9ohVu5A93/76Z25WB3UU
1X6p/ldY+5XE347X+SWSNXc9wpsRJsdXI7Sx3RlU4kCCYrnG2HEKJCy8IKf0
SzQPJrE0TB8WVoNSj15v/eyKYevnhrzzfaPYLv1XqyiduwG1U6IDBlpywHvu
gLiregQc6Ts6NBflXwGmtSNvI/1bBfQK7I8wXeFmtnQn9S+OX+2Jx8IHCPKw
FH6IEsI719I0Bf7iZak1SMVI6iM6nB/+XMsVofLeIamjEEacUK9LRzz37pVg
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
f+z8aufv9ur1O68yt9Q8BPh/xD4nkw==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[10, 
                    Key["features"], 5]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[10, 
                    Key["features"], 6]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
81ebd3Zdm1+3eeX3/wAik1Y0
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[10, 
                    Key["features"], 7]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
6L/vw47H1PirYLjFxIga4rMOFYdp/olxM2LU8w1Dlw4/TOjAENm9BWq7dgrd
mnT63cHP2DjaPzE+Nn9RY+tdDQg1C97mGUKoyZTVeW62IlhH3c0yJPfjA0ui
fc0tSVwvWWTnsZrY+UlAtPxsNpwpXeBQXpIBdo07LO/Z/iaovF0G5N2Jh87m
Hv802yhAScK8c7eLBJjn7NXsyiUBPh6d29uR+PU3bf6dVkHs099Clae235Vp
DhFqqr83e6eadtQLfWZX7+LuVw4RejLdx+A0oZlbPrpVTOZbWrm7W18V4IZD
x+a7ov/rv6z7bW2pttdj+bNUnIb173tUbqv2408mLmxRTvCWb5B/wmbS3rJ5
7cC2xM4/6ckDDIhfZ6Q8nH3aRQSF86bMdqEqaF767awM/2wI8TRwWZGSBdnT
w9zaLk6F/l+6hivbJUBS68pIfyEedlwu+sTskACxLu2XLr0ngOu9hrajbgsQ
d2TjtQu5Avy1q+uTCZkCPDk2+9YEcr+ea3J9+8IMcg/7fuCBO9kC/La063kZ
iQuZ14p9zcm4PRfHTJ2ymozb6n5kWDg5F0j+1Kfatb0f0c/R9v2Ijr+s+FxF
8VnzHxz1tlHfm/Lhh7OVxM4dg7c5ZZD2iG9utHMlds4xKchs10uElU37Wx35
jtynDCIsZm5WQRvjzN/GpGXDmPZiZfApBfTpOsxITMuC03+tnXfONgVs/Jw/
OpBH4myLJRldm8ZD49QexafnxsOa4d+FLi+JB+Pbx/otby1Adu8OC1QDBdh6
fU1FeSsBztp85WVYFA9dJoWaVCjiwe1o/xNd2pNzkm3eZ/q0BHAr6Z5RJzVJ
4/ok6zsK1vtk+nkY7mX1YziBVb9i4Ss6/1e3f7r9+SS1nRO9DB3uEDsHt718
OZa0jTNd/3GR2Nlz8K9+Jl2Jf/+4z6udnwiuxwY5/JSpAp2Rlr7Wnjkgby0P
vmCkhJuXFl8TTinhiK7eZc86SjCRq7KFiZlQ4n5F/sP0FLhlOORuz5IkyK5v
OfSBcxJYX7E3PbojEU6MnD7se9sk+HFXwI/+9ZMhqPcFo1lrbsJj207jH6al
wo6jJT3/1SkT7FruSL5ke+v/5K2k9FDdpvMSrX8ZNR6zD70OPZ6ex+qvbj9B
9lfNf4Lsk+6n90fz7zeOyVHT7ODPTNR2tnO0n36P2Hl7wGjLMNL2rlpR+Tmh
QQ9HugZ1EqFH742PZ0wWYe6Vu3bpx0RY0WtQk2ZCHmzrUz+wgX02RMYZ7Pdv
o4C8VfkHtyoUYHphfYL/CiX0SzeWK7tnQ8rTG+M8+yvhG2WTrkMeKmBy74WT
A6YpwNLAKSHwsQL0GhhYnfdUwOhRcyFtqgLW257Y2G2GAhrV9YkdeUTxztSv
XnZ8xp5rZCTbp7bzo/Qfrqm/y0stWeZtQdohsmjPgyReRw12GLunC/Fzv/le
9q1FCKs8/Of8nSKYP1g7otVBEQJzQ9evHKoCm+Wb5u79NBeEYQvtemxRQs+G
Pse65ivg8JXVTeo+uQUrnhyz7DdXAY5LnPSsmirg4bhMGGOthKtpjx4k2iih
ZR8ns+Fx2RAWe3JPzKlcqGt+qtdvS1Tv3w8iOF/q+ape99OxMQfU96mmPRwf
pBB7m7bY0lxO2pNzDrYtJ/beY3Z1UNlHxJ/PfmEc2kGEbjt6GzrNFsH/A7Ov
Z10WYX2/SQH7z4nQqCByy6GvRKj4eNH+ERdV4HZw6RiLKSrQvSO38puqAnmg
b8Ycwm+2qpdnTm8Sl9aq/ti2RYSW4aWRzUNEsJiy9mLnCez7prbuvxhefdO+
32DlX1Z9Vb+h5TN6wHtaoBp3F3i3sjMitDDeOVD9XipkXEvv2YQO9mixezHB
3fOMq6y2dReh3fKZ6dOIfwdUWoRHtRKh5FKxrGNPEeC3qMg+biLc3hOftuFf
IoTPKR7XbxrJB8mp9p2+EeH7qz6NL5H1eiXdbVHchoybHNfkTnsR2jTotH+s
DVtvmtZ/sXms+4mm9W/sXPHaj/V+Qur9DJM/xHu7m9ruhwofDFa33av2HtUj
NPDgynaHCY1cv6jDSmL35Eb+Fhk9SP8HbqvCCF77xcVmfM6nIjgPqri6iNBH
fcP9Ugk/O+bXhR3IuLA1+uXXyDyr71KLepN1bjyQ79Th0AOrDsDb5l2PVZdg
PUdTfm0p7754z1lt6zXYPeZtrU9KfX/EG3d5qdS4ht33sDwjNY9icQabx4uf
tT2edz2p738xf6mtPLWlmsrLKweNF3njAoZHWftgzePtlxq3tB2npcZnlv55
8xKrn/Z3up5QiewPW4+uh7DyL1Y/4e2nn4vx6XVoPiYnxn9Z+ReTg6UXTE6s
Lozxsfssq827HnZPxvqx7wBZ33Wz8jMLB0vVB6ZfbemF3i/9eyD6fND4CosH
vPEDqyvUNk5jcYN1rmk/YM3nlZ+XYr+T4pUXixP0fjXNv1iex9Zl5V9ePCAV
X2B8VvyUSnn3JTX/aoqTMLxdPY6u49cWX2H5V1O/fdvxFZZ/WfJL1cu7cv+l
96np/ai29cnXff+l+TQOqe7XY8gn1b4Y3tGWfbX9/RV9f9C2fWncpC370nJq
Wp/E9sPb5vUbXr/i3T9rH5pSbcsrVS8Yn7Yzlrd5zys9n3WeMfzE269pfMby
46uKzyx5ecex8JWm9sUo73lgjeftZ42j8QfGZ83nlZ+X8tqXV15MDtb3Ttqy
L4avtGVfqfFM2/4rlbK+N9PUvvR+3//+9/XEZwxfaTs+0/UxGcXHniP1979Y
HQ47z7z99HMxPiuOsPTJqk9i+5Jan8TkYOmFNz68v/++Gv99VfdfTf2XVefn
fb+AxSvefuw7QJpP5x0Ml9D7w/i8+qit//LqBcuvmvqvVJzD8l+p69UWX2nb
f7WFrzSVF5ND0/+PhPkrb5sXb7D6MRyoqf9i+I+lb23LK1UvvP4rFYfwtjXF
Nby4R2r+ZZ3715V/NdULlpex98D0+af3Q8+jx2P92HtP+pzy9tN1coxP19Wx
+xG9P4zPqw/WeExe3nGYPNg8zO955aHns+TF4hBvP3YONY3P2Pl7Vfal9S3V
Tqz4/L5+xbfuy8JX2q5f0fcArC6C4RDeNu96muIe+rsUmo/9rlFb3+ew5Oe9
h2mqF3q/vPlZW/cjDB9o634kVR9PJepT2/7LqltI1TMtDx0n6HOE/S6PVY+j
57PqdVh+4+1/034/yFufZMnLO44l57vy/yfpfb7p9WdWXep9/fnv7bft+5yX
VX/Gfo/+tuMr1v54cY+m9E3BVzT/Xfn9Pn2eaT4dl6ooPhYnMP7Lis+1zb+0
nO+K/2L4Uer9l34uxn/T/PdqacWztpFLg2ft3KZbX5hnsbzA+l4Qy6+YP2l6
L+J9f6Lpd4tSKe++WHVQlvwY3/i5XWMyLj/rz4s+8uz//Lwr+FlqfMb0/7rj
s6b4Oe+5v+Y8t2u00bwkNf0PNMezsg==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[10, 
                    Key["features"], 8]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
i8VisVgsFovFjgf/BXErFUM=
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[10, 
                    Key["features"], 9]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztwzENACAQBLALTvDxKpBAwoz/jeVFMLRJ577rjCTVAQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAgP89+3gCJA==
                    "], {{0, 60}, {60, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {60, 60}, 
                    PlotRange -> {{0, 60}, {0, 60}}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2110262939][
                   GeneralUtilities`Slice[10, 
                    Key["features"], 10]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Grid[{{
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    100 (-10), {1, 100 - -10 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 10, {
                    1, 100 - -10 + 1}])}]], 
                    Spacer[{5, 1}], 
                    Style[
                    Row[{"showing ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    100, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], BaselinePosition -> Baseline], 
                    Spacer[{5, 1}], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 10, {
                    1, 100 - 10 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    100 10, {1, 100 - 10 + 1}])}]]}}, 
                   Alignment -> {Center, Bottom}], 
                  Grid[{{
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    100 (-10), {1, 100 - -10 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 10, {
                    1, 100 - -10 + 1}])}]], 
                    Spacer[{5, 1}], 
                    Style[
                    Row[{"showing ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    100, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], BaselinePosition -> Baseline], 
                    Spacer[{5, 1}], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 10, {
                    1, 100 - 10 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    100 10, {1, 100 - 10 + 1}])}]]}}, 
                   Alignment -> {Center, Bottom}]]], Background -> 
                GrayLevel[0.98], Alignment -> {Center, 
                  Scaled[1]}, BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2110262939},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2110262939},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2110262939},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2110262939},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2110262939},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2110262939][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2110262939]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2110262939][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]], DynamicModuleValues :> {}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
    DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.681065221444384*^9, {3.6810653930488367`*^9, 3.681065430214656*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ng", "=", 
  RowBox[{"Take", "[", 
   RowBox[{"result", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6810653146785173`*^9, 3.6810653331589375`*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetGraph", 
     RowBox[{"[", 
      PanelBox[
       TagBox[
        DynamicModuleBox[{NeuralNetworks`NetGraph`PackagePrivate`selection$$ =
          None, NeuralNetworks`NetGraph`PackagePrivate`outIndex$$ = 2, 
         NeuralNetworks`NetGraph`PackagePrivate`inputs$$ = Association[
         "Input" -> NeuralNetworks`EncodedType[
            NetEncoder["Image", 
             Association[
             "Parameters" -> 
              Association[
               "ImageSize" -> {100, 100}, "ColorSpace" -> "RGB", 
                "ColorChannels" -> 3, "$AugmentationFunction" -> None, 
                "Parallelize" -> False, "MeanImage" -> None], "Output" -> 
              NeuralNetworks`ChannelT[3, 
                NeuralNetworks`TensorT[2, {100, 100}]]]], 
            NeuralNetworks`ChannelT[3, 
             NeuralNetworks`TensorT[2, {100, 100}]]]], 
         NeuralNetworks`NetGraph`PackagePrivate`outputs$$ = Association[
         "Output" -> NeuralNetworks`ChannelT[10, 
            NeuralNetworks`TensorT[2, {97, 97}]]], 
         NeuralNetworks`NetGraph`PackagePrivate`labels$$ = {
         "Input", "1", "Output"}, 
         NeuralNetworks`NetGraph`PackagePrivate`vertices$$ = Association[
         "1" -> Association[
           "Type" -> "Convolution", "Arrays" -> 
            Association[
             "Weights" -> NeuralNetworks`TensorT[4, {10, 3, 4, 4}], "Biases" -> 
              NeuralNetworks`TensorT[1, {10}]], "Parameters" -> 
            Association[
             "OutputChannels" -> 10, "KernelSize" -> {4, 4}, 
              "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
              "Dilation" -> {1, 1}, "InputChannels" -> 3, "$GroupNumber" -> 1,
               "$InputSize" -> {100, 100}, "$OutputSize" -> {97, 97}], 
            "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[3, 
                NeuralNetworks`TensorT[2, {100, 100}]]], "Outputs" -> 
            Association["Output" -> NeuralNetworks`ChannelT[10, 
                NeuralNetworks`TensorT[2, {97, 97}]]]]], 
         NeuralNetworks`NetGraph`PackagePrivate`vports$$ = {
          NetPort["Inputs", "Input"], 
          NetPort["Vertices", "1"], 
          NetPort["Outputs", "Output"]}}, 
         TagBox[GridBox[{
            {
             TemplateBox[{TagBox[
                GraphicsBox[{{
                   GrayLevel[0.7], {
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}}, {
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                   InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-0.4, 
                    2.4492935982947065`*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}]}, {
                   GrayLevel[0], {
                    AbsolutePointSize[5], {{
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{-2., 1.2246467991473532`*^-16}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    Hue[0.61, 0.75, 1], 
                    TagBox[
                    PointBox[{-1., 6.123233995736766*^-17}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, {
                    GrayLevel[0.5], 
                    TagBox[
                    PointBox[{0., 0.}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$ = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}}}, {{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{0, -5.5}, {-2., 1.2246467991473532`*^-16}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {-1., 6.123233995736766*^-17}], 
                    Offset[{0, -5.5}, {-1., 6.123233995736766*^-17}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-11, 2]}, {0., 0.}], 
                    Offset[{0, -5.5}, {0., 0.}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, 
                   StyleBox[{
                    InsetBox[
                    FormBox["\"3\[Cross]100\[Cross]100\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox["\"10\[Cross]97\[Cross]97\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-0.4, 
                    2.4492935982947065`*^-17}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    1., -6.123233995736766*^-17}]}, FontColor -> 
                    GrayLevel[0.5], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, 
                  
                  DynamicModuleBox[{
                   GeneralUtilities`Graphics`PackagePrivate`vpos$460124 = \
{{-2., 1.2246467991473532`*^-16}, {-1., 6.123233995736766*^-17}, {0., 0.}}}, 
                   DynamicBox[
                    Typeset`ToBoxes[
                    If[
                    Not[
                    IntegerQ[
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]], {}, {
                    AbsolutePointSize[10], 
                    Opacity[0.2, Black], 
                    Point[
                    Part[
                    GeneralUtilities`Graphics`PackagePrivate`vpos$460124, 
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$]]}], 
                    StandardForm, Graphics], 
                    TrackedSymbols :> {
                    NeuralNetworks`NetGraph`PackagePrivate`selection$$}], 
                   DynamicModuleValues :> {}]}, 
                 ImageSize -> {170., 25.680000000000007`}, AspectRatio -> 
                 Full, PlotRangePadding -> 0, 
                 ImagePadding -> {{19.5, 22.5}, {15.5, 10.179999999999998`}}, 
                 ImageMargins -> {{0, 0}, {15, 15}}, 
                 BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                
                EventHandlerTag[{
                 "MouseClicked" :> (
                   NeuralNetworks`NetGraph`PackagePrivate`selection$$ = None),
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                  PassEventsUp -> True}]],FormBox[
                TemplateBox[{
                  StyleBox["ConvolutionLayer", 
                   GrayLevel[0.35], StripOnInput -> False]}, "PointLegend", 
                 DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TemplateBox[{"   ", "\"   \"", 
                    TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.61, 0.75, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.61, 0.75, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], "\" \"", #}, "RowDefault"]}, 
                    "RowWithSeparators"], Alignment -> Left, 
                    AppearanceElements -> None, 
                    ImageMargins -> {{2, 2}, {2, 2}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.61, 0.75, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.61, 0.7499999999999999, 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "Hue[0.61, 0.75, 1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.61, 0.75, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.61, 0.75, 1], Editable -> False, Selectable -> 
                    False], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkerSize", "\[Rule]", "12"}], ",", 
                    RowBox[{"LegendMargins", "\[Rule]", "2"}], ",", 
                    
                    RowBox[{
                    "LegendLayout", "\[Rule]", 
                    "GeneralUtilities`Graphics`PackagePrivate`legendTable"}]}]\
, "]"}]& ), Editable -> True], TraditionalForm]},
              "Legended",
              DisplayFunction->(GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> Automatic, 
                BaselinePosition -> {1, 1}]& ),
              Editable->True,
              InterpretationFunction->(RowBox[{"Legended", "[", 
                 RowBox[{#, ",", 
                   RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
            {
             DynamicBox[ToBoxes[
               If[
                IntegerQ[NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                Item[
                 NeuralNetworks`NetGraph`PackagePrivate`vportInfo[
                  Part[
                  NeuralNetworks`NetGraph`PackagePrivate`vports$$, 
                   NeuralNetworks`NetGraph`PackagePrivate`selection$$], 
                  NeuralNetworks`NetGraph`PackagePrivate`inputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`outputs$$, 
                  NeuralNetworks`NetGraph`PackagePrivate`vertices$$], 
                 Alignment -> Center], 
                Item["", ItemSize -> {0, 0}]], StandardForm],
              ImageSizeCache->{0., {0., 10.}},
              
              TrackedSymbols:>{
               NeuralNetworks`NetGraph`PackagePrivate`selection$$}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         DynamicModuleValues:>{},
         Initialization:>{NetGraph}],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       BaselinePosition->(Top -> Scaled[3])], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{{3.681065322100899*^9, 3.6810653337864585`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomExample", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.681065340080103*^9, 3.681065342350515*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt0DEKwkAQQNGgjaWV1t7C1tI24gESEoPNChsheBdL7+cVEsE7JAMP3iy7
0+0/1I/ytiqKot9MR1kNp5yr12U7Pa6pv3epbc7p2XZtPtbradn853ff7wYA
AAAAABbu833PYvaPa6XVQmillVZaRaGVVlppFYVWWmmlVRRaaaWVVlFopZVW
WkWhlVZaaRWFVlpppVUUWmmllVZRaKWVVlpFoZVWWmkVhVZaaaVVFFpppRUA
AAAAAAAAAAAjnbUjgg==
      "], {{0, 100}, {100, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{100, 100},
    ImageSizeRaw->{100, 100},
    PlotRange->{{0, 100}, {0, 100}}], "\[Rule]", "\<\"Rectangle\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6810653426700525`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Image", "/@", 
  RowBox[{"ng", "[", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt0DEKwkAQQNGgjaWV1t7C1tI24gESEoPNChsheBdL7+cVEsE7JAMP3iy7
0+0/1I/ytiqKot9MR1kNp5yr12U7Pa6pv3epbc7p2XZtPtbradn853ff7wYA
AAAAABbu833PYvaPa6XVQmillVZaRaGVVlppFYVWWmmlVRRaaaWVVlFopZVW
WkWhlVZaaRWFVlpppVUUWmmllVZRaKWVVlpFoZVWWmkVhVZaaaVVFFpppRUA
AAAAAAAAAAAjnbUjgg==
      "], {{0, 100}, {100, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{100, 100},
    ImageSizeRaw->{100, 100},
    PlotRange->{{0, 100}, {0, 100}}], "]"}]}]], "Input",
 CellChangeTimes->{{3.68106533513597*^9, 3.6810653527590184`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt1bFLlVEcx+GXIMfwDwi8UrMNDo4KbtmQThEEJeQqCNJ6QXBrbJO4CNLi
dhsSonJuqAgEs+IiQiF0USpQItJzaH+FXvid5Hnh8HDm7/vhDM/Oz9y/UFXV
vb/n9Ht1derFS5IkSZIkSZIkSZIkSZIkSZIkz7mtT4s746dWt5d2k62bY1vZ
OyM7rDd6PzZjZ/PKt7zr6vMfedf3z/rJdrX1hfVG78eG3oOVJx/Tnr3rX78n
O5Pdg7zz+mGf9Ubvx4beg2ut/fz/z838TN79/eco7zvdPeQZLGRH6kAH1IEO
qINwC9mROtABdaAD6iDcQnakDnRAHeiAOgi3kB2pAx1QBzqgDsItZEfqQAfU
gQ6og3AL2ZE60AF1oAPqINxCdqQOdEAd6IA6CLeQHakDHVAHOqAOwi1kR+pA
B9SBDqiDcAvZkTrQAXWgA+og3EJ2pA50QB3ogDoIt5AdqQMdUAc6oA7CLWRH
6kAH1IEOqINwC9mROtABdaAD6iDcQnakDnRAHeiAOgi3kB2pAx3wX53YGHuX
9py4dGsv2X7wMO9bDQ7sst7o/diQH0ZfZ3v9p7mL5V+f076t48tvWG/4fmzG
44tv867dtcfp3h7qbKd758bCI9Ybvh9JkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkv+hveQJxMnGwQ==
      "], {{0, 97}, {97, 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{97, 97},
    PlotRange->{{0, 97}, {0, 97}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt1q+LFHEcxvHFbrSv5TCYBPNdEiwGi5hchUPQYDgEL7l/g9G0wSKIoFgU
4WyCcCAYvDtB5xb0TvAXRjXofLHvwi08H+U1MLwYJr7nmZmjl66dXT00GAwu
/j3/HM+Or21tkCRJkiRJkiRJkiRJkiRJkiT5nzvcfDLtHd2/0PV257df9k7O
3HmwzJmm+3Exrlw+td92cGVnt7mz/aHd//Wz4xwW6cgD+nrjffPxyVe9g8Mr
bRfDpeUtzjbejwtxcuzHl97xwyNtD6O7Nz/1rry4NeVs0/1oBxVM96MdVDDd
j3ZQwXQ/2kEF0/1oBxVM96MdVDDdj3ZQwXQ/2kEF0/1oBxVM96MdVDDdj3ZQ
wXQ/2kEF0/1oBxVM96MdVDDdj3ZQwXQ/2kEF0/1oBxVM96MdVDDdj3ZQwXQ/
2kEF0/1oBxVM96MdVDDdj3ZQwXQ/2kEF0/1oBxVM96MdVDDdj3ZQwXQ/2kEF
0/1oBxVM96MdVDDdj3ZQwXQ/2kEF0/1oBxVM96MdVDDdj3ZQwXQ/2kEF0/1o
BxVM96MdVDDdj3ZQwXQ/2kEF0/1oBxVM96MdVDDdj3ZQwXQ/2kEF0/1oBxVM
96MdVDDdj4tx+P3Gfnv+b3/tmqeXvrXO18ecw3Q/Lsbu3Of2Xhs//fi27WD1
3W67/3zyhnNYpCMP5mhvrf0PdVcf7bXrE+vtu9Bt3ptytul+JEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEn+i056fwOiIyX4
      "], {{0, 97}, {97, 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{97, 97},
    PlotRange->{{0, 97}, {0, 97}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt1k+LTmEcxvFjZhbSvAMpws578Gyw1GjKxmKQtR075gVQNrKxeKys1MRK
ozyTnURZyPJZzGwkw/whKXEO+6Ocun70uev0qXv77eo+hy5cPnNppmma87+/
n2f56O7H4yRJkiRJkiRJkiRJkiRJkiRJ/udOv82tt072Pn/f3Z84tdnaLNzY
Yr/pfhzIWzc/dDt4+Opr62j12PfW8blrMyP2Gu/HYd6Dxwe2ux08e9K0XaeL
G7Otk9eH97HfdD8O42T+ZPcfNLqz2O1gaetN5/LZp3P8A4t0pB1ELdKRdhC1
SEfaQdQiHWkHUYt0pB1ELdKRdhC1SEfaQdQiHWkHUYt0pB1ELdKRdhC1SEfa
QdQiHWkHUYt0pB1ELdKRdhC1SEfaQdQiHWkHUYt0pB1ELdKRdhC1SEfaQdQi
HWkHUYt0pB1ELdKRdhC1SEfaQdQiHWkHUYt0pB1ELdKRdhC1SEfaQdQiHWkH
UYt0pB1ELdKRdhC1SEfaQdQiHWkHUYt0pB1ELdKRdhC1SEfaQdQiHWkHUYt0
pB1ELdKRdhC1SEfaQdQiHWkHUYt0pB1ELdKRdhC1SEfaQdQiHWkHUYt0pB1E
LdKRdhC1SEf+ndMHtz933r+7p+06fnS9c7K2Pct+0/04jOOLC59aD957+aW1
OX1lp7vff3WX/ab7cRib9Z13XdcXR37tYm1lo3VpdeUt+033I0mSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEnyn/UHP/E0qg==
      "], {{0, 97}, {97, 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{97, 97},
    PlotRange->{{0, 97}, {0, 97}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt1bFqFAEUheHF1lewWK1iwMoHcBtrwWLrjWCrYGdikU7sbCWFdlbiC4hs
YReRVBpMio2icc0a0ljG6Iz2E3DgXOUbGD7utD+HOX/j9vWbZwaDwcqf99fz
ZHRr6wpJkiRJkiRJkiRJkiRJkiRJkv+5o9XJXnsvnn1tnJ59/vt+tfWJp7BI
R/6d03OjD+29uzxvnAyXXjcOd0622W26H3v6H1y+M2ucrZwctd83H+63ndeW
5uw23Y/9uP70/ufGydW731vfXvvWevzgiN2m+9EOKpjuRzuoYLof7aCC6X60
gwqm+9EOKpjuRzuoYLof7aCC6X60gwqm+9EOKpjuRzuoYLof7aCC6X60gwqm
+9EOKpjuRzuoYLof7aCC6X60gwqm+9EOKpjuRzuoYLof7aCC6X60gwqm+9EO
KpjuRzuoYLof7aCC6X60gwqm+9EOKpjuRzuoYLof7aCC6X60gwqm+9EOKpju
RzuoYLof7aCC6X60gwqm+9EOKpjuRzuoYLof7aCC6X60gwqm+9EOKpjuRzuo
YLof7aCC6X60gwqm+9EOKpjuRzuoYLof7aCC6X60gwqm+9EOKpjuRzuoYLof
e9rBxov3jaOXa18aBwfvPrb3eJWnMN2P/TgcH2+3Xd/8mDdOD+8dtvelzQW7
TfdjTzu4+Gi37bq/vNc4GS92GtcfX5ix23Q/kiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiT/WX8CaPUXgA==
      "], {{0, 97}, {97, 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{97, 97},
    PlotRange->{{0, 97}, {0, 97}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt1b1qFGEYhuEhCCp4AEIKtfAIFCyTU/Afu6iINhIriyC4YGUjxCplQAsb
sREsLDYE0hiIKGgj6GIQLdT40wg2Zgb7STHwvMq1sFzM1948vIcuzJ+4NNU0
zfm//+3fwX3vX86QJEmSJEmSJEmSJEmSJEmSJPm/u3XkSevy3un11pWlc/fH
7fvJy8+5A9P9OIiTjaXV1mbP40/d+5X5b9332Rsf2G+6H4dx+eKB7h6M7lz/
0fW9tv67dfbB5y/sN92PA+3g3em18baTtf3dHVhZOPaz8+jTLfab7kc7qGC6
H+2ggul+tIMKpvvRDiqY7kc7qGC6H+2ggul+tIMKpvvRDiqY7kc7qGC6H+2g
gul+tIMKpvvRDiqY7kc7qGC6H+2ggul+tIMKpvvRDiqY7kc7qGC6H+2ggul+
tIMKpvvRDiqY7kc7qGC6H+2ggul+tIMKpvvRDiqY7kc7qGC6H+2ggul+tIMK
pvvRDiqY7kc7qGC6H+2ggul+tIMKpvvRDiqY7kc7qGC6H+2ggul+tIMKpvvR
DiqY7kc7qGC6H+2ggul+tIMKpvvRDiqY7kc7qGC6H+2ggul+tIMKpvvRDiqY
7kc7qGC6H+2ggul+HMbZXcfvtY4+Xv3eOvfs7q9uH7tvcQem+3EYRw9PLY5b
b3+ddO9npt62NpuPNtlvuh8HugfTC909mHvxarVz8c1Gu4vm8M3XM+w13Y8k
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkyX/RpvUPmSC6qA==
      "], {{0, 97}, {97, 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{97, 97},
    PlotRange->{{0, 97}, {0, 97}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt1bFvjVEcxvEbi80fIIaaRMQgJLX10t1gqu2SGEziH8DYTraOcicSA5Eg
TDWximrUwi1pBE0aEQYT52V/lzd5fuRzkpNPzvzNk3PwwuWzF/eMRqPzf+/v
c/3Lvo9rJEmSJEmSJEmSJEmSJEmSJEn+546v7b5vzn4uvuw8cHSrOX3x/RX7
TffjQF7a/NTt4fix9e69+Hyj28Nk6Rn7jffjMP/BydOz5tzy/OOF9t6+tdGc
3ru5yn7T/TiMozuH3zZnOysPmtNDSw+7zu8+b6+x13Q/2kEF0/1oBxVM96Md
VDDdj3ZQwXQ/2kEF0/1oBxVM96MdVDDdj3ZQwXQ/2kEF0/1oBxVM96MdVDDd
j3ZQwXQ/2kEF0/1oBxVM96MdVDDdj3ZQwXQ/2kEF0/1oBxVM96MdVDDdj3ZQ
wXQ/2kEF0/1oBxVM96MdVDDdj3ZQwXQ/2kEF0/1oBxVM96MdVDDdj3ZQwXQ/
2kEF0/1oBxVM96MdVDDdj3ZQwXQ/2kEF0/1oBxVM96MdVDDdj3ZQwXQ/2kEF
0/1oBxVM96MdVDDdj3ZQwXQ/2kEF0/1oBxVM96MdVDDdj3ZQwXQ/2kEF0/1o
BxVM9+Mwjk+d+NB8euTqrOt75tGT5uTKwlf2m+7Hgby7utnt4MbebgejldF6
1/nN/W/sN96Pgzi3vPXnn99/e6fre25+tzmevP7BftP9SJIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZL8F502fwHmpPFa
      "], {{0, 97}, {97, 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{97, 97},
    PlotRange->{{0, 97}, {0, 97}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt0zFrFFEYheHFX2AqK2Et9z8IWVMoWNpYBCRGrEVSxSqdItpaWGgsbAUr
CQQSFawlgiAWCSySICwaFAOCoHOx34UsnE95BoaHO1O+95xZvnHp+oler3f1
79s9Nxd350mSJEmSJEmSJEmSJEmSJEmS/M/t929/7lw7f7DfuT3ebOe9weqY
k03342zcvnLtR+fS/ZUv7fud59+ab+eOOIVFOvKYOzj1+HvncDRu93/t8Nlh
+3955yensEhHHs+9jVsH7f7/ujhq308efWznCx++crLpfrSDCqb70Q4qmO5H
O6hguh/toILpfrSDCqb70Q4qmO5HO6hguh/toILpfrSDCqb70Q4qmO5HO6hg
uh/toILpfrSDCqb70Q4qmO5HO6hguh/toILpfrSDCqb70Q4qmO5HO6hguh/t
oILpfrSDCqb70Q4qmO5HO6hguh/toILpfrSDCqb70Q4qmO5HO6hguh/toILp
frSDCqb70Q4qmO5HO6hguh/toILpfrSDCqb70Q4qmO5HO6hguh/toILpfrSD
Cqb70Q4qmO5HO6hguh/toILpfrSDCqb70Q4qmO5HO6hguh/toILpfrSDCqb7
0Q4qmO7HGfl0od374W7/fWf/wfKLzqXT+yNONt6Ps3Gw+mrrD+sLg822g0cr
79r57KeNeU403o8zcX1r8Ul373vn7r1u3t1503w495JTWKQjSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZL/ksPO30IHaTk=
      "], {{0, 97}, {97, 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{97, 97},
    PlotRange->{{0, 97}, {0, 97}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt1b1qFFEcxuFFLCwsBVOFtfACvAFdBGshWgWEKFgpWFmJmEZQBAuxVEin
hd5DwDpNUBCx2MIvjClcE1EIIudovykG3r/yDAwPZ9rfvJxjl64tXT4wGo0u
/n3b8+DKp1MkSZIkSZIkSZIkSZIkSZIkSf7nTg5tbncvXP/av7/6NWtOF178
5HzT/TjQDp6/7a4tLX5srp+70fewcvvZLueb7sdhHD9Z7vfB+OrhP+czd783
V48e5z5M9+Mwruye3OrOdt41p083fvTO9+/tcb7pfrSDCqb70Q4qmO5HO6hg
uh/toILpfrSDCqb70Q4qmO5HO6hguh/toILpfrSDCqb70Q4qmO5HO6hguh/t
oILpfrSDCqb70Q4qmO5HO6hguh/toILpfrSDCqb70Q4qmO5HO6hguh/toILp
frSDCqb70Q4qmO5HO6hguh/toILpfrSDCqb70Q4qmO5HO6hguh/toILpfrSD
Cqb70Q4qmO5HO6hguh/toILpfrSDCqb70Q4qmO5HO6hguh/toILpfrSDCqb7
0Q4qmO5HO6hguh/toILpfrSDCqb70Q4qmO5HO6hguh/toILpfrSDCqb70Q4q
mO7HYZzcev2+uf5w62Vz/PjgrHe+ubfN+ab7caAdvNn43Hdw4vSH5srinW/N
tc0j3IfpfhxoB9Oz/f+fLJzv98JoeedLc3XyaMb5pvuRJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJPkvOm7+BghedyI=
      "], {{0, 97}, {97, 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{97, 97},
    PlotRange->{{0, 97}, {0, 97}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt1C2LFWEcxuHRIhi0CoKcjbZFszgbRBYU1CDYdgU1brbtVxC0GfYLWOzC
ETRYRCwniausYpANwlkFX5B5jv0YBu6/cg0MF8/U33PPys2ta7cOd123+ecd
nvXTu+dJkiRJkiRJkiRJkiRJkiRJkvzP7b8+3G+e6pvTi68W57N3PnG56X4c
x42DLweDk8eTefP5g+/NC0d+crnpfhzH3aPf2r3febrd9rCx+uRX+35s9VDP
pab7cRwn504u/m/Xz7Qd7LxYWezg2fGu51LT/WgHFUz3ox1UMN2PdlDBdD/a
QQXT/WgHFUz3ox1UMN2PdlDBdD/aQQXT/WgHFUz3ox1UMN2PdlDBdD/aQQXT
/WgHFUz3ox1UMN2PdlDBdD/aQQXT/WgHFUz3ox1UMN2PdlDBdD/aQQXT/WgH
FUz3ox1UMN2PdlDBdD/aQQXT/WgHFUz3ox1UMN2PdlDBdD/aQQXT/WgHFUz3
ox1UMN2PdlDBdD/aQQXT/WgHFUz3ox1UMN2PdlDBdD/aQQXT/WgHFUz3ox1U
MN2PdlDBdD/aQQXT/WgHFUz3ox1UMN2PdlDBdD/aQQXT/WgHFUz3ox1UMN2P
I+3g9rv5YD+7vN/u//rLtoeN+90PLjfdjyM5u/u5ee/S+8Hp1bUP7fz6xkf+
hel+HMXpo612/7u9E28Ht+d7bwb7tSszLjfdjyRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiTJf9HJ4G/0x98P
      "], {{0, 97}, {97, 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{97, 97},
    PlotRange->{{0, 97}, {0, 97}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt1U+LTmEcxvETypKFNMshJcVrcLwDibKcmbKwwsJGqcdC2SgvYdbYqbEa
YaEmG2VnFp78SYoJpZQN537sj8Wp60efU6dP99l+z9V9aO3SmQu7uq5b/fP+
fh7vvfbpJEmSJEmSJEmSJEmSJEmSJEmS/7krWzeb6/u3m93Sqflg/3bPa46b
7seJdvDi8E77/x/N2//f3bv4qrl6YovjpvtxGufPnizugbUfb9r363cWe7h8
9x3HTffjNPZXVz4OLj+/3XbQH9x8PzjbvMW/MN2PdlDBdD/aQQXT/WgHFUz3
ox1UMN2PdlDBdD/aQQXT/WgHFUz3ox1UMN2PdlDBdD/aQQXT/WgHFUz3ox1U
MN2PdlDBdD/aQQXT/WgHFUz3ox1UMN2PdlDBdD/aQQXT/WgHFUz3ox1UMN2P
dlDBdD/aQQXT/WgHFUz3ox1UMN2PdlDBdD/aQQXT/WgHFUz3ox1UMN2PdlDB
dD/aQQXT/WgHFUz3ox1UMN2PdlDBdD/aQQXT/WgHFUz3ox1UMN2PdlDBdD/a
QQXT/WgHFUz3ox1UMN2PdlDBdD/aQQXT/WgHFUz3ox1UMN2PdlDBdD/aQQXT
/TiNswdnFzt4erztoNv988vg/Fj/leOm+3GiHdx/+KGdDxzdGeyP3PjWvm9s
f+e46X6cxm5jqd0H3ZV97bx8+mW7D2bnzn/muOl+JEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEn+i64P/gJ88UV9
      "], {{0, 97}, {97, 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{97, 97},
    PlotRange->{{0, 97}, {0, 97}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.68106534872974*^9, 3.6810653635433726`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1037},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.6 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (August 22, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 131, 1, 160, "Title"],
Cell[CellGroupData[{
Cell[736, 27, 101, 1, 61, "Subsubsection"],
Cell[840, 30, 594, 19, 48, "Input"],
Cell[1437, 51, 524, 15, 48, "Input"],
Cell[1964, 68, 1481, 37, 297, "Input"],
Cell[3448, 107, 184, 4, 48, "Input"],
Cell[CellGroupData[{
Cell[3657, 115, 1999, 49, 451, "Input"],
Cell[5659, 166, 49486, 1008, 280, "Output"]
}, Open  ]],
Cell[55160, 1177, 206, 5, 48, "Input"],
Cell[CellGroupData[{
Cell[55391, 1186, 328, 9, 48, "Input"],
Cell[55722, 1197, 834, 20, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56593, 1222, 300, 6, 48, "Input"],
Cell[56896, 1230, 49392, 1006, 280, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106325, 2241, 710, 16, 186, "Input"],
Cell[107038, 2259, 142, 2, 48, "Output"]
}, Open  ]],
Cell[107195, 2264, 187, 4, 48, "Input"],
Cell[CellGroupData[{
Cell[107407, 2272, 166, 3, 48, "Input"],
Cell[107576, 2277, 10005, 211, 386, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117618, 2493, 207, 4, 48, "Input"],
Cell[117828, 2499, 6716, 136, 108, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124581, 2640, 151, 2, 48, "Input"],
Cell[124735, 2644, 9117, 236, 506, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[133901, 2886, 98, 1, 50, "Subsubsection"],
Cell[134002, 2889, 594, 19, 48, "Input"],
Cell[134599, 2910, 524, 15, 48, "Input"],
Cell[135126, 2927, 1673, 42, 297, "Input"],
Cell[CellGroupData[{
Cell[136824, 2973, 134, 2, 48, "Input"],
Cell[136961, 2977, 6927, 147, 386, "Output"]
}, Open  ]],
Cell[143903, 3127, 184, 4, 48, "Input"],
Cell[CellGroupData[{
Cell[144112, 3135, 2466, 57, 544, "Input"],
Cell[146581, 3194, 57236, 1157, 280, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203854, 4356, 161, 3, 48, "Input"],
Cell[204018, 4361, 56968, 1153, 280, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261023, 5519, 161, 3, 48, "Input"],
Cell[261187, 5524, 3910, 84, 186, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265134, 5613, 458, 8, 48, "Input"],
Cell[265595, 5623, 57045, 1154, 280, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322677, 6782, 1533, 30, 186, "Input"],
Cell[324213, 6814, 181, 2, 48, "Output"]
}, Open  ]],
Cell[324409, 6819, 187, 4, 48, "Input"],
Cell[CellGroupData[{
Cell[324621, 6827, 166, 3, 48, "Input"],
Cell[324790, 6832, 8239, 183, 386, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333066, 7020, 207, 4, 48, "Input"],
Cell[333276, 7026, 6769, 137, 104, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340082, 7168, 151, 2, 48, "Input"],
Cell[340236, 7172, 9408, 245, 505, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[349681, 7422, 153, 3, 48, "Input"],
Cell[349837, 7427, 737, 18, 186, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350611, 7450, 850, 21, 48, "Input"],
Cell[351464, 7473, 725519, 12917, 2242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1077020, 20395, 231, 6, 48, "Input"],
Cell[1077254, 20403, 15356, 320, 210, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1092647, 20728, 132, 2, 48, "Input"],
Cell[1092782, 20732, 766, 19, 186, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1093585, 20756, 774, 18, 186, "Input"],
Cell[1094362, 20776, 11195, 222, 375, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

